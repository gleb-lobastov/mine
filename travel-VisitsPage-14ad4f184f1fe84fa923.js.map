{"version":3,"sources":["webpack:///./src/packages/travel/pages/VisitsPage/consts.js","webpack:///./src/packages/travel/pages/VisitsPage/useVisitsPageStyles.js","webpack:///./src/packages/travel/pages/VisitsPage/useVisitsGroupingSidebar.js","webpack:///./src/modules/utilities/dateTime/compareDateTime.js","webpack:///./src/packages/travel/pages/VisitsPage/utils.js","webpack:///./src/packages/travel/pages/VisitsPage/calcCounters.js","webpack:///./src/packages/travel/pages/VisitsPage/switchSortingFn.js","webpack:///./src/packages/travel/components/models/countries/CountryInfo/CountryInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderCountry.js","webpack:///./src/packages/travel/components/models/locations/LocationInfo/LocationInfo.jsx","webpack:///./src/packages/travel/components/models/locations/LocationPhotos/LocationPhotos.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderOriginLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderArrivalLocation.js","webpack:///./src/packages/travel/components/models/trips/TripInfo/TripInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderTrip.js","webpack:///./src/packages/travel/components/common/YearInfo/YearInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderYear.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderNodesInOrder.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderDepartureLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderTitle.jsx","webpack:///./src/packages/travel/pages/VisitsPage/locators.js","webpack:///./src/packages/travel/pages/VisitsPage/VisitsPage.jsx","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack:///./src/modules/utilities/dateTime/isValidDate.js","webpack:///./src/modules/utilities/dateTime/safeDateFormat.js","webpack:///./src/modules/components/muiExtended/ConnectedLink/ConnectedLink.jsx","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/packages/travel/dataSource/useVisit.js","webpack:///./src/packages/travel/components/models/rides/RideInfo/RideInfo.jsx","webpack:///./src/packages/travel/components/models/rides/RideIcon/RideIcon.jsx","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js"],"names":["GROUP_VISITS_BY","VISITS_SECTIONS","TRIPS","LOCATIONS","VISITS_SECTION_DEFAULT","VISITS_SECTIONS_GROUPS","key","l10n","GROUP_VISITS_BY_DEFAULTS","SORT_VISITS_BY","RATING_ALPHABET","VISITS_ALPHABET","FIRST_VISIT_ALPHABET","LAST_VISIT_ALPHABET","ALPHABET","SORT_VISITS_BY_DEFAULT","COMPARATORS","VISIT","ARRIVAL_YEAR","TRIP","DEPARTURE_TIME","ID","PRESERVE_ORDER","COUNTRY","VISITS","RATING","NAME_ID","FIRST_VISIT","LAST_VISIT","LOCATION","makeStyles","theme","visibilityTrigger","visibility","visibleOnlyOnHover","group","backgroundColor","top","marginTop","spacing","subgroup","detail","color","fontSize","formControl","width","ratingBlock","display","alignItems","ratingIcon","halfDown","position","setQueryFilter","queryFilter","section","classes","useVisitsPageStyles","groupByQuery","sortBy","sortByQuery","Object","values","includes","resolveActualSortBy","actualSection","visitsSectionGroups","find","resolveActualGroupBy","groupBy","useSidebar","closeSidebar","List","ListItem","FormControl","className","InputLabel","shrink","id","Select","labelId","autoWidth","value","onChange","event","target","map","visitsSectionGroup","MenuItem","compareDateTime","dateTimeA","dateTimeB","reverse","matchBy","isValidA","isValidDate","isValidB","actualDateTimeA","actualDateTimeB","getFullYear","getTime","resolveTripCountryId","tripId","countryId","resolveYearCountryId","year","resolveArrivalYear","arrivalDateTime","checkIsGroupedByTrip","lastCacheKey","cachedResult","inc","ref","refKey","counterName","counterKey","countersRef","counterRef","currentCount","getLocationVisitsCount","counters","locationId","locations","visits","keys","length","getLocationFirstVisit","visitsDict","minBy","visitId","date","getLocationLastVisit","maxBy","departureDateTime","getCountryVisitsCount","countries","getCountryFirstVisit","getCountryLastVisit","getLocationVisitsByYearCount","years","COMPARATOR_FUNCTIONS_MAPPING","_","__","visitA","visitB","countriesDict","countryIdA","countryIdB","countryNameA","countryName","countryNameB","countriesRating","locationIdA","locationNameA","locationName","locationIdB","locationNameB","locationsRating","tripsIds","tripIdA","tripIdB","indexA","indexOf","indexB","tripsDict","resolveComparatorBySortFn","sortFn","ENTITY_COMPARATORS","createComparator","provision","comparatorsKeys","comparatorFuncs","comparatorKey","comparatorFnCreator","warning","filter","Boolean","fnIdx","comparisonResult","memoizeOne","locationsDict","memoize","ratings","countryIdToCompare","rating","sum","CountryInfo","country","isSubgroup","isDetail","children","Typography","variant","renderCountry","visit","changes","isTripChanged","isCountryChanged","isGroupedByTrip","isGroupedByYearCountries","locationsCounter","yearsCountries","tripsCountries","useStyles","autoMargin","marginLeft","LocationInfo","shouldJustifyContent","href","location","childrenArray","React","Children","toArray","lastChildren","slice","restChildren","Grid","container","justify","item","ConnectedLink","to","photosContainer","justifyContent","photoContainer","margin","minWidth","maxHeight","textAlign","photo","maxWidth","borderRadius","GROUPS_TO_RENDER_COUNTRY","GROUPS_TO_RENDER_YEARS_OF_VISIT","renderLocation","departureRideId","isYearChanged","isLocationChanged","ridesDict","visitEditUrl","isObscure","isGroupedByTripsOnly","countryDetailNode","visitsCount","resolveVisitsCounter","visitsDetailNode","yearsOfVisitDetailNode","getYearsOfVisits","join","childrenNodes","nodes","reduce","nodesMemo","node","index","push","joinNodes","locationRating","LOCATION_RATING","PLACE_TO_LIVE","FEW_PER_YEAR","ONCE_PER_YEAR","ONCE_PER_TWO_YEARS","ONCE_PER_FIVE_YEARS","ONCE_PER_DECADE","TWICE_PER_LIVE","ONCE_PER_LIVE","NEVER","renderRatingNode","renderAlignedRatingNode","Fragment","visitDateTimePeriodToString","RideInfo","ride","renderOriginLocation","keyBase","trip","originLocationId","originLocation","renderArrivalLocation","props","willTripChange","TripInfo","paragraph","resolveTripCaption","renderTrip","tripEditPath","travelPaths","tripEdit","hasEditRights","userAlias","tripEditButtonNode","IconButton","toUrl","strTripId","String","size","cls","YearInfo","renderYear","isGroupedByCountriesYear","renderNodesInOrder","arrivalRideId","prevVisit","nextVisit","forwardedProps","prevCountryId","prevLocationId","prevTripId","nextTripId","prevYear","renderProps","checkIsGroupedByYear","checkIsGroupedByCountry","renderTitle","createTripUrl","locationsUrl","locationsCount","countriesCount","linkToCreateTripNode","component","Link","data-locator","VisitsPage","match","params","authenticatedUserAlias","useAuthContext","useQueryFilter","useVisitsGroupingSidebar","useTripsStats","isPending","isError","usePaths","travel","locationsPath","tripCreatePath","tripCreate","visitEditPath","visitEdit","visitsIds","unsortedVisitsList","visitsList","cacheKey","totalVisits","trips","forEach","calcCounters","updatesCounter","titleNode","sort","NAME","switchSortingFn","nodesAccumulator","strVisitId","undefined","propTypes","PropTypes","string","isRequired","number","tripsProvision","requiredTripsIds","useSelector","state","selectDict","shouldRequireAllTrips","missingTripsIds","useProvision","domain","isProvision","modelName","observe","query","navigation","isDisabled","comparator","useTrips","useUser","user","userProvision","selectResult","data","useMemo","Array","from","Set","flatMap","tripsId","ridesIds","rides","countriesIds","locationsIds","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","selectUpdatesCounter","isReady","every","selectIsReady","some","selectIsPending","isValid","selectIsValid","error","selectIsError","errors","selectError","invalidate","mergeProvisionsState","ratingsGroupedByCountries","memo","mapValues","ratingsByCountry","Infinity","avg","a","b","best","max","lengthRatio","Math","log","averageRating","calcCountriesRating","ridesStats","calcRidesStats","earliestDeparture","Date","min","rideId","latestArrival","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","fullFormat","periodEndString","dateFormat","locale","ru","isSameDay","periodStartString","isSameMonth","isSameYear","shortFormat","rideDateTimePeriodToString","dateTimeOpenPeriodToString","placeholder","format","startDateStr","Number","isNaN","safeDateFormat","args","RouterLink","selectItem","applicableSchemaName","condition","requiredLocationIds","missingLocationsIds","useLocationRatingRequest","useRequest","method","submitLocationRating","useVisit","requiredVisitId","visit_id","useAddVisitPhotoRequest","contentType","submitVisitPhoto","icon","height","absoluteIcon","rideType","isLong","RIDE_TYPES","HITCH_HIKING","RideIcon","vehicleType","IconComponent","VEHICLE_TYPES","CAR","CarIcon","TRAIN","TrainIcon","AIRCRAFT","FlightIcon","BUS","TROLLEY","CITY_BUS","BusIcon","MOTORHOME","JITNEY","VanIcon","LOCAL_TRAIN","FERRY","BoatIcon","BIKE","BikeIcon","BY_FEET","WalkIcon","MOTORBIKE","MotorcycleIcon","TRUCK","TruckIcon","ALL_TERRAIN_VEHICLE","TerrainIcon","TRAM","TramIcon","TAXI","LocalTaxiIcon","SUBWAY","SubwayIcon","PUBLIC_TRANSPORT","SeatIcon","ROPEWAY","FUNICULAR","CustomTransportIcon","UnknownRideIcon","resolveRideIconComponent","array","maxLength","separator","uniqArray","uniq","result","tripName","hasAutogeneratedTripName","originCountryId","periodStr","dateMin","visitsId","dateMax","visitsByCountries","visitType","VISIT_TYPES","TRANSIT","locationsNames","uniqTrimAndJoin","countriesNames"],"mappings":"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","file":"travel-VisitsPage-14ad4f184f1fe84fa923.js","sourcesContent":["export const KEY_GROUP_VISITS_BY = 'group';\nexport const GROUP_VISITS_BY = {\n  LOCATIONS: 'loc',\n  COUNTRIES: 'c',\n  YEARS: 'yr',\n  YEARS_COUNTRIES: 'yr_c',\n  COUNTRIES_YEARS: 'c_yr',\n  TRIPS: 't',\n  TRIPS_COUNTRIES: 't_с',\n};\n\nexport const VISITS_SECTIONS = {\n  TRIPS: 'trips',\n  LOCATIONS: 'locations',\n};\nexport const VISITS_SECTION_DEFAULT = VISITS_SECTIONS.TRIPS;\nexport const VISITS_SECTIONS_GROUPS = {\n  [VISITS_SECTIONS.LOCATIONS]: [\n    { key: GROUP_VISITS_BY.LOCATIONS, l10n: 'По городам' },\n    { key: GROUP_VISITS_BY.COUNTRIES, l10n: 'По странам' },\n    { key: GROUP_VISITS_BY.YEARS, l10n: 'По годам' },\n    { key: GROUP_VISITS_BY.YEARS_COUNTRIES, l10n: 'По годам и странам' },\n    { key: GROUP_VISITS_BY.COUNTRIES_YEARS, l10n: 'По странам и годам' },\n  ],\n  [VISITS_SECTIONS.TRIPS]: [\n    { key: GROUP_VISITS_BY.TRIPS, l10n: 'По поездкам' },\n    { key: GROUP_VISITS_BY.TRIPS_COUNTRIES, l10n: 'По поездкам и странам' },\n  ],\n};\nexport const GROUP_VISITS_BY_DEFAULTS = {\n  [VISITS_SECTIONS.LOCATIONS]: GROUP_VISITS_BY.COUNTRIES,\n  [VISITS_SECTIONS.TRIPS]: GROUP_VISITS_BY.TRIPS,\n};\n\nexport const KEY_SORT_VISITS_BY = 'sort';\nexport const SORT_VISITS_BY = {\n  RATING_ALPHABET: 'r_a',\n  VISITS_ALPHABET: 'v_a',\n  FIRST_VISIT_ALPHABET: 'fv_a',\n  LAST_VISIT_ALPHABET: 'lv_a',\n  ALPHABET: 'a',\n};\nexport const SORT_VISITS_BY_DEFAULT = SORT_VISITS_BY.ALPHABET;\n\nexport const COMPARATORS = {\n  VISIT: { ARRIVAL_YEAR: 'ARRIVAL_YEAR' },\n  TRIP: {\n    DEPARTURE_TIME: 'TRIP_DEPARTURE_DATE',\n    ID: 'TRIP_ID',\n    PRESERVE_ORDER: 'PRESERVE_ORDER',\n  },\n  COUNTRY: {\n    VISITS: 'COUNTRY_VISITS',\n    RATING: 'COUNTRY_RATING',\n    NAME_ID: 'COUNTRY_NAME_ID',\n    FIRST_VISIT: 'COUNTRY_FIRST_VISIT',\n    LAST_VISIT: 'COUNTRY_LAST_VISIT',\n  },\n  LOCATION: {\n    VISITS: 'LOCATION_VISITS',\n    RATING: 'LOCATION_RATING',\n    NAME_ID: 'LOCATION_NAME_ID',\n    FIRST_VISIT: 'LOCATION_FIRST_VISIT',\n    LAST_VISIT: 'LOCATION_LAST_VISIT',\n  },\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n  visibilityTrigger: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  group: {\n    backgroundColor: 'white',\n    top: 0,\n    '&:not(:first-of-type)': {\n      marginTop: theme.spacing(5),\n    },\n\n    '& ~ $subgroup': {\n      marginTop: theme.spacing(2),\n    },\n\n    '& + $subgroup ': {\n      marginTop: 0,\n    },\n  },\n  subgroup: {\n    backgroundColor: 'white',\n    top: 38,\n  },\n  detail: {\n    color: 'gray',\n    fontSize: 12,\n  },\n  formControl: {\n    width: '100%',\n  },\n  ratingBlock: { display: 'inline-flex', alignItems: 'center' },\n  ratingIcon: { color: 'gray', fontSize: 12 },\n  halfDown: { position: 'relative', top: 12 },\n}));\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useSidebar } from 'core/context/SidebarContext';\nimport {\n  GROUP_VISITS_BY,\n  KEY_GROUP_VISITS_BY,\n  GROUP_VISITS_BY_DEFAULTS,\n  VISITS_SECTION_DEFAULT,\n  VISITS_SECTIONS,\n  VISITS_SECTIONS_GROUPS,\n  SORT_VISITS_BY,\n  KEY_SORT_VISITS_BY,\n  SORT_VISITS_BY_DEFAULT,\n} from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\n\nexport default function(setQueryFilter, queryFilter, section) {\n  const classes = useVisitsPageStyles();\n  const {\n    [KEY_GROUP_VISITS_BY]: groupByQuery,\n    [KEY_SORT_VISITS_BY]: sortByQuery,\n  } = queryFilter || {};\n  const sortBy = resolveActualSortBy(sortByQuery);\n  const [groupBy, visitsSectionGroups] = resolveActualGroupBy(\n    groupByQuery,\n    section,\n  );\n\n  useSidebar(\n    ({ closeSidebar }) => (\n      <List>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <InputLabel shrink={true} id=\"select-groupBy-filter-label\">\n              Сгруппировать\n            </InputLabel>\n            <Select\n              labelId=\"select-groupBy-filter-label\"\n              autoWidth={true}\n              id=\"select-groupBy-filter\"\n              value={groupBy}\n              onChange={event => {\n                closeSidebar();\n                setQueryFilter({\n                  [KEY_GROUP_VISITS_BY]: event.target.value,\n                });\n              }}\n            >\n              {visitsSectionGroups.map(visitsSectionGroup => (\n                <MenuItem\n                  key={visitsSectionGroup.key}\n                  value={visitsSectionGroup.key}\n                >\n                  {visitsSectionGroup.l10n}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        {groupBy !== GROUP_VISITS_BY.TRIPS && (\n          <ListItem>\n            <FormControl className={classes.formControl}>\n              <InputLabel shrink={true} id=\"select-sortBy-filter-label\">\n                Сортировать\n              </InputLabel>\n              <Select\n                labelId=\"select-sortBy-filter-label\"\n                autoWidth={true}\n                id=\"select-sortBy-filter\"\n                value={sortBy}\n                onChange={event => {\n                  closeSidebar();\n                  setQueryFilter({\n                    [KEY_SORT_VISITS_BY]: event.target.value,\n                  });\n                }}\n              >\n                <MenuItem value={SORT_VISITS_BY.ALPHABET}>По алфавиту</MenuItem>\n                <MenuItem value={SORT_VISITS_BY.VISITS_ALPHABET}>\n                  По числу посещений\n                </MenuItem>\n                <MenuItem value={SORT_VISITS_BY.FIRST_VISIT_ALPHABET}>\n                  По первому посещению\n                </MenuItem>\n                <MenuItem value={SORT_VISITS_BY.LAST_VISIT_ALPHABET}>\n                  По последнему посещению\n                </MenuItem>\n                <MenuItem value={SORT_VISITS_BY.RATING_ALPHABET}>\n                  По рейтингу\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </ListItem>\n        )}\n      </List>\n    ),\n    [groupBy, sortBy],\n  );\n\n  return { groupBy, sortBy };\n}\n\nfunction resolveActualSortBy(sortByQuery) {\n  return Object.values(SORT_VISITS_BY).includes(sortByQuery)\n    ? sortByQuery\n    : SORT_VISITS_BY_DEFAULT;\n}\nfunction resolveActualGroupBy(groupByQuery, section) {\n  const actualSection = Object.values(VISITS_SECTIONS).includes(section)\n    ? section\n    : VISITS_SECTION_DEFAULT;\n  const visitsSectionGroups = VISITS_SECTIONS_GROUPS[actualSection] || [];\n  const groupBy = visitsSectionGroups.find(({ key }) => key === groupByQuery)\n    ? groupByQuery\n    : GROUP_VISITS_BY_DEFAULTS[actualSection];\n  return [groupBy, visitsSectionGroups];\n}\n","import isValidDate from './isValidDate';\n\nexport default function compareDateTime(\n  dateTimeA,\n  dateTimeB,\n  { reverse, matchBy } = {},\n) {\n  const isValidA = isValidDate(dateTimeA);\n  const isValidB = isValidDate(dateTimeB);\n  if (!isValidA && !isValidB) {\n    return 0;\n  }\n  if (!isValidA || !isValidB) {\n    // here also considered previous check: !isValidA && !isValidB\n    return isValidA ? -1 : 1;\n  }\n\n  const [actualDateTimeA, actualDateTimeB] = reverse\n    ? [dateTimeB, dateTimeA]\n    : [dateTimeA, dateTimeB];\n\n  switch (matchBy) {\n    case 'year':\n      return actualDateTimeB.getFullYear() - actualDateTimeA.getFullYear();\n    case 'time':\n    default:\n      return actualDateTimeB.getTime() - actualDateTimeA.getTime();\n  }\n}\n","import isValidDate from 'modules/utilities/dateTime/isValidDate';\nimport { GROUP_VISITS_BY } from './consts';\n\nexport function resolveTripCountryId(tripId, countryId) {\n  return `t${tripId}_c${countryId}`;\n}\nexport function resolveYearCountryId(year, countryId) {\n  return `y${year}_c${countryId}`;\n}\n\nexport function resolveArrivalYear({ arrivalDateTime }) {\n  if (!isValidDate(arrivalDateTime)) {\n    return null;\n  }\n  return arrivalDateTime.getFullYear(arrivalDateTime);\n}\n\nexport function checkIsGroupedByTrip(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS ||\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES\n  );\n}\n\nexport function checkIsGroupedByYear(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.YEARS ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n\nexport function checkIsGroupedByCountry(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n","import minBy from 'lodash/minBy';\nimport maxBy from 'lodash/maxBy';\nimport {\n  resolveTripCountryId,\n  resolveYearCountryId,\n  resolveArrivalYear,\n} from './utils';\n\nlet lastCacheKey = null;\nlet cachedResult = null;\nexport default function calcCounters(visitsList, cacheKey) {\n  if (cacheKey && cacheKey === lastCacheKey) {\n    return cachedResult;\n  }\n\n  const counters = {\n    totalVisits: {},\n    countries: {},\n    years: {},\n    trips: {},\n    tripsCountries: {},\n    yearsCountries: {},\n    locations: {},\n  };\n\n  visitsList.forEach(visit => {\n    const { locationId, countryId, tripId, visitId } = visit;\n    const year = resolveArrivalYear(visit);\n\n    inc(counters.countries, countryId, 'visits', visitId);\n    inc(counters.countries, countryId, 'locations', locationId);\n    if (year) {\n      inc(counters.countries, countryId, 'years', year);\n    }\n    inc(counters.countries, countryId, 'trips', tripId);\n\n    if (year) {\n      inc(counters.years, year, 'locations', locationId);\n      inc(counters.years, year, 'countries', countryId);\n      inc(counters.years, year, 'trips', tripId);\n    }\n\n    inc(counters.trips, tripId, 'visits', visitId);\n    inc(counters.trips, tripId, 'locations', locationId);\n    inc(counters.trips, tripId, 'countries', countryId);\n\n    inc(counters.locations, locationId, 'visits', visitId);\n    if (year) {\n      inc(counters.locations, locationId, 'years', year);\n    }\n    inc(counters.locations, locationId, 'trips', tripId);\n\n    inc(\n      counters.tripsCountries,\n      resolveTripCountryId(tripId, countryId),\n      'locations',\n      locationId,\n    );\n\n    if (year) {\n      inc(\n        counters.yearsCountries,\n        resolveYearCountryId(year, countryId),\n        'locations',\n        locationId,\n      );\n    }\n  }, {});\n\n  lastCacheKey = cacheKey;\n  cachedResult = counters;\n\n  return counters;\n}\n\nfunction inc(ref, refKey, counterName, counterKey) {\n  /* eslint-disable no-multi-assign, no-param-reassign */\n  let countersRef = ref[refKey];\n  if (!countersRef) {\n    countersRef = ref[refKey] = {};\n  }\n\n  let counterRef = countersRef[counterName];\n  if (!counterRef) {\n    counterRef = countersRef[counterName] = {};\n  }\n  /* eslint-enable no-multi-assign, no-param-reassign */\n\n  const currentCount = counterRef[counterKey] || 0;\n  counterRef[counterKey] = currentCount + 1;\n}\n\nexport function getLocationVisitsCount(counters = {}, locationId) {\n  const { locations: { [locationId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getLocationFirstVisit(counters = {}, locationId, visitsDict) {\n  const { locations: { [locationId]: { visits = {} } = {} } = {} } = counters;\n  return minBy(\n    Object.keys(visits).map(visitId => visitsDict[visitId]?.arrivalDateTime),\n    date => date.getTime(),\n  );\n}\n\nexport function getLocationLastVisit(counters = {}, locationId, visitsDict) {\n  const { locations: { [locationId]: { visits = {} } = {} } = {} } = counters;\n  return maxBy(\n    Object.keys(visits).map(visitId => visitsDict[visitId]?.departureDateTime),\n    date => date.getTime(),\n  );\n}\n\nexport function getCountryVisitsCount(counters = {}, countryId) {\n  const { countries: { [countryId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getCountryFirstVisit(counters = {}, countryId, visitsDict) {\n  const { countries: { [countryId]: { visits = {} } = {} } = {} } = counters;\n  return minBy(\n    Object.keys(visits).map(visitId => visitsDict[visitId]?.arrivalDateTime),\n    date => date.getTime(),\n  );\n}\n\nexport function getCountryLastVisit(counters = {}, countryId, visitsDict) {\n  const { countries: { [countryId]: { visits = {} } = {} } = {} } = counters;\n  return maxBy(\n    Object.keys(visits).map(visitId => visitsDict[visitId]?.departureDateTime),\n    date => date.getTime(),\n  );\n}\n\nexport function getLocationVisitsByYearCount(counters, locationId, year) {\n  const {\n    years: {\n      [year]: {\n        locations: { [locationId]: locationVisitsByYearCount } = {},\n      } = {},\n    } = {},\n  } = counters;\n  return locationVisitsByYearCount;\n}\n\nexport function getYearsOfVisits(counters, locationId) {\n  const { locations: { [locationId]: { years = {} } = {} } = {} } = counters;\n  return Object.keys(years);\n}\n","import warning from 'warning';\nimport memoize from 'lodash/memoize';\nimport sum from 'lodash/sum';\nimport memoizeOne from 'memoize-one';\nimport compareDateTime from 'modules/utilities/dateTime/compareDateTime';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY, COMPARATORS } from './consts';\nimport {\n  getLocationVisitsCount,\n  getLocationFirstVisit,\n  getLocationLastVisit,\n  getCountryVisitsCount,\n  getCountryFirstVisit,\n  getCountryLastVisit,\n} from './calcCounters';\n\nconst COMPARATOR_FUNCTIONS_MAPPING = {\n  [COMPARATORS.VISIT.ARRIVAL_YEAR]: createArrivalYearComparator,\n  [COMPARATORS.COUNTRY.NAME_ID]: createCountryNameIdComparator,\n  [COMPARATORS.COUNTRY.RATING]: createCountryRatingComparator,\n  [COMPARATORS.COUNTRY.VISITS]: createCountryVisitsComparator,\n  [COMPARATORS.COUNTRY.FIRST_VISIT]: createCountryFirstVisitComparator,\n  [COMPARATORS.COUNTRY.LAST_VISIT]: createCountryLastVisitComparator,\n  [COMPARATORS.LOCATION.NAME_ID]: createLocationNameIdComparator,\n  [COMPARATORS.LOCATION.RATING]: createLocationRatingComparator,\n  [COMPARATORS.LOCATION.VISITS]: createLocationVisitsComparator,\n  [COMPARATORS.LOCATION.FIRST_VISIT]: createLocationFirstVisitComparator,\n  [COMPARATORS.LOCATION.LAST_VISIT]: createLocationLastVisitComparator,\n  [COMPARATORS.TRIP.PRESERVE_ORDER]: createTripPreserveOrderComparator,\n  [COMPARATORS.TRIP.DEPARTURE_TIME]: createTripDepartureTimeComparator,\n  [COMPARATORS.TRIP.ID]: createTripIdComparator,\n};\n\nexport default function switchSortingFn(provision, counters, queryFilter) {\n  const { groupBy, sortBy } = queryFilter;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      // sorting is not applicable, as locations ordered chronologically\n      return createComparator(provision, counters, queryFilter, [\n        COMPARATORS.TRIP.PRESERVE_ORDER,\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        COMPARATORS.LOCATION.NAME,\n      ]);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return createComparator(provision, counters, queryFilter, [\n        COMPARATORS.TRIP.PRESERVE_ORDER,\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return createComparator(provision, counters, queryFilter, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS:\n      return createComparator(provision, counters, queryFilter, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return createComparator(provision, counters, queryFilter, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return createComparator(provision, counters, queryFilter, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      return createComparator(provision, counters, queryFilter, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n  }\n}\n\nfunction resolveComparatorBySortFn(sortFn, ENTITY_COMPARATORS) {\n  switch (sortFn) {\n    case SORT_VISITS_BY.VISITS_ALPHABET:\n      return [ENTITY_COMPARATORS?.VISITS];\n    case SORT_VISITS_BY.FIRST_VISIT_ALPHABET:\n      return [ENTITY_COMPARATORS?.FIRST_VISIT];\n    case SORT_VISITS_BY.LAST_VISIT_ALPHABET:\n      return [ENTITY_COMPARATORS?.LAST_VISIT];\n    case SORT_VISITS_BY.RATING_ALPHABET:\n      return [ENTITY_COMPARATORS?.RATING, ENTITY_COMPARATORS?.VISITS];\n    default:\n      return [];\n  }\n}\n\nfunction createComparator(provision, counters, queryFilter, comparatorsKeys) {\n  const comparatorFuncs = comparatorsKeys\n    .map(comparatorKey => {\n      const comparatorFnCreator = COMPARATOR_FUNCTIONS_MAPPING[comparatorKey];\n      warning(comparatorFnCreator, 'missing comparatorKey: %s', comparatorKey);\n      if (!comparatorFnCreator) {\n        return null;\n      }\n      return comparatorFnCreator(provision, counters, queryFilter);\n    })\n    .filter(Boolean);\n\n  return (visitA, visitB) => {\n    for (let fnIdx = 0; fnIdx < comparatorFuncs.length; fnIdx += 1) {\n      const comparisonResult = comparatorFuncs[fnIdx](visitA, visitB);\n      if (comparisonResult) {\n        return comparisonResult;\n      }\n    }\n    return 0;\n  };\n}\n\nfunction createLocationNameIdComparator() {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA, locationName: locationNameA } = visitA;\n    const { locationId: locationIdB, locationName: locationNameB } = visitB;\n    if (locationNameA > locationNameB) {\n      return 1;\n    }\n    if (locationNameB > locationNameA) {\n      return -1;\n    }\n    return locationIdA - locationIdB;\n  };\n}\n\nfunction createLocationRatingComparator({ locationsRating }) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    const ratingA = locationsRating[locationIdA] || 10;\n    const ratingB = locationsRating[locationIdB] || 10;\n    return ratingA - ratingB;\n  };\n}\n\nfunction createLocationVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    return (\n      getLocationVisitsCount(counters, locationIdB) -\n      getLocationVisitsCount(counters, locationIdA)\n    );\n  };\n}\n\nfunction createLocationFirstVisitComparator({ visitsDict }, counters) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    return compareDateTime(\n      getLocationFirstVisit(counters, locationIdA, visitsDict),\n      getLocationFirstVisit(counters, locationIdB, visitsDict),\n      { reverse: true },\n    );\n  };\n}\n\nfunction createLocationLastVisitComparator({ visitsDict }, counters) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    return compareDateTime(\n      getLocationLastVisit(counters, locationIdA, visitsDict),\n      getLocationLastVisit(counters, locationIdB, visitsDict),\n    );\n  };\n}\n\nfunction createCountryNameIdComparator({ countriesDict }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const { countryName: countryNameA } = countriesDict[countryIdA] || {};\n    const { countryName: countryNameB } = countriesDict[countryIdB] || {};\n\n    if (countryNameA > countryNameB) {\n      return 1;\n    }\n    if (countryNameB > countryNameA) {\n      return -1;\n    }\n    return countryIdA - countryIdB;\n  };\n}\n\nconst resolveCountryRating = memoizeOne(locationsDict =>\n  memoize(countryId => {\n    const ratings = Object.values(locationsDict)\n      .filter(\n        ({ countryId: countryIdToCompare }) => countryId === countryIdToCompare,\n      )\n      .map(({ rating }) => rating);\n    if (!ratings.length) {\n      return 0;\n    }\n    return sum(ratings) / ratings.length;\n  }),\n);\n\nfunction createCountryRatingComparator({ countriesRating }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const ratingA = countriesRating[countryIdA] || 10;\n    const ratingB = countriesRating[countryIdB] || 10;\n    return ratingA - ratingB;\n  };\n}\n\nfunction createCountryVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    return (\n      getCountryVisitsCount(counters, countryIdB) -\n      getCountryVisitsCount(counters, countryIdA)\n    );\n  };\n}\n\nfunction createCountryFirstVisitComparator({ visitsDict }, counters) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    return compareDateTime(\n      getCountryFirstVisit(counters, countryIdB, visitsDict),\n      getCountryFirstVisit(counters, countryIdA, visitsDict),\n    );\n  };\n}\n\nfunction createCountryLastVisitComparator({ visitsDict }, counters) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    return compareDateTime(\n      getCountryLastVisit(counters, countryIdA, visitsDict),\n      getCountryLastVisit(counters, countryIdB, visitsDict),\n    );\n  };\n}\n\nfunction createTripPreserveOrderComparator({ tripsIds }) {\n  return (visitA, visitB) => {\n    if (!tripsIds) {\n      return 0;\n    }\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n    const indexA = tripsIds.indexOf(tripIdA);\n    const indexB = tripsIds.indexOf(tripIdB);\n    if (indexA < 0 || indexB < 0) {\n      if (indexA < 0 && indexB < 0) {\n        return 0;\n      }\n      if (indexB < 0) {\n        return -1;\n      }\n      return 1;\n    }\n    return indexA - indexB;\n  };\n}\n\nfunction createTripDepartureTimeComparator({ tripsDict }, _, { sortBy }) {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n    const { departureDateTime: departureDateTimeA } = tripsDict[tripIdA] || {};\n    const { departureDateTime: departureDateTimeB } = tripsDict[tripIdB] || {};\n\n    compareDateTime(departureDateTimeA, departureDateTimeB, {\n      matchBy: 'year',\n      reverse: sortBy === SORT_VISITS_BY.FIRST_VISIT_ALPHABET,\n    });\n  };\n}\n\nfunction createTripIdComparator() {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n\n    return tripIdA - tripIdB;\n  };\n}\n\nfunction createArrivalYearComparator(_, __, { sortBy }) {\n  return (visitA, visitB) => {\n    const { arrivalDateTime: arrivalDateTimeA } = visitA;\n    const { arrivalDateTime: arrivalDateTimeB } = visitB;\n\n    return compareDateTime(arrivalDateTimeA, arrivalDateTimeB, {\n      matchBy: 'year',\n      reverse: sortBy === SORT_VISITS_BY.FIRST_VISIT_ALPHABET,\n    });\n  };\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function CountryInfo({\n  country: { countryName } = {},\n  isSubgroup,\n  isDetail,\n  className,\n  children,\n}) {\n  if (isDetail) {\n    return <span className={className}>{countryName}</span>;\n  }\n  return (\n    <Typography variant={isSubgroup ? 'h5' : 'h4'} className={className}>\n      {countryName} {children}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { GROUP_VISITS_BY } from '../consts';\nimport { resolveTripCountryId, resolveYearCountryId } from '../utils';\n\nexport default function renderCountry({\n  visit: { tripId, visitId, countryId },\n  changes: { isTripChanged, isCountryChanged },\n  provision: { countriesDict },\n  groupBy,\n  year,\n  counters,\n  classes,\n}) {\n  const isGroupedByTrip = groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES;\n  const isGroupedByYearCountries = groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES;\n  const shouldRender = isCountryChanged || (isGroupedByTrip && isTripChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  let locationsCounter = 0;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.countries?.[countryId]?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.yearsCountries?.[resolveYearCountryId(year, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.tripsCountries?.[resolveTripCountryId(tripId, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    default:\n      break;\n  }\n\n  const isSubgroup = isGroupedByTrip || isGroupedByYearCountries;\n  return (\n    <CountryInfo\n      key={`c${countryId}_v${visitId}`}\n      country={countriesDict[countryId]}\n      isSubgroup={isSubgroup}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {locationsCounter > 2 && (\n        <span className={classes.detail}>{`${locationsCounter} мест`}</span>\n      )}\n    </CountryInfo>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ConnectedLink from 'modules/components/muiExtended/ConnectedLink';\n\nconst useStyles = makeStyles({\n  autoMargin: { marginLeft: 'auto' },\n});\n\nexport default function LocationInfo({\n  children,\n  shouldJustifyContent,\n  href,\n  location: { locationName } = {},\n}) {\n  const classes = useStyles();\n  const childrenArray = React.Children.toArray(children);\n  if (!shouldJustifyContent || childrenArray.length <= 1) {\n    return (\n      <Typography>\n        {locationName} {children}\n      </Typography>\n    );\n  }\n\n  const lastChildren = childrenArray.slice(-1);\n  const restChildren = childrenArray.slice(0, -1);\n  return (\n    <Grid container={true} justify=\"space-between\" alignItems=\"center\">\n      <Grid item={true}>\n        <Typography>\n          {href ? (\n            <ConnectedLink to={href}>{locationName}</ConnectedLink>\n          ) : (\n            locationName\n          )}{' '}\n          {restChildren}\n        </Typography>\n      </Grid>\n      <Grid item={true} classes={{ item: classes.autoMargin }}>\n        {lastChildren}\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  photosContainer: { display: 'flex', justifyContent: 'space-between' },\n  photoContainer: {\n    margin: '4px 12px 12px',\n    minWidth: '150px',\n    maxHeight: '100px',\n    textAlign: 'center',\n  },\n  photo: {\n    maxWidth: '150px',\n    borderRadius: '4px',\n  },\n});\n\nexport default function LocationPhotos({\n  visitId,\n  tripId,\n  location,\n  visitsDict,\n  year,\n}) {\n  const classes = useStyles();\n  const { visitsIds } = location;\n  const actualVisits = visitsIds\n    .map(visitsId => visitsDict[visitsId])\n    .filter(visit => {\n      if (!visit) {\n        return false;\n      }\n      const { tripId: tripIdToCompare, visitId: visitIdToCompare } = visit;\n      if (visitId && visitId !== visitIdToCompare) {\n        return false;\n      }\n      if (tripId && tripId !== tripIdToCompare) {\n        return false;\n      }\n      if (!year) {\n        return true;\n      }\n      const { arrivalDateTime, departureDateTime } = visit;\n      return (\n        arrivalDateTime.getFullYear() <= year &&\n        departureDateTime.getFullYear() >= year\n      );\n    });\n\n  const thumbnailsUrls = actualVisits\n    .flatMap(({ photos }) => photos.map(({ thumbnailUrl }) => thumbnailUrl))\n    .slice(0, 3);\n\n  if (!thumbnailsUrls.length) {\n    return null;\n  }\n\n  return (\n    <div className={classes.photosContainer}>\n      {thumbnailsUrls.map(thumbnailUrl => (\n        <div key={thumbnailUrl} className={classes.photoContainer}>\n          <img className={classes.photo} src={thumbnailUrl} />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport IconStar from '@material-ui/icons/StarBorder';\nimport IconThumbDown from '@material-ui/icons/ThumbDownOutlined';\nimport IconThumbsUpDown from '@material-ui/icons/ThumbsUpDownOutlined';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport LocationPhotos from 'travel/components/models/locations/LocationPhotos';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY } from '../consts';\nimport {\n  getYearsOfVisits,\n  getLocationVisitsByYearCount,\n  getLocationVisitsCount,\n} from '../calcCounters';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\nconst GROUPS_TO_RENDER_YEARS_OF_VISIT = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.COUNTRIES,\n];\n\nexport default function renderLocation({\n  visit,\n  visit: { tripId, visitId, locationId, countryId, departureRideId },\n  classes,\n  changes: {\n    isYearChanged,\n    isCountryChanged,\n    isTripChanged,\n    isLocationChanged,\n  },\n  year,\n  provision: {\n    locationsDict,\n    locationsRating,\n    countriesDict,\n    visitsDict,\n    ridesDict,\n  },\n  groupBy,\n  sortBy,\n  counters,\n  visitEditUrl,\n  isObscure,\n}) {\n  const isGroupedByTripsOnly = groupBy === GROUP_VISITS_BY.TRIPS;\n  const shouldRender =\n    isGroupedByTripsOnly || // every visit in trip should be shown\n    isTripChanged || // in other grouping show only unique locations\n    isYearChanged ||\n    isCountryChanged ||\n    isLocationChanged;\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  const visitsCount = resolveVisitsCounter(visit, counters, year, groupBy);\n  const visitsDetailNode =\n    sortBy !== SORT_VISITS_BY.RATING_ALPHABET && visitsCount > 1 ? (\n      <span className={classes.detail}>{`${visitsCount} визитов`}</span>\n    ) : null;\n\n  const shouldRenderYearOfVisit =\n    sortBy !== SORT_VISITS_BY.RATING_ALPHABET &&\n    GROUPS_TO_RENDER_YEARS_OF_VISIT.includes(groupBy);\n  const yearsOfVisitDetailNode = shouldRenderYearOfVisit ? (\n    <span className={classes.detail}>\n      {`в ${getYearsOfVisits(counters, locationId).join(', ')}`}\n    </span>\n  ) : null;\n\n  const ratingNode =\n    sortBy === SORT_VISITS_BY.RATING_ALPHABET\n      ? renderAlignedRatingNode({\n          classes,\n          locationRating: locationsRating?.[locationId],\n        })\n      : null;\n\n  const childrenNodes = joinNodes(\n    countryDetailNode,\n    ratingNode,\n    visitsDetailNode,\n    yearsOfVisitDetailNode,\n  );\n\n  // const renderLocationsPhotos = () => {\n  //   switch (groupBy) {\n  //     case GROUP_VISITS_BY.TRIPS:\n  //       return (\n  //         <LocationPhotos\n  //           visitId={visitId}\n  //           location={locationsDict[locationId]}\n  //           visitsDict={visitsDict}\n  //         />\n  //       );\n  //     case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n  //       return (\n  //         <LocationPhotos\n  //           tripId={tripId}\n  //           location={locationsDict[locationId]}\n  //           visitsDict={visitsDict}\n  //         />\n  //       );\n  //     case GROUP_VISITS_BY.YEARS:\n  //     case GROUP_VISITS_BY.YEARS_COUNTRIES:\n  //     case GROUP_VISITS_BY.COUNTRIES_YEARS:\n  //       return (\n  //         <LocationPhotos\n  //           location={locationsDict[locationId]}\n  //           visitsDict={visitsDict}\n  //           year={year}\n  //         />\n  //       );\n  //     case GROUP_VISITS_BY.COUNTRIES:\n  //     case GROUP_VISITS_BY.LOCATIONS:\n  //     default:\n  //       return (\n  //         <LocationPhotos\n  //           location={locationsDict[locationId]}\n  //           visitsDict={visitsDict}\n  //         />\n  //       );\n  //   }\n  // };\n\n  return (\n    <React.Fragment key={`l${locationId}_v${visitId}`}>\n      <LocationInfo\n        location={locationsDict[locationId]}\n        country={countriesDict[countryId]}\n        shouldJustifyContent={isGroupedByTripsOnly}\n        href={visitEditUrl}\n      >\n        {childrenNodes}\n        {isGroupedByTripsOnly && (\n          <Grid container={true}>\n            <Grid item={true}>\n              <Typography className={classes.detail}>\n                {visitDateTimePeriodToString(visitsDict[visitId], isObscure)}\n              </Typography>\n            </Grid>\n            <Grid item={true}>\n              <RideInfo\n                ride={ridesDict[departureRideId]}\n                className={classes.halfDown}\n              />\n            </Grid>\n          </Grid>\n        )}\n      </LocationInfo>\n      {/*{renderLocationsPhotos()}*/}\n    </React.Fragment>\n  );\n}\n\nfunction renderAlignedRatingNode({ locationRating, classes }) {\n  return (\n    <div className={classes.ratingBlock}>\n      {renderRatingNode({ locationRating, classes })}\n    </div>\n  );\n}\n\nfunction renderRatingNode({ locationRating, classes }) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return <IconStar className={classes.ratingIcon} />;\n    case LOCATION_RATING.NEVER:\n      return <IconThumbDown className={classes.ratingIcon} />;\n    default:\n      return <IconThumbsUpDown className={classes.ratingIcon} />;\n  }\n}\n\nfunction joinNodes(...nodes) {\n  return nodes.filter(Boolean).reduce((nodesMemo, node, index) => {\n    if (index > 0) {\n      nodesMemo.push(<span> </span>);\n    }\n    nodesMemo.push(node);\n    return nodesMemo;\n  }, []);\n}\n\nfunction resolveVisitsCounter(visit, counters = {}, year, groupBy) {\n  const { locationId } = visit;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.LOCATIONS:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.YEARS:\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return getLocationVisitsByYearCount(counters, locationId, year);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n    default:\n      break;\n  }\n}\n","import React from 'react';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\n\nexport default function renderOriginLocation({\n  keyBase,\n  children,\n  classes,\n  visit: { tripId },\n  provision: { tripsDict, locationsDict, countriesDict },\n  groupBy,\n}) {\n  const trip = tripsDict[tripId];\n  if (!trip) {\n    return null;\n  }\n  const { originLocationId } = trip;\n\n  const originLocation = locationsDict[originLocationId];\n  if (!originLocation) {\n    return null;\n  }\n\n  const { countryId } = originLocation;\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  return (\n    <LocationInfo\n      key={`${keyBase}_t${tripId}_ol${originLocationId}`}\n      location={locationsDict[originLocationId]}\n      country={countriesDict[countryId]}\n      shouldJustifyContent={children != null}\n    >\n      {countryDetailNode}\n      {children}\n    </LocationInfo>\n  );\n}\n","import React from 'react';\nimport renderOriginLocation from './renderOriginLocation';\n\nexport default function renderArrivalLocation(props) {\n  const {\n    changes: { willTripChange },\n  } = props;\n\n  if (!willTripChange) {\n    return null;\n  }\n\n  return renderOriginLocation({\n    ...props,\n    keyBase: 'al',\n  });\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\n\nexport default function TripInfo({\n  trip,\n  visitsDict,\n  countriesDict,\n  locationsDict,\n  children,\n  className,\n}) {\n  return (\n    <Typography variant=\"h4\" className={className} paragraph={true}>\n      <span>\n        {resolveTripCaption(trip, visitsDict, countriesDict, locationsDict)}\n      </span>\n      {children}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport cls from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport IconEdit from '@material-ui/icons/Edit';\nimport TripInfo from 'travel/components/models/trips/TripInfo';\n\nexport default function renderTrip({\n  visit: { visitId, tripId },\n  changes: { isTripChanged },\n  provision: { tripsDict, visitsDict, countriesDict, locationsDict },\n  travelPaths: { tripEdit: tripEditPath },\n  hasEditRights,\n  userAlias,\n  classes,\n}) {\n  if (!isTripChanged) {\n    return null;\n  }\n\n  const tripEditButtonNode = hasEditRights ? (\n    <IconButton\n      className={classes.visibleOnlyOnHover}\n      href={tripEditPath.toUrl({ userAlias, strTripId: String(tripId) })}\n      size=\"small\"\n    >\n      <IconEdit />\n    </IconButton>\n  ) : null;\n\n  return (\n    <TripInfo\n      key={`t${tripId}_v${visitId}`}\n      className={cls(classes.visibilityTrigger, classes.group)}\n      trip={tripsDict[tripId]}\n      visitsDict={visitsDict}\n      countriesDict={countriesDict}\n      locationsDict={locationsDict}\n    >\n      {tripEditButtonNode}\n    </TripInfo>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function YearInfo({ year, isSubgroup }) {\n  const classes = useVisitsPageStyles();\n  return (\n    <Typography\n      variant={isSubgroup ? 'h5' : 'h4'}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {year || 'Без указания даты'}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport YearInfo from 'travel/components/common/YearInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nexport default function renderYear({\n  visit: { visitId },\n  changes: { isYearChanged, isCountryChanged },\n  groupBy,\n  year,\n}) {\n  const isGroupedByCountriesYear = groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS;\n  const shouldRender =\n    isYearChanged || (isGroupedByCountriesYear && isCountryChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  return (\n    <YearInfo\n      key={`y${year}_v${visitId}`}\n      year={year}\n      isSubgroup={isGroupedByCountriesYear}\n    />\n  );\n}\n","import {\n  resolveArrivalYear,\n  checkIsGroupedByCountry,\n  checkIsGroupedByTrip,\n  checkIsGroupedByYear,\n} from '../utils';\nimport { GROUP_VISITS_BY } from '../consts';\nimport renderCountry from './renderCountry';\nimport renderLocation from './renderLocation';\nimport renderDepartureLocation from './renderDepartureLocation';\nimport renderArrivalLocation from './renderArrivalLocation';\nimport renderTrip from './renderTrip';\nimport renderYear from './renderYear';\n\nexport default function renderNodesInOrder({\n  prevVisit,\n  visit,\n  nextVisit,\n  groupBy,\n  ...forwardedProps\n}) {\n  const {\n    countryId: prevCountryId,\n    locationId: prevLocationId,\n    tripId: prevTripId,\n  } = prevVisit;\n  const { tripId: nextTripId } = nextVisit;\n  const { countryId, locationId, tripId } = visit;\n\n  const prevYear = resolveArrivalYear(prevVisit);\n  const year = resolveArrivalYear(visit);\n\n  const isGroupedByTrip = checkIsGroupedByTrip(groupBy);\n  const isGroupedByYear = checkIsGroupedByYear(groupBy);\n  const isGroupedByCountry = checkIsGroupedByCountry(groupBy);\n\n  const renderProps = {\n    visit,\n    groupBy,\n    year,\n    changes: {\n      isTripChanged: isGroupedByTrip && prevTripId !== tripId,\n      willTripChange: isGroupedByTrip && nextTripId !== tripId,\n      isYearChanged: isGroupedByYear && prevYear !== year,\n      isCountryChanged: isGroupedByCountry && prevCountryId !== countryId,\n      isLocationChanged: prevLocationId !== locationId,\n    },\n    ...forwardedProps,\n  };\n\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      return [\n        renderTrip(renderProps),\n        renderDepartureLocation(renderProps),\n        renderLocation(renderProps),\n        renderArrivalLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return [\n        renderTrip(renderProps),\n        renderCountry(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.COUNTRIES:\n      return [renderCountry(renderProps), renderLocation(renderProps)];\n    case GROUP_VISITS_BY.YEARS:\n      return [renderYear(renderProps), renderLocation(renderProps)];\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return [\n        renderYear(renderProps),\n        renderCountry(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return [\n        renderCountry(renderProps),\n        renderYear(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      // return {push:[locationNode], keep: [countryNode, yearNode]};\n      return [renderLocation(renderProps)];\n  }\n}\n","import React from 'react';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport renderOriginLocation from './renderOriginLocation';\n\nexport default function renderDepartureLocation(props) {\n  const {\n    visit: { arrivalRideId },\n    classes,\n    changes: { isTripChanged },\n    provision: { ridesDict },\n  } = props;\n\n  if (!isTripChanged) {\n    return null;\n  }\n\n  return renderOriginLocation({\n    ...props,\n    keyBase: `dl`,\n    children: (\n      <RideInfo ride={ridesDict[arrivalRideId]} className={classes.halfDown} />\n    ),\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport MUILink from '@material-ui/core/Link';\nimport { checkIsGroupedByTrip } from '../utils';\nimport * as locators from '../locators';\n\nexport default function renderTitle({\n  createTripUrl,\n  locationsUrl,\n  locationsCount,\n  countriesCount,\n  groupBy,\n}) {\n  const linkToCreateTripNode = checkIsGroupedByTrip(groupBy) ? (\n    <div>\n      <MUILink\n        to={createTripUrl}\n        component={Link}\n        data-locator={locators.ADD_TRIP_BUTTON}\n      >\n        Добавить поездку\n      </MUILink>\n    </div>\n  ) : null;\n\n  return (\n    <Typography variant=\"h6\" paragraph={true}>\n      <span>Всего </span>\n      <MUILink to={locationsUrl} component={Link}>\n        {`${locationsCount} городов `}\n      </MUILink>\n      <span>из </span>\n      <span>{`${countriesCount} стран `}</span>\n      {linkToCreateTripNode}\n    </Typography>\n  );\n}\n\nrenderTitle.propTypes = {\n  locationsUrl: PropTypes.string.isRequired,\n  locationsCount: PropTypes.number.isRequired,\n  countriesCount: PropTypes.number.isRequired,\n};\n","export const ADD_TRIP_BUTTON = 'ADD_TRIP_BUTTON';\n","import React from 'react';\nimport { usePaths } from 'modules/packages';\nimport { useTripsStats } from 'travel/dataSource';\nimport { useQueryFilter } from 'core/context/QueryFilterContext';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { GROUP_VISITS_BY } from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\nimport useVisitsGroupingSidebar from './useVisitsGroupingSidebar';\nimport switchSortingFn from './switchSortingFn';\nimport renderNodesInOrder from './blocks/renderNodesInOrder';\nimport renderTitle from './blocks/renderTitle';\nimport calcCounters from './calcCounters';\n\nexport default function VisitsPage({\n  match: {\n    params: { userAlias, section },\n  },\n}) {\n  const { userAlias: authenticatedUserAlias } = useAuthContext();\n  const hasEditRights = userAlias === authenticatedUserAlias;\n  const isObscure = userAlias !== authenticatedUserAlias;\n\n  const classes = useVisitsPageStyles();\n  const { queryFilter, setQueryFilter } = useQueryFilter();\n  const { groupBy, sortBy } = useVisitsGroupingSidebar(\n    setQueryFilter,\n    queryFilter,\n    section,\n  );\n\n  const provision = useTripsStats({ userAlias });\n  const { isPending, isError } = provision;\n\n  const { travel: travelPaths } = usePaths();\n  const {\n    locations: locationsPath,\n    tripCreate: tripCreatePath,\n    visitEdit: visitEditPath,\n  } = travelPaths;\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  const { visitsIds, visitsDict } = provision;\n  const unsortedVisitsList = visitsIds\n    .map(visitId => visitsDict[visitId])\n    .filter(Boolean);\n\n  const { updatesCounter } = provision;\n  const counters = calcCounters(unsortedVisitsList, updatesCounter);\n\n  const titleNode = renderTitle({\n    locationsUrl: locationsPath.toUrl({ userAlias }),\n    createTripUrl: tripCreatePath.toUrl({ userAlias }),\n    locationsCount: Object.keys(counters?.locations || {}).length,\n    countriesCount: Object.keys(counters?.countries || {}).length,\n    groupBy,\n  });\n\n  const visitsList = unsortedVisitsList.sort(\n    switchSortingFn(provision, counters, { groupBy, sortBy }),\n  );\n  const nodes = visitsList.reduce(\n    (nodesAccumulator, visit, index) => {\n      const prevVisit = index > 0 ? visitsList[index - 1] : {};\n      const nextVisit =\n        index < visitsList.length - 1 ? visitsList[index + 1] : {};\n\n      renderNodesInOrder({\n        prevVisit,\n        visit,\n        nextVisit,\n        provision,\n        classes,\n        counters,\n        groupBy,\n        sortBy,\n        hasEditRights,\n        travelPaths,\n        userAlias,\n        visitEditUrl:\n          hasEditRights && groupBy === GROUP_VISITS_BY.TRIPS\n            ? visitEditPath.toUrl({ strVisitId: String(visit.visitId) })\n            : undefined,\n        isObscure,\n      })\n        .filter(Boolean)\n        .forEach(node => nodesAccumulator.push(node));\n\n      return nodesAccumulator;\n    },\n    [titleNode],\n  );\n\n  // without key there is strange bug with reconciling:\n  // when group_by changed from trips to something other, then trips nodes still\n  // rendering in three, but because of nodes keys collisions only\n  // originalLocations is remaining on top of the list\n  return <div key={`${groupBy}_${sortBy}`}>{nodes}</div>;\n}\n\n/*\n// byCities -> groupBy(visits, cities) '123': []\nЧелябинск, Россия, 3 визита в 2011 и 2012\n-> 20 августа 2011\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountries -> groupBy(visits, countries & cities) '1-123': []\n[Россия](/travel/:userAlias/countries/1)\n[Челябинск](/travel/:userAlias/cities/123), 3 визита в [2011](/travel/:userAlias/year/2011) и [2012](/travel/:userAlias/year/2012) [заметки](/travel/:userAlias/cities/123/story)\n-> 20 августа 2011 [заметки](/travel/:userAlias/visits/111/story)\n   до 5 фоток\n-> 20-21 июня 2012 [заметки](/travel/:userAlias/visits/222/story)\n   до 5 фоток\n-> 31 июля-1 августа 2012 [заметки](/travel/:userAlias/visits/333/story)\n   до 5 фоток\n\n// byYears -> groupBy(visits, years & cities) '2011-123': []\n2011\nЧелябинск, Россия\n-> 20 августа 2011\n\n2012\nЧелябинск, Россия, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byYearsAndCountries -> groupBy(visits, years & countries & cities)  '2011-1-123': []\n2011\nРоссия\nЧелябинск\n-> 20 августа 2011\n\n2012\nРоссия\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountriesAndYears -> groupBy(visits, countries & years & cities) 'c1-y2011-l123': []\nРоссия\n\n2011\nЧелябинск\n-> 20 августа 2011\n\n2012\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n*/\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport mapValues from 'lodash/mapValues';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias, tripsIds: requiredTripsIds }) {\n  const { tripsDict } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n  }));\n  const shouldRequireAllTrips = !requiredTripsIds;\n  const missingTripsIds =\n    !shouldRequireAllTrips &&\n    requiredTripsIds.filter(tripId => !tripsDict[tripId]);\n\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: {\n      userAlias,\n      navigation: { isDisabled: true },\n      filter: shouldRequireAllTrips\n        ? {}\n        : { id: { comparator: 'in', value: missingTripsIds } },\n    },\n  });\n}\n\nexport function useTripsStats({ userAlias, tripsIds: requiredTripsIds }) {\n  const tripsProvision = useTrips({ userAlias, tripsIds: requiredTripsIds });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = useMemo(\n    () =>\n      Array.from(\n        new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n      ),\n    [tripsIds, tripsDict],\n  );\n\n  const ridesIds = useMemo(\n    () =>\n      Array.from(\n        new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n      ),\n    [tripsIds, tripsDict],\n  );\n\n  const countriesIds = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || []),\n        ),\n      ),\n    [visitsIds, visitsDict],\n  );\n\n  const locationsIds = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n        ),\n      ),\n    [visitsIds, visitsDict],\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  const countriesRating = calcCountriesRating(\n    locationsIds,\n    locationsDict,\n    locationsRating,\n  );\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n    countriesRating,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n    invalidate: () => provisions.forEach(({ invalidate }) => invalidate()),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n\nfunction calcCountriesRating(locationsIds, locationsDict, locationsRating) {\n  const ratingsGroupedByCountries = locationsIds.reduce((memo, locationId) => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return memo;\n    }\n    const locationRating = locationsRating[locationId];\n    const { countryId } = location;\n    if (!memo[countryId]) {\n      memo[countryId] = [];\n    }\n    memo[countryId].push(locationRating);\n    return memo;\n  }, {});\n\n  return mapValues(ratingsGroupedByCountries, ratingsByCountry =>\n    averageRating(ratingsByCountry),\n  );\n}\n\nfunction averageRating(ratings) {\n  if (!ratings.length) {\n    return Infinity;\n  }\n  const avg =\n    ratings.length / ratings.map(rating => 1 / rating).reduce((a, b) => a + b);\n\n  const best = max(ratings);\n\n  const lengthRatio = Math.log(ratings.length);\n\n  return 1 / (1 / avg + lengthRatio / best);\n}\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  return useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n}\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport ru from 'date-fns/locale/ru';\nimport dateFormat from 'modules/utilities/dateTime/safeDateFormat';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  MONTH_YEAR: 'LLLL yyyy',\n  MONTH_ONLY: 'LLLL',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nexport function dateTimePeriodToString(periodStart, periodEnd, isObscure) {\n  const fullFormat = isObscure ? DATE_FORMATS.MONTH_YEAR : DATE_FORMATS.FULL;\n  const periodEndString = dateFormat(periodEnd, fullFormat, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    if (!isObscure) {\n      periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n        locale: ru,\n      });\n    }\n  } else if (isSameYear(periodStart, periodEnd)) {\n    const shortFormat = isObscure\n      ? DATE_FORMATS.MONTH_ONLY\n      : DATE_FORMATS.DAY_MONTH;\n    periodStartString = dateFormat(periodStart, shortFormat, { locale: ru });\n  } else {\n    periodStartString = dateFormat(periodStart, fullFormat, { locale: ru });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString(\n  { departureDateTime, arrivalDateTime },\n  isObscure,\n) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime, isObscure);\n}\n\nexport function visitDateTimePeriodToString(\n  { departureDateTime, arrivalDateTime },\n  isObscure,\n) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime, isObscure);\n}\n\nexport function dateTimeOpenPeriodToString({\n  periodStart,\n  periodEnd,\n  isObscure,\n  placeholder,\n}) {\n  if (!periodEnd) {\n    const format = isObscure ? DATE_FORMATS.MONTH_YEAR : DATE_FORMATS.FULL;\n    const startDateStr = dateFormat(periodStart, format, { locale: ru });\n    return `${startDateStr}—${placeholder}`;\n  }\n  return dateTimePeriodToString(periodStart, periodEnd, isObscure);\n}\n","export default function isValidDate(date) {\n  return date instanceof Date && !Number.isNaN(date.getTime());\n}\n","import dateFormat from 'date-fns/format';\nimport isValidDate from './isValidDate';\n\nexport default function safeDateFormat(date, ...args) {\n  if (!isValidDate(date)) {\n    return '?';\n  }\n  return dateFormat(date, ...args);\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MUILink from '@material-ui/core/Link';\n\nexport default function ConnectedLink(props) {\n  return <MUILink {...props} component={RouterLink} />;\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  return useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useVisit({ userAlias, visitId: requiredVisitId }) {\n  const { visitsDict } = useSelector(state => ({\n    visitsDict: selectDict(state, 'visits') || {},\n  }));\n  const visit = visitsDict[requiredVisitId];\n\n  return {\n    visit,\n    ...useProvision({\n      domain: `travel.visit${requiredVisitId}-${userAlias}`,\n      isProvision: true,\n      modelName: 'visits',\n      observe: requiredVisitId,\n      condition: !visit,\n      query: {\n        userAlias,\n        filter: { visit_id: { comparator: '=', value: requiredVisitId } },\n        navigation: { isDisabled: true },\n      },\n    }),\n  };\n}\n\nexport function useAddVisitPhotoRequest({ domain }) {\n  const [submitVisitPhoto, provision] = useRequest({\n    domain,\n    modelName: 'visits',\n    method: 'POST',\n    contentType: 'multipart/form-data',\n  });\n\n  return {\n    ...provision,\n    submitVisitPhoto,\n  };\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { RIDE_TYPES } from 'travel/models/rides/consts';\nimport RideIcon from 'travel/components/models/rides/RideIcon';\n\nconst useStyles = makeStyles({\n  icon: { color: 'gray', fontSize: 16, height: 16 },\n  absoluteIcon: {\n    // todo fast decision, need refactor\n    color: 'gray',\n    fontSize: 16,\n    height: 16,\n    position: 'absolute',\n  },\n  detail: { color: 'gray', fontSize: 12 },\n});\n\nexport default function RideInfo({\n  ride,\n  ride: { rideType } = {},\n  className,\n  isLong,\n}) {\n  const classes = useStyles();\n\n  if (!ride) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <RideIcon ride={ride} className={classes.icon} />\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.absoluteIcon} />\n      )}\n      {isLong && rideDateTimePeriodToString(ride)}\n    </div>\n  );\n}\n","import React from 'react';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { VEHICLE_TYPES } from 'travel/models/rides/consts';\n\nexport default function RideIcon({ ride: { vehicleType }, className }) {\n  const IconComponent = resolveRideIconComponent(vehicleType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(vehicleType) {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n      return CustomTransportIcon;\n    default:\n      return UnknownRideIcon;\n  }\n}\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import dateMin from 'date-fns/min';\nimport dateMax from 'date-fns/max';\nimport groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\n\nconst FALLBACK = 'Без названия';\nexport default function resolveTripCaption(\n  trip,\n  visitsDict,\n  countriesDict,\n  locationsDict,\n) {\n  const {\n    visits: visitsIds,\n    originLocationId,\n    tripName,\n    hasAutogeneratedTripName,\n  } = trip || {};\n\n  const originCountryId = locationsDict[originLocationId]?.countryId;\n\n  if (!hasAutogeneratedTripName) {\n    return tripName || FALLBACK;\n  }\n  if (!visitsIds.length) {\n    return FALLBACK;\n  }\n\n  const periodStr = visitDateTimePeriodToString({\n    arrivalDateTime: dateMin(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.arrivalDateTime),\n    ),\n    departureDateTime: dateMax(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.departureDateTime),\n    ),\n  });\n\n  const visitsByCountries = Object.keys(\n    groupBy(\n      visitsIds.filter(\n        visitId => visitsDict[visitId]?.visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n\n  if (visitsByCountries.length === 1) {\n    const locationsNames = uniqTrimAndJoin(\n      visitsIds.map(visitId => visitsDict[visitId]?.locationName),\n      { maxLength: 4 },\n    );\n    return `${locationsNames || FALLBACK}, ${periodStr}`;\n  }\n\n  const countriesNames = uniqTrimAndJoin(\n    visitsByCountries\n      .map(\n        countryId =>\n          Number(countryId) !== originCountryId &&\n          countriesDict[countryId] &&\n          countriesDict[countryId].countryName,\n      )\n      .filter(Boolean),\n    { maxLength: 4 },\n  );\n  return `${countriesNames || FALLBACK}, ${periodStr}`;\n}\n"],"sourceRoot":""}