{"version":3,"sources":["webpack:///./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionsResolver.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultInputRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack:///./src/modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/localization.js","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/blocks/TripEditCard.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/TripEditDialog.jsx","webpack:///./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack:///./src/modules/utilities/types/array.js","webpack:///./src/modules/components/muiExtended/DialogWithForm/DialogWithForm.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/tieDateTimeFields.js","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/blocks/RideEditForm.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/RideEditDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/Ride.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/DragHandler.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/VisitWithRides.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/localization.js","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/blocks/VisitEditCard.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/VisitEditDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/VisitCreator.jsx","webpack:///./src/packages/travel/models/visits/initialize.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/Trip.jsx","webpack:///./src/packages/travel/pages/TripEditPage/actionCreators.js","webpack:///./src/modules/utilities/algorithms/createOrderCalculator.js","webpack:///./src/packages/travel/pages/TripEditPage/TripEditPage.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/Ride.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/VisitWithRides.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/Trip.jsx","webpack:///./src/packages/travel/pages/TripsPage/utils.js","webpack:///./src/packages/travel/pages/TripsPage/TripsPage.jsx","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack:///./src/packages/travel/models/trips/utils/index.js","webpack:///./src/packages/travel/components/common/WelcomeScreen/WelcomeScreen.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/localization.js","webpack:///./src/packages/travel/components/common/withTripsData/withTripsData.jsx","webpack:///./src/packages/travel/components/common/withTripsData/selectors.js","webpack:///./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack:///./src/packages/travel/components/models/visits/Visit.jsx","webpack:///./src/packages/travel/components/models/locations/Location.jsx","webpack:///./src/modules/customPropTypes/reactComponentPropType.js"],"names":["OptionsSelect","caption","classes","hasNullOption","inputId","name","handleChange","onChange","optionRender","options","value","className","container","InputLabel","component","shrink","htmlFor","Select","displayEmpty","input","Input","id","selectRoot","MenuItem","key","option","index","map","valuePropTypes","PropTypes","oneOfType","number","string","propTypes","isRequired","objectOf","bool","func","arrayOf","defaultProps","undefined","withStyles","display","flexGrow","flexBasis","DefaultSuggestionResolver","inputValue","sourceProps","suggestions","renderProp","children","lowerCaseInputValue","toLowerCase","Fragment","filter","label","includes","shape","array","inputProps","ref","other","TextField","InputProps","inputRef","root","inputRoot","inputInput","DefaultSuggestionRender","itemProps","isHighlighted","isSelected","details","selected","style","fontWeight","ListItemText","primary","secondary","object","useStyles","makeStyles","theme","paper","position","zIndex","marginTop","spacing","left","right","defaultItemToString","item","createSuggestComponent","SuggestionsResolver","DefaultSuggestionsResolver","SuggestionItemComponent","InputComponent","DefaultInputRender","customClasses","inputFieldProps","downshiftProps","itemToString","getInputProps","getItemProps","getMenuProps","highlightedIndex","isOpen","selectedItem","fullWidth","Paper","square","resolvedSuggestions","suggestion","Boolean","QUERY_FORMATS","resolveQueryByFormat","queryFormat","filterField","searchString","navigation","pageSize","numberOfItemsToRequest","search","comparator","withProvision","state","modelName","domain","identity","request","entities","observe","query","debounceRequest","resolveDetails","convertEntityToSuggestion","entity","data","entitiesList","TRIP_TYPE_NAMES","TRIP_TYPES","LEISURE","BUSINESS","MIXED","RELOCATION","OTHER","renderTripType","tripType","useTripState","initialTripName","tripName","initialTripType","initialOriginLocationId","originLocationId","initialOriginGeonameId","originGeonameId","useState","tripState","setTripState","tripStateUpdate","TripEditCard","locationsDict","setTripName","useCallback","nextTripName","target","setTripType","nextTripType","setOriginGeoname","nextOriginGeonameId","geonameId","locationName","optionGroup","ProvisionedSuggest","suggest","textFieldProps","initialInputValue","placeholder","countryName","regionName","join","Object","values","compose","connect","selectDict","minWidth","TripEditDialog","initialState","handleSubmit","onSubmit","React","setOpen","handleClose","cloneElement","onClick","Dialog","transitionDuration","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","ridePropTypes","node","event","element","dataset","sortHandler","parentNode","DialogWithForm","description","handleReject","onReject","title","forwardedProps","handleSubmitInternal","formikProps","mixDateTime","dateFrom","timeFrom","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","rideDeparture","rideArrival","isSameDay","checkIsSameDay","setDatesAndTimes","nextRideDeparture","nextRideArrival","beforeDateTime","afterDateTime","isInverted","checkIsAfter","actualNextRideDeparture","actualNextRideArrival","checkIsDatesEqual","setRideDeparture","setRideArrival","isSameDateField","nextIsSameDay","addDays","rideDepartureField","rideArrivalField","ORIGIN_OF_TRIP","renderVehicleType","vehicleType","VEHICLE_NAMES","renderRideType","rideType","RIDE_TYPES_NAMES","renderRideClass","rideClass","RIDE_CLASSES_NAMES","renderRideOccupation","rideOccupation","RIDE_OCCUPATION_NAMES","RideEditForm","availableVisits","originLocation","departureVisitId","arrivalVisitId","rideComment","departureDateTime","arrivalDateTime","availableVisitsIds","visitId","visitsDict","fromEntries","visit","tieDateTimeFields","renderVisit","VEHICLE_TYPES","RIDE_TYPES","RIDE_CLASSES","RIDE_OCCUPATION","autoOk","format","FormControlLabel","control","Checkbox","checked","TimePicker","ampm","multiline","rows","rowsMax","RideEditDialog","IconButton","data-sort-handler","size","variant","initialValues","enableReinitialize","visitPropTypes","locationsPropTypes","Ride","defaultArrivalVisitId","defaultDepartureVisitId","isEditable","handleRideUpdate","onRideUpdate","ride","rideId","showDetails","rideInitialState","initializeRide","Icon","CAR","CarIcon","TRAIN","TrainIcon","AIRCRAFT","FlightIcon","BUS","TROLLEY","CITY_BUS","BusIcon","MOTORHOME","JITNEY","VanIcon","LOCAL_TRAIN","FERRY","BoatIcon","BIKE","BikeIcon","BY_FEET","WalkIcon","MOTORBIKE","MotorcycleIcon","TRUCK","TruckIcon","ALL_TERRAIN_VEHICLE","TerrainIcon","TRAM","TramIcon","TAXI","LocalTaxiIcon","SUBWAY","SubwayIcon","PUBLIC_TRANSPORT","SeatIcon","ROPEWAY","FUNICULAR","CustomTransportIcon","resolveRideIconComponent","UnknownRideIcon","iconNode","icon","rideNode","editDialogTrigger","updatedRide","cls","HITCH_HIKING","rideDateTimePeriodToString","marginRight","verticalAlign","DragHandler","dragHandler","cursor","marginLeft","top","transform","VisitWithRides","arrivalRideId","departureRideId","ridesDict","prevVisitId","nextVisitId","tripVisitsList","isSortable","isSorting","isArrivalRideMatch","isDepartureRideMatch","handleVisitUpdate","onVisitUpdate","locationsPath","shouldWarnForArrivalRide","shouldWarnForDepartureRide","alwaysVisible","warning","Visit","editIcon","visibleOnlyOnHover","instanceOf","Path","visibility","VISIT_TYPE_NAMES","VISIT_TYPES","TRANSIT","REGULAR","BASE_CAMP","renderVisitType","visitType","useVisitState","initialVisitType","initialVisitComment","visitComment","initialLocationId","locationId","initialLocationName","initialGeonameId","visitState","setVisitState","visitStateUpdate","VisitEditCard","setVisitType","nextVisitType","setGeoname","nextGeonameId","setVisitComment","nextVisitComment","VisitEditDialog","VisitCreator","draggableContainer","SortableTrip","SortableContainer","SortableVisitWithRides","SortableElement","replaceWithNode","props","Trip","countriesDict","handleVisitsOrderUpdate","onVisitsOrderUpdate","trip","tripId","handleTripUpdate","onTripUpdate","setIsSorting","length","addVisitControlIndex","setAddVisitControlIndex","visitsNodes","slice","withItem","isItVisitCreatorControl","indexOfVisit","newVisit","indexInCollection","collection","overstepIndex","prevVisitIndex","nextVisitIndex","resolveVisitsWindow","prevVisit","nextVisit","checkIsVisitsConnectedByRide","wrappedVisitsNodes","onSortEnd","oldIndex","newIndex","shouldCancelStart","checkIsNodeNotSortable","updateBeforeSortStart","lockAxis","lockToContainerEdges","originLocationNode","Location","location","IconHome","tripEditControlsNode","updatedTrip","lastVisit","lastButOneVisit","rideToOriginId","recentVisitId","isRelocation","rideToOriginNode","resolveTripCaption","countryId","tripIndex","locationPropTypes","tripPropTypes","tripStoryPath","calcOrder","resolveOrder","orderResolver","prevOrder","nextOrder","Math","random","createOrderCalculator","orderInTrip","submitVisit","body","memoizedGroupAndSortVisitsByTrips","memoizeByLastArgs","groupAndSortVisitsByTrips","TripEditPage","match","params","visitedUserAlias","userAlias","strTripId","isTripsComplete","userTrips","tripsList","userVisits","visitsList","invalidateRequest","useAuthContext","isAuthenticated","authenticatedUserAlias","usePaths","travel","tripStory","locations","submitOrderInTrip","submitRide","submitTrip","then","specifiedTripId","parseInt","tripToEdit","find","visitsGroupedByTrips","trips","visits","ridesPropTypes","withTripsData","mapStateToProps","selectProvisionStatus","isComplete","requirementsConfig","DATA_CHUNKS","COMMON","COUNTRIES","USER","TRIPS","LOCATIONS","VISITS","RIDES","tripEditUrl","tripStoryUrl","Link","to","hasStory","some","departureRideComment","checkTripHasStory","TripsPage","tripEditPath","tripEdit","useTripsStats","isError","isPending","tripsIds","tripsDict","toUrl","String","tripsProvision","useProvision","isProvision","isDisabled","useTrips","useUser","user","locationsRating","userProvision","selectResult","useSelector","visitsIds","Array","from","Set","flatMap","tripsId","ridesIds","rides","countriesIds","locationsIds","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","updatesCounter","sum","selectUpdatesCounter","isReady","every","selectIsReady","selectIsPending","isValid","selectIsValid","error","selectIsError","errors","selectError","mergeProvisionsState","ridesStats","calcRidesStats","earliestDeparture","min","getTime","latestArrival","max","provision","isLoading","counters","withLoader","Component","hasFallback","PlainLoader","funcsArray","arg","reduceRight","composed","provisionParams","ExtendableComponent","provide","selectItem","applicableSchemaName","condition","requiredLocationIds","missingLocationsIds","useLocationRatingRequest","useRequest","method","submitLocationRating","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","periodEndString","dateFormat","locale","ru","periodStartString","isSameMonth","isSameYear","visitDateTimePeriodToString","maxLength","separator","uniqArray","uniq","result","originCountryId","fallback","visitsByCountries","keys","groupBy","uniqTrimAndJoin","Number","sortVisitsByTrips","sort","WelcomeScreen","tripsPath","Message","path","withRouter","ECONOMY","COMFORT","FIRST","PRIVATE","PASSENGER","STUFF","DRIVER","SELF_DRIVE","SCHEDULED","CHARTER","TOUR","CARPOOL","DROP_OFF","mapStateToRequirementsConfig","ProvisionedComponent","userTripsIds","selectPlaceholder","selectUserTripsIds","isFunction","countries","requiredLocationsIds","reduce","memo","push","requiredLocationId","selectLocationsIds","userLocations","year","actualYear","test","trip_id","departure_date_time","arrival_date_time","userRides","TransferWithinAStationIcon","DomainIcon","LocalShippingIcon","LocationCityIcon","resolveVisitIconComponent","strLocationId","locationNode","propName","componentName","isValidElementType","Error"],"mappings":"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","file":"travel-Trips-9affd4a4b25259a628a0.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    flexGrow: '1',\n    flexBasis: '0',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  name,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      name={name}\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n    >\n      {hasNullOption && (\n        <MenuItem key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nconst valuePropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\nOptionsSelect.propTypes = {\n  name: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  hasNullOption: PropTypes.bool,\n  inputId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionRender: PropTypes.func,\n  options: PropTypes.arrayOf(valuePropTypes),\n  value: valuePropTypes,\n};\n\nOptionsSelect.defaultProps = {\n  name: undefined,\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DefaultSuggestionResolver = ({\n  inputValue,\n  sourceProps: { suggestions = [] } = {},\n  children: renderProp,\n}) => {\n  const lowerCaseInputValue = inputValue.toLowerCase();\n  return (\n    <React.Fragment>\n      {renderProp(\n        suggestions.filter(({ label }) =>\n          label.toLowerCase().includes(lowerCaseInputValue),\n        ),\n      )}\n    </React.Fragment>\n  );\n};\n\nDefaultSuggestionResolver.propTypes = {\n  inputValue: PropTypes.string.isRequired,\n  sourceProps: PropTypes.shape({\n    // eslint-disable-next-line react/forbid-prop-types\n    suggestions: PropTypes.array,\n  }).isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default DefaultSuggestionResolver;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default ({ inputProps, classes, ref, ...other }) => (\n  <TextField\n    InputProps={{\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput,\n      },\n      ...inputProps,\n    }}\n    {...other}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst DefaultSuggestionRender = ({\n  itemProps,\n  isHighlighted,\n  isSelected,\n  children: { label, details },\n}) => (\n  <MenuItem\n    {...itemProps}\n    selected={isHighlighted}\n    component=\"div\"\n    style={{\n      fontWeight: isSelected ? 500 : 400,\n    }}\n  >\n    <ListItemText primary={label} secondary={details} />\n  </MenuItem>\n);\n\nDefaultSuggestionRender.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  itemProps: PropTypes.object,\n  isHighlighted: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n};\n\nDefaultSuggestionRender.defaultProps = {\n  itemProps: undefined,\n  isHighlighted: false,\n  isSelected: false,\n};\n\nexport default DefaultSuggestionRender;\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport DefaultSuggestionsResolver from './components/DefaultSuggestionsResolver';\nimport DefaultInputRender from './components/DefaultInputRender';\nimport DefaultSuggestionRender from './components/DefaultSuggestionRender';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\nexport const createSuggestComponent = ({\n  SuggestionsResolver = DefaultSuggestionsResolver,\n  SuggestionItemComponent = DefaultSuggestionRender,\n  InputComponent = DefaultInputRender,\n} = {}) => ({\n  classes: customClasses,\n  sourceProps,\n  inputProps,\n  inputFieldProps,\n  ...downshiftProps\n}) => {\n  const classes = { ...useStyles(), ...customClasses };\n  return (\n    <div className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <InputComponent\n              fullWidth={true}\n              classes={classes}\n              inputProps={getInputProps(inputProps)}\n              {...inputFieldProps}\n            />\n            <div {...getMenuProps()}>\n              {isOpen && (\n                <Paper className={classes.paper} square={true}>\n                  <SuggestionsResolver\n                    inputValue={inputValue}\n                    sourceProps={sourceProps}\n                  >\n                    {resolvedSuggestions =>\n                      resolvedSuggestions.map((suggestion, index) => (\n                        <SuggestionItemComponent\n                          key={suggestion.label}\n                          itemProps={getItemProps({\n                            item: suggestion,\n                          })}\n                          isHighlighted={highlightedIndex === index}\n                          isSelected={\n                            Boolean(selectedItem) &&\n                            selectedItem.label === suggestion.label\n                          }\n                        >\n                          {suggestion}\n                        </SuggestionItemComponent>\n                      ))\n                    }\n                  </SuggestionsResolver>\n                </Paper>\n              )}\n            </div>\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n};\n\nexport default createSuggestComponent();\n/*\nconst x = (\n  <FetchContacts\n    searchValue={inputValue}\n    omitContacts={selectedContacts}\n    onLoaded={({ contacts }) => {\n      clearItems();\n      if (contacts) {\n        setHighlightedIndex(contacts.length ? 0 : null);\n        setItemCount(contacts.length);\n      }\n    }}\n  >\n    {({ loading, contacts, error }) => (\n      <div\n        {...css({\n          position: 'absolute',\n          backgroundColor: 'white',\n          width: 300,\n          maxHeight: 280,\n          overflow: 'scroll',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n          border: '1px solid rgba(0,0,0,.2)',\n        })}\n      >\n        {loading ? (\n          <div {...css({ padding: 10 })}>loading...</div>\n        ) : error ? (\n          <div {...css({ padding: 10 })}>error...</div>\n        ) : contacts.length ? (\n          <ContactList\n            highlightedIndex={highlightedIndex}\n            getItemProps={getItemProps}\n            contacts={contacts}\n          />\n        ) : (\n          <div {...css({ padding: 10 })}>no results...</div>\n        )}\n      </div>\n    )}\n  </FetchContacts>\n);\n\nclass FetchContacts extends React.Component {\n  static initialState = { loading: false, error: null, contacts: [] };\n  requestId = 0;\n  state = FetchContacts.initialState;\n  mounted = false;\n  reset(overrides) {\n    this.setState({ ...FetchContacts.initialState, ...overrides });\n  }\n  fetch = debounce(\n    () => {\n      if (!this.mounted) {\n        return;\n      }\n      const { omitContacts, limit } = this.props;\n      this.requestId++;\n      fetchContacts(this.props.searchValue, {\n        omitContacts,\n        limit,\n        requestId: this.requestId,\n      }).then(\n        ({ response: { data: contacts, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ contacts });\n            this.setState({ loading: false, contacts });\n          }\n        },\n        ({ response: { error, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ error });\n            this.setState({ loading: false, error });\n          }\n        },\n      );\n    },\n    { wait: 300 },\n  );\n  prepareFetch() {\n    this.reset({ loading: true });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    this.prepareFetch();\n    this.fetch();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.searchValue !== this.props.searchValue ||\n      prevProps.omitContacts !== this.props.omitContacts\n    ) {\n      this.prepareFetch();\n      this.fetch();\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\n*/\n","import withProvision from 'core/connection/withProvision';\nimport { createSuggestComponent } from '../Suggest';\n\nexport const QUERY_FORMATS = {\n  FILTER: 'FILTER',\n  SEARCH: 'SEARCH',\n};\n\nconst resolveQueryByFormat = ({\n  queryFormat,\n  filterField,\n  inputValue: searchString,\n  numberOfItemsToRequest,\n}) => {\n  const navigation = { pageSize: numberOfItemsToRequest };\n  switch (queryFormat) {\n    case QUERY_FORMATS.SEARCH:\n      return { navigation, search: searchString };\n    case QUERY_FORMATS.FILTER:\n    default:\n      return {\n        navigation,\n        filter: {\n          [filterField]: { comparator: '~', value: `%${searchString}%` },\n        },\n      };\n  }\n};\n\nconst Resolver = ({\n  sourceProps: {\n    filterField,\n    resolveDetails,\n    convertEntityToSuggestion = entity => ({\n      ...entity,\n      label: entity[filterField],\n      details: resolveDetails ? resolveDetails(entity) : undefined,\n    }),\n  } = {},\n  entities: { data: entitiesList = [] } = {},\n  children: renderProp,\n}) => renderProp((entitiesList || []).map(convertEntityToSuggestion));\n\nexport default createSuggestComponent({\n  SuggestionsResolver: withProvision(\n    (\n      state,\n      {\n        inputValue,\n        sourceProps: {\n          modelName,\n          domain,\n          filterField,\n          numberOfItemsToRequest,\n          queryFormat,\n        },\n      },\n    ) => ({\n      domain,\n      identity: inputValue,\n      request: {\n        entities: {\n          modelName,\n          observe: inputValue,\n          query: resolveQueryByFormat({\n            queryFormat,\n            filterField,\n            inputValue,\n            numberOfItemsToRequest,\n          }),\n        },\n      },\n      debounceRequest: 500,\n    }),\n  )(Resolver),\n});\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.RELOCATION]: 'Переезд',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport compose from 'lodash/fp/compose';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest, {\n  QUERY_FORMATS,\n} from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { selectDict } from 'core/connection';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from '../localization';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n  originGeonameId: initialOriginGeonameId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n    originGeonameId: initialOriginGeonameId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n};\n\nconst TripEditCard = ({\n  classes,\n  locationsDict,\n  tripState: { tripType, tripName, originLocationId },\n  setTripState,\n}) => {\n  const setTripName = useCallback(\n    ({ target: { value: nextTripName } }) =>\n      setTripState({ tripName: nextTripName }),\n    [setTripState],\n  );\n  const setTripType = useCallback(\n    ({ target: { value: nextTripType } }) =>\n      setTripState({ tripType: nextTripType }),\n    [setTripState],\n  );\n  const setOriginGeoname = useCallback(\n    ({ geonameId: nextOriginGeonameId }) =>\n      setTripState({ originGeonameId: nextOriginGeonameId }),\n    [setTripState],\n  );\n\n  // origin locations is fetched, so name available through locations dict\n  const originLocation = locationsDict[originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <TextField\n          fullWidth={true}\n          label=\"Название поездки\"\n          value={tripName}\n          onChange={setTripName}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          classes={{ root: classes.suggest }}\n          textFieldProps={{\n            label: 'Старт из',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Пункт отправления...' }}\n          onChange={setOriginGeoname}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'geonames',\n            domain: 'tripEditCard.geoname',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип поездки\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={setTripType}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripType}\n        />\n      </div>\n    </>\n  );\n};\n\nTripEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nTripEditCard.defaultProps = {\n  className: undefined,\n};\n\nconst mapStateToProps = state => ({\n  locationsDict: selectDict(state, 'locations'),\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles),\n)(TripEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport TripEditCard, { useTripState } from './blocks/TripEditCard';\n\nconst TripEditDialog = ({ initialState, children, onSubmit: handleSubmit }) => {\n  const { tripState, setTripState } = useTripState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(tripState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      {React.cloneElement(children, { onClick: handleClickOpen })}\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Поездка</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование поездки</DialogContentText>\n            <TripEditCard tripState={tripState} setTripState={setTripState} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nTripEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nTripEditDialog.defaultProps = {};\n\nexport default TripEditDialog;\n","// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    if (element.dataset && element.dataset.sortHandler === 'enabled') {\n      return false;\n    }\n    element = element.parentNode;\n  }\n  return true;\n};\n","export const withItem = (array, item, index = array.length) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index),\n];\n\nexport const withoutItem = (array, index) => [\n  ...array.slice(0, index),\n  ...array.slice(index + 1),\n];\n\nexport const replaceItem = (array, index, item) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index + 1),\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst DialogWithForm = ({\n  children,\n  description,\n  onReject: handleReject,\n  onSubmit: handleSubmit,\n  title,\n  ...forwardedProps\n}) => (\n  <Formik {...forwardedProps} onSubmit={handleSubmit}>\n    {({ handleSubmit: handleSubmitInternal, ...formikProps }) => (\n      <Dialog\n        transitionDuration={500}\n        open={true}\n        onClose={handleReject}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{description}</DialogContentText>\n          {React.cloneElement(children, formikProps)}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleReject} color=\"secondary\">\n            Отмена\n          </Button>\n          <Button onClick={handleSubmitInternal} color=\"primary\">\n            Сохранить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )}\n  </Formik>\n);\n\nDialogWithForm.propTypes = {\n  children: PropTypes.node.isRequired,\n  description: PropTypes.node,\n  onReject: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.node,\n};\nDialogWithForm.defaultProps = {\n  description: undefined,\n  title: undefined,\n};\n\nexport default DialogWithForm;\n","import checkIsSameDay from 'date-fns/isSameDay';\nimport checkIsDatesEqual from 'date-fns/isEqual';\nimport addDays from 'date-fns/addDays';\nimport checkIsAfter from 'date-fns/isAfter';\n\nconst checkIsPeriodInverted = (beforeDateTime, afterDateTime) =>\n  checkIsAfter(beforeDateTime, afterDateTime);\n\nconst mixDateTime = ({ dateFrom, timeFrom }) =>\n  new Date(\n    dateFrom.getFullYear(),\n    dateFrom.getMonth(),\n    dateFrom.getDate(),\n    timeFrom.getHours(),\n    timeFrom.getMinutes(),\n    timeFrom.getSeconds(),\n  );\n\nexport default ({ values: { rideDeparture, rideArrival }, handleChange }) => {\n  const setRideDeparture = nextRideDeparture =>\n    handleChange('departureDateTime')(nextRideDeparture);\n  const setRideArrival = nextRideArrival =>\n    handleChange('arrivalDateTime')(nextRideArrival);\n\n  const isSameDay = checkIsSameDay(rideDeparture, rideArrival);\n\n  const setDatesAndTimes = (nextRideDeparture, nextRideArrival) => {\n    const isInverted = checkIsPeriodInverted(\n      nextRideDeparture,\n      nextRideArrival,\n    );\n    const actualNextRideDeparture = isInverted\n      ? nextRideArrival\n      : nextRideDeparture;\n\n    const actualNextRideArrival = isInverted\n      ? nextRideDeparture\n      : nextRideArrival;\n\n    if (!checkIsDatesEqual(rideDeparture, actualNextRideDeparture)) {\n      setRideDeparture(actualNextRideDeparture);\n    }\n    if (!checkIsDatesEqual(rideArrival, actualNextRideArrival)) {\n      setRideArrival(actualNextRideArrival);\n    }\n  };\n\n  const handleIsSameDayFlagChange = nextIsSameDay => {\n    if (Boolean(isSameDay) !== Boolean(nextIsSameDay)) {\n      setDatesAndTimes(\n        rideDeparture,\n        mixDateTime({\n          dateFrom: nextIsSameDay ? rideDeparture : addDays(rideDeparture, 1),\n          timeFrom: rideArrival,\n        }),\n      );\n    }\n  };\n\n  const handleRideDepartureChange = nextRideDeparture => {\n    const nextRideArrival = isSameDay\n      ? mixDateTime({\n          timeFrom: rideArrival,\n          dateFrom: nextRideDeparture,\n        })\n      : rideArrival;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  const handleRideArrivalChange = nextRideArrival => {\n    const nextRideDeparture = isSameDay\n      ? mixDateTime({\n          timeFrom: rideDeparture,\n          dateFrom: nextRideArrival,\n        })\n      : rideDeparture;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  return {\n    isSameDateField: {\n      value: isSameDay,\n      onChange: handleIsSameDayFlagChange,\n    },\n    rideDepartureField: {\n      value: rideDeparture,\n      onChange: handleRideDepartureChange,\n    },\n    rideArrivalField: {\n      value: rideArrival,\n      onChange: handleRideArrivalChange,\n    },\n  };\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n  DatePicker,\n  KeyboardDatePicker,\n  TimePicker,\n} from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from '../localization';\nimport tieDateTimeFields from '../tieDateTimeFields';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n  },\n  option: {\n    flexGrow: '1',\n  },\n};\n\nconst RideEditForm = ({\n  classes,\n  availableVisits,\n  originLocation,\n  values: {\n    departureVisitId,\n    arrivalVisitId,\n    vehicleType,\n    rideType,\n    rideComment,\n    rideClass,\n    rideOccupation,\n    departureDateTime,\n    arrivalDateTime,\n  },\n  handleChange,\n}) => {\n  const availableVisitsIds = availableVisits.map(({ visitId }) => visitId);\n  const visitsDict = Object.fromEntries(\n    availableVisits.map(visit => {\n      const { visitId } = visit;\n      return [visitId, visit];\n    }),\n  );\n\n  const {\n    rideArrivalField,\n    rideDepartureField,\n    isSameDateField,\n  } = tieDateTimeFields({\n    values: {\n      rideDeparture: departureDateTime,\n      rideArrival: arrivalDateTime,\n    },\n    handleChange,\n  });\n\n  const renderVisit = useCallback(\n    ({ option: visitId }) => {\n      if (visitId === ORIGIN_OF_TRIP) {\n        const { locationName } = originLocation;\n        return locationName;\n      }\n      const visit = visitsDict[visitId];\n      if (!visit) {\n        return 'Не указано';\n      }\n      const { locationName } = visit;\n      return locationName;\n    },\n    [visitsDict],\n  );\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"departureVisitId\"\n          caption=\"Отправление из\"\n          inputId=\"RideEditCard-departureVisitId\"\n          optionRender={renderVisit}\n          hasNullOption={false}\n          options={[ORIGIN_OF_TRIP, ...availableVisitsIds]}\n          value={departureVisitId}\n          onChange={handleChange}\n        />\n        <OptionsSelect\n          name=\"arrivalVisitId\"\n          caption=\"Прибытие в\"\n          inputId=\"RideEditCard-arrivalVisitId\"\n          hasNullOption={false}\n          optionRender={renderVisit}\n          options={[...availableVisitsIds, ORIGIN_OF_TRIP]}\n          onChange={handleChange}\n          value={arrivalVisitId}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"vehicleType\"\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          onChange={handleChange}\n          value={vehicleType}\n        />\n        <OptionsSelect\n          name=\"rideType\"\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          onChange={handleChange}\n          value={rideType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"rideClass\"\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          onChange={handleChange}\n          value={rideClass}\n        />\n        <OptionsSelect\n          name=\"rideOccupation\"\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          onChange={handleChange}\n          value={rideOccupation}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <KeyboardDatePicker\n          name=\"departureDateTime\"\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n          format=\"dd/MM/yyyy\"\n        />\n        {isSameDateField.value ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSameDateField.value}\n                onChange={event =>\n                  isSameDateField.onChange(event.target.checked)\n                }\n              />\n            }\n            label=\"Прибытие в тот же день\"\n          />\n        ) : (\n          <KeyboardDatePicker\n            name=\"arrivalDateTime\"\n            autoOk={true}\n            className={classes.option}\n            label=\"Дата прибытия\"\n            value={rideArrivalField.value}\n            onChange={rideArrivalField.onChange}\n            format=\"dd/MM/yyyy\"\n          />\n        )}\n      </div>\n      <div className={classes.optionGroup}>\n        <TimePicker\n          name=\"departureDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n        />\n        <TimePicker\n          name=\"arrivalDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          value={rideArrivalField.value}\n          onChange={rideArrivalField.onChange}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          name=\"rideComment\"\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={handleChange}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </div>\n    </>\n  );\n};\n\nRideEditForm.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nRideEditForm.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(RideEditForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogWithForm from 'modules/components/muiExtended/DialogWithForm';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport RideEditForm from './blocks/RideEditForm';\n\nconst RideEditDialog = ({\n  availableVisits,\n  initialState,\n  children,\n  className,\n  onSubmit: handleSubmit,\n  originLocation,\n}) => {\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = values => {\n    handleSubmit(values);\n    handleClose(false);\n  };\n\n  return (\n    <div className={className}>\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        {children}\n      </IconButton>\n      {isOpen && (\n        <DialogWithForm\n          initialValues={initialState}\n          enableReinitialize={true}\n          onSubmit={handleSubmitInternal}\n          onReject={handleClose}\n          title=\"Транспорт\"\n          description=\"Как вы добрались в место назначения и как уехали из него?\"\n        >\n          <RideEditForm\n            availableVisits={availableVisits}\n            originLocation={originLocation}\n          />\n        </DialogWithForm>\n      )}\n    </div>\n  );\n};\n\nRideEditDialog.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n};\nRideEditDialog.defaultProps = {\n  className: undefined,\n  availableVisits: [],\n};\n\nexport default RideEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { VEHICLE_TYPES, RIDE_TYPES } from 'travel/models/rides/consts';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport initializeRide from 'travel/models/rides/initialize';\nimport RideEditDialog from 'travel/components/models/rides/RideEditDialog';\n\nconst resolveRideIconComponent = vehicleType => {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n    default:\n      return CustomTransportIcon;\n  }\n};\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  editDialogTrigger: {\n    display: 'inline-block',\n  },\n};\n\nconst Ride = ({\n  availableVisits,\n  originLocation,\n  classes,\n  className,\n  defaultArrivalVisitId,\n  defaultDepartureVisitId,\n  isEditable,\n  onRideUpdate: handleRideUpdate,\n  ride,\n  ride: { rideId, vehicleType, rideType, arrivalDateTime, departureDateTime },\n  showDetails,\n}) => {\n  const rideInitialState = rideId\n    ? ride\n    : initializeRide({\n        defaultDepartureVisitId,\n        defaultArrivalVisitId,\n      });\n\n  const Icon = rideId ? resolveRideIconComponent(vehicleType) : UnknownRideIcon;\n\n  const iconNode = <Icon className={classes.icon} />;\n  const rideNode = isEditable ? (\n    <RideEditDialog\n      className={classes.editDialogTrigger}\n      initialState={rideInitialState}\n      availableVisits={availableVisits}\n      onSubmit={updatedRide => handleRideUpdate({ ...ride, ...updatedRide })}\n      originLocation={originLocation}\n    >\n      {iconNode}\n    </RideEditDialog>\n  ) : (\n    iconNode\n  );\n\n  return (\n    <div className={cls(className, classes.container)}>\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.icon} />\n      )}\n      {rideNode}\n      {Boolean(rideId && showDetails) && (\n        <span className={classes.details}>\n          {rideDateTimePeriodToString({ departureDateTime, arrivalDateTime })}\n        </span>\n      )}\n    </div>\n  );\n};\n\nRide.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  className: PropTypes.string,\n  defaultArrivalVisitId: PropTypes.number,\n  defaultDepartureVisitId: PropTypes.number,\n  isEditable: PropTypes.bool,\n  onRideUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  ride: PropTypes.shape(ridePropTypes),\n  showDetails: PropTypes.bool,\n};\n\nRide.defaultProps = {\n  availableVisits: [],\n  className: undefined,\n  defaultArrivalVisitId: undefined,\n  defaultDepartureVisitId: undefined,\n  isEditable: false,\n  ride: {},\n  showDetails: false,\n};\n\nexport default withStyles(styles)(Ride);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst styles = {\n  dragHandler: {\n    cursor: 'grab',\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n  },\n};\n\nconst DragHandler = ({ className, classes }) => (\n  <IconDragHandle\n    className={cls(className, classes.dragHandler)}\n    data-sort-handler=\"enabled\"\n  />\n);\n\nDragHandler.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nDragHandler.defaultProps = { className: undefined };\n\nexport default withStyles(styles)(DragHandler);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Path from 'modules/utilities/routing/Path';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Visit from 'travel/components/models/visits/Visit';\nimport Ride from './Ride';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  alwaysVisible: {},\n  container: {\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n};\n\nconst VisitWithRides = ({\n  visit,\n  visit: { visitId, arrivalRideId, departureRideId } = {},\n  ridesDict,\n  classes,\n  prevVisitId,\n  nextVisitId,\n  tripVisitsList,\n  isEditable,\n  isSortable,\n  isSorting,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  onRideUpdate: handleRideUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  originLocation,\n  locationsPath,\n}) => {\n  const shouldWarnForArrivalRide = isEditable && !isArrivalRideMatch;\n  const shouldWarnForDepartureRide = isEditable && !isDepartureRideMatch;\n\n  return (\n    <div className={classes.container}>\n      <Ride\n        availableVisits={tripVisitsList}\n        defaultDepartureVisitId={prevVisitId}\n        defaultArrivalVisitId={visitId}\n        visitId={visitId}\n        isEditable={isEditable}\n        className={cls(classes.ride, {\n          [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n          [classes.warning]: shouldWarnForArrivalRide,\n        })}\n        ride={ridesDict[arrivalRideId]}\n        showDetails={isSorting || shouldWarnForArrivalRide}\n        onRideUpdate={handleRideUpdate}\n        originLocation={originLocation}\n      />\n      <Visit\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        isEditable={isEditable}\n        onVisitUpdate={handleVisitUpdate}\n        visit={visit}\n        locationsPath={locationsPath}\n      />\n      {(!isDepartureRideMatch || isSorting) && (\n        <Ride\n          className={cls(classes.ride, {\n            [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n            [classes.warning]: shouldWarnForDepartureRide,\n          })}\n          ride={ridesDict[departureRideId]}\n          availableVisits={tripVisitsList}\n          defaultDepartureVisitId={visitId}\n          defaultArrivalVisitId={nextVisitId}\n          isEditable={isEditable && !isDepartureRideMatch}\n          showDetails={isSorting || shouldWarnForDepartureRide}\n          onRideUpdate={handleRideUpdate}\n          originLocation={originLocation}\n        />\n      )}\n      {isSortable &&\n        !isSorting && <DragHandler className={classes.visibleOnlyOnHover} />}\n    </div>\n  );\n};\n\nVisitWithRides.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isArrivalRideMatch: PropTypes.bool,\n  isDepartureRideMatch: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  isSortable: PropTypes.bool,\n  isSorting: PropTypes.bool,\n  nextVisitId: PropTypes.number,\n  onRideUpdate: PropTypes.func.isRequired,\n  onVisitUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  prevVisitId: PropTypes.number,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  visit: PropTypes.shape(visitPropTypes).isRequired,\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n};\n\nVisitWithRides.defaultProps = {\n  isArrivalRideMatch: true,\n  isDepartureRideMatch: true,\n  isEditable: false,\n  isSortable: false,\n  isSorting: false,\n  nextVisitId: null,\n  prevVisitId: null,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(VisitWithRides);\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest, {\n  QUERY_FORMATS,\n} from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { VISIT_TYPE_NAMES } from '../localization';\n\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nexport const useVisitState = ({\n  visitType: initialVisitType,\n  visitComment: initialVisitComment,\n  locationId: initialLocationId,\n  locationName: initialLocationName,\n  geonameId: initialGeonameId,\n}) => {\n  const [visitState, setVisitState] = useState({\n    visitComment: initialVisitComment,\n    visitType: initialVisitType,\n    locationId: initialLocationId,\n    locationName: initialLocationName,\n    geonameId: initialGeonameId,\n  });\n\n  return {\n    visitState,\n    setVisitState: visitStateUpdate =>\n      setVisitState({ ...visitState, ...visitStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n};\n\nconst VisitEditCard = ({\n  classes,\n  visitState: { visitType, visitComment, locationName },\n  setVisitState,\n}) => {\n  const setVisitType = useCallback(\n    ({ target: { value: nextVisitType } }) =>\n      setVisitState({ visitType: nextVisitType }),\n    [setVisitState],\n  );\n  const setGeoname = useCallback(\n    ({ geonameId: nextGeonameId }) =>\n      setVisitState({ geonameId: nextGeonameId }),\n    [setVisitState],\n  );\n  const setVisitComment = useCallback(\n    ({ target: { value: nextVisitComment } }) =>\n      setVisitState({ visitComment: nextVisitComment }),\n    [setVisitState],\n  );\n\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          classes={{ root: classes.suggest }}\n          textFieldProps={{\n            label: 'Место посещения',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Населенный пункт...' }}\n          onChange={setGeoname}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'geonames',\n            domain: 'visitEditCard.geoname',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          onChange={setVisitType}\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n          value={visitType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          label=\"Комментарий\"\n          fullWidth={true}\n          value={visitComment}\n          onChange={setVisitComment}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </div>\n    </>\n  );\n};\n\nVisitEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nVisitEditCard.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(VisitEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport VisitEditCard, { useVisitState } from './blocks/VisitEditCard';\n\nconst VisitEditDialog = ({\n  initialState,\n  children,\n  onSubmit: handleSubmit,\n}) => {\n  const { visitState, setVisitState } = useVisitState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(visitState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      {React.cloneElement(children, { onClick: handleClickOpen })}\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Посещение</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование посещения</DialogContentText>\n            <VisitEditCard\n              visitState={visitState}\n              setVisitState={setVisitState}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nVisitEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nVisitEditDialog.defaultProps = {};\n\nexport default VisitEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport initializeVisit from 'travel/models/visits/initialize';\nimport VisitEditDialog from 'travel/components/models/visits/VisitEditDialog';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  draggableContainer: {\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n};\n\nconst VisitCreator = ({\n  classes,\n  isSorting,\n  onVisitUpdate: handleVisitUpdate,\n}) => (\n  <div className={cls({ [classes.draggableContainer]: !isSorting })}>\n    <VisitEditDialog\n      initialState={initializeVisit()}\n      onSubmit={handleVisitUpdate}\n    >\n      <Button\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <span>Добавить посещение</span>\n      </Button>\n    </VisitEditDialog>\n    <DragHandler className={classes.visibleOnlyOnHover} />\n  </div>\n);\n\nVisitCreator.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isSorting: PropTypes.bool,\n  onVisitUpdate: PropTypes.func.isRequired,\n};\n\nVisitCreator.defaultProps = {\n  isSorting: false,\n};\n\nexport default withStyles(styles)(VisitCreator);\n","export default () => ({\n  visitType: null,\n  visitComment: '',\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconHome from '@material-ui/icons/Home';\nimport EditIcon from '@material-ui/icons/Edit';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\nimport { withItem } from 'modules/utilities/types/array';\nimport Path from 'modules/utilities/routing/Path';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Location from 'travel/components/models/locations/Location';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport VisitWithRides from './VisitWithRides';\nimport Ride from './Ride';\nimport VisitCreator from './VisitCreator';\n\nconst SortableTrip = SortableContainer(({ children }) => <div>{children}</div>);\nconst SortableVisitWithRides = SortableElement(\n  ({ replaceWithNode, onVisitUpdate: handleVisitUpdate, ...props }) =>\n    replaceWithNode || (\n      <VisitWithRides onVisitUpdate={handleVisitUpdate} {...props} />\n    ),\n);\n\nconst styles = {\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n};\n\nconst resolveVisitsWindow = (tripVisitsList, indexOfVisit, overstepIndex) => {\n  const prevVisitIndex =\n    indexOfVisit - 1 - (indexOfVisit > overstepIndex ? 1 : 0);\n  const nextVisitIndex =\n    indexOfVisit + 1 - (indexOfVisit + 1 > overstepIndex ? 1 : 0);\n  const prevVisit = prevVisitIndex >= 0 ? tripVisitsList[prevVisitIndex] : null;\n  const nextVisit =\n    nextVisitIndex < tripVisitsList.length\n      ? tripVisitsList[nextVisitIndex]\n      : null;\n  return [prevVisit, nextVisit];\n};\n\nconst Trip = ({\n  classes,\n  countriesDict,\n  locationsDict,\n  onRideUpdate: handleRideUpdate,\n  onVisitsOrderUpdate: handleVisitsOrderUpdate,\n  ridesDict,\n  trip,\n  trip: { tripId, originLocationId, tripName, tripType },\n  tripVisitsList,\n  onTripUpdate: handleTripUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  locationsPath,\n}) => {\n  const [isSorting, setIsSorting] = useState(false);\n  const [addVisitControlIndex, setAddVisitControlIndex] = useState(\n    tripVisitsList.length,\n  );\n  const handleSortEnd = (data, event) => {\n    setIsSorting(false);\n    const { oldIndex, newIndex } = data;\n    if (oldIndex === addVisitControlIndex) {\n      setAddVisitControlIndex(newIndex);\n    } else {\n      handleVisitsOrderUpdate(event, {\n        oldIndex: oldIndex > addVisitControlIndex ? oldIndex - 1 : oldIndex,\n        newIndex: newIndex > addVisitControlIndex ? newIndex - 1 : newIndex,\n        collection: tripVisitsList,\n      });\n    }\n  };\n\n  const actualTripVisitsList = withItem(\n    tripVisitsList,\n    { isItVisitCreatorControl: true },\n    addVisitControlIndex,\n  );\n\n  const visitsNodes = actualTripVisitsList.map((visit, indexOfVisit) => {\n    const { isItVisitCreatorControl, visitId } = visit;\n    if (isItVisitCreatorControl) {\n      return (\n        <SortableVisitWithRides\n          key=\"visitCreator\"\n          index={indexOfVisit}\n          replaceWithNode={\n            <VisitCreator\n              isSorting={isSorting}\n              onVisitUpdate={newVisit =>\n                handleVisitUpdate(newVisit, {\n                  indexInCollection: addVisitControlIndex,\n                  collection: tripVisitsList,\n                  tripId,\n                })\n              }\n            />\n          }\n        />\n      );\n    }\n    const [prevVisit, nextVisit] = resolveVisitsWindow(\n      tripVisitsList,\n      indexOfVisit,\n      addVisitControlIndex,\n    );\n    const { visitId: prevVisitId } = prevVisit || {};\n    const { visitId: nextVisitId } = nextVisit || {};\n    return (\n      <SortableVisitWithRides\n        index={indexOfVisit /* for SortableVisitWithRides */}\n        isArrivalRideMatch={checkIsVisitsConnectedByRide(prevVisit, visit)}\n        isDepartureRideMatch={checkIsVisitsConnectedByRide(visit, nextVisit)}\n        isEditable={true}\n        isSortable={true}\n        isSorting={isSorting}\n        key={visitId}\n        nextVisitId={nextVisitId}\n        onRideUpdate={handleRideUpdate}\n        onVisitUpdate={handleVisitUpdate}\n        originLocation={locationsDict[originLocationId]}\n        prevVisitId={prevVisitId}\n        ridesDict={ridesDict}\n        tripVisitsList={tripVisitsList}\n        visit={visit}\n        locationsPath={locationsPath}\n      />\n    );\n  });\n\n  const wrappedVisitsNodes = (\n    <SortableTrip\n      onSortEnd={handleSortEnd}\n      shouldCancelStart={checkIsNodeNotSortable}\n      updateBeforeSortStart={() => setIsSorting(true)}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n    >\n      {visitsNodes}\n    </SortableTrip>\n  );\n\n  const originLocationNode = (\n    <Location\n      location={locationsDict[originLocationId]}\n      Icon={IconHome}\n      locationsPath={locationsPath}\n    />\n  );\n\n  const tripEditControlsNode = (\n    <TripEditDialog\n      initialState={trip}\n      onSubmit={updatedTrip => handleTripUpdate({ ...trip, ...updatedTrip })}\n    >\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <EditIcon className={classes.visibleOnlyOnHover} />\n      </IconButton>\n    </TripEditDialog>\n  );\n\n  const lastVisit = tripVisitsList[tripVisitsList.length - 1];\n  const lastButOneVisit = tripVisitsList[tripVisitsList.length - 2];\n  const { departureRideId: rideToOriginId, visitId: recentVisitId } =\n    lastVisit || {};\n\n  const isRelocation = tripType === TRIP_TYPES.RELOCATION;\n  const rideToOriginNode = isRelocation ? null : (\n    <Ride\n      availableVisits={tripVisitsList}\n      defaultDepartureVisitId={recentVisitId}\n      isEditable={true}\n      onRideUpdate={handleRideUpdate}\n      originLocation={locationsDict[originLocationId]}\n      ride={ridesDict[rideToOriginId]}\n      showDetails={\n        isSorting || checkIsVisitsConnectedByRide(lastButOneVisit, lastVisit)\n      }\n    />\n  );\n\n  return (\n    <>\n      <h1 className={classes.container}>\n        {resolveTripCaption(\n          tripVisitsList,\n          countriesDict,\n          locationsDict[originLocationId] &&\n            locationsDict[originLocationId].countryId,\n          tripName,\n        )}\n        {tripEditControlsNode}\n      </h1>\n      {originLocationNode}\n      {wrappedVisitsNodes}\n      {!isRelocation && (\n        <>\n          {rideToOriginNode}\n          {originLocationNode}\n        </>\n      )}\n    </>\n  );\n};\nTrip.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  tripIndex: PropTypes.number.isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  onRideUpdate: PropTypes.func.isRequired,\n  onTripUpdate: PropTypes.func.isRequired,\n  onVisitsOrderUpdate: PropTypes.func.isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  trip: PropTypes.shape(tripPropTypes).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  tripStoryPath: PropTypes.instanceOf(Path).isRequired,\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n};\n\nTrip.defaultProps = {\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(Trip);\n","import createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nexport const submitOrderInTrip = ({ oldIndex, newIndex, collection }) => ({\n  domain: 'tripsPage.visits.sort',\n  modelName: 'visits',\n  query: {\n    id: collection[oldIndex].visitId,\n    body: {\n      orderInTrip: calcOrder({ index: newIndex, collection }),\n    },\n  },\n});\n\nexport const submitRide = ({ ride, ride: { rideId } }) => ({\n  domain: 'tripsPage.visits.rides',\n  modelName: 'rides',\n  query: {\n    id: rideId,\n    body: ride,\n  },\n});\n\nexport const submitTrip = ({ trip, trip: { tripId } }) => ({\n  domain: 'tripsPage.visits.trips',\n  modelName: 'trips',\n  query: {\n    id: tripId,\n    body: trip,\n  },\n});\n\nexport const submitVisit = ({\n  visit,\n  visit: { visitId },\n  tripId,\n  indexInCollection,\n  collection,\n}) => ({\n  domain: 'tripsPage.visits.visit',\n  modelName: 'visits',\n  query: {\n    id: visitId,\n    body: {\n      ...visit,\n      tripId,\n      orderInTrip:\n        indexInCollection || indexInCollection === 0\n          ? calcOrder({ index: indexInCollection, collection })\n          : undefined,\n    },\n  },\n});\n","const INITIAL_ORDER = 100;\nexport default ({ orderResolver: resolveOrder }) => ({ index, collection }) => {\n  if (!collection.length) {\n    return INITIAL_ORDER;\n  }\n  if (index <= 0) {\n    return resolveOrder(collection[0]) - 1;\n  }\n  if (index >= collection.length - 1) {\n    return resolveOrder(collection[collection.length - 1]) + 1;\n  }\n  const prevOrder = resolveOrder(collection[index - 1]);\n  const nextOrder = resolveOrder(collection[index]);\n  const randomness = ((Math.random() - 0.5) * (nextOrder - prevOrder)) / 2;\n  return (prevOrder + nextOrder) / 2 + randomness;\n};\n","import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'lodash/fp/compose';\nimport Button from '@material-ui/core/Button';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { usePaths } from 'modules/packages';\nimport { selectDict, selectProvisionStatus } from 'core/connection';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport withTripsData, {\n  DATA_CHUNKS,\n} from 'travel/components/common/withTripsData/withTripsData';\nimport WelcomeScreen from 'travel/components/common/WelcomeScreen';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport initializeTrip from 'travel/models/trips/initialize';\nimport { groupAndSortVisitsByTrips } from 'travel/models/trips/utils';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Trip from './blocks/Trip';\nimport {\n  submitRide,\n  submitOrderInTrip,\n  submitTrip,\n  submitVisit,\n} from './actionCreators';\n\nconst memoizedGroupAndSortVisitsByTrips = memoizeByLastArgs(\n  groupAndSortVisitsByTrips,\n);\n\nfunction TripEditPage({\n  match: {\n    params: { userAlias: visitedUserAlias, strTripId },\n  },\n  isTripsComplete,\n  userTrips: { data: tripsList = [] } = {},\n  userVisits: { data: visitsList = [] } = {},\n  countriesDict,\n  locationsDict,\n  ridesDict,\n  request,\n  invalidateRequest,\n}) {\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const {\n    travel: { tripStory: tripStoryPath, locations: locationsPath },\n  } = usePaths();\n\n  const handleVisitsOrderUpdate = useCallback(\n    (event, { oldIndex, newIndex, collection }) => {\n      if (oldIndex !== newIndex) {\n        request(submitOrderInTrip({ oldIndex, newIndex, collection }));\n      }\n    },\n    [request],\n  );\n\n  const handleRideUpdate = useCallback(\n    ride =>\n      request(\n        submitRide({\n          ride,\n        }),\n      ),\n    [request],\n  );\n\n  const handleTripUpdate = useCallback(\n    trip =>\n      request(\n        submitTrip({\n          trip,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.trips' })),\n    [request],\n  );\n\n  const handleVisitUpdate = useCallback(\n    (visit, { indexInCollection, collection, tripId } = {}) =>\n      request(\n        submitVisit({\n          visit,\n          tripId,\n          indexInCollection,\n          collection,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.visits' })),\n    [request],\n  );\n\n  const specifiedTripId = parseInt(strTripId, 10);\n  const tripToEdit =\n    specifiedTripId &&\n    tripsList.find(({ tripId }) => tripId === specifiedTripId);\n\n  const isEditable =\n    isAuthenticated && authenticatedUserAlias === visitedUserAlias;\n\n  if (!isTripsComplete || !tripToEdit || !isEditable) {\n    return null;\n  }\n\n  const visitsGroupedByTrips = memoizedGroupAndSortVisitsByTrips(visitsList);\n  const { tripId } = tripToEdit;\n  return (\n    <Trip\n      locationsDict={locationsDict}\n      countriesDict={countriesDict}\n      onRideUpdate={handleRideUpdate}\n      onTripUpdate={handleTripUpdate}\n      onVisitUpdate={handleVisitUpdate}\n      onVisitsOrderUpdate={handleVisitsOrderUpdate}\n      ridesDict={ridesDict}\n      trip={tripToEdit}\n      tripVisitsList={visitsGroupedByTrips[tripId]}\n      tripStoryPath={tripStoryPath}\n      locationsPath={locationsPath}\n    />\n  );\n}\n\nTripEditPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  request: PropTypes.func.isRequired,\n  isTripsComplete: PropTypes.bool.isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationsPropTypes))\n    .isRequired,\n};\n\nconst mapStateToProps = state => ({\n  countriesDict: selectDict(state, 'countries'),\n  locationsDict: selectDict(state, 'locations'),\n  ridesDict: selectDict(state, 'rides'),\n  isTripsComplete: selectProvisionStatus(state, 'tripsPage.userTrips')\n    .isComplete,\n});\n\nexport default compose(\n  withTripsData({\n    domain: 'tripsPage',\n    mapStateToProps,\n    requirementsConfig: {\n      [DATA_CHUNKS.COMMON.COUNTRIES]: true,\n      [DATA_CHUNKS.USER.TRIPS]: true,\n      [DATA_CHUNKS.USER.LOCATIONS]: true,\n      [DATA_CHUNKS.USER.VISITS]: true,\n      [DATA_CHUNKS.USER.RIDES]: true,\n    },\n  }),\n)(TripEditPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { VEHICLE_TYPES, RIDE_TYPES } from 'travel/models/rides/consts';\nimport ridePropTypes from 'travel/models/rides/propTypes';\n\nconst resolveRideIconComponent = vehicleType => {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n    default:\n      return CustomTransportIcon;\n  }\n};\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  editDialogTrigger: {\n    display: 'inline-block',\n  },\n};\n\nconst Ride = ({\n  classes,\n  className,\n  ride: { rideId, vehicleType, rideType, arrivalDateTime, departureDateTime },\n  showDetails,\n}) => {\n  const Icon = rideId ? resolveRideIconComponent(vehicleType) : UnknownRideIcon;\n\n  return (\n    <div className={cls(className, classes.container)}>\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.icon} />\n      )}\n      <Icon className={classes.icon} />\n      {Boolean(rideId && showDetails) && (\n        <span className={classes.details}>\n          {rideDateTimePeriodToString({\n            departureDateTime,\n            arrivalDateTime,\n          })}\n        </span>\n      )}\n    </div>\n  );\n};\n\nRide.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  className: PropTypes.string,\n  ride: PropTypes.shape(ridePropTypes),\n  showDetails: PropTypes.bool,\n};\n\nRide.defaultProps = {\n  className: undefined,\n  ride: {},\n  showDetails: false,\n};\n\nexport default withStyles(styles)(Ride);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Path from 'modules/utilities/routing/Path';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Visit from 'travel/components/models/visits/Visit';\nimport Ride from './Ride';\n\nconst styles = {\n  alwaysVisible: {},\n  container: {\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n};\n\nconst VisitWithRides = ({\n  visit,\n  visit: { visitId, arrivalRideId, departureRideId } = {},\n  ridesDict,\n  classes,\n  isEditable,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  locationsPath,\n}) => {\n  const shouldWarnForArrivalRide = isEditable && !isArrivalRideMatch;\n  const shouldWarnForDepartureRide = isEditable && !isDepartureRideMatch;\n\n  return (\n    <div className={classes.container}>\n      <Ride\n        visitId={visitId}\n        className={cls(classes.ride, {\n          [classes.alwaysVisible]: !isDepartureRideMatch,\n          [classes.warning]: shouldWarnForArrivalRide,\n        })}\n        ride={ridesDict[arrivalRideId]}\n        showDetails={shouldWarnForArrivalRide}\n      />\n      <Visit\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        visit={visit}\n        locationsPath={locationsPath}\n      />\n      {!isDepartureRideMatch && (\n        <Ride\n          className={cls(classes.ride, {\n            [classes.alwaysVisible]: !isDepartureRideMatch,\n            [classes.warning]: shouldWarnForDepartureRide,\n          })}\n          ride={ridesDict[departureRideId]}\n          showDetails={shouldWarnForDepartureRide}\n        />\n      )}\n    </div>\n  );\n};\n\nVisitWithRides.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isArrivalRideMatch: PropTypes.bool,\n  isDepartureRideMatch: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  visit: PropTypes.shape(visitPropTypes).isRequired,\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n};\n\nVisitWithRides.defaultProps = {\n  isArrivalRideMatch: true,\n  isDepartureRideMatch: true,\n  isEditable: false,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(VisitWithRides);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconHome from '@material-ui/icons/Home';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Path from 'modules/utilities/routing/Path';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Location from 'travel/components/models/locations/Location';\nimport { checkTripHasStory } from '../utils';\nimport VisitWithRides from './VisitWithRides';\nimport Ride from './Ride';\n\nconst styles = {\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n};\n\nconst resolveVisitsWindow = (tripVisitsList, indexOfVisit, overstepIndex) => {\n  const prevVisitIndex =\n    indexOfVisit - 1 - (indexOfVisit > overstepIndex ? 1 : 0);\n  const nextVisitIndex =\n    indexOfVisit + 1 - (indexOfVisit + 1 > overstepIndex ? 1 : 0);\n  const prevVisit = prevVisitIndex >= 0 ? tripVisitsList[prevVisitIndex] : null;\n  const nextVisit =\n    nextVisitIndex < tripVisitsList.length\n      ? tripVisitsList[nextVisitIndex]\n      : null;\n  return [prevVisit, nextVisit];\n};\n\nconst Trip = ({\n  classes,\n  countriesDict,\n  isEditable,\n  locationsDict,\n  ridesDict,\n  trip: { originLocationId, tripName, tripType },\n  tripVisitsList,\n  tripEditUrl,\n  tripStoryUrl,\n  locationsPath,\n}) => {\n  const addVisitControlIndex = tripVisitsList.length;\n\n  const visitsNodes = tripVisitsList.map((visit, indexOfVisit) => {\n    const { visitId } = visit;\n    const [prevVisit, nextVisit] = resolveVisitsWindow(\n      tripVisitsList,\n      indexOfVisit,\n      addVisitControlIndex,\n    );\n\n    return (\n      <VisitWithRides\n        isArrivalRideMatch={checkIsVisitsConnectedByRide(prevVisit, visit)}\n        isDepartureRideMatch={checkIsVisitsConnectedByRide(visit, nextVisit)}\n        key={visitId}\n        ridesDict={ridesDict}\n        isEditable={isEditable}\n        visit={visit}\n        locationsPath={locationsPath}\n      />\n    );\n  });\n\n  const originLocationNode = (\n    <Location\n      location={locationsDict[originLocationId]}\n      Icon={IconHome}\n      locationsPath={locationsPath}\n    />\n  );\n\n  const tripEditControlsNode = (\n    <IconButton\n      data-sort-handler=\"disabled\"\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component={Link}\n      to={tripEditUrl}\n    >\n      <EditIcon className={classes.visibleOnlyOnHover} />\n    </IconButton>\n  );\n\n  const lastVisit = tripVisitsList[tripVisitsList.length - 1];\n  const { departureRideId: rideToOriginId } = lastVisit || {};\n\n  const isRelocation = tripType === TRIP_TYPES.RELOCATION;\n  const rideToOriginNode = isRelocation ? null : (\n    <Ride ride={ridesDict[rideToOriginId]} showDetails={false} />\n  );\n\n  const hasStory = checkTripHasStory(tripVisitsList, ridesDict);\n  return (\n    <>\n      <h1 className={classes.container}>\n        {resolveTripCaption(\n          tripVisitsList,\n          countriesDict,\n          locationsDict[originLocationId] &&\n            locationsDict[originLocationId].countryId,\n          tripName,\n        )}\n        {isEditable && tripEditControlsNode}\n      </h1>\n      {originLocationNode}\n      {<div>{visitsNodes}</div>}\n      {!isRelocation && (\n        <>\n          {rideToOriginNode}\n          {originLocationNode}\n        </>\n      )}\n      {hasStory && (\n        <div>\n          <Link to={tripStoryUrl}>Заметки</Link>\n        </div>\n      )}\n    </>\n  );\n};\nTrip.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isEditable: PropTypes.bool,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  trip: PropTypes.shape(tripPropTypes).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n  tripEditUrl: PropTypes.string.isRequired,\n  tripStoryUrl: PropTypes.string.isRequired,\n};\n\nTrip.defaultProps = {\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(Trip);\n","/* eslint-disable import/prefer-default-export */\n\nexport function checkTripHasStory(tripVisitsList, ridesDict) {\n  tripVisitsList.some(({ visitComment, arrivalRideId, departureRideId }) => {\n    if (visitComment) {\n      return true;\n    }\n    const { rideComment: arrivalRideComment } = ridesDict[arrivalRideId] || {};\n    if (arrivalRideComment) {\n      return true;\n    }\n    const { rideComment: departureRideComment } =\n      ridesDict[departureRideId] || {};\n    return Boolean(departureRideComment);\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePaths } from 'modules/packages';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { useTripsStats } from 'travel/dataSource/useTrips';\nimport Trip from './blocks/Trip';\n\nfunction TripsPage({\n  match: {\n    params: { userAlias: visitedUserAlias, strTripId },\n  },\n}) {\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const {\n    travel: {\n      tripStory: tripStoryPath,\n      locations: locationsPath,\n      tripEdit: tripEditPath,\n    },\n  } = usePaths();\n\n  const {\n    isError,\n    isPending,\n    tripsIds,\n    tripsDict,\n    countriesDict,\n    locationsDict,\n    visitsDict,\n    ridesDict,\n  } = useTripsStats({ userAlias: visitedUserAlias });\n\n  const specifiedTripId = parseInt(strTripId, 10);\n  const actualTripsIds = specifiedTripId\n    ? tripsIds.filter(tripId => tripId === specifiedTripId)\n    : tripsIds;\n  const tripsList = actualTripsIds\n    .map(tripId => tripsDict[tripId])\n    .filter(Boolean);\n\n  const isEditable =\n    isAuthenticated && authenticatedUserAlias === visitedUserAlias;\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  return (\n    <>\n      {tripsList.map(trip => {\n        const { tripId } = trip;\n        return (\n          <div key={tripId}>\n            <Trip\n              locationsDict={locationsDict}\n              countriesDict={countriesDict}\n              ridesDict={ridesDict}\n              trip={trip}\n              tripVisitsList={trip.visits.map(visitId => visitsDict[visitId])}\n              isEditable={isEditable}\n              tripStoryUrl={tripStoryPath.toUrl({\n                strTripId: String(tripId),\n                userAlias: visitedUserAlias,\n              })}\n              locationsPath={locationsPath}\n              tripEditUrl={tripEditPath.toUrl({\n                strTripId: String(tripId),\n                userAlias: visitedUserAlias,\n              })}\n            />\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nTripsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default TripsPage;\n","import { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias }) {\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: { userAlias, navigation: { isDisabled: true } },\n  });\n}\n\nexport function useTripsStats({ userAlias }) {\n  const tripsProvision = useTrips({ userAlias });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n  );\n\n  const ridesIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n  );\n\n  const countriesIds = Array.from(\n    new Set(visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || [])),\n  );\n\n  const locationsIds = Array.from(\n    new Set(\n      visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n    ),\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  const provision = useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n\n  const { data: countriesIds = [] } = selectResult(provision) || {};\n\n  return {\n    countriesIds,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isPending = true, hasFallback } = {} } = props;\n  if (isPending && !hasFallback) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport {\n  useProvision,\n  useRequest,\n  selectDict,\n} from 'core/connection';\nimport {\n  selectIsPending,\n  selectIsError,\n  selectIsReady,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  const provision = useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n\n  return {\n    locationsDict,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport dateFormat from 'date-fns/format';\nimport ru from 'date-fns/locale/ru';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nfunction dateTimePeriodToString(periodStart, periodEnd) {\n  const periodEndString = dateFormat(periodEnd, DATE_FORMATS.FULL, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n      locale: ru,\n    });\n  } else if (isSameYear(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_MONTH, {\n      locale: ru,\n    });\n  } else {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.FULL, {\n      locale: ru,\n    });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime);\n}\n\nexport function visitDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime);\n}\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default (tripVisitsList, countriesDict, originCountryId, fallback) => {\n  if (!tripVisitsList.length) {\n    return fallback;\n  }\n  const visitsByCountries = Object.keys(\n    groupBy(\n      tripVisitsList.filter(\n        ({ visitType }) => visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n  if (visitsByCountries.length === 1) {\n    return (\n      uniqTrimAndJoin(tripVisitsList.map(({ locationName }) => locationName), {\n        maxLength: 4,\n      }) || fallback\n    );\n  }\n  return (\n    uniqTrimAndJoin(\n      visitsByCountries\n        .map(\n          countryId =>\n            Number(countryId) !== originCountryId &&\n            countriesDict[countryId] &&\n            countriesDict[countryId].countryName,\n        )\n        .filter(Boolean),\n      { maxLength: 4 },\n    ) || fallback\n  );\n};\n","export { default as resolveTripCaption } from './resolveTripCaption';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Path from 'modules/utilities/routing/Path';\nimport { usePaths } from 'modules/packages';\nimport { useAuthContext } from 'core/context/AuthContext';\n\nconst WelcomeScreen = ({\n  children,\n  match: {\n    params: { userAlias: visitedUserAlias },\n  },\n}) => {\n  const {\n    travel: { trips: tripsPath },\n  } = usePaths();\n\n  const { userAlias: authenticatedUserAlias } = useAuthContext();\n  if (visitedUserAlias !== authenticatedUserAlias) {\n    return (\n      <span>Пользователь пока еще не внес информацию о своих поездках</span>\n    );\n  }\n  const Message = useCallback(\n    () => (\n      <div>\n        <span>\n          Нам пока ничего не известно о ваших путешествиях. Но очень интересно\n          узнать. Создайте вашу первую поездку, а мы подготовим по ней отчет\n        </span>\n        {children}\n      </div>\n    ),\n    [children],\n  );\n  return (\n    <Switch>\n      <Route\n        path={tripsPath.toUrl({ userAlias: authenticatedUserAlias })}\n        component={Message}\n      />\n      <Redirect to={tripsPath.toUrl({ userAlias: authenticatedUserAlias })} />\n    </Switch>\n  );\n};\n\nWelcomeScreen.propTypes = {\n  children: PropTypes.node,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ userAlias: PropTypes.string }),\n  }).isRequired,\n};\n\nWelcomeScreen.defaultProps = {\n  children: null,\n};\n\nexport default withRouter(WelcomeScreen);\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport isFunction from 'lodash/isFunction';\nimport compose from 'lodash/fp/compose';\nimport withProvision from 'core/connection/withProvision';\nimport { selectUserTripsIds, selectLocationsIds } from './selectors';\n\nexport const DATA_CHUNKS = {\n  COMMON: {\n    COUNTRIES: 'COMMON.COUNTRIES',\n  },\n  USER: {\n    TRIPS: 'USER.TRIPS',\n    LOCATIONS: 'USER.LOCATIONS',\n    VISITS: 'USER.VISITS',\n    RIDES: 'USER.RIDES',\n  },\n};\n\nexport default ({\n  domain,\n  mapStateToProps,\n  requirementsConfig: mapStateToRequirementsConfig,\n}) => Component => {\n  const mapStateToRequirements = (state, props) => {\n    const {\n      countriesDict,\n      match: {\n        params: { userAlias },\n      },\n    } = props;\n    const userTripsIds = selectUserTripsIds(state, domain);\n\n    const requirementsConfig = isFunction(mapStateToRequirementsConfig)\n      ? mapStateToRequirementsConfig(state, props)\n      : mapStateToRequirementsConfig;\n\n    const request = {};\n    if (requirementsConfig[DATA_CHUNKS.COMMON.COUNTRIES]) {\n      request.countries = {\n        modelName: 'countries',\n        condition: !countriesDict || !Object.keys(countriesDict).length,\n        query: { navigation: { isDisabled: true } },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.TRIPS]) {\n      request.userTrips = {\n        modelName: 'trips',\n        observe: userAlias,\n        query: { userAlias, navigation: { isDisabled: true } },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.LOCATIONS]) {\n      const { requiredLocationsIds, missingLocationsIds } = selectLocationsIds(\n        state,\n        userTripsIds,\n      );\n\n      request.userLocations = {\n        modelName: 'locations',\n        observe: requiredLocationsIds,\n        condition: missingLocationsIds.length,\n        query: {\n          filter: { id: { comparator: 'in', value: missingLocationsIds } },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.VISITS]) {\n      const { year } = requirementsConfig[DATA_CHUNKS.USER.VISITS];\n      const actualYear = parseInt(\n        /^\\d{4}$/.test(String(year)) ? year : undefined,\n        10,\n      );\n      request.userVisits = {\n        modelName: 'visits',\n        observe: { userTripsIds, year },\n        condition: userTripsIds && userTripsIds.length,\n        query: {\n          filter: {\n            trip_id: { comparator: 'in', value: userTripsIds },\n            departure_date_time: actualYear\n              ? { comparator: '>=', value: `${actualYear}-01-01` }\n              : undefined,\n            arrival_date_time: actualYear\n              ? { comparator: '<', value: `${actualYear + 1}-01-01` }\n              : undefined,\n          },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.RIDES]) {\n      request.userRides = {\n        modelName: 'rides',\n        observe: userTripsIds,\n        condition: userTripsIds && userTripsIds.length,\n        query: {\n          filter: { trip_id: { comparator: 'in', value: userTripsIds } },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n\n    return {\n      domain,\n      request,\n    };\n  };\n\n  const ProvisionedComponent = compose(\n    withRouter,\n    withProvision(mapStateToRequirements, mapStateToProps),\n  )(Component);\n\n  return props => <ProvisionedComponent {...props} />;\n};\n","import uniq from 'lodash/uniq';\nimport { selectDict, selectPlaceholder } from 'core/connection';\n\nexport const selectUserTripsIds = (state, domain) => {\n  const { data: userTripsIds } =\n    selectPlaceholder(state, `${domain}.userTrips`) || {};\n  return userTripsIds;\n};\n\nexport const selectLocationsIds = (state, userTripsIds) => {\n  const tripsDict = selectDict(state, 'trips');\n  const locationsDict = selectDict(state, 'locations');\n\n  const requiredLocationsIds = userTripsIds\n    ? uniq(\n        userTripsIds.reduce((memo, tripId) => {\n          const trip = tripsDict[tripId];\n          if (trip) {\n            const { originLocationId } = trip;\n            if (originLocationId) {\n              memo.push(originLocationId);\n            }\n          }\n          return memo;\n        }, []),\n      )\n    : [];\n  const missingLocationsIds = requiredLocationsIds.filter(\n    requiredLocationId => !locationsDict[requiredLocationId],\n  );\n  return { requiredLocationsIds, missingLocationsIds };\n};\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport Path from 'modules/utilities/routing/Path';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst resolveVisitIconComponent = visitType => {\n  switch (visitType) {\n    case 'Transit':\n      return TransferWithinAStationIcon;\n    case 'BaseCamp':\n      return DomainIcon;\n    case 'Relocation':\n      return LocalShippingIcon;\n    case 'Regular':\n    default:\n      return LocationCityIcon;\n  }\n};\n\nconst Visit = ({ visit, classes, locationsPath }) => {\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName, visitType, locationId } = visit;\n  const Icon = resolveVisitIconComponent(visitType);\n  return (\n    <div className={classes.container}>\n      {Icon && <Icon className={classes.icon} />}\n      <Link to={locationsPath.toUrl({ strLocationId: String(locationId) })}>\n        {locationName}\n      </Link>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  editIcon: {},\n};\n\nVisit.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  visit: PropTypes.shape(visitPropTypes),\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n};\n\nVisit.defaultProps = {\n  visit: {},\n};\n\nexport default withStyles(styles)(Visit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Path from 'modules/utilities/routing/Path';\nimport reactComponentPropType from 'modules/customPropTypes/reactComponentPropType';\nimport locationPropTypes from 'travel/models/locations/propTypes';\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n};\n\nconst Location = ({\n  location: { locationId, locationName = 'unknown' },\n  locationsPath,\n  Icon,\n  classes,\n}) => {\n  const locationNode = locationsPath ? (\n    <Link to={locationsPath.toUrl({ strLocationId: String(locationId) })}>\n      {locationName}\n    </Link>\n  ) : (\n    locationName\n  );\n  return (\n    <div className={classes.container}>\n      {Icon && <Icon className={classes.icon} />}\n      {locationNode}\n    </div>\n  );\n};\n\nLocation.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  location: PropTypes.shape(locationPropTypes),\n  Icon: reactComponentPropType,\n  locationsPath: PropTypes.instanceOf(Path),\n};\n\nLocation.defaultProps = {\n  location: {},\n  Icon: undefined,\n  locationsPath: undefined,\n};\n\nexport default withStyles(styles)(Location);\n","import { isValidElementType } from 'react-is';\n\nexport default (props, propName, componentName) => {\n  if (props[propName] && !isValidElementType(props[propName])) {\n    return new Error(\n      `Invalid prop '${propName}' supplied to '${componentName}': the prop is not a valid React component`,\n    );\n  }\n  return undefined;\n};\n"],"sourceRoot":""}