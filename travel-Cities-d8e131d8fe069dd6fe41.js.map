{"version":3,"sources":["webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/lodash/_createAggregator.js","webpack:///./node_modules/lodash/_arrayAggregator.js","webpack:///./node_modules/lodash/_baseAggregator.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/_baseUniq.js","webpack:///./node_modules/lodash/_arrayIncludesWith.js","webpack:///./node_modules/lodash/_createSet.js","webpack:///./src/packages/travel/components/common/WelcomeScreen/WelcomeScreen.jsx","webpack:///./node_modules/lodash/uniqBy.js","webpack:///./src/packages/travel/pages/Cities/Cities.jsx"],"names":["withLoader","Component","props","_props$provision","provision","_props$provision$isCo","isComplete","_props$provision$isPe","isPending","react_default","a","createElement","PlainLoader","__webpack_exports__","_len2","arguments","length","provisionParams","Array","_key2","ExtendableComponent","_len","funcsArray","_key","arg","reduceRight","composed","func","compose","provide","apply","baseFor","__webpack_require__","keys","module","exports","object","iteratee","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","value","key","call","push","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","accumulator","array","index","baseEach","baseForOwn","createBaseEach","createBaseFor","fromRight","keysFunc","iterable","isArrayLike","eachFunc","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","LARGE_ARRAY_SIZE","comparator","includes","isCommon","seen","set","outer","computed","seenIndex","Set","noop","values","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_4__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_4___default","modules_utilities_routing_Path__WEBPACK_IMPORTED_MODULE_5__","core_context_AppContext__WEBPACK_IMPORTED_MODULE_6__","WelcomeScreen","_ref","children","userAlias","match","params","_ref$namedPaths","namedPaths","_ref$namedPaths$trave","travel","tripsPath","trips","shouldShowLinkToTrips","to","toUrl","propTypes","PropTypes","node","shape","string","isRequired","instanceOf","Path","bool","defaultProps","withRouter","withPaths","baseUniq","byVisitsCount","_ref2","_ref3","_slicedToArray","nameA","countA","_ref4","nameB","localeCompare","Cities","_ref5","_ref5$visits","visits","_ref5$visits$data","data","visitsList","travel_components_common_WelcomeScreen__WEBPACK_IMPORTED_MODULE_7__","visitsGroupedByLocation","property","visitedLocationsWithCounter","map","uniqTripVisits","uniqBy","locationId","locationName","sort","_ref6","locationIndex","_ref7","visitsCount","concat","arrayOf","visitPropTypes","withProvision","state","_ref8","_ref9","undefined","prevUserAlias","prevUserTripsIds","userTripsIds","_ref10$fallback","selectProvisionStatus","fallback","_ref11$data","identity","require","modelName","isMissingIf","query","navigation","isDisabled","Boolean","filter","trip_id","meta","domain"],"mappings":"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","file":"travel-Cities-d8e131d8fe069dd6fe41.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isComplete = false, isPending = true } = {} } = props;\n  if (!isComplete || isPending) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport compose from 'lodash/fp/compose';\nimport Path from 'modules/utilities/routing/Path';\nimport { withPaths } from 'core/context/AppContext';\n\nconst WelcomeScreen = ({\n  children,\n  match: {\n    params: { userAlias },\n  },\n  namedPaths: { travel: { trips: tripsPath } = {} } = {},\n  shouldShowLinkToTrips,\n}) => (\n  <div>\n    <span>\n      Нам пока ничего не известно о ваших путешествиях. Но очень интересно\n      узнать.\n    </span>\n    &nbsp;\n    {shouldShowLinkToTrips ? (\n      <Link to={tripsPath.toUrl({ userAlias })}>Создайте</Link>\n    ) : (\n      <span>Создайте</span>\n    )}\n    &nbsp;\n    <span>вашу первую поездку, а мы подготовим по ней отчет</span>\n    {children}\n  </div>\n);\n\nWelcomeScreen.propTypes = {\n  children: PropTypes.node,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ userAlias: PropTypes.string }),\n  }).isRequired,\n  namedPaths: PropTypes.shape({\n    travel: PropTypes.shape({ trips: PropTypes.instanceOf(Path) }),\n  }).isRequired,\n  shouldShowLinkToTrips: PropTypes.bool,\n};\n\nWelcomeScreen.defaultProps = {\n  children: null,\n  shouldShowLinkToTrips: true,\n};\n\nexport default compose(\n  withRouter,\n  withPaths,\n)(WelcomeScreen);\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport groupBy from 'lodash/groupBy';\nimport uniqBy from 'lodash/uniqBy';\nimport property from 'lodash/property';\nimport withProvision from 'core/connection/withProvision';\nimport { selectProvisionStatus } from 'core/connection';\nimport WelcomeScreen from 'travel/components/common/WelcomeScreen';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst byVisitsCount = ([, nameA, countA], [, nameB, countB]) =>\n  countB - countA || nameA.localeCompare(nameB);\n\nconst Cities = ({ visits: { data: visitsList = [] } = {} }) => {\n  if (!visitsList.length) {\n    return <WelcomeScreen />;\n  }\n  const visitsGroupedByLocation = groupBy(visitsList, property('locationId'));\n  const visitedLocationsWithCounter = Object.values(\n    visitsGroupedByLocation,\n  ).map(visits => {\n    const uniqTripVisits = uniqBy(visits, property('tripId'));\n    return [\n      visits[0].locationId,\n      visits[0].locationName,\n      uniqTripVisits.length,\n    ];\n  });\n\n  return (\n    <div>\n      {visitedLocationsWithCounter\n        .sort(byVisitsCount)\n        .map(([locationId, locationName, visitsCount], locationIndex) => (\n          <div key={`id${locationId}`}>\n            <span>{`${locationIndex + 1}. `}</span>\n            <span>{locationName}</span>\n            {visitsCount > 1 && <span>{` x${visitsCount}`}</span>}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nCities.propTypes = {\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }),\n};\n\nCities.defaultProps = {\n  visits: { data: [] },\n};\n\nconst mapStateToRequirements = (\n  state,\n  {\n    match: {\n      params: { userAlias },\n    },\n  },\n  { userAlias: prevUserAlias, userTripsIds: prevUserTripsIds } = {},\n) => {\n  const { fallback = {} } = selectProvisionStatus(state, 'cities.trips') || {};\n  const { data: userTripsIds = [] } = fallback[0] || {};\n  const isUserChanged = prevUserAlias !== userAlias;\n  const isUserTripsFetchCompleted =\n    (!prevUserTripsIds || !prevUserTripsIds.length) &&\n    Boolean(userTripsIds.length);\n  return {\n    identity: {\n      userAlias,\n      userTripsIds,\n    },\n    require: {\n      trips: {\n        modelName: 'trips',\n        isMissingIf: isUserChanged,\n        query: { userAlias, navigation: { isDisabled: true } },\n      },\n      visits: {\n        modelName: 'visits',\n        isMissingIf: isUserTripsFetchCompleted,\n        query: {\n          filter: { trip_id: { comparator: 'in', value: userTripsIds } },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n    meta: {\n      domain: 'cities',\n    },\n  };\n};\n\nexport default withProvision(mapStateToRequirements)(Cities);\n"],"sourceRoot":""}