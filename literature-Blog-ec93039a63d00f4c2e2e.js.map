{"version":3,"sources":["webpack:///./src/modules/utilities/request-kit/hocs/flattenIfNeeded.jsx","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/packages/literature/pages/Blog/blocks/Post.jsx","webpack:///./src/packages/literature/pages/Blog/blocks/Posts.jsx","webpack:///./src/packages/literature/pages/Blog/Blog.jsx"],"names":["mergeIfNeeded","provision","requirements","require","Array","isArray","Object","assign","apply","_toConsumableArray","mergeProvisionIfNeeded","memoizeByLastArgs","mergeFallbackIfNeeded","flattenIfNeeded","WrappedComponent","_ref","fallback","forwarderProps","_objectWithoutProperties","react_default","a","createElement","_extends","withLoader","Component","_ref$isComplete","isComplete","_ref$isPending","isPending","forwardedProps","ProvisionLoader_objectWithoutProperties","PlainLoader","__webpack_exports__","mapStateToRequirements","ExtendableComponent","_len","arguments","length","funcsArray","_key","arg","reduceRight","composed","func","compose","provide","Post","React","PureComponent","_this$props$source","this","props","source","content","date","header","concat","format","locale","ru","react_markdown_default","assembleContent","PropTypes","shape","string","isRequired","id","number","sortByDateDesc","_ref2","dateA","dateB","Posts","sort","map","article","blocks_Post","key","arrayOf","articlePropTypes","contentsPropTypes","articles","Blog","blocks_Posts","withProvision","meta","domain"],"mappings":"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","file":"literature-Blog-ec93039a63d00f4c2e2e.js","sourcesContent":["import React from 'react';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\n\nconst mergeIfNeeded = (provision, requirements) => {\n  const { require } = requirements;\n  if (!Array.isArray(require) || !Array.isArray(provision)) {\n    return provision;\n  }\n  return Object.assign(...provision);\n};\n\nconst mergeProvisionIfNeeded = memoizeByLastArgs(mergeIfNeeded);\nconst mergeFallbackIfNeeded = memoizeByLastArgs(mergeIfNeeded);\n\nexport default WrappedComponent => ({\n  provision,\n  fallback,\n  requirements,\n  ...forwarderProps\n}) => (\n  <WrappedComponent\n    provision={mergeProvisionIfNeeded(provision, requirements)}\n    fallback={mergeFallbackIfNeeded(fallback, requirements)}\n    requirements={requirements}\n    {...forwarderProps}\n  />\n);\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => ({\n  isComplete = false,\n  isPending = true,\n  ...forwardedProps\n}) =>\n  (!isComplete || isPending) ? (\n    <PlainLoader />\n  ) : (\n    <Component {...forwardedProps} />\n  );\n","import flattenIfNeeded from 'modules/utilities/request-kit/hocs/flattenIfNeeded';\nimport { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default mapStateToRequirements => ExtendableComponent =>\n  compose(\n    provide(mapStateToRequirements),\n    flattenIfNeeded,\n    withLoader,\n  )(ExtendableComponent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport format from 'date-fns/format';\nimport ru from 'date-fns/locale/ru';\n\nclass Post extends React.PureComponent {\n  static propTypes = {\n    source: PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  };\n\n  assembleContent() {\n    const {\n      source: { content, date, header },\n    } = this.props;\n\n    return `### ${header} (*${format(date, 'D MMMM YYYY', {\n      locale: ru,\n    })}*)\\n\\n${content}`;\n  }\n\n  render() {\n    return (\n      <article>\n        <ReactMarkdown source={this.assembleContent()} />\n      </article>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst sortByDateDesc = ({ date: dateA }, { date: dateB }) => {\n  if (dateA > dateB) {\n    return -1;\n  }\n  if (dateA < dateB) {\n    return 1;\n  }\n  return 0;\n};\n\nclass Posts extends React.PureComponent {\n  static propTypes = {\n    source: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n      }),\n    ).isRequired,\n  };\n\n  render() {\n    const { source } = this.props;\n\n    return (\n      <section>\n        {source.sort(sortByDateDesc).map(article => (\n          <Post key={`article${article.id}`} source={article} />\n        ))}\n      </section>\n    );\n  }\n}\n\nexport default Posts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withProvision from 'core/connection/withProvision';\nimport Posts from './blocks/Posts';\n\nconst articlePropTypes = {\n  date: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nconst contentsPropTypes = {\n  articles: PropTypes.arrayOf(PropTypes.shape(articlePropTypes)),\n};\n\nclass Blog extends React.PureComponent {\n  static propTypes = {\n    provision: PropTypes.shape(contentsPropTypes).isRequired,\n  };\n\n  render() {\n    const {\n      provision: { articles },\n    } = this.props;\n\n    return <Posts source={articles} />;\n  }\n}\n\nconst mapStateToRequirements = () => ({\n  require: 'articles',\n  meta: {\n    domain: 'blog',\n  },\n});\n\nexport default withProvision(mapStateToRequirements)(Blog);\n"],"sourceRoot":""}