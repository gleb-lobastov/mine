{"version":3,"sources":["webpack:///./src/packages/travel/components/models/visits/VisitIcon/VisitIcon.jsx","webpack:///./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Option.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Overlay.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Trigger.jsx","webpack:///./src/modules/components/muiExtended/Select/Select.jsx","webpack:///./src/modules/components/muiExtended/Suggest/useSuggest.js","webpack:///./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/localization.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/TripEditFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/locators.js","webpack:///./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack:///./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack:///./src/modules/components/Sortable/Sortable.jsx","webpack:///./src/modules/components/DragHandler/DragHandler.jsx","webpack:///./src/packages/travel/pages/TripEditPage/useTripEditPageDialogs.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/VisitCreator.jsx","webpack:///./src/packages/travel/components/common/Actions/buttons/CreateButton.jsx","webpack:///./src/packages/travel/components/common/Actions/locators.js","webpack:///./src/packages/travel/components/common/Actions/buttons/EditButton.jsx","webpack:///./src/packages/travel/components/common/Actions/buttons/DeleteButton.jsx","webpack:///./src/packages/travel/components/common/Actions/Actions.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/Visit.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/Ride.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/VisitAndRidesFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/VisitsAndRidesFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/TripEditTitle.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/TripEditForm.jsx","webpack:///./src/modules/components/Dialog/Dialog.jsx","webpack:///./src/modules/components/Dialog/locators.js","webpack:///./src/modules/components/FormDialog/FormDialog.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditFormSection/localization.js","webpack:///./src/packages/travel/components/models/rides/RideEditFormSection/tieDateTimeFields.js","webpack:///./src/packages/travel/components/models/rides/RideEditFormSection/RideEditFormSection.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditFormSection/locators.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/RideEditDialog/RideEditDialog.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditFormSection/VisitEditFormSection.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditFormSection/locators.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/VisitEditDialog/VisitEditDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/VisitDeleteDialog/VisitDeleteDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/TripEditAssociatedDialogs.jsx","webpack:///./src/modules/utilities/algorithms/createOrderCalculator.js","webpack:///./src/packages/travel/pages/TripEditPage/useTripEditRequests.js","webpack:///./src/packages/travel/pages/TripEditPage/TripEditPage.jsx","webpack:///./src/packages/travel/pages/VisitEditPage/resolveDropzoneStyles.js","webpack:///./src/packages/travel/pages/VisitEditPage/VisitEditPage.jsx","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/modules/utilities/dateTime/isValidDate.js","webpack:///./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/packages/travel/dataSource/useVisit.js","webpack:///./src/modules/utilities/dateTime/safeDateFormat.js","webpack:///./src/packages/travel/components/models/rides/RideInfo/RideInfo.jsx","webpack:///./src/packages/travel/components/models/rides/RideIcon/RideIcon.jsx","webpack:///./src/packages/travel/components/models/visits/VisitInfo/VisitInfo.jsx","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js"],"names":["VisitIcon","visitType","visit","className","IconComponent","VISIT_TYPES","TRANSIT","TransferWithinAStationIcon","BASE_CAMP","DomainIcon","RELOCATION","LocalShippingIcon","REGULAR","LocationCityIcon","resolveRideIconComponent","OptionsSelect","dataLocator","caption","classes","hasNullOption","inputId","name","handleChange","onChange","optionRender","options","value","data-locator","container","InputLabel","component","shrink","htmlFor","Select","displayEmpty","input","Input","id","selectRoot","MenuProps","MenuItem","key","option","index","map","valuePropTypes","PropTypes","oneOfType","number","string","propTypes","isRequired","objectOf","bool","func","arrayOf","defaultProps","undefined","withStyles","display","Option","isHighlighted","isSelected","forwardedProps","selected","style","fontWeight","ListItemText","primary","label","secondary","details","Overlay","isOpen","getMenuProps","getItemProps","selectedItem","highlightedIndex","Paper","paper","square","item","Boolean","Trigger","triggerProps","triggerInputProps","TextField","InputProps","root","inputRoot","inputInput","fullWidth","omit","useStyles","makeStyles","theme","position","zIndex","marginTop","spacing","left","right","defaultItemToString","customClasses","inputProps","downshiftProps","itemToString","getInputProps","inputValue","QUERY_FORMATS","resolveQueryByFormat","queryFormat","filterField","searchString","navigation","pageSize","numberOfItemsToRequest","search","filter","comparator","Suggest","sourceProps","transformSuggestionToOption","suggestion","forwardingProps","useState","setInputValue","suggestions","domain","modelName","debounceRequestDelayMs","provision","useProvision","debounceRequest","isProvision","observe","query","selectResult","data","entitiesIds","entitiesDict","useSelector","state","selectDict","entityId","useSuggest","handleInputChange","useCallback","event","target","actualInputProps","useMemo","TRIP_TYPE_NAMES","TRIP_TYPES","LEISURE","BUSINESS","MIXED","OTHER","renderTripType","tripType","optionGroup","minWidth","suggest","flexGrow","TripEditFormSection","locationsDict","formikProps","setFieldValue","handleBlur","errors","touched","values","trip","tripFormValues","locationName","originLocationId","Grid","alignItems","xs","FormControlLabel","control","Checkbox","helperText","hasAutogeneratedTripName","onBlur","checked","textField","tripName","margin","placeholder","initialInputValue","geonameId","resolveDetails","countryName","regionName","join","Object","detail","prevVisit","nextVisit","departureRideId","arrivalRideId","element","dataset","sortHandler","parentNode","SortableContainer","SortableContainerHOC","children","SortableElement","SortableElementHOC","node","Sortable","shouldCancelStart","checkIsNodeNotSortable","lockAxis","lockToContainerEdges","React","Children","dragHandler","cursor","DragHandler","cls","data-sort-handler","DIALOG_NAMES","justifyContent","background","padding","border","boxShadow","visibility","visibleOnlyOnHover","VisitCreator","showDialog","Button","size","variant","color","onClick","CreateButton","IconButton","EditButton","DeleteButton","actions","Actions","isEntityExist","onEditClick","onDeleteClick","onCreateClick","hasCreateAction","hasEditAction","hasDeleteAction","marginRight","icon","verticalAlign","visibleOnHover","Visit","shape","visitPropTypes","Ride","ride","rideId","arrivalDateTime","departureDateTime","isRideExists","RideIcon","rideDateTimePeriodToString","ridePropTypes","alwaysVisible","editDialogTrigger","marginLeft","top","transform","warning","VisitAndRidesFormSection","isArrivalRideMatch","isDepartureRideMatch","tripId","ridesDict","visitId","formArrivalRideId","formDepartureVisitId","prevVisitId","nextVisitId","dialogName","dialogParams","departureVisitId","arrivalVisitId","editIcon","creatorsContainer","isCompact","resetFlow","VisitsAndRidesFormSection","formVisitsIds","visits","visitsDict","length","creatorsNodeIndex","setCreatorsNodeIndex","isSorting","setIsSorting","showCreationDialog","neighbors","orderInTrip","calculateOrderInTripBetweenTwoVisits","render","arrayHelpers","updateBeforeSortStart","onSortEnd","oldIndex","newIndex","move","flatMap","formVisitId","indexOfVisit","prevVisitFormValues","visitFormValues","nextVisitFormValues","checkIsVisitsConnectedByRide","checkIsRidesMatch","shouldCollapseRides","visitAndRidesFormSectionNode","shouldInsertCreatorsNodeBeforeFormSection","shouldInsertCreatorsNodeAfterFormSection","visitCreatorNode","prevOrderInTrip","nextOrderInTrip","Math","random","array","TripEditTitle","isCreation","formTrip","countriesDict","modeCaption","resolveTripCaption","tripCaption","Typography","actionButton","hint","fontSize","paddingLeft","TripEditForm","type","title","description","primaryButtonCaption","primaryButtonHandler","secondaryButtonCaption","secondaryButtonHandler","onClose","Dialog","transitionDuration","open","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","initialValues","onSubmit","onReset","enableReinitialize","handleSubmit","cloneElement","RIDE_CLASSES_NAMES","RIDE_CLASSES","ECONOMY","COMFORT","FIRST","PRIVATE","RIDE_OCCUPATION_NAMES","RIDE_OCCUPATION","PASSENGER","STUFF","DRIVER","RIDE_TYPES_NAMES","RIDE_TYPES","SELF_DRIVE","SCHEDULED","CHARTER","TOUR","CARPOOL","HITCH_HIKING","DROP_OFF","VEHICLE_NAMES","VEHICLE_TYPES","CAR","TRAIN","AIRCRAFT","BUS","MOTORHOME","LOCAL_TRAIN","FERRY","BIKE","BY_FEET","ROPEWAY","FUNICULAR","MOTORBIKE","TRUCK","ALL_TERRAIN_VEHICLE","TRAM","TROLLEY","TAXI","CITY_BUS","JITNEY","SUBWAY","PUBLIC_TRANSPORT","mixDateTime","dateFrom","timeFrom","isValidDateFrom","isValidDate","isValidTimeFrom","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","NaN","checkCanUpdate","nextDate","prevDate","checkIsDatesEqual","ORIGIN_OF_TRIP","renderVisit","VisitInfo","renderVehicleType","vehicleType","renderRideType","rideType","renderRideClass","rideClass","renderRideOccupation","rideOccupation","width","RideEditFormSection","arrivalDateTimeValue","onArrivalDateTimeChange","departureDateTimeValue","onDepartureDateTimeChange","isSameDay","updateFields","handleRideDepartureChange","handleRideArrivalChange","tripVisitsIds","rideComment","isTripHasVisits","arrivalDateTimeField","nextArrivalDateTime","departureDateTimeField","nextDepartureDateTime","checkIsSameDay","nextDepartureDateTimeValue","nextArrivalDateTimeValue","isSameDateField","nextIsSameDay","addDays","rideDepartureDateField","rideArrivalDateField","rideDepartureTimeField","rideArrivalTimeField","autoOk","format","ampm","multiline","rows","rowsMax","RideEditDialog","FormDialog","VISIT_TYPE_NAMES","renderRide","RideInfo","isLong","renderVisitType","VisitEditFormSection","tripRidesIds","visitComment","isTripHasRides","VisitEditDialog","VisitDeleteDialog","TripEditAssociatedDialogs","dialogsState","hideDialog","handleSubmitRide","handleSubmitVisit","handleDeleteVisit","rides","initialRideValues","initializeRide","initialVisitValues","initializeVisit","isRideEditDialogShown","checkIsRideEditDialogShown","isVisitEditDialogShown","checkIsVisitEditDialogShown","isVisitDeleteDialogShown","resolveOrder","orderResolver","createOrderCalculator","TripEditPage","match","params","userAlias","strTripId","action","tripEditPath","usePaths","travel","tripEdit","history","useHistory","useAuthContext","isAuthenticated","authenticatedUserAlias","parseInt","useTripsStats","tripsIds","tripsDict","tripsProvision","initializeTrip","invalidate","submitRide","useRequest","body","then","submitTrip","handleSubmitTrip","submitVisit","deleteVisit","method","useTripEditRequests","setDialogsState","useTripEditPageDialogs","isError","isReady","isPending","newTripId","tripEditPageUrl","toUrl","String","push","hexToRgba","hex","alpha","exec","rgba","r","g","b","a","STRIPLES_SHIFT_PX","cos","PI","makeStriplesBackground","opacity","actualColor","backgroundSize","lineHeight","photosContainer","flexWrap","photoContainer","maxHeight","textAlign","photo","maxWidth","borderRadius","dropzoneContainer","flexDirection","height","minHeight","dropzoneStandby","palette","dark","light","borderColor","disabled","main","animation","dropzoneActive","error","dropzoneAccept","dropzoneReject","dropzoneUpload","backgroundPositionX","resolveDropzoneStyles","VisitEditPage","strVisitId","progress","setProgress","rejectedFiles","setRejectedFiles","isUploadInProgress","useVisit","Number","submitVisitPhoto","useAddVisitPhotoRequest","handleSubmitPhotos","acceptedFiles","useDropzone","accept","onDrop","maxSize","minSize","getRootProps","isDragActive","isDragAccept","isDragReject","photos","renderDropzoneCaption","rejectedFile","path","file","errorsMessage","message","thumbnailUrl","src","requiredTripsIds","shouldRequireAllTrips","missingTripsIds","isDisabled","useTrips","useUser","user","locationsRating","userProvision","visitsIds","Array","from","Set","tripsId","ridesIds","countriesIds","countryId","locationsIds","locationId","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","updatesCounter","sum","selectUpdatesCounter","every","selectIsReady","some","selectIsPending","isValid","selectIsValid","find","selectIsError","selectError","forEach","mergeProvisionsState","countriesRating","ratingsGroupedByCountries","reduce","memo","location","locationRating","mapValues","ratingsByCountry","ratings","Infinity","avg","rating","best","max","lengthRatio","log","averageRating","calcCountriesRating","ridesStats","calcRidesStats","earliestDeparture","min","getTime","latestArrival","date","isNaN","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","isObscure","fullFormat","periodEndString","dateFormat","locale","ru","periodStartString","isSameMonth","isSameYear","shortFormat","visitDateTimePeriodToString","selectItem","applicableSchemaName","condition","requiredLocationIds","missingLocationsIds","useLocationRatingRequest","submitLocationRating","requiredVisitId","visit_id","contentType","safeDateFormat","args","absoluteIcon","CarIcon","TrainIcon","FlightIcon","BusIcon","VanIcon","BoatIcon","BikeIcon","WalkIcon","MotorcycleIcon","TruckIcon","TerrainIcon","TramIcon","LocalTaxiIcon","SubwayIcon","SeatIcon","CustomTransportIcon","UnknownRideIcon","period","maxLength","separator","uniqArray","uniq","result","slice","originCountryId","periodStr","dateMin","visitsId","dateMax","visitsByCountries","keys","groupBy","locationsNames","uniqTrimAndJoin","countriesNames"],"mappings":"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","file":"travel-TripEditPage-69444f81a9fe5962b14f.js","sourcesContent":["import React from 'react';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default function VisitIcon({ visit: { visitType }, className }) {\n  const IconComponent = resolveRideIconComponent(visitType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(visitType) {\n  switch (visitType) {\n    case VISIT_TYPES.TRANSIT:\n      return TransferWithinAStationIcon;\n    case VISIT_TYPES.BASE_CAMP:\n      return DomainIcon;\n    case VISIT_TYPES.RELOCATION:\n      return LocalShippingIcon;\n    case VISIT_TYPES.REGULAR:\n    default:\n      return LocationCityIcon;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'block',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  'data-locator': dataLocator,\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  name,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div data-locator={dataLocator} className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      name={name}\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n      MenuProps={{ 'data-locator': `options-${inputId}` }}\n    >\n      {hasNullOption && (\n        <MenuItem data-locator=\"option-null\" key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem data-locator={`option-${option}`} key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nconst valuePropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\nOptionsSelect.propTypes = {\n  name: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  hasNullOption: PropTypes.bool,\n  inputId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionRender: PropTypes.func,\n  options: PropTypes.arrayOf(valuePropTypes),\n  value: valuePropTypes,\n};\n\nOptionsSelect.defaultProps = {\n  name: undefined,\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport default function Option({\n  isHighlighted,\n  isSelected,\n  option,\n  ...forwardedProps\n}) {\n  return (\n    <MenuItem\n      component=\"div\"\n      selected={isHighlighted}\n      style={{ fontWeight: isSelected ? 500 : 400 }}\n      {...forwardedProps}\n    >\n      <ListItemText primary={option.label} secondary={option.details} />\n    </MenuItem>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Option from './Option';\n\nexport default function Overlay({\n  isOpen,\n  options,\n  classes,\n  getMenuProps,\n  getItemProps,\n  selectedItem,\n  highlightedIndex,\n}) {\n  return (\n    <div {...getMenuProps()}>\n      {isOpen && (\n        <Paper className={classes.paper} square={true}>\n          {options.map((option, index) => (\n            <Option\n              key={option.label}\n              {...getItemProps({ item: option })}\n              isHighlighted={highlightedIndex === index}\n              isSelected={\n                Boolean(selectedItem) && selectedItem.label === option.label\n              }\n              option={option}\n            />\n          ))}\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport omit from 'lodash/omit';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Trigger({ classes, triggerProps, triggerInputProps }) {\n  return (\n    <TextField\n      InputProps={{\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        },\n        ...triggerInputProps,\n      }}\n      fullWidth={true}\n      classes={omit(classes, 'inputRoot', 'inputInput')}\n      {...triggerProps}\n    />\n  );\n}\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Overlay from './blocks/Overlay';\nimport Trigger from './blocks/Trigger';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\n// export default ({ inputProps, classes, ref, ...other }) => {};\nexport default function Select({\n  'data-locator': dataLocator,\n  classes: customClasses,\n  options,\n  inputProps,\n  triggerProps,\n  ...downshiftProps\n}) {\n  const classes = { ...useStyles(), ...customClasses };\n  return (\n    <div data-locator={dataLocator} className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <Trigger\n              classes={classes}\n              inputValue={inputValue}\n              triggerProps={triggerProps}\n              triggerInputProps={getInputProps(inputProps)}\n            />\n            <Overlay\n              isOpen={isOpen}\n              options={options}\n              classes={classes}\n              getMenuProps={getMenuProps}\n              getItemProps={getItemProps}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n            />\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectResult } from 'core/connection/request/controllerRedux';\nimport { useProvision, selectDict } from 'core/connection';\n\nexport const QUERY_FORMATS = {\n  FILTER: 'FILTER',\n  SEARCH: 'SEARCH',\n};\nconst DEFAULT_SUGGEST_DEBOUNCE_TIME_MS = 400;\n\nexport default function useSuggest({\n  domain,\n  modelName,\n  inputValue,\n  queryFormat,\n  filterField,\n  numberOfItemsToRequest,\n  debounceRequestDelayMs = DEFAULT_SUGGEST_DEBOUNCE_TIME_MS,\n}) {\n  const provision = useProvision({\n    debounceRequest: debounceRequestDelayMs,\n    domain,\n    isProvision: true,\n    modelName,\n    observe: inputValue,\n    query: resolveQueryByFormat({\n      queryFormat,\n      filterField,\n      inputValue,\n      numberOfItemsToRequest,\n    }),\n  });\n  const { data: entitiesIds = [] } = selectResult(provision) || {};\n  const entitiesDict = useSelector(state => selectDict(state, modelName) || {});\n\n  return {\n    provision,\n    suggestions: entitiesIds\n      .map(entityId => entitiesDict[entityId])\n      .filter(Boolean),\n  };\n}\n\nfunction resolveQueryByFormat({\n  queryFormat,\n  filterField,\n  inputValue: searchString,\n  numberOfItemsToRequest,\n}) {\n  const navigation = { pageSize: numberOfItemsToRequest };\n  switch (queryFormat) {\n    case QUERY_FORMATS.SEARCH:\n      return { navigation, search: searchString };\n    case QUERY_FORMATS.FILTER:\n    default:\n      return {\n        navigation,\n        filter: {\n          [filterField]: { comparator: '~', value: `%${searchString}%` },\n        },\n      };\n  }\n}\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Select from '../Select';\nimport useSuggest, { QUERY_FORMATS } from './useSuggest';\n\nexport { QUERY_FORMATS };\nexport default function Suggest({\n  classes: customClasses,\n  inputProps,\n  triggerProps,\n  sourceProps,\n  transformSuggestionToOption = suggestion => suggestion,\n  ...forwardingProps\n}) {\n  const [inputValue, setInputValue] = useState('');\n  const { suggestions } = useSuggest({ ...sourceProps, inputValue });\n  const handleInputChange = useCallback(event => {\n    setInputValue(event.target?.value);\n  });\n  const actualInputProps = useMemo(\n    () => ({\n      ...inputProps,\n      onChange: handleInputChange,\n    }),\n    [inputProps, handleInputChange],\n  );\n\n  const options = useMemo(() => suggestions.map(transformSuggestionToOption), [\n    suggestions,\n  ]);\n\n  return (\n    <Select\n      classes={customClasses}\n      inputProps={actualInputProps}\n      triggerProps={triggerProps}\n      options={options}\n      {...forwardingProps}\n    />\n  );\n}\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.RELOCATION]: 'Переезд',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport Suggest, { QUERY_FORMATS } from 'modules/components/muiExtended/Suggest';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from './localization';\nimport * as locators from '../../../locators';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n  originGeonameId: initialOriginGeonameId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n    originGeonameId: initialOriginGeonameId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst useStyles = makeStyles({\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n});\n\nexport default function TripEditFormSection({\n  provision: { locationsDict = {} } = {},\n  formikProps,\n}) {\n  const classes = useStyles();\n  const {\n    handleChange,\n    setFieldValue,\n    handleBlur,\n    errors,\n    touched,\n    values: { trip: tripFormValues = {} },\n  } = formikProps;\n\n  const originLocation = locationsDict[tripFormValues.originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={6}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              data-locator={locators.AUTOGENERATED_NAME_CHECKBOX}\n              fullWidth={true}\n              helperText={\n                touched.trip?.hasAutogeneratedTripName &&\n                errors.trip?.hasAutogeneratedTripName\n              }\n              name=\"trip.hasAutogeneratedTripName\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              checked={tripFormValues.hasAutogeneratedTripName}\n            />\n          }\n          label=\"Автогенерируемое название\"\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        {!tripFormValues.hasAutogeneratedTripName && (\n          <TextField\n            data-locator={locators.TRIP_NAME_INPUT}\n            className={classes.textField}\n            fullWidth={true}\n            helperText={touched.trip?.tripName && errors.trip?.tripName}\n            label=\"Название поездки\"\n            margin=\"normal\"\n            name=\"trip.tripName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            value={tripFormValues.tripName}\n          />\n        )}\n      </Grid>\n      <Grid item={true} xs={6}>\n        <Suggest\n          data-locator={locators.ORIGIN_LOCATION_SUGGEST}\n          classes={{ root: classes.suggest }}\n          inputProps={{ placeholder: 'Пункт отправления...' }}\n          initialInputValue={locationName}\n          onChange={({ suggestion: { geonameId } }) =>\n            setFieldValue('trip.originGeonameId', geonameId)\n          }\n          onBlur={handleBlur}\n          sourceProps={{\n            domain: 'tripEditCard.geoname',\n            modelName: 'geonames',\n            filterField: 'locationName',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n          transformSuggestionToOption={transformSuggestionToOption}\n          triggerProps={{ label: 'Старт из' }}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.TRIP_TYPE_SELECT}\n          caption=\"Тип поездки\"\n          name=\"trip.tripType\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripFormValues.tripType}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nTripEditFormSection.propTypes = {};\n\nTripEditFormSection.defaultProps = {};\n\nfunction transformSuggestionToOption(suggestion) {\n  const { locationName, countryName } = suggestion;\n  return {\n    label: locationName,\n    detail: countryName,\n    suggestion,\n  };\n}\n","export const TRIP_NAME_INPUT = 'TRIP_EDIT_PAGE.TRIP_NAME_INPUT';\nexport const TRIP_TYPE_SELECT = 'TRIP_EDIT_PAGE.TRIP_TYPE_SELECT';\nexport const ORIGIN_LOCATION_SUGGEST = 'TRIP_EDIT_PAGE.ORIGIN_LOCATION_SUGGEST';\nexport const ADD_VISIT_BUTTON = 'TRIP_EDIT_PAGE.ADD_VISIT_BUTTON';\nexport const RIDE_ACTIONS = 'TRIP_EDIT_PAGE.RIDE_ACTIONS';\nexport const SUBMIT_TRIP_BUTTON = 'TRIP_EDIT_PAGE.SUBMIT_TRIP_BUTTON';\nexport const AUTOGENERATED_NAME_CHECKBOX = 'TRIP_EDIT_PAGE.AUTOGENERATED_NAME_CHECKBOX';\nexport const VISIT_DIALOG = 'TRIP_EDIT_PAGE.VISIT_DIALOG';\nexport const VISIT_BLOCK = 'TRIP_EDIT_PAGE.VISIT_BLOCK';\nexport const RIDE_DIALOG = 'TRIP_EDIT_PAGE.RIDE_DIALOG';\nexport const RIDE_BLOCK = 'TRIP_EDIT_PAGE.RIDE_BLOCK';\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    const { dataset } = element;\n\n    if (dataset) {\n      const { sortHandler } = dataset;\n      if (sortHandler === 'enabled') {\n        return false;\n      }\n      if (sortHandler === 'disabled') {\n        return true;\n      }\n    }\n\n    element = element.parentNode;\n  }\n  return true;\n};\n","import React from 'react';\nimport {\n  SortableContainer as SortableContainerHOC,\n  SortableElement as SortableElementHOC,\n} from 'react-sortable-hoc';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\n\nconst SortableContainer = SortableContainerHOC(({ children, className }) => (\n  <div className={className}>{children}</div>\n));\nconst SortableElement = SortableElementHOC(({ node }) => node);\n\nexport default function Sortable({ children, ...forwardingProps }) {\n  return (\n    <SortableContainer\n      shouldCancelStart={checkIsNodeNotSortable}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n      {...forwardingProps}\n    >\n      {React.Children.map(children, (node, index) => (\n        <SortableElement node={node} index={index} />\n      ))}\n    </SortableContainer>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst useStyles = makeStyles({\n  dragHandler: {\n    cursor: 'grab',\n  },\n});\n\nexport default function DragHandler({ className }) {\n  const classes = useStyles();\n  return (\n    <IconDragHandle\n      className={cls(className, classes.dragHandler)}\n      data-sort-handler=\"enabled\"\n    />\n  );\n}\n\nDragHandler.propTypes = {\n  className: PropTypes.string,\n};\n\nDragHandler.defaultProps = { className: undefined };\n","import { useState } from 'react';\n\nexport const DIALOG_NAMES = {\n  RIDE_CREATE: 'RIDE_CREATE_DIALOG',\n  RIDE_EDIT: 'RIDE_EDIT_DIALOG',\n  RIDE_DELETE: 'RIDE_DELETE_DIALOG',\n  VISIT_CREATE: 'VISIT_CREATE_DIALOG',\n  VISIT_EDIT: 'VISIT_EDIT_DIALOG',\n  VISIT_DELETE: 'VISIT_DELETE_DIALOG',\n};\n\nexport default function useTripEditPageDialogs() {\n  const [dialogsState, setDialogsState] = useState({ name: null });\n  const showDialog = (dialogName, dialogParams) => {\n    setDialogsState({ dialogName, dialogParams });\n  };\n  const hideDialog = () => {\n    setDialogsState({ name: null });\n  };\n  return { showDialog, hideDialog, dialogsState };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DragHandler from 'modules/components/DragHandler';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '12px 0',\n    cursor: 'grab',\n    background: '#fff',\n    padding: '12px',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(0, 0, 0, 0.2)',\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nexport default function VisitCreator({ showDialog }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.container} data-sort-handler=\"enabled\">\n      <Button\n        data-locator={locators.ADD_VISIT_BUTTON}\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => showDialog(DIALOG_NAMES.VISIT_CREATE)}\n      >\n        <span>Добавить посещение</span>\n      </Button>\n      <DragHandler className={classes.visibleOnlyOnHover} />\n    </div>\n  );\n}\n\nVisitCreator.propTypes = {\n  showDialog: PropTypes.func.isRequired,\n};\n\nVisitCreator.defaultProps = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport * as locators from '../locators';\n\nexport default function CreateButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.CREATE_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <AddCircleIcon />\n    </IconButton>\n  );\n}\n\nCreateButton.propTypes = {};\n\nCreateButton.defaultProps = {};\n","export const CREATE_BUTTON = 'ACTIONS.CREATE_BUTTON';\nexport const EDIT_BUTTON = 'ACTIONS.EDIT_BUTTON';\nexport const DELETE_BUTTON = 'ACTIONS.DELETE_BUTTON';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport * as locators from '../locators';\n\nexport default function EditButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.EDIT_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n}\n\nEditButton.propTypes = {};\n\nEditButton.defaultProps = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as locators from '../locators';\n\nexport default function DeleteButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.DELETE_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <DeleteIcon />\n    </IconButton>\n  );\n}\n\nDeleteButton.propTypes = {};\n\nDeleteButton.defaultProps = {};\n","import React from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateButton from './buttons/CreateButton';\nimport EditButton from './buttons/EditButton';\nimport DeleteButton from './buttons/DeleteButton';\n\nconst useStyles = makeStyles({\n  actions: {\n    display: 'inline-block',\n  },\n});\n\nexport default function Actions({\n  'data-locator': dataLocator,\n  className,\n  isEntityExist,\n  onEditClick,\n  onDeleteClick,\n  onCreateClick,\n}) {\n  const classes = useStyles();\n  const hasCreateAction = !isEntityExist && Boolean(onCreateClick);\n  const hasEditAction = isEntityExist && Boolean(onEditClick);\n  const hasDeleteAction = isEntityExist && Boolean(onDeleteClick);\n  return (\n    <div\n      data-locator={dataLocator}\n      data-sort-handler=\"disabled\"\n      className={cls(classes.actions, className)}\n    >\n      {hasCreateAction && <CreateButton onClick={onCreateClick} />}\n      {hasEditAction && <EditButton onClick={onEditClick} />}\n      {hasDeleteAction && <DeleteButton onClick={onDeleteClick} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Actions from 'travel/components/common/Actions';\nimport VisitIcon from 'travel/components/models/visits/VisitIcon';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n    '&:hover $visibleOnHover': {\n      visibility: 'visible',\n    },\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  visibleOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst Visit = ({ visit, showDialog }) => {\n  const classes = useStyles();\n  if (!visit) {\n    return 'Не указано';\n  }\n\n  const { locationName } = visit;\n\n  return (\n    <div className={classes.container} data-locator={locators.VISIT_BLOCK}>\n      <VisitIcon visit={visit} className={classes.icon} />\n      {locationName}\n      <Actions\n        className={classes.visibleOnHover}\n        isEntityExist={true}\n        onEditClick={() => showDialog(DIALOG_NAMES.VISIT_EDIT, visit)}\n        onDeleteClick={() => showDialog(DIALOG_NAMES.VISIT_DELETE, visit)}\n      />\n    </div>\n  );\n};\n\nVisit.propTypes = {\n  visit: PropTypes.shape(visitPropTypes),\n};\n\nVisit.defaultProps = {\n  visit: {},\n};\n\nexport default Visit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport RideIcon from 'travel/components/models/rides/RideIcon';\nimport Actions from 'travel/components/common/Actions';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nexport const useStyles = makeStyles({\n  container: {\n    '&:hover $visibleOnHover': {\n      visibility: 'visible',\n    },\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  visibleOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst Ride = ({ className, ride, showDialog }) => {\n  const classes = useStyles();\n  const { rideId, arrivalDateTime, departureDateTime } = ride || {};\n  const isRideExists = Boolean(rideId);\n\n  return (\n    <div\n      className={cls(className, classes.container)}\n      data-locator={locators.RIDE_BLOCK}\n    >\n      {isRideExists && (\n        <>\n          <RideIcon ride={ride} className={classes.icon} />\n          <span className={classes.details}>\n            {rideDateTimePeriodToString({ departureDateTime, arrivalDateTime })}\n          </span>\n        </>\n      )}\n      <Actions\n        data-locator={locators.RIDE_ACTIONS}\n        className={cls({\n          [classes.visibleOnHover]: isRideExists,\n        })}\n        isEntityExist={isRideExists}\n        onCreateClick={() => showDialog(DIALOG_NAMES.RIDE_CREATE)}\n        onEditClick={() => showDialog(DIALOG_NAMES.RIDE_EDIT, ride)}\n      />\n    </div>\n  );\n};\n\nRide.propTypes = {\n  className: PropTypes.string,\n  ride: PropTypes.shape(ridePropTypes),\n};\n\nRide.defaultProps = {\n  className: undefined,\n  ride: {},\n};\n\nexport default Ride;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Visit from './Visit';\nimport Ride from './Ride';\n\nconst useStyles = makeStyles({\n  alwaysVisible: {},\n  container: {\n    margin: '12px 0',\n    cursor: 'grab',\n    background: '#fff',\n    padding: '12px',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(0, 0, 0, 0.2)',\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n});\n\nexport default function VisitAndRidesFormSection({\n  style,\n  className,\n  prevVisit,\n  visit,\n  nextVisit,\n  showDialog,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  tripId,\n  provision,\n}) {\n  const classes = useStyles();\n\n  const { ridesDict } = provision;\n\n  const {\n    visitId,\n    arrivalRideId: formArrivalRideId,\n    departureRideId: formDepartureVisitId,\n  } = visit || {};\n\n  const { visitId: prevVisitId } = prevVisit || {};\n  const { visitId: nextVisitId } = nextVisit || {};\n\n  return (\n    <div\n      className={cls(classes.container, className)}\n      style={style}\n      data-sort-handler=\"enabled\"\n    >\n      <Ride\n        showDialog={(dialogName, dialogParams) =>\n          showDialog(dialogName, {\n            ...dialogParams,\n            departureVisitId: isArrivalRideMatch ? prevVisitId : undefined,\n            arrivalVisitId: visitId,\n          })\n        }\n        className={cls(classes.ride, {\n          [classes.warning]: !isArrivalRideMatch,\n        })}\n        ride={ridesDict[formArrivalRideId]}\n        provision={provision}\n      />\n      <Visit\n        showDialog={showDialog}\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        visit={visit}\n        provision={provision}\n      />\n      <Ride\n        showDialog={(dialogName, dialogParams) =>\n          showDialog(dialogName, {\n            ...dialogParams,\n            departureVisitId: visitId,\n            arrivalVisitId: isDepartureRideMatch ? nextVisitId : undefined,\n          })\n        }\n        visitId={visitId}\n        className={cls(classes.ride, {\n          [classes.warning]: !isDepartureRideMatch,\n        })}\n        ride={ridesDict[formDepartureVisitId]}\n        provision={provision}\n      />\n    </div>\n  );\n}\n\nVisitAndRidesFormSection.propTypes = {};\n\nVisitAndRidesFormSection.defaultProps = {};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { FieldArray } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport Sortable from 'modules/components/Sortable';\nimport VisitCreator from './blocks/VisitCreator';\nimport VisitAndRidesFormSection from './blocks/VisitAndRidesFormSection';\n\nconst useStyles = makeStyles({\n  creatorsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  isCompact: {\n    marginTop: '-52px',\n  },\n  resetFlow: {\n    transform: 'translate(0, 0)',\n  },\n});\n\nfunction checkIsRidesMatch(\n  prevVisitFormValues,\n  visitFormValues,\n  nextVisitFormValues,\n) {\n  const isArrivalRideMatch = checkIsVisitsConnectedByRide(\n    prevVisitFormValues,\n    visitFormValues,\n  );\n  const isDepartureRideMatch = checkIsVisitsConnectedByRide(\n    visitFormValues,\n    nextVisitFormValues,\n  );\n  return { isDepartureRideMatch, isArrivalRideMatch };\n}\n\nexport default function VisitsAndRidesFormSection({\n  showDialog,\n  provision,\n  formikProps,\n}) {\n  const { values } = formikProps;\n  const {\n    trip: { visits: formVisitsIds },\n  } = values;\n\n  const { visitsDict } = provision;\n\n  const classes = useStyles();\n\n  const [creatorsNodeIndex, setCreatorsNodeIndex] = useState(\n    formVisitsIds.length,\n  );\n  const [isSorting, setIsSorting] = useState(false);\n\n  const showCreationDialog = (dialogName, dialogParams) => {\n    const [prevVisit, visit] = neighbors(formVisitsIds, creatorsNodeIndex).map(\n      visitId => (visitId && visitsDict[visitId]) || null,\n    );\n    showDialog(dialogName, {\n      ...dialogParams,\n      orderInTrip: calculateOrderInTripBetweenTwoVisits(prevVisit, visit),\n    });\n  };\n\n  if (!formVisitsIds.length) {\n    return <VisitCreator key=\"visitCreator\" showDialog={showCreationDialog} />;\n  }\n  return (\n    <FieldArray\n      name=\"trip.visits\"\n      render={arrayHelpers => (\n        <Sortable\n          className={classes.resetFlow}\n          updateBeforeSortStart={() => setIsSorting(true)}\n          onSortEnd={data => {\n            setIsSorting(false);\n            const { oldIndex, newIndex } = data;\n            const isVisitCreatorNodeMoved = oldIndex === creatorsNodeIndex;\n            if (isVisitCreatorNodeMoved) {\n              setCreatorsNodeIndex(newIndex);\n            } else {\n              arrayHelpers.move(oldIndex, newIndex);\n            }\n          }}\n        >\n          {formVisitsIds.flatMap((formVisitId, indexOfVisit) => {\n            const [prevVisit, visit, nextVisit] = neighbors(\n              formVisitsIds,\n              indexOfVisit,\n            ).map(visitId => (visitId && visitsDict[visitId]) || null);\n\n            const {\n              isArrivalRideMatch,\n              isDepartureRideMatch,\n            } = checkIsRidesMatch(prevVisit, visit, nextVisit);\n\n            const shouldCollapseRides =\n              indexOfVisit >= 1 &&\n              !isSorting &&\n              isArrivalRideMatch &&\n              creatorsNodeIndex !== indexOfVisit;\n\n            const visitAndRidesFormSectionNode = (\n              <VisitAndRidesFormSection\n                key={`v${formVisitId}`}\n                index={indexOfVisit /* for SortableNode */}\n                style={{ zIndex: formVisitsIds.length - indexOfVisit }}\n                className={cls({ [classes.isCompact]: shouldCollapseRides })}\n                showDialog={showDialog}\n                isArrivalRideMatch={isArrivalRideMatch}\n                isDepartureRideMatch={isDepartureRideMatch}\n                prevVisit={prevVisit}\n                visit={visit}\n                nextVisit={nextVisit}\n                formikProps={formikProps}\n                provision={provision}\n              />\n            );\n\n            const shouldInsertCreatorsNodeBeforeFormSection =\n              creatorsNodeIndex === indexOfVisit;\n            const shouldInsertCreatorsNodeAfterFormSection =\n              creatorsNodeIndex === formVisitsIds.length &&\n              creatorsNodeIndex === indexOfVisit + 1;\n\n            if (\n              !shouldInsertCreatorsNodeBeforeFormSection &&\n              !shouldInsertCreatorsNodeAfterFormSection\n            ) {\n              return visitAndRidesFormSectionNode;\n            }\n\n            const visitCreatorNode = (\n              <div style={{ zIndex: formVisitsIds.length + 1 }}>\n                <VisitCreator\n                  key=\"visitCreator\"\n                  showDialog={showCreationDialog}\n                />\n              </div>\n            );\n\n            if (shouldInsertCreatorsNodeBeforeFormSection) {\n              return [visitCreatorNode, visitAndRidesFormSectionNode];\n            }\n            return [visitAndRidesFormSectionNode, visitCreatorNode];\n          })}\n        </Sortable>\n      )}\n    />\n  );\n}\n\nVisitsAndRidesFormSection.propTypes = {};\n\nVisitsAndRidesFormSection.defaultProps = {};\n\nfunction calculateOrderInTripBetweenTwoVisits(prevVisit, nextVisit) {\n  const { orderInTrip: prevOrderInTrip } = prevVisit || {};\n  const { orderInTrip: nextOrderInTrip } = nextVisit || {};\n  if (!prevVisit) {\n    return nextOrderInTrip - 1;\n  }\n  if (!nextVisit) {\n    return prevOrderInTrip + 1;\n  }\n  const randomness =\n    ((Math.random() - 0.5) * (nextOrderInTrip - prevOrderInTrip)) / 2;\n  return (prevOrderInTrip + nextOrderInTrip) / 2 + randomness;\n}\n\nfunction neighbors(array, index) {\n  const prevValue = array[index - 1] || null;\n  const value = array[index] || null;\n  const nextValue = array[index + 1] || null;\n  return [prevValue, value, nextValue];\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\n\nexport default function TripEditTitle({\n  isCreation,\n  className,\n  provision,\n  formikProps: { values },\n}) {\n  const { trip: formTrip } = values;\n  const { visitsDict, countriesDict, locationsDict } = provision;\n\n  const modeCaption = isCreation\n    ? 'Создание поездки'\n    : 'Редактирование поездки';\n\n  const tripName = resolveTripCaption(\n    formTrip,\n    visitsDict,\n    countriesDict,\n    locationsDict,\n  );\n\n  const tripCaption = `${modeCaption}: \"${tripName}\"`;\n\n  return (\n    <Typography variant=\"h6\" className={className}>\n      {tripCaption}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TripEditFormSection from './blocks/TripEditFormSection';\nimport VisitsAndRidesFormSection from './blocks/VisitsAndRidesFormSection/VisitsAndRidesFormSection';\nimport TripEditTitle from './blocks/TripEditTitle';\nimport * as locators from '../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  actionButton: {\n    marginTop: '24px',\n  },\n  hint: {\n    color: 'gray',\n    fontSize: 12,\n    paddingLeft: '8px'\n  },\n});\n\nconst TripEditForm = ({ isCreation, showDialog, provision, formikProps }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TripEditTitle\n        className={classes.container}\n        formikProps={formikProps}\n        isCreation={isCreation}\n        provision={provision}\n      />\n      <Form>\n        <TripEditFormSection formikProps={formikProps} provision={provision} />\n        {!isCreation && (\n          <VisitsAndRidesFormSection\n            classes={classes}\n            showDialog={showDialog}\n            formikProps={formikProps}\n            provision={provision}\n          />\n        )}\n        <Button\n          data-locator={locators.SUBMIT_TRIP_BUTTON}\n          className={classes.actionButton}\n          type=\"submit\"\n          color=\"primary\"\n        >\n          {isCreation ? 'Создать' : 'Сохранить'}\n        </Button>\n        {isCreation && (\n          <div className={classes.hint}>\n            После создания поездки в нее можно будет добавить места посещения и\n            маршрут\n          </div>\n        )}\n      </Form>\n    </>\n  );\n};\n\nTripEditForm.propTypes = {\n  isCreation: PropTypes.bool.isRequired,\n};\n\nTripEditForm.defaultProps = {};\n\nexport default TripEditForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as locators from './locators';\n\nconst TRANSITION_DURATION_MS = 500;\n\nexport default function({\n  'data-locator': dataLocator,\n  isOpen,\n  title,\n  description,\n  children,\n  primaryButtonCaption,\n  primaryButtonHandler,\n  secondaryButtonCaption,\n  secondaryButtonHandler,\n  onClose,\n}) {\n  return (\n    <Dialog\n      data-locator={dataLocator}\n      transitionDuration={TRANSITION_DURATION_MS}\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{description}</DialogContentText>\n        {children}\n      </DialogContent>\n      <DialogActions>\n        {secondaryButtonHandler && (\n          <Button\n            data-locator={locators.RESET_BUTTON}\n            onClick={secondaryButtonHandler}\n            color=\"secondary\"\n          >\n            {secondaryButtonCaption}\n          </Button>\n        )}\n        {primaryButtonHandler && (\n          <Button\n            data-locator={locators.SUBMIT_BUTTON}\n            onClick={primaryButtonHandler}\n            color=\"primary\"\n          >\n            {primaryButtonCaption}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","export const SUBMIT_BUTTON = 'DIALOG.SUBMIT_BUTTON';\nexport const RESET_BUTTON = 'DIALOG.RESET_BUTTON';\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Dialog from '../Dialog';\n\nexport default function({\n  'data-locator': dataLocator,\n  initialValues,\n  isOpen,\n  onSubmit,\n  onReset,\n  title,\n  description,\n  children,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      enableReinitialize={true}\n      onSubmit={onSubmit}\n    >\n      {formikProps => (\n        <Dialog\n          data-locator={dataLocator}\n          description={description}\n          onClose={onReset}\n          isOpen={isOpen}\n          primaryButtonCaption=\"Сохранить\"\n          primaryButtonHandler={formikProps.handleSubmit}\n          secondaryButtonCaption=\"Отмена\"\n          secondaryButtonHandler={onReset}\n          title={title}\n        >\n          {React.cloneElement(children, { formikProps })}\n        </Dialog>\n      )}\n    </Formik>\n  );\n}\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n","import checkIsSameDay from 'date-fns/isSameDay';\nimport checkIsDatesEqual from 'date-fns/isEqual';\nimport addDays from 'date-fns/addDays';\nimport isValidDate from 'modules/utilities/dateTime/isValidDate';\n\nconst mixDateTime = ({ dateFrom, timeFrom }) => {\n  const isValidDateFrom = isValidDate(timeFrom);\n  const isValidTimeFrom = isValidDate(dateFrom);\n  if (isValidDateFrom && isValidTimeFrom) {\n    return new Date(\n      dateFrom.getFullYear(),\n      dateFrom.getMonth(),\n      dateFrom.getDate(),\n      timeFrom.getHours(),\n      timeFrom.getMinutes(),\n      timeFrom.getSeconds(),\n    );\n  }\n  return new Date(NaN);\n};\n\nfunction checkCanUpdate(nextDate, prevDate) {\n  return isValidDate(nextDate) && !checkIsDatesEqual(prevDate, nextDate);\n}\n\nexport default ({\n  arrivalDateTimeField: {\n    value: arrivalDateTimeValue,\n    onChange: onArrivalDateTimeChange,\n  },\n  departureDateTimeField: {\n    value: departureDateTimeValue,\n    onChange: onDepartureDateTimeChange,\n  },\n}) => {\n  const isSameDay = checkIsSameDay(\n    departureDateTimeValue,\n    arrivalDateTimeValue,\n  );\n\n  const updateFields = (\n    nextDepartureDateTimeValue,\n    nextArrivalDateTimeValue,\n  ) => {\n    if (checkCanUpdate(nextDepartureDateTimeValue, departureDateTimeValue)) {\n      onDepartureDateTimeChange(nextDepartureDateTimeValue);\n    }\n    if (checkCanUpdate(nextArrivalDateTimeValue, arrivalDateTimeValue)) {\n      onArrivalDateTimeChange(nextArrivalDateTimeValue);\n    }\n  };\n\n  const handleIsSameDayFlagChange = nextIsSameDay => {\n    if (Boolean(isSameDay) !== Boolean(nextIsSameDay)) {\n      updateFields(\n        departureDateTimeValue,\n        mixDateTime({\n          dateFrom: nextIsSameDay\n            ? departureDateTimeValue\n            : addDays(departureDateTimeValue, 1),\n          timeFrom: arrivalDateTimeValue,\n        }),\n      );\n    }\n  };\n\n  const handleRideDepartureChange = nextDepartureDateTimeValue => {\n    const nextArrivalDateTimeValue = isSameDay\n      ? mixDateTime({\n          timeFrom: arrivalDateTimeValue,\n          dateFrom: nextDepartureDateTimeValue,\n        })\n      : arrivalDateTimeValue;\n    updateFields(nextDepartureDateTimeValue, nextArrivalDateTimeValue);\n  };\n\n  const handleRideDepartureDateChange = nextDepartureDateTimeValue => {\n    handleRideDepartureChange(\n      mixDateTime({\n        dateFrom: nextDepartureDateTimeValue,\n        timeFrom: departureDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideDepartureTimeChange = nextDepartureDateTimeValue => {\n    handleRideDepartureChange(\n      mixDateTime({\n        dateFrom: departureDateTimeValue,\n        timeFrom: nextDepartureDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideArrivalChange = nextArrivalDateTimeValue => {\n    const nextDepartureDateTimeValue = isSameDay\n      ? mixDateTime({\n          timeFrom: departureDateTimeValue,\n          dateFrom: nextArrivalDateTimeValue,\n        })\n      : departureDateTimeValue;\n    updateFields(nextDepartureDateTimeValue, nextArrivalDateTimeValue);\n  };\n\n  const handleRideArrivalDateChange = nextArrivalDateTimeValue => {\n    handleRideArrivalChange(\n      mixDateTime({\n        dateFrom: nextArrivalDateTimeValue,\n        timeFrom: arrivalDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideArrivalTimeChange = nextArrivalDateTimeValue => {\n    handleRideArrivalChange(\n      mixDateTime({\n        dateFrom: arrivalDateTimeValue,\n        timeFrom: nextArrivalDateTimeValue,\n      }),\n    );\n  };\n\n  return {\n    isSameDateField: {\n      value: isSameDay,\n      onChange: handleIsSameDayFlagChange,\n    },\n    rideDepartureDateField: {\n      value: departureDateTimeValue,\n      onChange: handleRideDepartureDateChange,\n    },\n    rideArrivalDateField: {\n      value: arrivalDateTimeValue,\n      onChange: handleRideArrivalDateChange,\n    },\n    rideDepartureTimeField: {\n      value: departureDateTimeValue,\n      onChange: handleRideDepartureTimeChange,\n    },\n    rideArrivalTimeField: {\n      value: arrivalDateTimeValue,\n      onChange: handleRideArrivalTimeChange,\n    },\n  };\n};\n","import React  from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport VisitInfo from 'travel/components/models/visits/VisitInfo';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from './localization';\nimport tieDateTimeFields from './tieDateTimeFields';\nimport * as locators from './locators';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVisit = visitsDict => ({ option: visitId }) => {\n  if (visitId === ORIGIN_OF_TRIP) {\n    return 'Пункт отправления';\n  }\n  return <VisitInfo visit={visitsDict[visitId]} />;\n};\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nconst useStyles = makeStyles({\n  option: {\n    width: '100%',\n  },\n});\n\nconst RideEditFormSection = ({\n  tripVisitsIds,\n  visitsDict,\n  formikProps: {\n    values: {\n      vehicleType,\n      rideType,\n      rideComment,\n      rideClass,\n      rideOccupation,\n      departureVisitId,\n      departureDateTime,\n      arrivalVisitId,\n      arrivalDateTime,\n    },\n    handleChange,\n    setFieldValue,\n  },\n}) => {\n  const classes = useStyles();\n  const isTripHasVisits = tripVisitsIds && tripVisitsIds.length > 0;\n  const {\n    rideArrivalDateField,\n    rideArrivalTimeField,\n    rideDepartureDateField,\n    rideDepartureTimeField,\n    isSameDateField,\n  } = tieDateTimeFields({\n    arrivalDateTimeField: {\n      value: arrivalDateTime,\n      onChange: nextArrivalDateTime =>\n        setFieldValue('arrivalDateTime', nextArrivalDateTime),\n    },\n    departureDateTimeField: {\n      value: departureDateTime,\n      onChange: nextDepartureDateTime =>\n        setFieldValue('departureDateTime', nextDepartureDateTime),\n    },\n  });\n\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      {isTripHasVisits && (\n        <>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              data-locator={locators.DEPARTURE_VISIT_SELECT}\n              name=\"departureVisitId\"\n              caption=\"Отправление из\"\n              inputId=\"RideEditCard-departureVisitId\"\n              optionRender={renderVisit(visitsDict)}\n              hasNullOption={false}\n              options={[ORIGIN_OF_TRIP, ...tripVisitsIds]}\n              value={departureVisitId}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              data-locator={locators.ARRIVAL_VISIT_SELECT}\n              name=\"arrivalVisitId\"\n              caption=\"Прибытие в\"\n              inputId=\"RideEditCard-arrivalVisitId\"\n              hasNullOption={false}\n              optionRender={renderVisit(visitsDict)}\n              options={[...tripVisitsIds, ORIGIN_OF_TRIP]}\n              onChange={handleChange}\n              value={arrivalVisitId}\n            />\n          </Grid>\n        </>\n      )}\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.VEHICLE_TYPE_SELECT}\n          name=\"vehicleType\"\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          onChange={handleChange}\n          value={vehicleType}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_TYPE_SELECT}\n          name=\"rideType\"\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          onChange={handleChange}\n          value={rideType}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_CLASS_SELECT}\n          name=\"rideClass\"\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          onChange={handleChange}\n          value={rideClass}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_OCCUPATION_SELECT}\n          name=\"rideOccupation\"\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          onChange={handleChange}\n          value={rideOccupation}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardDatePicker\n          data-locator={locators.DEPARTURE_DATE_PICKER}\n          name=\"departureDateTime\"\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          value={rideDepartureDateField.value}\n          onChange={rideDepartureDateField.onChange}\n          format=\"dd/MM/yyyy\"\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        {isSameDateField.value ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSameDateField.value}\n                onChange={event =>\n                  isSameDateField.onChange(event.target.checked)\n                }\n              />\n            }\n            label=\"Прибытие в тот же день\"\n          />\n        ) : (\n          <KeyboardDatePicker\n            data-locator={locators.ARRIVAL_DATE_PICKER}\n            name=\"arrivalDateTime\"\n            autoOk={true}\n            className={classes.option}\n            label=\"Дата прибытия\"\n            value={rideArrivalDateField.value}\n            onChange={rideArrivalDateField.onChange}\n            format=\"dd/MM/yyyy\"\n          />\n        )}\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardTimePicker\n          name=\"departureDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          value={rideDepartureTimeField.value}\n          onChange={rideDepartureTimeField.onChange}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardTimePicker\n          name=\"arrivalDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          value={rideArrivalTimeField.value}\n          onChange={rideArrivalTimeField.onChange}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <TextField\n          name=\"rideComment\"\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={handleChange}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nRideEditFormSection.propTypes = {};\nRideEditFormSection.defaultProps = {};\n\nexport default RideEditFormSection;\n","export const DEPARTURE_VISIT_SELECT =\n  'RIDE_EDIT_FORM_SECTION.DEPARTURE_VISIT_SELECT';\nexport const ARRIVAL_VISIT_SELECT =\n  'RIDE_EDIT_FORM_SECTION.ARRIVAL_VISIT_SELECT';\nexport const VEHICLE_TYPE_SELECT = 'RIDE_EDIT_FORM_SECTION.VEHICLE_TYPE_SELECT';\nexport const RIDE_TYPE_SELECT = 'RIDE_EDIT_FORM_SECTION.RIDE_TYPE_SELECT';\nexport const RIDE_CLASS_SELECT = 'RIDE_EDIT_FORM_SECTION.RIDE_CLASS_SELECT';\nexport const RIDE_OCCUPATION_SELECT =\n  'RIDE_EDIT_FORM_SECTION.RIDE_OCCUPATION_SELECT';\nexport const DEPARTURE_DATE_PICKER =\n  'RIDE_EDIT_FORM_SECTION.DEPARTURE_DATE_PICKER';\nexport const ARRIVAL_DATE_PICKER = 'RIDE_EDIT_FORM_SECTION.ARRIVAL_DATE_PICKER';\n","import React from 'react';\nimport FormDialog from 'modules/components/FormDialog';\nimport RideEditFormSection from 'travel/components/models/rides/RideEditFormSection';\nimport * as locators from '../../../../locators';\n\nexport default function RideEditDialog({\n  isCreation,\n  tripVisitsIds,\n  visitsDict,\n  ...forwardingProps\n}) {\n  return (\n    <FormDialog\n      data-locator={locators.RIDE_DIALOG}\n      title={isCreation ? 'Создание маршрута' : 'Редактирование маршрута'}\n      {...forwardingProps}\n    >\n      <RideEditFormSection\n        tripVisitsIds={tripVisitsIds}\n        visitsDict={visitsDict}\n        formikProps={null /* will be passed in FormDialog */}\n      />\n    </FormDialog>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport Suggest, { QUERY_FORMATS } from 'modules/components/muiExtended/Suggest';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport * as locators from './locators';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n\nconst renderRide = ridesDict => ({ option: rideId }) => (\n  <RideInfo ride={ridesDict[rideId]} isLong={true} />\n);\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nconst useStyles = makeStyles({\n  option: {\n    width: '100%',\n  },\n});\n\nexport default function VisitEditFormSection({\n  tripRidesIds,\n  ridesDict,\n  formikProps: {\n    values: {\n      locationName,\n      visitType,\n      visitComment,\n      arrivalRideId,\n      departureRideId,\n    },\n    handleChange,\n    handleBlur,\n    setFieldValue,\n  },\n}) {\n  const classes = useStyles();\n  const isTripHasRides = tripRidesIds && tripRidesIds.length > 0;\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={12}>\n        <Suggest\n          data-locator={locators.LOCATION_SUGGEST}\n          inputProps={{\n            placeholder: 'Место посещения...',\n          }}\n          initialInputValue={locationName}\n          onChange={({ suggestion: { geonameId } }) =>\n            setFieldValue('geonameId', geonameId)\n          }\n          onBlur={handleBlur}\n          sourceProps={{\n            domain: 'visitEditFormSection.geoname',\n            modelName: 'geonames',\n            filterField: 'locationName',\n            queryFormat: QUERY_FORMATS.SEARCH,\n          }}\n          transformSuggestionToOption={transformSuggestionToOption}\n          triggerProps={{ label: 'Место посещения' }}\n        />\n      </Grid>\n      {isTripHasRides && (\n        <>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"arrivalRideId\"\n              caption=\"Прибытие\"\n              inputId=\"RideEditCard-arrivalVisitId\"\n              hasNullOption={false}\n              optionRender={renderRide(ridesDict)}\n              options={tripRidesIds}\n              onChange={handleChange}\n              value={arrivalRideId}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"departureRideId\"\n              caption=\"Отправление\"\n              inputId=\"RideEditCard-departureVisitId\"\n              optionRender={renderRide(ridesDict)}\n              hasNullOption={false}\n              options={tripRidesIds}\n              value={departureRideId}\n              onChange={handleChange}\n            />\n          </Grid>\n        </>\n      )}\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.VISIT_TYPE_SELECT}\n          name=\"visitType\"\n          value={visitType}\n          onChange={handleChange}\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <TextField\n          className={classes.option}\n          name=\"visitComment\"\n          value={visitComment}\n          onChange={handleChange}\n          label=\"Комментарий\"\n          fullWidth={true}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nVisitEditFormSection.propTypes = {};\nVisitEditFormSection.defaultProps = {};\n\nfunction transformSuggestionToOption(suggestion) {\n  const { locationName, countryName, regionName } = suggestion;\n  return {\n    label: locationName,\n    details: [countryName, regionName].filter(Boolean).join(', '),\n    suggestion,\n  };\n}\n","export const LOCATION_SUGGEST = 'VISIT_EDIT_FORM_SECTION.LOCATION_SUGGEST';\nexport const VISIT_TYPE_SELECT = 'VISIT_EDIT_FORM_SECTION.VISIT_TYPE_SELECT';\n","import React from 'react';\nimport FormDialog from 'modules/components/FormDialog';\nimport VisitEditFormSection from 'travel/components/models/visits/VisitEditFormSection';\nimport * as locators from '../../../../locators';\n\nexport default function VisitEditDialog({\n  isCreation,\n  tripRidesIds,\n  ridesDict,\n  ...forwardingProps\n}) {\n  return (\n    <FormDialog\n      data-locator={locators.VISIT_DIALOG}\n      title={isCreation ? 'Создание посещения' : 'Редактирование посещения'}\n      {...forwardingProps}\n    >\n      <VisitEditFormSection\n        tripRidesIds={tripRidesIds}\n        ridesDict={ridesDict}\n        formikProps={null /* will be passed in FormDialog */}\n      />\n    </FormDialog>\n  );\n}\n","import React from 'react';\nimport Dialog from 'modules/components/Dialog';\nimport VisitInfo from 'travel/components/models/visits/VisitInfo';\n\nexport default function VisitDeleteDialog({\n  visit,\n  onSubmit,\n  onReset,\n  ...forwardingProps\n}) {\n  return (\n    <Dialog\n      title=\"Удалить посещение\"\n      description=\"Вы действительно хотите удалить посещение\"\n      primaryButtonCaption=\"Да\"\n      primaryButtonHandler={event => onSubmit(event, visit)}\n      secondaryButtonCaption=\"Нет\"\n      secondaryButtonHandler={onReset}\n      {...forwardingProps}\n    >\n      <VisitInfo visit={visit} />\n    </Dialog>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { initializeRide } from 'travel/models/rides';\nimport { initializeVisit } from 'travel/models/visits';\nimport RideEditDialog from './blocks/RideEditDialog';\nimport VisitEditDialog from './blocks/VisitEditDialog';\nimport VisitDeleteDialog from './blocks/VisitDeleteDialog';\nimport { DIALOG_NAMES } from '../../useTripEditPageDialogs';\n\nexport default function TripEditAssociatedDialogs({\n  provision,\n  dialogsState,\n  hideDialog,\n  handleSubmitRide,\n  handleSubmitVisit,\n  handleDeleteVisit,\n  trip,\n}) {\n  const { ridesDict, visitsDict } = provision;\n  const { tripId, visits: tripVisitsIds, rides: tripRidesIds } = trip;\n  const { dialogName, dialogParams = {} } = dialogsState;\n\n  const initialRideValues = useMemo(\n    () => {\n      const { rideId } = dialogParams;\n      const initialValues = rideId ? ridesDict[rideId] : initializeRide();\n      return {\n        ...initialValues,\n        ...dialogParams,\n        tripId,\n      };\n    },\n    [ridesDict, tripId, dialogParams],\n  );\n\n  const initialVisitValues = useMemo(\n    () => {\n      const { visitId } = dialogParams;\n      const initialValues = visitId ? visitsDict[visitId] : initializeVisit();\n      return {\n        ...initialValues,\n        ...dialogParams,\n        tripId,\n      };\n    },\n    [visitsDict, tripId, dialogParams],\n  );\n\n  const isRideEditDialogShown = checkIsRideEditDialogShown(dialogName);\n  const isVisitEditDialogShown = checkIsVisitEditDialogShown(dialogName);\n  const isVisitDeleteDialogShown = dialogName === DIALOG_NAMES.VISIT_DELETE;\n  return (\n    <>\n      <RideEditDialog\n        initialValues={initialRideValues}\n        tripVisitsIds={tripVisitsIds}\n        isOpen={isRideEditDialogShown}\n        onSubmit={values => {\n          handleSubmitRide(values);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n        isCreation={dialogName === DIALOG_NAMES.RIDE_CREATE}\n        visitsDict={visitsDict}\n      />\n      <VisitEditDialog\n        initialValues={initialVisitValues}\n        tripRidesIds={tripRidesIds}\n        isOpen={isVisitEditDialogShown}\n        onSubmit={values => {\n          handleSubmitVisit(values);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n        isCreation={dialogName === DIALOG_NAMES.VISIT_CREATE}\n        ridesDict={ridesDict}\n      />\n      <VisitDeleteDialog\n        visit={visitsDict[dialogParams.visitId]}\n        isOpen={isVisitDeleteDialogShown}\n        onSubmit={(event, { visitId }) => {\n          handleDeleteVisit(visitId);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n      />\n    </>\n  );\n}\n\nfunction checkIsRideEditDialogShown(dialogName) {\n  return (\n    dialogName === DIALOG_NAMES.RIDE_EDIT ||\n    dialogName === DIALOG_NAMES.RIDE_CREATE\n  );\n}\n\nfunction checkIsVisitEditDialogShown(dialogName) {\n  return (\n    dialogName === DIALOG_NAMES.VISIT_EDIT ||\n    dialogName === DIALOG_NAMES.VISIT_CREATE\n  );\n}\n","const INITIAL_ORDER = 100;\nexport default ({ orderResolver: resolveOrder }) => ({ index, collection }) => {\n  if (!collection.length) {\n    return INITIAL_ORDER;\n  }\n  if (index <= 0) {\n    return resolveOrder(collection[0]) - 1;\n  }\n  if (index >= collection.length - 1) {\n    return resolveOrder(collection[collection.length - 1]) + 1;\n  }\n  const prevOrder = resolveOrder(collection[index - 1]);\n  const nextOrder = resolveOrder(collection[index]);\n  const randomness = ((Math.random() - 0.5) * (nextOrder - prevOrder)) / 2;\n  return (prevOrder + nextOrder) / 2 + randomness;\n};\n","import { useCallback } from 'react';\nimport { useRequest } from 'core/connection';\nimport createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nconst domain = 'travel.TripEditPage';\n\nexport default function useTripEditRequests(invalidate) {\n  const [submitRide] = useRequest({\n    domain: `${domain}.rides`,\n    modelName: 'rides',\n  });\n  const handleSubmitRide = useCallback(\n    ride =>\n      submitRide({\n        query: {\n          id: ride.rideId,\n          body: ride,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [submitTrip] = useRequest({\n    domain: `${domain}.trips`,\n    modelName: 'trips',\n  });\n  const handleSubmitTrip = useCallback(\n    trip =>\n      submitTrip({\n        query: {\n          id: trip.tripId,\n          body: trip,\n        },\n      }).finally(invalidate),\n    [],\n  );\n\n  const [submitVisit] = useRequest({\n    domain: `${domain}.visits`,\n    modelName: 'visits',\n  });\n\n  const handleSubmitVisit = useCallback(\n    visit =>\n      submitVisit({\n        query: {\n          id: visit.visitId,\n          body: visit,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [deleteVisit] = useRequest({\n    domain: `${domain}.visits`,\n    modelName: 'visits',\n  });\n\n  const handleDeleteVisit = useCallback(\n    visitId =>\n      deleteVisit({\n        method: 'DELETE',\n        query: {\n          id: visitId,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  return {\n    handleSubmitRide,\n    handleSubmitTrip,\n    handleSubmitVisit,\n    handleDeleteVisit,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { usePaths } from 'modules/packages';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { useTripsStats } from 'travel/dataSource';\nimport { initializeTrip } from 'travel/models/trips';\nimport TripEditForm from './blocks/TripEditForm';\nimport TripEditAssociatedDialogs from './blocks/TripEditAssociatedDialogs';\nimport useTripEditRequests from './useTripEditRequests';\nimport useTripEditPageDialogs from './useTripEditPageDialogs';\n\nfunction TripEditPage({\n  match: {\n    params: { userAlias, strTripId, action },\n  },\n}) {\n  const {\n    travel: { tripEdit: tripEditPath },\n  } = usePaths();\n  const history = useHistory();\n  const isCreation = action === 'create';\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const tripId = strTripId && parseInt(strTripId, 10);\n  const provision = useTripsStats({\n    userAlias,\n    tripsIds: tripId ? [tripId] : [],\n  });\n  const { tripsDict, tripsProvision } = provision;\n  const trip = isCreation ? initializeTrip() : tripsDict[tripId];\n\n  const {\n    handleSubmitRide,\n    handleSubmitTrip,\n    handleSubmitVisit,\n    handleDeleteVisit,\n  } = useTripEditRequests(tripsProvision.invalidate);\n\n  const { showDialog, hideDialog, dialogsState } = useTripEditPageDialogs();\n\n  const { isError, isReady, isPending } = provision;\n  if ((!tripId || (isReady && !trip)) && !isCreation) {\n    return <div>Запрашиваемая вами страница не найдена</div>;\n  }\n  if (!isAuthenticated || authenticatedUserAlias !== userAlias) {\n    return <div>У вас не достаочно прав для просмотра данной страницы</div>;\n  }\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  if (!trip) {\n    return <div>...Error, no trip is provided</div>;\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={{ trip }}\n        onSubmit={values => {\n          return handleSubmitTrip(values.trip).then(newTripId => {\n            if (tripId || !newTripId) {\n              return;\n            }\n            const tripEditPageUrl = tripEditPath.toUrl({\n              userAlias,\n              strTripId: String(newTripId),\n            });\n            history.push(tripEditPageUrl);\n          });\n        }}\n      >\n        {formikProps => (\n          <TripEditForm\n            isCreation={isCreation}\n            showDialog={showDialog}\n            formikProps={formikProps}\n            provision={provision}\n          />\n        )}\n      </Formik>\n      <TripEditAssociatedDialogs\n        provision={provision}\n        dialogsState={dialogsState}\n        hideDialog={hideDialog}\n        handleSubmitRide={handleSubmitRide}\n        handleSubmitVisit={handleSubmitVisit}\n        handleDeleteVisit={handleDeleteVisit}\n        trip={trip}\n      />\n    </>\n  );\n}\n\nTripEditPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default TripEditPage;\n","function degToRad(degree) {\n  const DEGREES_IN_CIRCLE = 360;\n  return (degree / DEGREES_IN_CIRCLE) * 2 * Math.PI;\n}\n\nfunction hexToRgba(hex, alpha) {\n  const match = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  const rgba = match\n    ? {\n        r: parseInt(match[1], 16),\n        g: parseInt(match[2], 16),\n        b: parseInt(match[3], 16),\n        a: alpha,\n      }\n    : { r: 0, g: 0, b: 0, a: 0 };\n  return `rgba(${rgba.r},${rgba.g},${rgba.b},${rgba.a})`;\n}\n\nconst backgroundColor = '#FFF';\nconst STRIPLES_ANGLE_DEG = 45;\nconst STRIPLES_WIDTH_PX = 20;\nconst STRIPLES_SHIFT_PX =\n  4 * STRIPLES_WIDTH_PX * Math.cos(degToRad(STRIPLES_ANGLE_DEG));\n\nfunction makeStriplesBackground(color, opacity = 0.4) {\n  const actualColor = hexToRgba(color, opacity);\n  return {\n    background: `repeating-linear-gradient(\n      ${STRIPLES_ANGLE_DEG}deg,\n      ${backgroundColor},\n      ${backgroundColor} ${STRIPLES_WIDTH_PX}px,\n      ${actualColor} ${STRIPLES_WIDTH_PX}px,\n      ${actualColor} ${2 * STRIPLES_WIDTH_PX}px\n    )`,\n    backgroundSize: `calc(100% + ${STRIPLES_SHIFT_PX}px)`,\n  };\n}\n\nexport default function resolveDropzoneStyles(theme) {\n  return {\n    dropzoneContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-around',\n      height: '100%',\n      minHeight: '144px',\n      padding: '0 12px',\n      margin: '12px 0',\n      cursor: 'pointer',\n    },\n    dropzoneStandby: {\n      '& $dropzoneContainer': {\n        border: `2px dashed ${theme.palette.primary.dark}`,\n        borderRadius: '4px',\n        ...makeStriplesBackground(theme.palette.primary.light, 0.2),\n      },\n      '& $dropzoneUpload': {\n        borderColor: theme.palette.disabled.dark,\n        ...makeStriplesBackground(theme.palette.disabled.main, 0.2),\n        animation: '$slide 2s infinite linear forwards',\n      },\n    },\n    dropzoneActive: {\n      border: `2px dashed ${theme.palette.secondary.dark}`,\n      animation: '$slide 2s infinite linear forwards',\n      ...makeStriplesBackground(theme.palette.secondary.light),\n      '&$dropzoneAccept': {\n        borderColor: theme.palette.secondary.dark,\n        ...makeStriplesBackground(theme.palette.secondary.main),\n        animation: '$slide 2s infinite linear forwards',\n      },\n      '&$dropzoneReject': {\n        borderColor: theme.palette.error.dark,\n        ...makeStriplesBackground(theme.palette.error.main),\n        animation: '$slide 2s infinite linear forwards',\n      },\n    },\n    dropzoneAccept: {},\n    dropzoneReject: {},\n    dropzoneUpload: {},\n    '@keyframes slide': {\n      '0%': {\n        backgroundPositionX: `-${STRIPLES_SHIFT_PX}px`,\n      },\n      '100%': {\n        backgroundPositionX: 0,\n      },\n    },\n  };\n}\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { useVisit, useAddVisitPhotoRequest } from 'travel/dataSource';\nimport VisitInfo from 'travel/components/models/visits/VisitInfo';\nimport resolveDropzoneStyles from './resolveDropzoneStyles';\n\nconst UPLOAD_IMAGE_MIN_SIZE = 50 * 1024;\nconst UPLOAD_IMAGE_MAX_SIZE = 5 * 1024 * 1024;\n\nconst useStyles = makeStyles(theme => ({\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  photosContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  photoContainer: {\n    margin: '4px 12px 12px',\n    minWidth: '150px',\n    maxHeight: '100px',\n    textAlign: 'center',\n  },\n  photo: {\n    maxWidth: '150px',\n    borderRadius: '4px',\n  },\n  ...resolveDropzoneStyles(theme),\n}));\n\nconst domain = 'travel.VisitEditPage';\nexport default function VisitEditPage({\n  match: {\n    params: { userAlias, strVisitId },\n  },\n}) {\n  const classes = useStyles();\n  const [progress, setProgress] = useState(null);\n  const [rejectedFiles, setRejectedFiles] = useState([]);\n  const isUploadInProgress = progress !== null;\n\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const { isError, isPending, visit } = useVisit({\n    domain,\n    userAlias,\n    visitId: Number(strVisitId),\n  });\n\n  const { submitVisitPhoto } = useAddVisitPhotoRequest({\n    domain,\n    userAlias,\n    visitId: Number(strVisitId),\n  });\n\n  const handleSubmitPhotos = useCallback((acceptedFiles, rejectedFiles) => {\n    if (rejectedFiles) {\n      setRejectedFiles(rejectedFiles);\n    }\n    setProgress(1);\n    return submitVisitPhoto({\n      id: Number(strVisitId),\n      data: acceptedFiles,\n    }).finally(() => setProgress(null));\n  }, submitVisitPhoto);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    accept: 'image/*',\n    disabled: isUploadInProgress,\n    onDrop: handleSubmitPhotos,\n    maxSize: UPLOAD_IMAGE_MAX_SIZE,\n    minSize: UPLOAD_IMAGE_MIN_SIZE,\n  });\n\n  const isEditable = isAuthenticated && authenticatedUserAlias === userAlias;\n\n  if (!isEditable) {\n    return <div>Ошибка. Нет доступа</div>;\n  }\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  if (!visit) {\n    return <div>...Не найдено посещение</div>;\n  }\n\n  const { photos } = visit;\n\n  return (\n    <div\n      {...getRootProps()}\n      className={cls({\n        [classes.dropzoneStandby]: !isDragActive,\n        [classes.dropzoneActive]: isDragActive,\n        [classes.dropzoneAccept]: isDragAccept,\n        [classes.dropzoneReject]: isDragReject,\n      })}\n    >\n      <VisitInfo visit={visit} isLong={true} />\n      <div\n        className={cls(classes.dropzoneContainer, {\n          [classes.dropzoneUpload]: isUploadInProgress,\n        })}\n      >\n        <input {...getInputProps()} />\n        {renderDropzoneCaption({ isDragActive, isUploadInProgress })}\n        {rejectedFiles.length > 0 && (\n          <div>\n            Не удалось загрузить следующие файлы:\n            {rejectedFiles.map(rejectedFile => (\n              <div key={rejectedFile.path}>{renderFile(rejectedFile)}</div>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className={classes.photosContainer}>\n        {photos.map(({ thumbnailUrl }) => (\n          <div key={thumbnailUrl} className={classes.photoContainer}>\n            <img className={classes.photo} src={thumbnailUrl} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nVisitEditPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n      strVisitId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nfunction renderDropzoneCaption({ isDragActive, isUploadInProgress }) {\n  switch (true) {\n    case isUploadInProgress:\n      return 'Идет загрузка, пожалуйста не закрывайте браузер';\n    case isDragActive:\n      return 'Загрузить фотографии';\n    default:\n      return 'Перенесите сюда фотографии для загрузки или кликните, что-бы выбрать файлы';\n  }\n}\n\nfunction renderFile({ file, errors }) {\n  const errorsMessage = errors.map(({ message }) => message).join(', ');\n  return `${file.path} - ${file.size} bytes, reason: ${errorsMessage}`;\n}\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport mapValues from 'lodash/mapValues';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias, tripsIds: requiredTripsIds }) {\n  const { tripsDict } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n  }));\n  const shouldRequireAllTrips = !requiredTripsIds;\n  const missingTripsIds =\n    !shouldRequireAllTrips &&\n    requiredTripsIds.filter(tripId => !tripsDict[tripId]);\n\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: {\n      userAlias,\n      navigation: { isDisabled: true },\n      filter: shouldRequireAllTrips\n        ? {}\n        : { id: { comparator: 'in', value: missingTripsIds } },\n    },\n  });\n}\n\nexport function useTripsStats({ userAlias, tripsIds: requiredTripsIds }) {\n  const tripsProvision = useTrips({ userAlias, tripsIds: requiredTripsIds });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = useMemo(\n    () =>\n      Array.from(\n        new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n      ),\n    [tripsIds, tripsDict],\n  );\n\n  const ridesIds = useMemo(\n    () =>\n      Array.from(\n        new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n      ),\n    [tripsIds, tripsDict],\n  );\n\n  const countriesIds = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || []),\n        ),\n      ),\n    [visitsIds, visitsDict],\n  );\n\n  const locationsIds = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n        ),\n      ),\n    [visitsIds, visitsDict],\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  const countriesRating = calcCountriesRating(\n    locationsIds,\n    locationsDict,\n    locationsRating,\n  );\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n    countriesRating,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n    invalidate: () => provisions.forEach(({ invalidate }) => invalidate()),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n\nfunction calcCountriesRating(locationsIds, locationsDict, locationsRating) {\n  const ratingsGroupedByCountries = locationsIds.reduce((memo, locationId) => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return memo;\n    }\n    const locationRating = locationsRating[locationId];\n    const { countryId } = location;\n    if (!memo[countryId]) {\n      memo[countryId] = [];\n    }\n    memo[countryId].push(locationRating);\n    return memo;\n  }, {});\n\n  return mapValues(ratingsGroupedByCountries, ratingsByCountry =>\n    averageRating(ratingsByCountry),\n  );\n}\n\nfunction averageRating(ratings) {\n  if (!ratings.length) {\n    return Infinity;\n  }\n  const avg =\n    ratings.length / ratings.map(rating => 1 / rating).reduce((a, b) => a + b);\n\n  const best = max(ratings);\n\n  const lengthRatio = Math.log(ratings.length);\n\n  return 1 / (1 / avg + lengthRatio / best);\n}\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  return useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n}\n","export default function isValidDate(date) {\n  return date instanceof Date && !Number.isNaN(date.getTime());\n}\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport ru from 'date-fns/locale/ru';\nimport dateFormat from 'modules/utilities/dateTime/safeDateFormat';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  MONTH_YEAR: 'LLLL yyyy',\n  MONTH_ONLY: 'LLLL',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nfunction dateTimePeriodToString(periodStart, periodEnd, isObscure) {\n  const fullFormat = isObscure ? DATE_FORMATS.MONTH_YEAR : DATE_FORMATS.FULL;\n  const periodEndString = dateFormat(periodEnd, fullFormat, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    if (!isObscure) {\n      periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n        locale: ru,\n      });\n    }\n  } else if (isSameYear(periodStart, periodEnd)) {\n    const shortFormat = isObscure\n      ? DATE_FORMATS.MONTH_ONLY\n      : DATE_FORMATS.DAY_MONTH;\n    periodStartString = dateFormat(periodStart, shortFormat, { locale: ru });\n  } else {\n    periodStartString = dateFormat(periodStart, fullFormat, { locale: ru });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString(\n  { departureDateTime, arrivalDateTime },\n  isObscure,\n) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime, isObscure);\n}\n\nexport function visitDateTimePeriodToString(\n  { departureDateTime, arrivalDateTime },\n  isObscure,\n) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime, isObscure);\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  return useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useVisit({ userAlias, visitId: requiredVisitId }) {\n  const { visitsDict } = useSelector(state => ({\n    visitsDict: selectDict(state, 'visits') || {},\n  }));\n  const visit = visitsDict[requiredVisitId];\n\n  return {\n    visit,\n    ...useProvision({\n      domain: `travel.visit${requiredVisitId}-${userAlias}`,\n      isProvision: true,\n      modelName: 'visits',\n      observe: requiredVisitId,\n      condition: !visit,\n      query: {\n        userAlias,\n        filter: { visit_id: { comparator: '=', value: requiredVisitId } },\n        navigation: { isDisabled: true },\n      },\n    }),\n  };\n}\n\nexport function useAddVisitPhotoRequest({ domain }) {\n  const [submitVisitPhoto, provision] = useRequest({\n    domain,\n    modelName: 'visits',\n    method: 'POST',\n    contentType: 'multipart/form-data',\n  });\n\n  return {\n    ...provision,\n    submitVisitPhoto,\n  };\n}\n","import dateFormat from 'date-fns/format';\nimport isValidDate from './isValidDate';\n\nexport default function safeDateFormat(date, ...args) {\n  if (!isValidDate(date)) {\n    return '?';\n  }\n  return dateFormat(date, ...args);\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { RIDE_TYPES } from 'travel/models/rides/consts';\nimport RideIcon from 'travel/components/models/rides/RideIcon';\n\nconst useStyles = makeStyles({\n  icon: { color: 'gray', fontSize: 16, height: 16 },\n  absoluteIcon: {\n    // todo fast decision, need refactor\n    color: 'gray',\n    fontSize: 16,\n    height: 16,\n    position: 'absolute',\n  },\n  detail: { color: 'gray', fontSize: 12 },\n});\n\nexport default function RideInfo({\n  ride,\n  ride: { rideType } = {},\n  className,\n  isLong,\n}) {\n  const classes = useStyles();\n\n  if (!ride) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <RideIcon ride={ride} className={classes.icon} />\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.absoluteIcon} />\n      )}\n      {isLong && rideDateTimePeriodToString(ride)}\n    </div>\n  );\n}\n","import React from 'react';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { VEHICLE_TYPES } from 'travel/models/rides/consts';\n\nexport default function RideIcon({ ride: { vehicleType }, className }) {\n  const IconComponent = resolveRideIconComponent(vehicleType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(vehicleType) {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n      return CustomTransportIcon;\n    default:\n      return UnknownRideIcon;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VisitIcon from '../VisitIcon';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  period: {\n    display: 'inline',\n    color: 'gray',\n    fontSize: 12,\n  },\n});\n\nconst VisitInfo = ({ visit, isLong }) => {\n  const classes = useStyles();\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName } = visit;\n  return (\n    <div className={classes.container}>\n      <VisitIcon visit={visit} className={classes.icon} />\n      {`${locationName}${isLong ? ', ' : ''}`}\n      <div className={classes.period}>\n        {isLong && visitDateTimePeriodToString(visit)}\n      </div>\n    </div>\n  );\n};\n\nVisitInfo.propTypes = {\n  visit: PropTypes.shape(visitPropTypes),\n};\n\nVisitInfo.defaultProps = {\n  visit: {},\n};\n\nexport default VisitInfo;\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import dateMin from 'date-fns/min';\nimport dateMax from 'date-fns/max';\nimport groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\n\nconst FALLBACK = 'Без названия';\nexport default function resolveTripCaption(\n  trip,\n  visitsDict,\n  countriesDict,\n  locationsDict,\n) {\n  const {\n    visits: visitsIds,\n    originLocationId,\n    tripName,\n    hasAutogeneratedTripName,\n  } = trip || {};\n\n  const originCountryId = locationsDict[originLocationId]?.countryId;\n\n  if (!hasAutogeneratedTripName) {\n    return tripName || FALLBACK;\n  }\n  if (!visitsIds.length) {\n    return FALLBACK;\n  }\n\n  const periodStr = visitDateTimePeriodToString({\n    arrivalDateTime: dateMin(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.arrivalDateTime),\n    ),\n    departureDateTime: dateMax(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.departureDateTime),\n    ),\n  });\n\n  const visitsByCountries = Object.keys(\n    groupBy(\n      visitsIds.filter(\n        visitId => visitsDict[visitId]?.visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n\n  if (visitsByCountries.length === 1) {\n    const locationsNames = uniqTrimAndJoin(\n      visitsIds.map(visitId => visitsDict[visitId]?.locationName),\n      { maxLength: 4 },\n    );\n    return `${locationsNames || FALLBACK}, ${periodStr}`;\n  }\n\n  const countriesNames = uniqTrimAndJoin(\n    visitsByCountries\n      .map(\n        countryId =>\n          Number(countryId) !== originCountryId &&\n          countriesDict[countryId] &&\n          countriesDict[countryId].countryName,\n      )\n      .filter(Boolean),\n    { maxLength: 4 },\n  );\n  return `${countriesNames || FALLBACK}, ${periodStr}`;\n}\n"],"sourceRoot":""}