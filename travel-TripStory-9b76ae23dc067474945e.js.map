{"version":3,"sources":["webpack:///./src/packages/travel/pages/VisitsPage/useVisitsPageStyles.js","webpack:///./src/packages/travel/pages/VisitsPage/useVisitsGroupingSidebar.js","webpack:///./src/packages/travel/pages/VisitsPage/utils.js","webpack:///./src/packages/travel/pages/VisitsPage/calcCounters.js","webpack:///./src/packages/travel/pages/VisitsPage/switchSortingFn.js","webpack:///./src/packages/travel/components/models/countries/CountryInfo/CountryInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderCountry.js","webpack:///./src/packages/travel/components/models/locations/LocationInfo/LocationInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderOriginLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderDepartureLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderArrivalLocation.js","webpack:///./src/packages/travel/components/models/trips/TripInfo/TripInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderTrip.js","webpack:///./src/packages/travel/components/common/YearInfo/YearInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderYear.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderNodesInOrder.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderTitle.jsx","webpack:///./src/packages/travel/pages/VisitsPage/VisitsPage.jsx","webpack:///./src/packages/travel/pages/LocationsPage/blocks/LocationRating.jsx","webpack:///./src/packages/travel/pages/LocationsPage/LocationsPage.jsx","webpack:///./src/packages/travel/pages/LocationsPage/useUserLocations.js","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack:///./src/packages/travel/components/models/rides/RideInfo/RideInfo.jsx","webpack:///./src/packages/travel/components/models/rides/RideIcon/RideIcon.jsx","webpack:///./src/packages/travel/components/common/LocationsMap/useMarkers.js","webpack:///./src/packages/travel/components/common/LocationsMap/LocationsMap.jsx"],"names":["makeStyles","theme","visibilityTrigger","visibility","visibleOnlyOnHover","group","backgroundColor","top","marginTop","spacing","subgroup","detail","color","fontSize","formControl","width","ratingBlock","display","alignItems","ratingIcon","halfDown","position","setQueryFilter","queryFilter","section","classes","useVisitsPageStyles","groupByQuery","KEY_GROUP_VISITS_BY","sortBy","sortByQuery","Object","values","SORT_VISITS_BY","includes","SORT_VISITS_BY_DEFAULT","resolveActualSortBy","KEY_SORT_VISITS_BY","actualSection","VISITS_SECTIONS","VISITS_SECTION_DEFAULT","visitsSectionGroups","VISITS_SECTIONS_GROUPS","find","key","GROUP_VISITS_BY_DEFAULTS","resolveActualGroupBy","groupBy","useSidebar","closeSidebar","List","ListItem","FormControl","className","InputLabel","shrink","id","Select","labelId","autoWidth","value","onChange","event","target","map","visitsSectionGroup","MenuItem","l10n","GROUP_VISITS_BY","TRIPS","ALPHABET","VISITS_ALPHABET","RATING_ALPHABET","resolveTripCountryId","tripId","countryId","resolveYearCountryId","year","resolveArrivalYear","arrivalDateTime","getFullYear","checkIsGroupedByTrip","TRIPS_COUNTRIES","lastCacheKey","cachedResult","inc","ref","refKey","counterName","counterKey","countersRef","counterRef","currentCount","getLocationVisitsCount","counters","locationId","locations","visits","keys","length","getCountryVisitsCount","countries","getLocationVisitsByYearCount","years","COMPARATOR_FUNCTIONS_MAPPING","COMPARATORS","VISIT","ARRIVAL_YEAR","visitA","visitB","arrivalDateTimeA","arrivalDateTimeB","COUNTRY","NAME_ID","countriesDict","countryIdA","countryIdB","countryNameA","countryName","countryNameB","RATING","countriesRating","VISITS","_","LOCATION","locationIdA","locationNameA","locationName","locationIdB","locationNameB","locationsRating","TRIP","DEPARTURE_TIME","tripsDict","tripIdA","tripIdB","departureDateTimeA","departureDateTime","departureDateTimeB","ID","resolveComparatorBySortFn","sortFn","ENTITY_COMPARATORS","createComparator","dicts","comparatorsKeys","comparatorFuncs","comparatorKey","comparatorFnCreator","warning","filter","Boolean","fnIdx","comparisonResult","memoizeOne","locationsDict","memoize","ratings","countryIdToCompare","rating","sum","CountryInfo","country","isSubgroup","isDetail","children","Typography","variant","renderCountry","visit","visitId","changes","isTripChanged","isCountryChanged","provision","isGroupedByTrip","isGroupedByYearCountries","YEARS_COUNTRIES","locationsCounter","COUNTRIES","COUNTRIES_YEARS","yearsCountries","tripsCountries","useStyles","autoMargin","marginLeft","LocationInfo","shouldJustifyContent","location","childrenArray","React","Children","toArray","lastChildren","slice","restChildren","Grid","container","justify","item","GROUPS_TO_RENDER_COUNTRY","LOCATIONS","YEARS","GROUPS_TO_RENDER_YEARS_OF_VISIT","renderLocation","departureRideId","isYearChanged","isLocationChanged","visitsDict","ridesDict","isGroupedByTripsOnly","countryDetailNode","visitsCount","resolveVisitsCounter","visitsDetailNode","yearsOfVisitDetailNode","getYearsOfVisits","join","childrenNodes","nodes","reduce","nodesMemo","node","index","push","joinNodes","locationRating","LOCATION_RATING","PLACE_TO_LIVE","FEW_PER_YEAR","ONCE_PER_YEAR","ONCE_PER_TWO_YEARS","ONCE_PER_FIVE_YEARS","ONCE_PER_DECADE","TWICE_PER_LIVE","ONCE_PER_LIVE","NEVER","renderRatingNode","renderAlignedRatingNode","visitDateTimePeriodToString","RideInfo","ride","renderOriginLocation","keyBase","trip","originLocationId","originLocation","renderDepartureLocation","props","arrivalRideId","renderArrivalLocation","willTripChange","TripInfo","tripName","paragraph","renderTrip","tripEditPath","travelPaths","tripEdit","hasEditRights","userAlias","tripEditButtonNode","IconButton","href","toUrl","strTripId","String","size","YearInfo","renderYear","isGroupedByCountriesYear","renderNodesInOrder","prevVisit","nextVisit","forwardedProps","prevCountryId","prevLocationId","prevTripId","nextTripId","prevYear","renderProps","checkIsGroupedByYear","checkIsGroupedByCountry","renderTitle","createTripUrl","locationsUrl","locationsCount","countriesCount","linkToCreateTripNode","to","component","Link","VisitsPage","match","params","authenticatedUserAlias","useAuthContext","useQueryFilter","useVisitsGroupingSidebar","useTripsStats","isPending","isError","usePaths","travel","locationsPath","tripCreatePath","tripCreate","visitsIds","unsortedVisitsList","visitsList","cacheKey","totalVisits","trips","forEach","calcCounters","updatesCounter","titleNode","locationsIds","mapsNode","LocationsMap","height","sort","NAME","switchSortingFn","nodesAccumulator","propTypes","PropTypes","string","isRequired","number","RATING_LOCALIZATION","LocationRating","isEditable","onSubmitLocationRating","bool","func","defaultProps","lineHeight","visitContainer","margin","fontWeight","googleMapContainer","maxWidth","maxHeight","LocationsPage","strLocationId","isAuthenticated","domain","submitLocationRating","useLocationRatingRequest","useUserLocations","parseInt","actualLocationsIds","handleSubmitLocationRating","useCallback","locationIdToSubmit","query","condition","locationsIdToRender","Fragment","shape","tripsProvision","requiredTripsIds","tripsIds","useSelector","state","selectDict","shouldRequireAllTrips","missingTripsIds","useProvision","isProvision","modelName","observe","navigation","isDisabled","comparator","useTrips","useUser","user","userProvision","selectResult","data","Array","from","Set","flatMap","tripsId","ridesIds","rides","countriesIds","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","selectUpdatesCounter","isReady","every","selectIsReady","some","selectIsPending","isValid","selectIsValid","error","selectIsError","errors","selectError","invalidate","mergeProvisionsState","ratingsGroupedByCountries","memo","mapValues","ratingsByCountry","Infinity","avg","a","b","best","max","lengthRatio","Math","log","averageRating","calcCountriesRating","ridesStats","calcRidesStats","earliestDeparture","Date","min","rideId","getTime","latestArrival","isLoading","selectItem","applicableSchemaName","requiredLocationIds","missingLocationsIds","useRequest","method","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","periodEndString","dateFormat","locale","ru","isSameDay","periodStartString","isSameMonth","isSameYear","rideDateTimePeriodToString","icon","absoluteIcon","rideType","isLong","RIDE_TYPES","HITCH_HIKING","RideIcon","vehicleType","IconComponent","VEHICLE_TYPES","CAR","CarIcon","TRAIN","TrainIcon","AIRCRAFT","FlightIcon","BUS","TROLLEY","CITY_BUS","BusIcon","MOTORHOME","JITNEY","VanIcon","LOCAL_TRAIN","FERRY","BoatIcon","BIKE","BikeIcon","BY_FEET","WalkIcon","MOTORBIKE","MotorcycleIcon","TRUCK","TruckIcon","ALL_TERRAIN_VEHICLE","TerrainIcon","TRAM","TramIcon","TAXI","LocalTaxiIcon","SUBWAY","SubwayIcon","PUBLIC_TRANSPORT","SeatIcon","ROPEWAY","FUNICULAR","CustomTransportIcon","UnknownRideIcon","resolveRideIconComponent","createControlledPromise","resolver","rejector","promise","Promise","resolve","reject","handleGoogleApiLoaded","markersCoords","useMemo","apiPromise","previousCoords","useRef","changesCount","useEffect","isEqual","current","markers","then","api","maps","bounds","LatLngBounds","lat","lon","marker","Marker","lng","extend","fitBounds","getZoom","setZoom","setMap","useMarkers","locationIdToShowMarker","bootstrapURLKeys","__GOOGLE_MAP_API_KEY__","center","zoom","onGoogleApiLoaded","objectOf","locationPropTypes","arrayOf"],"mappings":"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","file":"travel-TripStory-9b76ae23dc067474945e.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n  visibilityTrigger: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  group: {\n    backgroundColor: 'white',\n    top: 0,\n    '&:not(:first-of-type)': {\n      marginTop: theme.spacing(5),\n    },\n\n    '& ~ $subgroup': {\n      marginTop: theme.spacing(2),\n    },\n\n    '& + $subgroup ': {\n      marginTop: 0,\n    },\n  },\n  subgroup: {\n    backgroundColor: 'white',\n    top: 38,\n  },\n  detail: {\n    color: 'gray',\n    fontSize: 12,\n  },\n  formControl: {\n    width: '100%',\n  },\n  ratingBlock: { display: 'inline-flex', alignItems: 'center' },\n  ratingIcon: { color: 'gray', fontSize: 12 },\n  halfDown: { position: 'relative', top: 12 },\n}));\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useSidebar } from 'core/context/SidebarContext';\nimport {\n  GROUP_VISITS_BY,\n  KEY_GROUP_VISITS_BY,\n  GROUP_VISITS_BY_DEFAULTS,\n  VISITS_SECTION_DEFAULT,\n  VISITS_SECTIONS,\n  VISITS_SECTIONS_GROUPS,\n  SORT_VISITS_BY,\n  KEY_SORT_VISITS_BY,\n  SORT_VISITS_BY_DEFAULT,\n} from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\n\nexport default function(setQueryFilter, queryFilter, section) {\n  const classes = useVisitsPageStyles();\n  const {\n    [KEY_GROUP_VISITS_BY]: groupByQuery,\n    [KEY_SORT_VISITS_BY]: sortByQuery,\n  } = queryFilter || {};\n  const sortBy = resolveActualSortBy(sortByQuery);\n  const [groupBy, visitsSectionGroups] = resolveActualGroupBy(\n    groupByQuery,\n    section,\n  );\n\n  useSidebar(\n    ({ closeSidebar }) => (\n      <List>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <InputLabel shrink={true} id=\"select-groupBy-filter-label\">\n              Сгруппировать\n            </InputLabel>\n            <Select\n              labelId=\"select-groupBy-filter-label\"\n              autoWidth={true}\n              id=\"select-groupBy-filter\"\n              value={groupBy}\n              onChange={event => {\n                closeSidebar();\n                setQueryFilter({\n                  [KEY_GROUP_VISITS_BY]: event.target.value,\n                });\n              }}\n            >\n              {visitsSectionGroups.map(visitsSectionGroup => (\n                <MenuItem\n                  key={visitsSectionGroup.key}\n                  value={visitsSectionGroup.key}\n                >\n                  {visitsSectionGroup.l10n}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        {groupBy !== GROUP_VISITS_BY.TRIPS && (\n          <ListItem>\n            <FormControl className={classes.formControl}>\n              <InputLabel shrink={true} id=\"select-sortBy-filter-label\">\n                Сортировать\n              </InputLabel>\n              <Select\n                labelId=\"select-sortBy-filter-label\"\n                autoWidth={true}\n                id=\"select-sortBy-filter\"\n                value={sortBy}\n                onChange={event => {\n                  closeSidebar();\n                  setQueryFilter({\n                    [KEY_SORT_VISITS_BY]: event.target.value,\n                  });\n                }}\n              >\n                <MenuItem value={SORT_VISITS_BY.ALPHABET}>По алфавиту</MenuItem>\n                <MenuItem value={SORT_VISITS_BY.VISITS_ALPHABET}>\n                  По числу посещений\n                </MenuItem>\n                <MenuItem value={SORT_VISITS_BY.RATING_ALPHABET}>\n                  По рейтингу\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </ListItem>\n        )}\n      </List>\n    ),\n    [groupBy, sortBy],\n  );\n\n  return { groupBy, sortBy };\n}\n\nfunction resolveActualSortBy(sortByQuery) {\n  return Object.values(SORT_VISITS_BY).includes(sortByQuery)\n    ? sortByQuery\n    : SORT_VISITS_BY_DEFAULT;\n}\nfunction resolveActualGroupBy(groupByQuery, section) {\n  const actualSection = Object.values(VISITS_SECTIONS).includes(section)\n    ? section\n    : VISITS_SECTION_DEFAULT;\n  const visitsSectionGroups = VISITS_SECTIONS_GROUPS[actualSection] || [];\n  const groupBy = visitsSectionGroups.find(({ key }) => key === groupByQuery)\n    ? groupByQuery\n    : GROUP_VISITS_BY_DEFAULTS[actualSection];\n  return [groupBy, visitsSectionGroups];\n}\n","import { GROUP_VISITS_BY } from './consts';\n\nexport function resolveTripCountryId(tripId, countryId) {\n  return `t${tripId}_c${countryId}`;\n}\nexport function resolveYearCountryId(year, countryId) {\n  return `y${year}_c${countryId}`;\n}\n\nexport function resolveArrivalYear({ arrivalDateTime }) {\n  if (!arrivalDateTime) {\n    return null;\n  }\n  return arrivalDateTime.getFullYear(arrivalDateTime);\n}\n\nexport function checkIsGroupedByTrip(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS ||\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES\n  );\n}\n\nexport function checkIsGroupedByYear(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.YEARS ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n\nexport function checkIsGroupedByCountry(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n","import {\n  resolveTripCountryId,\n  resolveYearCountryId,\n  resolveArrivalYear,\n} from './utils';\n\nlet lastCacheKey = null;\nlet cachedResult = null;\nexport default function calcCounters(visitsList, cacheKey) {\n  if (cacheKey && cacheKey === lastCacheKey) {\n    return cachedResult;\n  }\n\n  const counters = {\n    totalVisits: {},\n    countries: {},\n    years: {},\n    trips: {},\n    tripsCountries: {},\n    yearsCountries: {},\n    locations: {},\n  };\n\n  visitsList.forEach(visit => {\n    const { locationId, countryId, tripId, visitId } = visit;\n    const year = resolveArrivalYear(visit);\n\n    inc(counters.countries, countryId, 'visits', visitId);\n    inc(counters.countries, countryId, 'locations', locationId);\n    inc(counters.countries, countryId, 'years', year);\n    inc(counters.countries, countryId, 'trips', tripId);\n\n    inc(counters.years, year, 'locations', locationId);\n    inc(counters.years, year, 'countries', countryId);\n    inc(counters.years, year, 'trips', tripId);\n\n    inc(counters.trips, tripId, 'visits', visitId);\n    inc(counters.trips, tripId, 'locations', locationId);\n    inc(counters.trips, tripId, 'countries', countryId);\n\n    inc(counters.locations, locationId, 'visits', visitId);\n    inc(counters.locations, locationId, 'years', year);\n    inc(counters.locations, locationId, 'trips', tripId);\n\n    inc(\n      counters.tripsCountries,\n      resolveTripCountryId(tripId, countryId),\n      'locations',\n      locationId,\n    );\n    inc(\n      counters.yearsCountries,\n      resolveYearCountryId(year, countryId),\n      'locations',\n      locationId,\n    );\n  }, {});\n\n  lastCacheKey = cacheKey;\n  cachedResult = counters;\n\n  return counters;\n}\n\nfunction inc(ref, refKey, counterName, counterKey) {\n  /* eslint-disable no-multi-assign, no-param-reassign */\n  let countersRef = ref[refKey];\n  if (!countersRef) {\n    countersRef = ref[refKey] = {};\n  }\n\n  let counterRef = countersRef[counterName];\n  if (!counterRef) {\n    counterRef = countersRef[counterName] = {};\n  }\n  /* eslint-enable no-multi-assign, no-param-reassign */\n\n  const currentCount = counterRef[counterKey] || 0;\n  counterRef[counterKey] = currentCount + 1;\n}\n\nexport function getLocationVisitsCount(counters = {}, locationId) {\n  const { locations: { [locationId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getCountryVisitsCount(counters = {}, countryId) {\n  const { countries: { [countryId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getLocationVisitsByYearCount(counters, locationId, year) {\n  const {\n    years: {\n      [year]: {\n        locations: { [locationId]: locationVisitsByYearCount } = {},\n      } = {},\n    } = {},\n  } = counters;\n  return locationVisitsByYearCount;\n}\n\nexport function getYearsOfVisits(counters, locationId) {\n  const { locations: { [locationId]: { years = {} } = {} } = {} } = counters;\n  return Object.keys(years);\n}\n","import warning from 'warning';\nimport memoize from 'lodash/memoize';\nimport sum from 'lodash/sum';\nimport memoizeOne from 'memoize-one';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY, COMPARATORS } from './consts';\nimport { getLocationVisitsCount, getCountryVisitsCount } from './calcCounters';\n\nconst COMPARATOR_FUNCTIONS_MAPPING = {\n  [COMPARATORS.VISIT.ARRIVAL_YEAR]: createArrivalYearComparator,\n  [COMPARATORS.COUNTRY.NAME_ID]: createCountryNameIdComparator,\n  [COMPARATORS.COUNTRY.RATING]: createCountryRatingComparator,\n  [COMPARATORS.COUNTRY.VISITS]: createCountryVisitsComparator,\n  [COMPARATORS.LOCATION.NAME_ID]: createLocationNameIdComparator,\n  [COMPARATORS.LOCATION.RATING]: createLocationRatingComparator,\n  [COMPARATORS.LOCATION.VISITS]: createLocationVisitsComparator,\n  [COMPARATORS.TRIP.DEPARTURE_TIME]: createTripDepartureTimeComparator,\n  [COMPARATORS.TRIP.ID]: createTripIdComparator,\n};\n\nexport default function switchSortingFn(queryFilter, provision, counters) {\n  const { groupBy, sortBy } = queryFilter;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      // sorting is not applicable, as locations ordered chronologically\n      return createComparator(provision, counters, [\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        COMPARATORS.LOCATION.NAME,\n      ]);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return createComparator(provision, counters, [\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return createComparator(provision, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS:\n      return createComparator(provision, counters, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return createComparator(provision, counters, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return createComparator(provision, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      return createComparator(provision, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n  }\n}\n\nfunction resolveComparatorBySortFn(sortFn, ENTITY_COMPARATORS) {\n  switch (sortFn) {\n    case SORT_VISITS_BY.VISITS_ALPHABET:\n      return [ENTITY_COMPARATORS?.VISITS];\n    case SORT_VISITS_BY.RATING_ALPHABET:\n      return [ENTITY_COMPARATORS?.RATING, ENTITY_COMPARATORS?.VISITS];\n    default:\n      return [];\n  }\n}\n\nfunction createComparator(dicts, counters, comparatorsKeys) {\n  const comparatorFuncs = comparatorsKeys\n    .map(comparatorKey => {\n      const comparatorFnCreator = COMPARATOR_FUNCTIONS_MAPPING[comparatorKey];\n      warning(comparatorFnCreator, 'missing comparatorKey: %s', comparatorKey);\n      if (!comparatorFnCreator) {\n        return null;\n      }\n      return comparatorFnCreator(dicts, counters);\n    })\n    .filter(Boolean);\n\n  return (visitA, visitB) => {\n    for (let fnIdx = 0; fnIdx < comparatorFuncs.length; fnIdx += 1) {\n      const comparisonResult = comparatorFuncs[fnIdx](visitA, visitB);\n      if (comparisonResult) {\n        return comparisonResult;\n      }\n    }\n    return 0;\n  };\n}\n\nfunction createLocationNameIdComparator() {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA, locationName: locationNameA } = visitA;\n    const { locationId: locationIdB, locationName: locationNameB } = visitB;\n    if (locationNameA > locationNameB) {\n      return 1;\n    }\n    if (locationNameB > locationNameA) {\n      return -1;\n    }\n    return locationIdA - locationIdB;\n  };\n}\n\nfunction createLocationRatingComparator({ locationsRating }) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    const ratingA = locationsRating[locationIdA] || 10;\n    const ratingB = locationsRating[locationIdB] || 10;\n    return ratingA - ratingB;\n  };\n}\n\nfunction createLocationVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    return (\n      getLocationVisitsCount(counters, locationIdB) -\n      getLocationVisitsCount(counters, locationIdA)\n    );\n  };\n}\n\nfunction createCountryNameIdComparator({ countriesDict }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const { countryName: countryNameA } = countriesDict[countryIdA] || {};\n    const { countryName: countryNameB } = countriesDict[countryIdB] || {};\n\n    if (countryNameA > countryNameB) {\n      return 1;\n    }\n    if (countryNameB > countryNameA) {\n      return -1;\n    }\n    return countryIdA - countryIdB;\n  };\n}\n\nconst resolveCountryRating = memoizeOne(locationsDict =>\n  memoize(countryId => {\n    const ratings = Object.values(locationsDict)\n      .filter(\n        ({ countryId: countryIdToCompare }) => countryId === countryIdToCompare,\n      )\n      .map(({ rating }) => rating);\n    if (!ratings.length) {\n      return 0;\n    }\n    return sum(ratings) / ratings.length;\n  }),\n);\n\nfunction createCountryRatingComparator({ countriesRating }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const ratingA = countriesRating[countryIdA] || 10;\n    const ratingB = countriesRating[countryIdB] || 10;\n    return ratingA - ratingB;\n  };\n}\n\nfunction createCountryVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    return (\n      getCountryVisitsCount(counters, countryIdB) -\n      getCountryVisitsCount(counters, countryIdA)\n    );\n  };\n}\n\nfunction createTripDepartureTimeComparator({ tripsDict }) {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n    const { departureDateTime: departureDateTimeA } = tripsDict[tripIdA] || {};\n    const { departureDateTime: departureDateTimeB } = tripsDict[tripIdB] || {};\n\n    if (!departureDateTimeA && !departureDateTimeB) {\n      return 0;\n    }\n    if (!departureDateTimeA || !departureDateTimeB) {\n      // here also considered previous check: !arrivalDateTimeA && !arrivalDateTimeB\n      return departureDateTimeA ? -1 : 1;\n    }\n    return departureDateTimeB.getFullYear() - departureDateTimeA.getFullYear();\n  };\n}\n\nfunction createTripIdComparator() {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n\n    return tripIdA - tripIdB;\n  };\n}\n\nfunction createArrivalYearComparator() {\n  return (visitA, visitB) => {\n    const { arrivalDateTime: arrivalDateTimeA } = visitA;\n    const { arrivalDateTime: arrivalDateTimeB } = visitB;\n\n    if (!arrivalDateTimeA && !arrivalDateTimeB) {\n      return 0;\n    }\n    if (!arrivalDateTimeA || !arrivalDateTimeB) {\n      // here also considered previous check: !arrivalDateTimeA && !arrivalDateTimeB\n      return arrivalDateTimeA ? -1 : 1;\n    }\n    return arrivalDateTimeB.getFullYear() - arrivalDateTimeA.getFullYear();\n  };\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function CountryInfo({\n  country: { countryName } = {},\n  isSubgroup,\n  isDetail,\n  className,\n  children,\n}) {\n  const classes = useVisitsPageStyles();\n  if (isDetail) {\n    return <span className={className}>{countryName}</span>;\n  }\n  return (\n    <Typography\n      variant={isSubgroup ? 'h5' : 'h4'}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {countryName} {children}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { GROUP_VISITS_BY } from '../consts';\nimport { resolveTripCountryId, resolveYearCountryId } from '../utils';\n\nexport default function renderCountry({\n  visit: { tripId, visitId, countryId },\n  changes: { isTripChanged, isCountryChanged },\n  provision: { countriesDict },\n  groupBy,\n  year,\n  counters,\n  classes,\n}) {\n  const isGroupedByTrip = groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES;\n  const isGroupedByYearCountries = groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES;\n  const shouldRender = isCountryChanged || (isGroupedByTrip && isTripChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  let locationsCounter = 0;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.countries?.[countryId]?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.yearsCountries?.[resolveYearCountryId(year, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.tripsCountries?.[resolveTripCountryId(tripId, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    default:\n      break;\n  }\n  return (\n    <CountryInfo\n      key={`c${countryId}_v${visitId}`}\n      country={countriesDict[countryId]}\n      isSubgroup={isGroupedByTrip || isGroupedByYearCountries}\n    >\n      {locationsCounter > 2 && (\n        <span className={classes.detail}>{`${locationsCounter} мест`}</span>\n      )}\n    </CountryInfo>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  autoMargin: { marginLeft: 'auto' },\n});\n\nexport default function LocationInfo({\n  children,\n  shouldJustifyContent,\n  location: { locationName } = {},\n}) {\n  const classes = useStyles();\n  const childrenArray = React.Children.toArray(children);\n  if (!shouldJustifyContent || childrenArray.length <= 1) {\n    return (\n      <Typography>\n        {locationName} {children}\n      </Typography>\n    );\n  }\n\n  const lastChildren = childrenArray.slice(-1);\n  const restChildren = childrenArray.slice(0, -1);\n  return (\n    <Grid container={true} justify=\"space-between\" alignItems=\"center\">\n      <Grid item={true}>\n        <Typography>\n          {locationName} {restChildren}\n        </Typography>\n      </Grid>\n      <Grid item={true} classes={{ item: classes.autoMargin }}>\n        {lastChildren}\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport IconStar from '@material-ui/icons/StarBorder';\nimport IconThumbDown from '@material-ui/icons/ThumbDownOutlined';\nimport IconThumbsUpDown from '@material-ui/icons/ThumbsUpDownOutlined';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY } from '../consts';\nimport {\n  getYearsOfVisits,\n  getLocationVisitsByYearCount,\n  getLocationVisitsCount,\n} from '../calcCounters';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\nconst GROUPS_TO_RENDER_YEARS_OF_VISIT = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.COUNTRIES,\n];\n\nexport default function renderLocation({\n  visit,\n  visit: { visitId, locationId, countryId, departureRideId },\n  classes,\n  changes: {\n    isYearChanged,\n    isCountryChanged,\n    isTripChanged,\n    isLocationChanged,\n  },\n  year,\n  provision: {\n    locationsDict,\n    locationsRating,\n    countriesDict,\n    visitsDict,\n    ridesDict,\n  },\n  groupBy,\n  sortBy,\n  counters,\n}) {\n  const isGroupedByTripsOnly = groupBy === GROUP_VISITS_BY.TRIPS;\n  const shouldRender =\n    isGroupedByTripsOnly || // every visit in trip should be shown\n    isTripChanged || // in other grouping show only unique locations\n    isYearChanged ||\n    isCountryChanged ||\n    isLocationChanged;\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  const visitsCount = resolveVisitsCounter(visit, counters, year, groupBy);\n  const visitsDetailNode =\n    sortBy !== SORT_VISITS_BY.RATING_ALPHABET && visitsCount > 1 ? (\n      <span className={classes.detail}>{`${visitsCount} визитов`}</span>\n    ) : null;\n\n  const shouldRenderYearOfVisit =\n    sortBy !== SORT_VISITS_BY.RATING_ALPHABET &&\n    GROUPS_TO_RENDER_YEARS_OF_VISIT.includes(groupBy);\n  const yearsOfVisitDetailNode = shouldRenderYearOfVisit ? (\n    <span className={classes.detail}>\n      {`в ${getYearsOfVisits(counters, locationId).join(', ')}`}\n    </span>\n  ) : null;\n\n  const ratingNode =\n    sortBy === SORT_VISITS_BY.RATING_ALPHABET\n      ? renderAlignedRatingNode({\n          classes,\n          locationRating: locationsRating?.[locationId],\n        })\n      : null;\n\n  const childrenNodes = joinNodes(\n    countryDetailNode,\n    ratingNode,\n    visitsDetailNode,\n    yearsOfVisitDetailNode,\n  );\n\n  return (\n    <LocationInfo\n      key={`l${locationId}_v${visitId}`}\n      location={locationsDict[locationId]}\n      country={countriesDict[countryId]}\n      shouldJustifyContent={isGroupedByTripsOnly}\n    >\n      {childrenNodes}\n      {isGroupedByTripsOnly && (\n        <Grid container={true}>\n          <Grid item={true}>\n            <Typography className={classes.detail}>\n              {visitDateTimePeriodToString(visitsDict[visitId])}\n            </Typography>\n          </Grid>\n          <Grid item={true}>\n            <RideInfo ride={ridesDict[departureRideId]} className={classes.halfDown}/>\n          </Grid>\n        </Grid>\n      )}\n    </LocationInfo>\n  );\n}\n\nfunction renderAlignedRatingNode({ locationRating, classes }) {\n  return (\n    <div className={classes.ratingBlock}>\n      {renderRatingNode({ locationRating, classes })}\n    </div>\n  );\n}\n\nfunction renderRatingNode({ locationRating, classes }) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return <IconStar className={classes.ratingIcon} />;\n    case LOCATION_RATING.NEVER:\n      return <IconThumbDown className={classes.ratingIcon} />;\n    default:\n      return <IconThumbsUpDown className={classes.ratingIcon} />;\n  }\n}\n\nfunction joinNodes(...nodes) {\n  return nodes.filter(Boolean).reduce((nodesMemo, node, index) => {\n    if (index > 0) {\n      nodesMemo.push(<span> </span>);\n    }\n    nodesMemo.push(node);\n    return nodesMemo;\n  }, []);\n}\n\nfunction resolveVisitsCounter(visit, counters = {}, year, groupBy) {\n  const { locationId } = visit;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.LOCATIONS:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.YEARS:\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return getLocationVisitsByYearCount(counters, locationId, year);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n    default:\n      break;\n  }\n}\n","import React from 'react';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\n\nexport default function renderOriginLocation({\n  keyBase,\n  children,\n  classes,\n  visit: { tripId },\n  provision: { tripsDict, locationsDict, countriesDict },\n  groupBy,\n}) {\n  const trip = tripsDict[tripId];\n  if (!trip) {\n    return null;\n  }\n  const { originLocationId } = trip;\n\n  const originLocation = locationsDict[originLocationId];\n  if (!originLocation) {\n    return null;\n  }\n\n  const { countryId } = originLocation;\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  return (\n    <LocationInfo\n      key={`${keyBase}_t${tripId}_ol${originLocationId}`}\n      location={locationsDict[originLocationId]}\n      country={countriesDict[countryId]}\n      shouldJustifyContent={children != null}\n    >\n      {countryDetailNode}\n      {children}\n    </LocationInfo>\n  );\n}\n","import React from 'react';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport renderOriginLocation from './renderOriginLocation';\n\nexport default function renderDepartureLocation(props) {\n  const {\n    visit: { arrivalRideId },\n    classes,\n    changes: { isTripChanged },\n    provision: { ridesDict },\n  } = props;\n\n  if (!isTripChanged) {\n    return null;\n  }\n\n  return renderOriginLocation({\n    ...props,\n    keyBase: `dl`,\n    children: (\n      <RideInfo ride={ridesDict[arrivalRideId]} className={classes.halfDown} />\n    ),\n  });\n}\n","import React from 'react';\nimport renderOriginLocation from './renderOriginLocation';\n\nexport default function renderArrivalLocation(props) {\n  const {\n    changes: { willTripChange },\n  } = props;\n\n  if (!willTripChange) {\n    return null;\n  }\n\n  return renderOriginLocation({\n    ...props,\n    keyBase: 'al',\n  });\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function TripInfo({\n  trip: { tripName } = {},\n  children,\n  className,\n}) {\n  return (\n    <Typography variant=\"h4\" className={className} paragraph={true}>\n      <span>{tripName}</span>\n      {children}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport IconEdit from '@material-ui/icons/Edit';\nimport TripInfo from 'travel/components/models/trips/TripInfo';\n\nexport default function renderTrip({\n  visit: { visitId, tripId },\n  changes: { isTripChanged },\n  provision: { tripsDict },\n  travelPaths: { tripEdit: tripEditPath },\n  hasEditRights,\n  userAlias,\n  classes,\n}) {\n  if (!isTripChanged) {\n    return null;\n  }\n\n  const tripEditButtonNode = hasEditRights ? (\n    <IconButton\n      className={classes.visibleOnlyOnHover}\n      href={tripEditPath.toUrl({ userAlias, strTripId: String(tripId) })}\n      size=\"small\"\n    >\n      <IconEdit />\n    </IconButton>\n  ) : null;\n\n  return (\n    <TripInfo\n      key={`t${tripId}_v${visitId}`}\n      className={classes.visibilityTrigger}\n      trip={tripsDict[tripId]}\n    >\n      {tripEditButtonNode}\n    </TripInfo>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function YearInfo({ year, isSubgroup }) {\n  const classes = useVisitsPageStyles();\n  return (\n    <Typography\n      variant={isSubgroup ? 'h5' : 'h4'}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {year}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport YearInfo from 'travel/components/common/YearInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nexport default function renderYear({\n  visit: { visitId },\n  changes: { isYearChanged, isCountryChanged },\n  groupBy,\n  year,\n}) {\n  const isGroupedByCountriesYear = groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS;\n  const shouldRender =\n    isYearChanged || (isGroupedByCountriesYear && isCountryChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  return (\n    <YearInfo\n      key={`y${year}_v${visitId}`}\n      year={year}\n      isSubgroup={isGroupedByCountriesYear}\n    />\n  );\n}\n","import {\n  resolveArrivalYear,\n  checkIsGroupedByCountry,\n  checkIsGroupedByTrip,\n  checkIsGroupedByYear,\n} from '../utils';\nimport { GROUP_VISITS_BY } from '../consts';\nimport renderCountry from './renderCountry';\nimport renderLocation from './renderLocation';\nimport renderDepartureLocation from './renderDepartureLocation';\nimport renderArrivalLocation from './renderArrivalLocation';\nimport renderTrip from './renderTrip';\nimport renderYear from './renderYear';\n\nexport default function renderNodesInOrder({\n  prevVisit,\n  visit,\n  nextVisit,\n  groupBy,\n  ...forwardedProps\n}) {\n  const {\n    countryId: prevCountryId,\n    locationId: prevLocationId,\n    tripId: prevTripId,\n  } = prevVisit;\n  const { tripId: nextTripId } = nextVisit;\n  const { countryId, locationId, tripId } = visit;\n\n  const prevYear = resolveArrivalYear(prevVisit);\n  const year = resolveArrivalYear(visit);\n\n  const isGroupedByTrip = checkIsGroupedByTrip(groupBy);\n  const isGroupedByYear = checkIsGroupedByYear(groupBy);\n  const isGroupedByCountry = checkIsGroupedByCountry(groupBy);\n\n  const renderProps = {\n    visit,\n    groupBy,\n    year,\n    changes: {\n      isTripChanged: isGroupedByTrip && prevTripId !== tripId,\n      willTripChange: isGroupedByTrip && nextTripId !== tripId,\n      isYearChanged: isGroupedByYear && prevYear !== year,\n      isCountryChanged: isGroupedByCountry && prevCountryId !== countryId,\n      isLocationChanged: prevLocationId !== locationId,\n    },\n    ...forwardedProps,\n  };\n\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      return [\n        renderTrip(renderProps),\n        renderDepartureLocation(renderProps),\n        renderLocation(renderProps),\n        renderArrivalLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return [\n        renderTrip(renderProps),\n        renderCountry(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.COUNTRIES:\n      return [renderCountry(renderProps), renderLocation(renderProps)];\n    case GROUP_VISITS_BY.YEARS:\n      return [renderYear(renderProps), renderLocation(renderProps)];\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return [\n        renderYear(renderProps),\n        renderCountry(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return [\n        renderCountry(renderProps),\n        renderYear(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      // return {push:[locationNode], keep: [countryNode, yearNode]};\n      return [renderLocation(renderProps)];\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport MUILink from '@material-ui/core/Link';\nimport { checkIsGroupedByTrip } from '../utils';\n\nexport default function renderTitle({\n  createTripUrl,\n  locationsUrl,\n  locationsCount,\n  countriesCount,\n  groupBy,\n}) {\n  const linkToCreateTripNode = checkIsGroupedByTrip(groupBy) ? (\n    <div>\n      <MUILink to={createTripUrl} component={Link}>\n        Добавить поездку\n      </MUILink>\n    </div>\n  ) : null;\n\n  return (\n    <Typography variant=\"h6\" paragraph={true}>\n      <span>Всего </span>\n      <MUILink to={locationsUrl} component={Link}>\n        {`${locationsCount} городов `}\n      </MUILink>\n      <span>из </span>\n      <span>{`${countriesCount} стран `}</span>\n      {linkToCreateTripNode}\n    </Typography>\n  );\n}\n\nrenderTitle.propTypes = {\n  locationsUrl: PropTypes.string.isRequired,\n  locationsCount: PropTypes.number.isRequired,\n  countriesCount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { usePaths } from 'modules/packages';\nimport { useTripsStats } from 'travel/dataSource';\nimport { useQueryFilter } from 'core/context/QueryFilterContext';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport LocationsMap from 'travel/components/common/LocationsMap';\nimport useVisitsPageStyles from './useVisitsPageStyles';\nimport useVisitsGroupingSidebar from './useVisitsGroupingSidebar';\nimport switchSortingFn from './switchSortingFn';\nimport renderNodesInOrder from './blocks/renderNodesInOrder';\nimport renderTitle from './blocks/renderTitle';\nimport calcCounters from './calcCounters';\n\nexport default function VisitsPage({\n  match: {\n    params: { userAlias, section },\n  },\n}) {\n  const { userAlias: authenticatedUserAlias } = useAuthContext();\n  const hasEditRights = userAlias === authenticatedUserAlias;\n\n  const classes = useVisitsPageStyles();\n  const { queryFilter, setQueryFilter } = useQueryFilter();\n  const { groupBy, sortBy } = useVisitsGroupingSidebar(\n    setQueryFilter,\n    queryFilter,\n    section,\n  );\n\n  const provision = useTripsStats({ userAlias });\n  const { isPending, isError } = provision;\n\n  const { travel: travelPaths } = usePaths();\n  const { locations: locationsPath, tripCreate: tripCreatePath } = travelPaths;\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  const { visitsIds, visitsDict } = provision;\n  const unsortedVisitsList = visitsIds\n    .map(visitId => visitsDict[visitId])\n    .filter(Boolean);\n\n  const { updatesCounter } = provision;\n  const counters = calcCounters(unsortedVisitsList, updatesCounter);\n\n  const titleNode = renderTitle({\n    locationsUrl: locationsPath.toUrl({ userAlias }),\n    createTripUrl: tripCreatePath.toUrl({ userAlias }),\n    locationsCount: Object.keys(counters?.locations || {}).length,\n    countriesCount: Object.keys(counters?.countries || {}).length,\n    groupBy,\n  });\n\n  const { locationsDict, locationsIds } = provision;\n  const mapsNode = (\n    <LocationsMap\n      locationsDict={locationsDict}\n      locationsIds={locationsIds}\n      height={300}\n    />\n  );\n\n  const visitsList = unsortedVisitsList.sort(\n    switchSortingFn({ groupBy, sortBy }, provision, counters),\n  );\n  const nodes = visitsList.reduce(\n    (nodesAccumulator, visit, index) => {\n      const prevVisit = index > 0 ? visitsList[index - 1] : {};\n      const nextVisit =\n        index < visitsList.length - 1 ? visitsList[index + 1] : {};\n\n      renderNodesInOrder({\n        prevVisit,\n        visit,\n        nextVisit,\n        provision,\n        classes,\n        counters,\n        groupBy,\n        sortBy,\n        hasEditRights,\n        travelPaths,\n        userAlias,\n      })\n        .filter(Boolean)\n        .forEach(node => nodesAccumulator.push(node));\n\n      return nodesAccumulator;\n    },\n    [titleNode, mapsNode],\n  );\n\n  // without key there is strange bug with reconciling:\n  // when group_by changed from trips to something other, then trips nodes still\n  // rendering in three, but because of nodes keys collisions only\n  // originalLocations is remaining on top of the list\n  return <div key={`${groupBy}_${sortBy}`}>{nodes}</div>;\n}\n\n/*\n// byCities -> groupBy(visits, cities) '123': []\nЧелябинск, Россия, 3 визита в 2011 и 2012\n-> 20 августа 2011\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountries -> groupBy(visits, countries & cities) '1-123': []\n[Россия](/travel/:userAlias/countries/1)\n[Челябинск](/travel/:userAlias/cities/123), 3 визита в [2011](/travel/:userAlias/year/2011) и [2012](/travel/:userAlias/year/2012) [заметки](/travel/:userAlias/cities/123/story)\n-> 20 августа 2011 [заметки](/travel/:userAlias/visits/111/story)\n   до 5 фоток\n-> 20-21 июня 2012 [заметки](/travel/:userAlias/visits/222/story)\n   до 5 фоток\n-> 31 июля-1 августа 2012 [заметки](/travel/:userAlias/visits/333/story)\n   до 5 фоток\n\n// byYears -> groupBy(visits, years & cities) '2011-123': []\n2011\nЧелябинск, Россия\n-> 20 августа 2011\n\n2012\nЧелябинск, Россия, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byYearsAndCountries -> groupBy(visits, years & countries & cities)  '2011-1-123': []\n2011\nРоссия\nЧелябинск\n-> 20 августа 2011\n\n2012\nРоссия\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountriesAndYears -> groupBy(visits, countries & years & cities) 'c1-y2011-l123': []\nРоссия\n\n2011\nЧелябинск\n-> 20 августа 2011\n\n2012\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n*/\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\n\nconst RATING_LOCALIZATION = {\n  [LOCATION_RATING.PLACE_TO_LIVE]: 'Жил бы здесь',\n  [LOCATION_RATING.FEW_PER_YEAR]: 'Несколько раз в год',\n  [LOCATION_RATING.ONCE_PER_YEAR]: 'Раз в год',\n  [LOCATION_RATING.ONCE_PER_TWO_YEARS]: 'Раз в пару лет',\n  [LOCATION_RATING.ONCE_PER_FIVE_YEARS]: 'Раз в пять лет',\n  [LOCATION_RATING.ONCE_PER_DECADE]: 'Раз в десятилетие',\n  [LOCATION_RATING.TWICE_PER_LIVE]: 'Пару раз в жизни',\n  [LOCATION_RATING.ONCE_PER_LIVE]: 'Раз в жизни',\n  [LOCATION_RATING.NEVER]: 'Никогда',\n};\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%',\n  },\n});\n\nexport default function LocationRating({\n  locationId,\n  locationRating,\n  isEditable,\n  onSubmitLocationRating,\n}) {\n  const classes = useStyles();\n  if (!isEditable) {\n    return <div>{RATING_LOCALIZATION[locationRating]}</div>;\n  }\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink={true} id=\"select-location-rating-label\">\n        Я бы ездил сюда\n      </InputLabel>\n      <Select\n        labelId=\"select-location-rating-label\"\n        id=\"select-location-rating\"\n        value={locationRating}\n        onChange={event => {\n          onSubmitLocationRating(event, locationId, event.target.value);\n        }}\n      >\n        <MenuItem value={LOCATION_RATING.PLACE_TO_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.PLACE_TO_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.FEW_PER_YEAR}>\n          {RATING_LOCALIZATION[LOCATION_RATING.FEW_PER_YEAR]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_YEAR}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_YEAR]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_TWO_YEARS}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_TWO_YEARS]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_FIVE_YEARS}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_FIVE_YEARS]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_DECADE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_DECADE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.TWICE_PER_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.TWICE_PER_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.NEVER}>\n          {RATING_LOCALIZATION[LOCATION_RATING.NEVER]}\n        </MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nLocationRating.propTypes = {\n  locationRating: PropTypes.number,\n  locationId: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  onSubmitLocationRating: PropTypes.func.isRequired,\n};\n\nLocationRating.defaultProps = { locationRating: null };\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport LocationsMap from 'travel/components/common/LocationsMap';\nimport LocationRating from './blocks/LocationRating';\nimport useUserLocations from './useUserLocations';\n\nconst useStyles = makeStyles({\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  googleMapContainer: {\n    margin: '12px 0',\n    width: '800px',\n    maxWidth: '100%',\n    height: '400px',\n    maxHeight: '100%',\n  },\n});\n\nconst domain = 'travel.LocationsPage';\nexport default function LocationsPage({\n  match: {\n    params: { userAlias, strLocationId },\n  },\n}) {\n  const classes = useStyles();\n\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds,\n    locationsRating,\n    submitLocationRating,\n  } = useUserLocations({ domain, userAlias });\n\n  const locationId = parseInt(strLocationId, 10);\n  const actualLocationsIds = locationId ? [locationId] : locationsIds;\n\n  const handleSubmitLocationRating = useCallback(\n    (event, locationIdToSubmit, value) => {\n      submitLocationRating({\n        query: { rating: value, id: String(locationIdToSubmit) },\n        condition: Boolean(locationIdToSubmit),\n      });\n    },\n  );\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n  if (locationId && !locationsIds.includes(locationId)) {\n    return (\n      <div>{`Путешественик ${userAlias} еще не посетил данную локацию`}</div>\n    );\n  }\n\n  const isEditable = isAuthenticated && authenticatedUserAlias === userAlias;\n  return (\n    <div className={classes.container}>\n      <LocationsMap\n        locationsDict={locationsDict}\n        locationsIds={actualLocationsIds}\n      />\n      {actualLocationsIds.map(locationsIdToRender => {\n        const location = locationsDict[locationsIdToRender];\n        if (!location) {\n          return null;\n        }\n        const { locationName } = location;\n        return (\n          <React.Fragment key={locationsIdToRender}>\n            <h1 className={classes.location}>{locationName}</h1>\n            <LocationRating\n              locationId={locationsIdToRender}\n              locationRating={locationsRating[locationsIdToRender]}\n              isEditable={isEditable}\n              onSubmitLocationRating={handleSubmitLocationRating}\n            />\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\n\nLocationsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n      strLocationId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n","import useUser from 'travel/dataSource/useUser';\nimport { useTripsStats } from 'travel/dataSource/useTrips';\nimport { useLocationRatingRequest } from 'travel/dataSource/useLocations';\n\nexport default function useUserLocations({ domain, userAlias }) {\n  const {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds = [],\n    locationsRating,\n  } = useTripsStats({\n    userAlias,\n  });\n  const { submitLocationRating } = useLocationRatingRequest({ domain });\n\n  return {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds,\n    locationsRating,\n    submitLocationRating,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport mapValues from 'lodash/mapValues';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias, tripsIds: requiredTripsIds }) {\n  const { tripsDict } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n  }));\n  const shouldRequireAllTrips = !requiredTripsIds;\n  const missingTripsIds =\n    !shouldRequireAllTrips &&\n    requiredTripsIds.filter(tripId => !tripsDict[tripId]);\n\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: {\n      userAlias,\n      navigation: { isDisabled: true },\n      filter: shouldRequireAllTrips\n        ? {}\n        : { id: { comparator: 'in', value: missingTripsIds } },\n    },\n  });\n}\n\nexport function useTripsStats({ userAlias, tripsIds: requiredTripsIds }) {\n  const tripsProvision = useTrips({ userAlias, tripsIds: requiredTripsIds });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n  );\n\n  const ridesIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n  );\n\n  const countriesIds = Array.from(\n    new Set(visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || [])),\n  );\n\n  const locationsIds = Array.from(\n    new Set(\n      visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n    ),\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  const countriesRating = calcCountriesRating(\n    locationsIds,\n    locationsDict,\n    locationsRating,\n  );\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n    countriesRating,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n    invalidate: () => provisions.forEach(({ invalidate }) => invalidate()),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n\nfunction calcCountriesRating(locationsIds, locationsDict, locationsRating) {\n  const ratingsGroupedByCountries = locationsIds.reduce((memo, locationId) => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return memo;\n    }\n    const locationRating = locationsRating[locationId];\n    const { countryId } = location;\n    if (!memo[countryId]) {\n      memo[countryId] = [];\n    }\n    memo[countryId].push(locationRating);\n    return memo;\n  }, {});\n\n  return mapValues(ratingsGroupedByCountries, ratingsByCountry =>\n    averageRating(ratingsByCountry),\n  );\n}\n\nfunction averageRating(ratings) {\n  if (!ratings.length) {\n    return Infinity;\n  }\n  const avg =\n    ratings.length / ratings.map(rating => 1 / rating).reduce((a, b) => a + b);\n\n  const best = max(ratings);\n\n  const lengthRatio = Math.log(ratings.length);\n\n  return 1 / (1 / avg + lengthRatio / best);\n}\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  const provision = useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n\n  const { data: countriesIds = [] } = selectResult(provision) || {};\n\n  return {\n    countriesIds,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport {\n  useProvision,\n  useRequest,\n  selectDict,\n} from 'core/connection';\nimport {\n  selectIsPending,\n  selectIsError,\n  selectIsReady,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  const provision = useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n\n  return {\n    locationsDict,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport dateFormat from 'date-fns/format';\nimport ru from 'date-fns/locale/ru';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nfunction dateTimePeriodToString(periodStart, periodEnd) {\n  const periodEndString = dateFormat(periodEnd, DATE_FORMATS.FULL, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n      locale: ru,\n    });\n  } else if (isSameYear(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_MONTH, {\n      locale: ru,\n    });\n  } else {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.FULL, {\n      locale: ru,\n    });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime);\n}\n\nexport function visitDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime);\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { RIDE_TYPES } from 'travel/models/rides/consts';\nimport RideIcon from 'travel/components/models/rides/RideIcon';\n\nconst useStyles = makeStyles({\n  icon: { color: 'gray', fontSize: 16, height: 16 },\n  absoluteIcon: {\n    // todo fast decision, need refactor\n    color: 'gray',\n    fontSize: 16,\n    height: 16,\n    position: 'absolute',\n  },\n  detail: { color: 'gray', fontSize: 12 },\n});\n\nexport default function RideInfo({\n  ride,\n  ride: { rideType } = {},\n  className,\n  isLong,\n}) {\n  const classes = useStyles();\n\n  if (!ride) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <RideIcon ride={ride} className={classes.icon} />\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.absoluteIcon} />\n      )}\n      {isLong && rideDateTimePeriodToString(ride)}\n    </div>\n  );\n}\n","import React from 'react';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { VEHICLE_TYPES } from 'travel/models/rides/consts';\n\nexport default function RideIcon({ ride: { vehicleType }, className }) {\n  const IconComponent = resolveRideIconComponent(vehicleType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(vehicleType) {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n      return CustomTransportIcon;\n    default:\n      return UnknownRideIcon;\n  }\n}\n","import { useMemo, useEffect, useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nconst createControlledPromise = () => {\n  // This fields will be initialized synchronously in promise constructor\n  let resolver = null;\n  let rejector = null;\n\n  const promise = new Promise((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  return { promise, resolver, rejector };\n};\n\nexport default markersCoords => {\n  const { promise: apiPromise, resolver: handleGoogleApiLoaded } = useMemo(\n    createControlledPromise,\n    [],\n  );\n\n  const previousCoords = useRef(null);\n  const changesCount = useRef(0);\n\n  useEffect(() => {\n    if (!isEqual(previousCoords, markersCoords)) {\n      changesCount.current += 1;\n    }\n  });\n\n  useEffect(\n    () => {\n      let markers = [];\n      apiPromise.then(api => {\n        const { map, maps } = api;\n        const bounds = new maps.LatLngBounds();\n        markers = markersCoords.map(({ lat, lon }) => {\n          const marker = new maps.Marker({ position: { lat, lng: lon }, map });\n          bounds.extend(marker.position);\n          return marker;\n        });\n        map.fitBounds(bounds);\n        const zoom = map.getZoom();\n        if (zoom > 11) {\n          map.setZoom(11);\n        }\n      });\n      return () => markers.forEach(marker => marker.setMap(null));\n    },\n    [changesCount.current],\n  );\n  return { handleGoogleApiLoaded };\n};\n","/* globals __GOOGLE_MAP_API_KEY__ */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport GoogleMapReact from 'google-map-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport useMarkers from './useMarkers';\n\nconst useStyles = makeStyles({\n  googleMapContainer: {\n    margin: '12px 0',\n    maxWidth: '100%',\n    height: ({ height }) => height,\n    maxHeight: '100%',\n  },\n});\n\nexport default function LocationsMap({ locationsDict, locationsIds, height }) {\n  const classes = useStyles({ height });\n\n  const { handleGoogleApiLoaded } = useMarkers(\n    locationsIds.map(\n      locationIdToShowMarker => locationsDict[locationIdToShowMarker],\n    ),\n  );\n\n  return (\n    <div className={classes.googleMapContainer}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: __GOOGLE_MAP_API_KEY__ }}\n        center={{ lat: 0, lng: 0 }}\n        zoom={11}\n        onGoogleApiLoaded={handleGoogleApiLoaded}\n      />\n    </div>\n  );\n}\n\nLocationsMap.propTypes = {\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  locationsIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n  height: PropTypes.string,\n};\n\nLocationsMap.defaultProps = {\n  height: '400px',\n};\n"],"sourceRoot":""}