{"version":3,"sources":["webpack:///./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Option.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Overlay.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Trigger.jsx","webpack:///./src/modules/components/muiExtended/Select/Select.jsx","webpack:///./src/modules/components/muiExtended/Suggest/useSuggest.js","webpack:///./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/localization.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/TripEditFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/locators.js","webpack:///./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack:///./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack:///./src/modules/components/Sortable/Sortable.jsx","webpack:///./src/modules/components/DragHandler/DragHandler.jsx","webpack:///./src/packages/travel/pages/TripEditPage/useTripEditPageDialogs.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/VisitCreator.jsx","webpack:///./src/packages/travel/components/Actions/buttons/CreateButton.jsx","webpack:///./src/packages/travel/components/Actions/locators.js","webpack:///./src/packages/travel/components/Actions/buttons/EditButton.jsx","webpack:///./src/packages/travel/components/Actions/buttons/DeleteButton.jsx","webpack:///./src/packages/travel/components/Actions/Actions.jsx","webpack:///./src/packages/travel/components/VisitIcon/VisitIcon.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/Visit.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/Ride.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/VisitAndRidesFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/VisitsAndRidesFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/TripEditTitle.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/TripEditForm.jsx","webpack:///./src/modules/components/Dialog/Dialog.jsx","webpack:///./src/modules/components/Dialog/locators.js","webpack:///./src/modules/components/FormDialog/FormDialog.jsx","webpack:///./src/packages/travel/components/VisitInfo/VisitInfo.jsx","webpack:///./src/packages/travel/components/RideEditFormSection/localization.js","webpack:///./src/packages/travel/components/RideEditFormSection/tieDateTimeFields.js","webpack:///./src/packages/travel/components/RideEditFormSection/RideEditFormSection.jsx","webpack:///./src/packages/travel/components/RideEditFormSection/locators.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/RideEditDialog/RideEditDialog.jsx","webpack:///./src/packages/travel/components/VisitEditFormSection/VisitEditFormSection.jsx","webpack:///./src/packages/travel/components/VisitEditFormSection/locators.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/VisitEditDialog/VisitEditDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/VisitDeleteDialog/VisitDeleteDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/TripEditAssociatedDialogs.jsx","webpack:///./src/modules/utilities/algorithms/createOrderCalculator.js","webpack:///./src/packages/travel/pages/TripEditPage/useTripEditRequests.js","webpack:///./src/packages/travel/pages/TripEditPage/TripEditPage.jsx","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/core/connection/request/utils/mergeProvisionsState.js","webpack:///./src/modules/components/muiExtended/ConnectedLink/ConnectedLink.jsx","webpack:///./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/modules/utilities/dateTime/safeDateFormat.js","webpack:///./src/modules/utilities/dateTime/isValidDate.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/packages/travel/dataSource/useVisit.js","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/components/RideIcon/RideIcon.jsx","webpack:///./src/packages/travel/components/RideInfo/RideInfo.jsx","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js"],"names":["OptionsSelect","dataLocator","caption","classes","hasNullOption","inputId","name","handleChange","onChange","optionRender","options","value","data-locator","className","container","InputLabel","component","shrink","htmlFor","Select","displayEmpty","input","Input","id","selectRoot","MenuProps","MenuItem","key","option","index","map","valuePropTypes","PropTypes","oneOfType","number","string","propTypes","isRequired","objectOf","bool","func","arrayOf","defaultProps","undefined","withStyles","display","Option","isHighlighted","isSelected","forwardedProps","selected","style","fontWeight","ListItemText","primary","label","secondary","details","Overlay","isOpen","getMenuProps","getItemProps","selectedItem","highlightedIndex","Paper","paper","square","item","Boolean","Trigger","triggerProps","triggerInputProps","TextField","InputProps","root","inputRoot","inputInput","fullWidth","omit","useStyles","makeStyles","theme","position","zIndex","marginTop","spacing","left","right","defaultItemToString","customClasses","inputProps","downshiftProps","itemToString","getInputProps","inputValue","QUERY_FORMATS","resolveQueryByFormat","queryFormat","filterField","searchString","navigation","pageSize","numberOfItemsToRequest","search","filter","comparator","Suggest","sourceProps","transformSuggestionToOption","suggestion","forwardingProps","useState","setInputValue","suggestions","domain","modelName","debounceRequestDelayMs","provision","useProvision","debounceRequest","isProvision","observe","query","selectResult","data","entitiesIds","entitiesDict","useSelector","state","selectDict","entityId","useSuggest","handleInputChange","useCallback","event","target","actualInputProps","useMemo","TRIP_TYPE_NAMES","TRIP_TYPES","LEISURE","BUSINESS","MIXED","RELOCATION","OTHER","renderTripType","tripType","optionGroup","minWidth","suggest","flexGrow","TripEditFormSection","locationsDict","formikProps","setFieldValue","handleBlur","errors","touched","values","trip","tripFormValues","locationName","originLocationId","Grid","alignItems","xs","FormControlLabel","control","Checkbox","helperText","hasAutogeneratedTripName","onBlur","checked","textField","tripName","margin","placeholder","initialInputValue","geonameId","resolveDetails","countryName","regionName","join","Object","detail","prevVisit","nextVisit","departureRideId","arrivalRideId","element","dataset","sortHandler","parentNode","SortableContainer","SortableContainerHOC","children","SortableElement","SortableElementHOC","node","Sortable","shouldCancelStart","checkIsNodeNotSortable","lockAxis","lockToContainerEdges","React","Children","dragHandler","cursor","DragHandler","cls","data-sort-handler","DIALOG_NAMES","justifyContent","background","padding","border","boxShadow","visibility","visibleOnlyOnHover","VisitCreator","showDialog","Button","size","variant","color","onClick","CreateButton","IconButton","EditButton","DeleteButton","actions","Actions","isEntityExist","onEditClick","onDeleteClick","onCreateClick","hasCreateAction","hasEditAction","hasDeleteAction","VisitIcon","visitType","visit","IconComponent","VISIT_TYPES","TRANSIT","TransferWithinAStationIcon","BASE_CAMP","DomainIcon","LocalShippingIcon","REGULAR","LocationCityIcon","resolveRideIconComponent","marginRight","icon","verticalAlign","visibleOnHover","Visit","shape","visitPropTypes","Ride","ride","rideId","arrivalDateTime","departureDateTime","isRideExists","RideIcon","rideDateTimePeriodToString","ridePropTypes","alwaysVisible","editDialogTrigger","marginLeft","top","transform","warning","VisitAndRidesFormSection","isArrivalRideMatch","isDepartureRideMatch","tripId","ridesDict","visitId","formArrivalRideId","formDepartureVisitId","prevVisitId","nextVisitId","dialogName","dialogParams","departureVisitId","arrivalVisitId","editIcon","creatorsContainer","isCompact","resetFlow","VisitsAndRidesFormSection","formVisitsIds","visits","visitsDict","length","creatorsNodeIndex","setCreatorsNodeIndex","isSorting","setIsSorting","showCreationDialog","neighbors","orderInTrip","calculateOrderInTripBetweenTwoVisits","render","arrayHelpers","updateBeforeSortStart","onSortEnd","oldIndex","newIndex","move","flatMap","formVisitId","indexOfVisit","prevVisitFormValues","visitFormValues","nextVisitFormValues","checkIsVisitsConnectedByRide","checkIsRidesMatch","shouldCollapseRides","visitAndRidesFormSectionNode","shouldInsertCreatorsNodeBeforeFormSection","shouldInsertCreatorsNodeAfterFormSection","visitCreatorNode","prevOrderInTrip","nextOrderInTrip","Math","random","array","TripEditTitle","isCreation","formTrip","countriesDict","modeCaption","resolveTripCaption","tripCaption","Typography","actionButton","hint","fontSize","paddingLeft","TripEditForm","type","title","description","primaryButtonCaption","primaryButtonHandler","secondaryButtonCaption","secondaryButtonHandler","onClose","Dialog","transitionDuration","open","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","initialValues","onSubmit","onReset","enableReinitialize","handleSubmit","cloneElement","period","VisitInfo","isLong","locationUrl","ConnectedLink","to","optional","visitDateTimePeriodToString","RIDE_CLASSES_NAMES","RIDE_CLASSES","ECONOMY","COMFORT","FIRST","PRIVATE","RIDE_OCCUPATION_NAMES","RIDE_OCCUPATION","PASSENGER","STUFF","DRIVER","RIDE_TYPES_NAMES","RIDE_TYPES","SELF_DRIVE","SCHEDULED","CHARTER","TOUR","CARPOOL","HITCH_HIKING","DROP_OFF","VEHICLE_NAMES","VEHICLE_TYPES","CAR","TRAIN","AIRCRAFT","BUS","MOTORHOME","LOCAL_TRAIN","FERRY","BIKE","BY_FEET","ROPEWAY","FUNICULAR","MOTORBIKE","TRUCK","ALL_TERRAIN_VEHICLE","TRAM","TROLLEY","TAXI","CITY_BUS","JITNEY","SUBWAY","PUBLIC_TRANSPORT","mixDateTime","dateFrom","timeFrom","isValidDateFrom","isValidDate","isValidTimeFrom","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","NaN","checkCanUpdate","nextDate","prevDate","checkIsDatesEqual","ORIGIN_OF_TRIP","renderVisit","renderVehicleType","vehicleType","renderRideType","rideType","renderRideClass","rideClass","renderRideOccupation","rideOccupation","width","RideEditFormSection","arrivalDateTimeValue","onArrivalDateTimeChange","departureDateTimeValue","onDepartureDateTimeChange","isSameDay","updateFields","handleRideDepartureChange","handleRideArrivalChange","tripVisitsIds","rideComment","isTripHasVisits","arrivalDateTimeField","nextArrivalDateTime","departureDateTimeField","nextDepartureDateTime","checkIsSameDay","nextDepartureDateTimeValue","nextArrivalDateTimeValue","isSameDateField","nextIsSameDay","addDays","rideDepartureDateField","rideArrivalDateField","rideDepartureTimeField","rideArrivalTimeField","autoOk","format","ampm","multiline","rows","rowsMax","RideEditDialog","FormDialog","VISIT_TYPE_NAMES","renderRide","RideInfo","renderVisitType","VisitEditFormSection","tripRidesIds","visitComment","isTripHasRides","VisitEditDialog","VisitDeleteDialog","TripEditAssociatedDialogs","dialogsState","hideDialog","handleSubmitRide","handleSubmitVisit","handleDeleteVisit","rides","initialRideValues","initializeRide","initialVisitValues","initializeVisit","isRideEditDialogShown","checkIsRideEditDialogShown","isVisitEditDialogShown","checkIsVisitEditDialogShown","isVisitDeleteDialogShown","resolveOrder","orderResolver","createOrderCalculator","TripEditPage","match","params","userAlias","strTripId","action","tripEditPath","usePaths","travel","tripEdit","history","useHistory","useAuthContext","isAuthenticated","authenticatedUserAlias","parseInt","useTripsStats","tripsIds","tripsDict","tripsProvision","initializeTrip","invalidate","submitRide","useRequest","body","then","submitTrip","handleSubmitTrip","submitVisit","deleteVisit","method","useTripEditRequests","setDialogsState","useTripEditPageDialogs","isError","isReady","isPending","newTripId","tripEditPageUrl","toUrl","String","push","requiredTripsIds","shouldRequireAllTrips","missingTripsIds","tripsIdsUniqStr","tripsFilter","condition","isDisabled","user_alias","useTrips","useUser","user","locationsRating","userProvision","visitsIds","useUniqField","ridesIds","countriesIds","locationsIds","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","updatesCounter","sum","selectUpdatesCounter","every","selectIsReady","some","selectIsPending","isValid","selectIsValid","error","find","selectIsError","selectError","forEach","mergeProvisionsState","ridesStats","calcRidesStats","earliestDeparture","min","getTime","latestArrival","max","fieldName","Array","from","Set","href","RouterLink","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","isObscure","fullFormat","periodEndString","dateFormat","locale","ru","periodStartString","isSameMonth","isSameYear","shortFormat","dateTimeOpenPeriodToString","startDateStr","safeDateFormat","date","args","Number","isNaN","requiredLocationIds","missingLocationsIds","locationId","useLocationRatingRequest","submitLocationRating","useVisit","requiredVisitId","visit_id","useAddVisitPhotoRequest","contentType","submitVisitPhoto","selectItem","applicableSchemaName","CarIcon","TrainIcon","FlightIcon","BusIcon","VanIcon","BoatIcon","BikeIcon","WalkIcon","MotorcycleIcon","TruckIcon","TerrainIcon","TramIcon","LocalTaxiIcon","SubwayIcon","SeatIcon","CustomTransportIcon","UnknownRideIcon","height","absoluteIcon","maxLength","separator","uniqArray","uniq","result","slice","originCountryId","countryId","periodStr","dateMin","visitsId","dateMax","visitsByCountries","keys","groupBy","locationsNames","uniqTrimAndJoin","countriesNames"],"mappings":"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","file":"travel-TripEditPage-0f9150ab03e8926d0612.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'block',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  'data-locator': dataLocator,\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  name,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div data-locator={dataLocator} className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      name={name}\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n      MenuProps={{ 'data-locator': `options-${inputId}` }}\n    >\n      {hasNullOption && (\n        <MenuItem data-locator=\"option-null\" key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem data-locator={`option-${option}`} key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nconst valuePropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\nOptionsSelect.propTypes = {\n  name: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  hasNullOption: PropTypes.bool,\n  inputId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionRender: PropTypes.func,\n  options: PropTypes.arrayOf(valuePropTypes),\n  value: valuePropTypes,\n};\n\nOptionsSelect.defaultProps = {\n  name: undefined,\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport default function Option({\n  isHighlighted,\n  isSelected,\n  option,\n  ...forwardedProps\n}) {\n  return (\n    <MenuItem\n      component=\"div\"\n      selected={isHighlighted}\n      style={{ fontWeight: isSelected ? 500 : 400 }}\n      {...forwardedProps}\n    >\n      <ListItemText primary={option.label} secondary={option.details} />\n    </MenuItem>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Option from './Option';\n\nexport default function Overlay({\n  isOpen,\n  options,\n  classes,\n  getMenuProps,\n  getItemProps,\n  selectedItem,\n  highlightedIndex,\n}) {\n  return (\n    <div {...getMenuProps()}>\n      {isOpen && (\n        <Paper className={classes.paper} square={true}>\n          {options.map((option, index) => (\n            <Option\n              key={option.label}\n              {...getItemProps({ item: option })}\n              isHighlighted={highlightedIndex === index}\n              isSelected={\n                Boolean(selectedItem) && selectedItem.label === option.label\n              }\n              option={option}\n            />\n          ))}\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport omit from 'lodash/omit';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Trigger({ classes, triggerProps, triggerInputProps }) {\n  return (\n    <TextField\n      InputProps={{\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        },\n        ...triggerInputProps,\n      }}\n      fullWidth={true}\n      classes={omit(classes, 'inputRoot', 'inputInput')}\n      {...triggerProps}\n    />\n  );\n}\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Overlay from './blocks/Overlay';\nimport Trigger from './blocks/Trigger';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\n// export default ({ inputProps, classes, ref, ...other }) => {};\nexport default function Select({\n  'data-locator': dataLocator,\n  classes: customClasses,\n  options,\n  inputProps,\n  triggerProps,\n  ...downshiftProps\n}) {\n  const classes = { ...useStyles(), ...customClasses };\n  return (\n    <div data-locator={dataLocator} className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <Trigger\n              classes={classes}\n              inputValue={inputValue}\n              triggerProps={triggerProps}\n              triggerInputProps={getInputProps(inputProps)}\n            />\n            <Overlay\n              isOpen={isOpen}\n              options={options}\n              classes={classes}\n              getMenuProps={getMenuProps}\n              getItemProps={getItemProps}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n            />\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectResult } from 'core/connection/request/controllerRedux';\nimport { useProvision, selectDict } from 'core/connection';\n\nexport const QUERY_FORMATS = {\n  FILTER: 'FILTER',\n  SEARCH: 'SEARCH',\n};\nconst DEFAULT_SUGGEST_DEBOUNCE_TIME_MS = 400;\n\nexport default function useSuggest({\n  domain,\n  modelName,\n  inputValue,\n  queryFormat,\n  filterField,\n  numberOfItemsToRequest,\n  debounceRequestDelayMs = DEFAULT_SUGGEST_DEBOUNCE_TIME_MS,\n}) {\n  const provision = useProvision({\n    debounceRequest: debounceRequestDelayMs,\n    domain,\n    isProvision: true,\n    modelName,\n    observe: inputValue,\n    query: resolveQueryByFormat({\n      queryFormat,\n      filterField,\n      inputValue,\n      numberOfItemsToRequest,\n    }),\n  });\n  const { data: entitiesIds = [] } = selectResult(provision) || {};\n  const entitiesDict = useSelector(state => selectDict(state, modelName) || {});\n\n  return {\n    provision,\n    suggestions: entitiesIds\n      .map(entityId => entitiesDict[entityId])\n      .filter(Boolean),\n  };\n}\n\nfunction resolveQueryByFormat({\n  queryFormat,\n  filterField,\n  inputValue: searchString,\n  numberOfItemsToRequest,\n}) {\n  const navigation = { pageSize: numberOfItemsToRequest };\n  switch (queryFormat) {\n    case QUERY_FORMATS.SEARCH:\n      return { navigation, search: searchString };\n    case QUERY_FORMATS.FILTER:\n    default:\n      return {\n        navigation,\n        filter: {\n          [filterField]: { comparator: '~', value: `%${searchString}%` },\n        },\n      };\n  }\n}\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Select from '../Select';\nimport useSuggest, { QUERY_FORMATS } from './useSuggest';\n\nexport { QUERY_FORMATS };\nexport default function Suggest({\n  classes: customClasses,\n  inputProps,\n  triggerProps,\n  sourceProps,\n  transformSuggestionToOption = suggestion => suggestion,\n  ...forwardingProps\n}) {\n  const [inputValue, setInputValue] = useState('');\n  const { suggestions } = useSuggest({ ...sourceProps, inputValue });\n  const handleInputChange = useCallback(event => {\n    setInputValue(event.target?.value);\n  });\n  const actualInputProps = useMemo(\n    () => ({\n      ...inputProps,\n      onChange: handleInputChange,\n    }),\n    [inputProps, handleInputChange],\n  );\n\n  const options = useMemo(() => suggestions.map(transformSuggestionToOption), [\n    suggestions,\n  ]);\n\n  return (\n    <Select\n      classes={customClasses}\n      inputProps={actualInputProps}\n      triggerProps={triggerProps}\n      options={options}\n      {...forwardingProps}\n    />\n  );\n}\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.RELOCATION]: 'Переезд',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport Suggest, { QUERY_FORMATS } from 'modules/components/muiExtended/Suggest';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from './localization';\nimport * as locators from '../../../locators';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n  originGeonameId: initialOriginGeonameId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n    originGeonameId: initialOriginGeonameId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst useStyles = makeStyles({\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n});\n\nexport default function TripEditFormSection({\n  provision: { locationsDict = {} } = {},\n  formikProps,\n}) {\n  const classes = useStyles();\n  const {\n    handleChange,\n    setFieldValue,\n    handleBlur,\n    errors,\n    touched,\n    values: { trip: tripFormValues = {} },\n  } = formikProps;\n\n  const originLocation = locationsDict[tripFormValues.originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={6}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              data-locator={locators.AUTOGENERATED_NAME_CHECKBOX}\n              fullWidth={true}\n              helperText={\n                touched.trip?.hasAutogeneratedTripName &&\n                errors.trip?.hasAutogeneratedTripName\n              }\n              name=\"trip.hasAutogeneratedTripName\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              checked={tripFormValues.hasAutogeneratedTripName}\n            />\n          }\n          label=\"Автогенерируемое название\"\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        {!tripFormValues.hasAutogeneratedTripName && (\n          <TextField\n            data-locator={locators.TRIP_NAME_INPUT}\n            className={classes.textField}\n            fullWidth={true}\n            helperText={touched.trip?.tripName && errors.trip?.tripName}\n            label=\"Название поездки\"\n            margin=\"normal\"\n            name=\"trip.tripName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            value={tripFormValues.tripName}\n          />\n        )}\n      </Grid>\n      <Grid item={true} xs={6}>\n        <Suggest\n          data-locator={locators.ORIGIN_LOCATION_SUGGEST}\n          classes={{ root: classes.suggest }}\n          inputProps={{ placeholder: 'Пункт отправления...' }}\n          initialInputValue={locationName}\n          onChange={({ suggestion: { geonameId } }) =>\n            setFieldValue('trip.originGeonameId', geonameId)\n          }\n          onBlur={handleBlur}\n          sourceProps={{\n            domain: 'tripEditCard.geoname',\n            modelName: 'geonames',\n            filterField: 'locationName',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n          transformSuggestionToOption={transformSuggestionToOption}\n          triggerProps={{ label: 'Старт из' }}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.TRIP_TYPE_SELECT}\n          caption=\"Тип поездки\"\n          name=\"trip.tripType\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripFormValues.tripType}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nTripEditFormSection.propTypes = {};\n\nTripEditFormSection.defaultProps = {};\n\nfunction transformSuggestionToOption(suggestion) {\n  const { locationName, countryName } = suggestion;\n  return {\n    label: locationName,\n    detail: countryName,\n    suggestion,\n  };\n}\n","export const TRIP_NAME_INPUT = 'TRIP_EDIT_PAGE.TRIP_NAME_INPUT';\nexport const TRIP_TYPE_SELECT = 'TRIP_EDIT_PAGE.TRIP_TYPE_SELECT';\nexport const ORIGIN_LOCATION_SUGGEST = 'TRIP_EDIT_PAGE.ORIGIN_LOCATION_SUGGEST';\nexport const ADD_VISIT_BUTTON = 'TRIP_EDIT_PAGE.ADD_VISIT_BUTTON';\nexport const RIDE_ACTIONS = 'TRIP_EDIT_PAGE.RIDE_ACTIONS';\nexport const SUBMIT_TRIP_BUTTON = 'TRIP_EDIT_PAGE.SUBMIT_TRIP_BUTTON';\nexport const AUTOGENERATED_NAME_CHECKBOX = 'TRIP_EDIT_PAGE.AUTOGENERATED_NAME_CHECKBOX';\nexport const VISIT_DIALOG = 'TRIP_EDIT_PAGE.VISIT_DIALOG';\nexport const VISIT_BLOCK = 'TRIP_EDIT_PAGE.VISIT_BLOCK';\nexport const RIDE_DIALOG = 'TRIP_EDIT_PAGE.RIDE_DIALOG';\nexport const RIDE_BLOCK = 'TRIP_EDIT_PAGE.RIDE_BLOCK';\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    const { dataset } = element;\n\n    if (dataset) {\n      const { sortHandler } = dataset;\n      if (sortHandler === 'enabled') {\n        return false;\n      }\n      if (sortHandler === 'disabled') {\n        return true;\n      }\n    }\n\n    element = element.parentNode;\n  }\n  return true;\n};\n","import React from 'react';\nimport {\n  SortableContainer as SortableContainerHOC,\n  SortableElement as SortableElementHOC,\n} from 'react-sortable-hoc';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\n\nconst SortableContainer = SortableContainerHOC(({ children, className }) => (\n  <div className={className}>{children}</div>\n));\nconst SortableElement = SortableElementHOC(({ node }) => node);\n\nexport default function Sortable({ children, ...forwardingProps }) {\n  return (\n    <SortableContainer\n      shouldCancelStart={checkIsNodeNotSortable}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n      {...forwardingProps}\n    >\n      {React.Children.map(children, (node, index) => (\n        <SortableElement node={node} index={index} />\n      ))}\n    </SortableContainer>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst useStyles = makeStyles({\n  dragHandler: {\n    cursor: 'grab',\n  },\n});\n\nexport default function DragHandler({ className }) {\n  const classes = useStyles();\n  return (\n    <IconDragHandle\n      className={cls(className, classes.dragHandler)}\n      data-sort-handler=\"enabled\"\n    />\n  );\n}\n\nDragHandler.propTypes = {\n  className: PropTypes.string,\n};\n\nDragHandler.defaultProps = { className: undefined };\n","import { useState } from 'react';\n\nexport const DIALOG_NAMES = {\n  RIDE_CREATE: 'RIDE_CREATE_DIALOG',\n  RIDE_EDIT: 'RIDE_EDIT_DIALOG',\n  RIDE_DELETE: 'RIDE_DELETE_DIALOG',\n  VISIT_CREATE: 'VISIT_CREATE_DIALOG',\n  VISIT_EDIT: 'VISIT_EDIT_DIALOG',\n  VISIT_DELETE: 'VISIT_DELETE_DIALOG',\n};\n\nexport default function useTripEditPageDialogs() {\n  const [dialogsState, setDialogsState] = useState({ name: null });\n  const showDialog = (dialogName, dialogParams) => {\n    setDialogsState({ dialogName, dialogParams });\n  };\n  const hideDialog = () => {\n    setDialogsState({ name: null });\n  };\n  return { showDialog, hideDialog, dialogsState };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DragHandler from 'modules/components/DragHandler';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '12px 0',\n    cursor: 'grab',\n    background: '#fff',\n    padding: '12px',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(0, 0, 0, 0.2)',\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nexport default function VisitCreator({ showDialog }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.container} data-sort-handler=\"enabled\">\n      <Button\n        data-locator={locators.ADD_VISIT_BUTTON}\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => showDialog(DIALOG_NAMES.VISIT_CREATE)}\n      >\n        <span>Добавить посещение</span>\n      </Button>\n      <DragHandler className={classes.visibleOnlyOnHover} />\n    </div>\n  );\n}\n\nVisitCreator.propTypes = {\n  showDialog: PropTypes.func.isRequired,\n};\n\nVisitCreator.defaultProps = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport * as locators from '../locators';\n\nexport default function CreateButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.CREATE_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <AddCircleIcon />\n    </IconButton>\n  );\n}\n\nCreateButton.propTypes = {};\n\nCreateButton.defaultProps = {};\n","export const CREATE_BUTTON = 'ACTIONS.CREATE_BUTTON';\nexport const EDIT_BUTTON = 'ACTIONS.EDIT_BUTTON';\nexport const DELETE_BUTTON = 'ACTIONS.DELETE_BUTTON';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport * as locators from '../locators';\n\nexport default function EditButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.EDIT_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n}\n\nEditButton.propTypes = {};\n\nEditButton.defaultProps = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as locators from '../locators';\n\nexport default function DeleteButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.DELETE_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <DeleteIcon />\n    </IconButton>\n  );\n}\n\nDeleteButton.propTypes = {};\n\nDeleteButton.defaultProps = {};\n","import React from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateButton from './buttons/CreateButton';\nimport EditButton from './buttons/EditButton';\nimport DeleteButton from './buttons/DeleteButton';\n\nconst useStyles = makeStyles({\n  actions: {\n    display: 'inline-block',\n  },\n});\n\nexport default function Actions({\n  'data-locator': dataLocator,\n  className,\n  isEntityExist,\n  onEditClick,\n  onDeleteClick,\n  onCreateClick,\n}) {\n  const classes = useStyles();\n  const hasCreateAction = !isEntityExist && Boolean(onCreateClick);\n  const hasEditAction = isEntityExist && Boolean(onEditClick);\n  const hasDeleteAction = isEntityExist && Boolean(onDeleteClick);\n  return (\n    <div\n      data-locator={dataLocator}\n      data-sort-handler=\"disabled\"\n      className={cls(classes.actions, className)}\n    >\n      {hasCreateAction && <CreateButton onClick={onCreateClick} />}\n      {hasEditAction && <EditButton onClick={onEditClick} />}\n      {hasDeleteAction && <DeleteButton onClick={onDeleteClick} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default function VisitIcon({ visit: { visitType }, className }) {\n  const IconComponent = resolveRideIconComponent(visitType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(visitType) {\n  switch (visitType) {\n    case VISIT_TYPES.TRANSIT:\n      return TransferWithinAStationIcon;\n    case VISIT_TYPES.BASE_CAMP:\n      return DomainIcon;\n    case VISIT_TYPES.RELOCATION:\n      return LocalShippingIcon;\n    case VISIT_TYPES.REGULAR:\n    default:\n      return LocationCityIcon;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Actions from 'travel/components/Actions';\nimport VisitIcon from 'travel/components/VisitIcon';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n    '&:hover $visibleOnHover': {\n      visibility: 'visible',\n    },\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  visibleOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst Visit = ({ visit, showDialog }) => {\n  const classes = useStyles();\n  if (!visit) {\n    return 'Не указано';\n  }\n\n  const { locationName } = visit;\n\n  return (\n    <div className={classes.container} data-locator={locators.VISIT_BLOCK}>\n      <VisitIcon visit={visit} className={classes.icon} />\n      {locationName}\n      <Actions\n        className={classes.visibleOnHover}\n        isEntityExist={true}\n        onEditClick={() => showDialog(DIALOG_NAMES.VISIT_EDIT, visit)}\n        onDeleteClick={() => showDialog(DIALOG_NAMES.VISIT_DELETE, visit)}\n      />\n    </div>\n  );\n};\n\nVisit.propTypes = {\n  visit: PropTypes.shape(visitPropTypes),\n};\n\nVisit.defaultProps = {\n  visit: {},\n};\n\nexport default Visit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport RideIcon from 'travel/components/RideIcon';\nimport Actions from 'travel/components/Actions';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nexport const useStyles = makeStyles({\n  container: {\n    '&:hover $visibleOnHover': {\n      visibility: 'visible',\n    },\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  visibleOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst Ride = ({ className, ride, showDialog }) => {\n  const classes = useStyles();\n  const { rideId, arrivalDateTime, departureDateTime } = ride || {};\n  const isRideExists = Boolean(rideId);\n\n  return (\n    <div\n      className={cls(className, classes.container)}\n      data-locator={locators.RIDE_BLOCK}\n    >\n      {isRideExists && (\n        <>\n          <RideIcon ride={ride} className={classes.icon} />\n          <span className={classes.details}>\n            {rideDateTimePeriodToString({ departureDateTime, arrivalDateTime })}\n          </span>\n        </>\n      )}\n      <Actions\n        data-locator={locators.RIDE_ACTIONS}\n        className={cls({\n          [classes.visibleOnHover]: isRideExists,\n        })}\n        isEntityExist={isRideExists}\n        onCreateClick={() => showDialog(DIALOG_NAMES.RIDE_CREATE)}\n        onEditClick={() => showDialog(DIALOG_NAMES.RIDE_EDIT, ride)}\n      />\n    </div>\n  );\n};\n\nRide.propTypes = {\n  className: PropTypes.string,\n  ride: PropTypes.shape(ridePropTypes),\n};\n\nRide.defaultProps = {\n  className: undefined,\n  ride: {},\n};\n\nexport default Ride;\n","import React from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Visit from './Visit';\nimport Ride from './Ride';\n\nconst useStyles = makeStyles({\n  alwaysVisible: {},\n  container: {\n    margin: '12px 0',\n    cursor: 'grab',\n    background: '#fff',\n    padding: '12px',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(0, 0, 0, 0.2)',\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n});\n\nexport default function VisitAndRidesFormSection({\n  style,\n  className,\n  prevVisit,\n  visit,\n  nextVisit,\n  showDialog,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  tripId,\n  provision,\n}) {\n  const classes = useStyles();\n\n  const { ridesDict } = provision;\n\n  const {\n    visitId,\n    arrivalRideId: formArrivalRideId,\n    departureRideId: formDepartureVisitId,\n  } = visit || {};\n\n  const { visitId: prevVisitId } = prevVisit || {};\n  const { visitId: nextVisitId } = nextVisit || {};\n\n  return (\n    <div\n      className={cls(classes.container, className)}\n      style={style}\n      data-sort-handler=\"enabled\"\n    >\n      <Ride\n        showDialog={(dialogName, dialogParams) =>\n          showDialog(dialogName, {\n            ...dialogParams,\n            departureVisitId: isArrivalRideMatch ? prevVisitId : undefined,\n            arrivalVisitId: visitId,\n          })\n        }\n        className={cls(classes.ride, {\n          [classes.warning]: !isArrivalRideMatch,\n        })}\n        ride={ridesDict[formArrivalRideId]}\n        provision={provision}\n      />\n      <Visit\n        showDialog={showDialog}\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        visit={visit}\n        provision={provision}\n      />\n      <Ride\n        showDialog={(dialogName, dialogParams) =>\n          showDialog(dialogName, {\n            ...dialogParams,\n            departureVisitId: visitId,\n            arrivalVisitId: isDepartureRideMatch ? nextVisitId : undefined,\n          })\n        }\n        visitId={visitId}\n        className={cls(classes.ride, {\n          [classes.warning]: !isDepartureRideMatch,\n        })}\n        ride={ridesDict[formDepartureVisitId]}\n        provision={provision}\n      />\n    </div>\n  );\n}\n\nVisitAndRidesFormSection.propTypes = {};\n\nVisitAndRidesFormSection.defaultProps = {};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { FieldArray } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport Sortable from 'modules/components/Sortable';\nimport VisitCreator from './blocks/VisitCreator';\nimport VisitAndRidesFormSection from './blocks/VisitAndRidesFormSection';\n\nconst useStyles = makeStyles({\n  creatorsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  isCompact: {\n    marginTop: '-52px',\n  },\n  resetFlow: {\n    transform: 'translate(0, 0)',\n  },\n});\n\nfunction checkIsRidesMatch(\n  prevVisitFormValues,\n  visitFormValues,\n  nextVisitFormValues,\n) {\n  const isArrivalRideMatch = checkIsVisitsConnectedByRide(\n    prevVisitFormValues,\n    visitFormValues,\n  );\n  const isDepartureRideMatch = checkIsVisitsConnectedByRide(\n    visitFormValues,\n    nextVisitFormValues,\n  );\n  return { isDepartureRideMatch, isArrivalRideMatch };\n}\n\nexport default function VisitsAndRidesFormSection({\n  showDialog,\n  provision,\n  formikProps,\n}) {\n  const { values } = formikProps;\n  const {\n    trip: { visits: formVisitsIds },\n  } = values;\n\n  const { visitsDict } = provision;\n\n  const classes = useStyles();\n\n  const [creatorsNodeIndex, setCreatorsNodeIndex] = useState(\n    formVisitsIds.length,\n  );\n  const [isSorting, setIsSorting] = useState(false);\n\n  const showCreationDialog = (dialogName, dialogParams) => {\n    const [prevVisit, visit] = neighbors(formVisitsIds, creatorsNodeIndex).map(\n      visitId => (visitId && visitsDict[visitId]) || null,\n    );\n    showDialog(dialogName, {\n      ...dialogParams,\n      orderInTrip: calculateOrderInTripBetweenTwoVisits(prevVisit, visit),\n    });\n  };\n\n  if (!formVisitsIds.length) {\n    return <VisitCreator key=\"visitCreator\" showDialog={showCreationDialog} />;\n  }\n  return (\n    <FieldArray\n      name=\"trip.visits\"\n      render={arrayHelpers => (\n        <Sortable\n          className={classes.resetFlow}\n          updateBeforeSortStart={() => setIsSorting(true)}\n          onSortEnd={data => {\n            setIsSorting(false);\n            const { oldIndex, newIndex } = data;\n            const isVisitCreatorNodeMoved = oldIndex === creatorsNodeIndex;\n            if (isVisitCreatorNodeMoved) {\n              setCreatorsNodeIndex(newIndex);\n            } else {\n              arrayHelpers.move(oldIndex, newIndex);\n            }\n          }}\n        >\n          {formVisitsIds.flatMap((formVisitId, indexOfVisit) => {\n            const [prevVisit, visit, nextVisit] = neighbors(\n              formVisitsIds,\n              indexOfVisit,\n            ).map(visitId => (visitId && visitsDict[visitId]) || null);\n\n            const {\n              isArrivalRideMatch,\n              isDepartureRideMatch,\n            } = checkIsRidesMatch(prevVisit, visit, nextVisit);\n\n            const shouldCollapseRides =\n              indexOfVisit >= 1 &&\n              !isSorting &&\n              isArrivalRideMatch &&\n              creatorsNodeIndex !== indexOfVisit;\n\n            const visitAndRidesFormSectionNode = (\n              <VisitAndRidesFormSection\n                key={`v${formVisitId}`}\n                index={indexOfVisit /* for SortableNode */}\n                style={{ zIndex: formVisitsIds.length - indexOfVisit }}\n                className={cls({ [classes.isCompact]: shouldCollapseRides })}\n                showDialog={showDialog}\n                isArrivalRideMatch={isArrivalRideMatch}\n                isDepartureRideMatch={isDepartureRideMatch}\n                prevVisit={prevVisit}\n                visit={visit}\n                nextVisit={nextVisit}\n                formikProps={formikProps}\n                provision={provision}\n              />\n            );\n\n            const shouldInsertCreatorsNodeBeforeFormSection =\n              creatorsNodeIndex === indexOfVisit;\n            const shouldInsertCreatorsNodeAfterFormSection =\n              creatorsNodeIndex === formVisitsIds.length &&\n              creatorsNodeIndex === indexOfVisit + 1;\n\n            if (\n              !shouldInsertCreatorsNodeBeforeFormSection &&\n              !shouldInsertCreatorsNodeAfterFormSection\n            ) {\n              return visitAndRidesFormSectionNode;\n            }\n\n            const visitCreatorNode = (\n              <div style={{ zIndex: formVisitsIds.length + 1 }}>\n                <VisitCreator\n                  key=\"visitCreator\"\n                  showDialog={showCreationDialog}\n                />\n              </div>\n            );\n\n            if (shouldInsertCreatorsNodeBeforeFormSection) {\n              return [visitCreatorNode, visitAndRidesFormSectionNode];\n            }\n            return [visitAndRidesFormSectionNode, visitCreatorNode];\n          })}\n        </Sortable>\n      )}\n    />\n  );\n}\n\nVisitsAndRidesFormSection.propTypes = {};\n\nVisitsAndRidesFormSection.defaultProps = {};\n\nfunction calculateOrderInTripBetweenTwoVisits(prevVisit, nextVisit) {\n  const { orderInTrip: prevOrderInTrip } = prevVisit || {};\n  const { orderInTrip: nextOrderInTrip } = nextVisit || {};\n  if (!prevVisit) {\n    return nextOrderInTrip - 1;\n  }\n  if (!nextVisit) {\n    return prevOrderInTrip + 1;\n  }\n  const randomness =\n    ((Math.random() - 0.5) * (nextOrderInTrip - prevOrderInTrip)) / 2;\n  return (prevOrderInTrip + nextOrderInTrip) / 2 + randomness;\n}\n\nfunction neighbors(array, index) {\n  const prevValue = array[index - 1] || null;\n  const value = array[index] || null;\n  const nextValue = array[index + 1] || null;\n  return [prevValue, value, nextValue];\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\n\nexport default function TripEditTitle({\n  isCreation,\n  className,\n  provision,\n  formikProps: { values },\n}) {\n  const { trip: formTrip } = values;\n  const { visitsDict, countriesDict, locationsDict } = provision;\n\n  const modeCaption = isCreation\n    ? 'Создание поездки'\n    : 'Редактирование поездки';\n\n  const tripName = resolveTripCaption(\n    formTrip,\n    visitsDict,\n    countriesDict,\n    locationsDict,\n  );\n\n  const tripCaption = `${modeCaption}: \"${tripName}\"`;\n\n  return (\n    <Typography variant=\"h6\" className={className}>\n      {tripCaption}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TripEditFormSection from './blocks/TripEditFormSection';\nimport VisitsAndRidesFormSection from './blocks/VisitsAndRidesFormSection/VisitsAndRidesFormSection';\nimport TripEditTitle from './blocks/TripEditTitle';\nimport * as locators from '../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  actionButton: {\n    marginTop: '24px',\n  },\n  hint: {\n    color: 'gray',\n    fontSize: 12,\n    paddingLeft: '8px'\n  },\n});\n\nconst TripEditForm = ({ isCreation, showDialog, provision, formikProps }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TripEditTitle\n        className={classes.container}\n        formikProps={formikProps}\n        isCreation={isCreation}\n        provision={provision}\n      />\n      <Form>\n        <TripEditFormSection formikProps={formikProps} provision={provision} />\n        {!isCreation && (\n          <VisitsAndRidesFormSection\n            classes={classes}\n            showDialog={showDialog}\n            formikProps={formikProps}\n            provision={provision}\n          />\n        )}\n        <Button\n          data-locator={locators.SUBMIT_TRIP_BUTTON}\n          className={classes.actionButton}\n          type=\"submit\"\n          color=\"primary\"\n        >\n          {isCreation ? 'Создать' : 'Сохранить'}\n        </Button>\n        {isCreation && (\n          <div className={classes.hint}>\n            После создания поездки в нее можно будет добавить места посещения и\n            маршрут\n          </div>\n        )}\n      </Form>\n    </>\n  );\n};\n\nTripEditForm.propTypes = {\n  isCreation: PropTypes.bool.isRequired,\n};\n\nTripEditForm.defaultProps = {};\n\nexport default TripEditForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as locators from './locators';\n\nconst TRANSITION_DURATION_MS = 500;\n\nexport default function({\n  'data-locator': dataLocator,\n  isOpen,\n  title,\n  description,\n  children,\n  primaryButtonCaption,\n  primaryButtonHandler,\n  secondaryButtonCaption,\n  secondaryButtonHandler,\n  onClose,\n}) {\n  return (\n    <Dialog\n      data-locator={dataLocator}\n      transitionDuration={TRANSITION_DURATION_MS}\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{description}</DialogContentText>\n        {children}\n      </DialogContent>\n      <DialogActions>\n        {secondaryButtonHandler && (\n          <Button\n            data-locator={locators.RESET_BUTTON}\n            onClick={secondaryButtonHandler}\n            color=\"secondary\"\n          >\n            {secondaryButtonCaption}\n          </Button>\n        )}\n        {primaryButtonHandler && (\n          <Button\n            data-locator={locators.SUBMIT_BUTTON}\n            onClick={primaryButtonHandler}\n            color=\"primary\"\n          >\n            {primaryButtonCaption}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","export const SUBMIT_BUTTON = 'DIALOG.SUBMIT_BUTTON';\nexport const RESET_BUTTON = 'DIALOG.RESET_BUTTON';\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Dialog from '../Dialog';\n\nexport default function({\n  'data-locator': dataLocator,\n  initialValues,\n  isOpen,\n  onSubmit,\n  onReset,\n  title,\n  description,\n  children,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      enableReinitialize={true}\n      onSubmit={onSubmit}\n    >\n      {formikProps => (\n        <Dialog\n          data-locator={dataLocator}\n          description={description}\n          onClose={onReset}\n          isOpen={isOpen}\n          primaryButtonCaption=\"Сохранить\"\n          primaryButtonHandler={formikProps.handleSubmit}\n          secondaryButtonCaption=\"Отмена\"\n          secondaryButtonHandler={onReset}\n          title={title}\n        >\n          {React.cloneElement(children, { formikProps })}\n        </Dialog>\n      )}\n    </Formik>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport ConnectedLink from 'modules/components/muiExtended/ConnectedLink';\nimport VisitIcon from '../VisitIcon';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  period: {\n    display: 'inline',\n    color: 'gray',\n    fontSize: 12,\n  },\n});\n\nconst VisitInfo = ({ visit, isLong, locationUrl }) => {\n  const classes = useStyles();\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName } = visit;\n  return (\n    <div className={classes.container}>\n      <VisitIcon visit={visit} className={classes.icon} />\n      <ConnectedLink to={locationUrl} optional={true}>\n        {locationName}\n      </ConnectedLink>\n      {isLong ? ', ' : ''}\n      <div className={classes.period}>\n        {isLong && visitDateTimePeriodToString(visit)}\n      </div>\n    </div>\n  );\n};\n\nVisitInfo.defaultProps = {\n  visit: {},\n};\n\nexport default VisitInfo;\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n","import checkIsSameDay from 'date-fns/isSameDay';\nimport checkIsDatesEqual from 'date-fns/isEqual';\nimport addDays from 'date-fns/addDays';\nimport isValidDate from 'modules/utilities/dateTime/isValidDate';\n\nconst mixDateTime = ({ dateFrom, timeFrom }) => {\n  const isValidDateFrom = isValidDate(timeFrom);\n  const isValidTimeFrom = isValidDate(dateFrom);\n  if (isValidDateFrom && isValidTimeFrom) {\n    return new Date(\n      dateFrom.getFullYear(),\n      dateFrom.getMonth(),\n      dateFrom.getDate(),\n      timeFrom.getHours(),\n      timeFrom.getMinutes(),\n      timeFrom.getSeconds(),\n    );\n  }\n  return new Date(NaN);\n};\n\nfunction checkCanUpdate(nextDate, prevDate) {\n  return isValidDate(nextDate) && !checkIsDatesEqual(prevDate, nextDate);\n}\n\nexport default ({\n  arrivalDateTimeField: {\n    value: arrivalDateTimeValue,\n    onChange: onArrivalDateTimeChange,\n  },\n  departureDateTimeField: {\n    value: departureDateTimeValue,\n    onChange: onDepartureDateTimeChange,\n  },\n}) => {\n  const isSameDay = checkIsSameDay(\n    departureDateTimeValue,\n    arrivalDateTimeValue,\n  );\n\n  const updateFields = (\n    nextDepartureDateTimeValue,\n    nextArrivalDateTimeValue,\n  ) => {\n    if (checkCanUpdate(nextDepartureDateTimeValue, departureDateTimeValue)) {\n      onDepartureDateTimeChange(nextDepartureDateTimeValue);\n    }\n    if (checkCanUpdate(nextArrivalDateTimeValue, arrivalDateTimeValue)) {\n      onArrivalDateTimeChange(nextArrivalDateTimeValue);\n    }\n  };\n\n  const handleIsSameDayFlagChange = nextIsSameDay => {\n    if (Boolean(isSameDay) !== Boolean(nextIsSameDay)) {\n      updateFields(\n        departureDateTimeValue,\n        mixDateTime({\n          dateFrom: nextIsSameDay\n            ? departureDateTimeValue\n            : addDays(departureDateTimeValue, 1),\n          timeFrom: arrivalDateTimeValue,\n        }),\n      );\n    }\n  };\n\n  const handleRideDepartureChange = nextDepartureDateTimeValue => {\n    const nextArrivalDateTimeValue = isSameDay\n      ? mixDateTime({\n          timeFrom: arrivalDateTimeValue,\n          dateFrom: nextDepartureDateTimeValue,\n        })\n      : arrivalDateTimeValue;\n    updateFields(nextDepartureDateTimeValue, nextArrivalDateTimeValue);\n  };\n\n  const handleRideDepartureDateChange = nextDepartureDateTimeValue => {\n    handleRideDepartureChange(\n      mixDateTime({\n        dateFrom: nextDepartureDateTimeValue,\n        timeFrom: departureDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideDepartureTimeChange = nextDepartureDateTimeValue => {\n    handleRideDepartureChange(\n      mixDateTime({\n        dateFrom: departureDateTimeValue,\n        timeFrom: nextDepartureDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideArrivalChange = nextArrivalDateTimeValue => {\n    const nextDepartureDateTimeValue = isSameDay\n      ? mixDateTime({\n          timeFrom: departureDateTimeValue,\n          dateFrom: nextArrivalDateTimeValue,\n        })\n      : departureDateTimeValue;\n    updateFields(nextDepartureDateTimeValue, nextArrivalDateTimeValue);\n  };\n\n  const handleRideArrivalDateChange = nextArrivalDateTimeValue => {\n    handleRideArrivalChange(\n      mixDateTime({\n        dateFrom: nextArrivalDateTimeValue,\n        timeFrom: arrivalDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideArrivalTimeChange = nextArrivalDateTimeValue => {\n    handleRideArrivalChange(\n      mixDateTime({\n        dateFrom: arrivalDateTimeValue,\n        timeFrom: nextArrivalDateTimeValue,\n      }),\n    );\n  };\n\n  return {\n    isSameDateField: {\n      value: isSameDay,\n      onChange: handleIsSameDayFlagChange,\n    },\n    rideDepartureDateField: {\n      value: departureDateTimeValue,\n      onChange: handleRideDepartureDateChange,\n    },\n    rideArrivalDateField: {\n      value: arrivalDateTimeValue,\n      onChange: handleRideArrivalDateChange,\n    },\n    rideDepartureTimeField: {\n      value: departureDateTimeValue,\n      onChange: handleRideDepartureTimeChange,\n    },\n    rideArrivalTimeField: {\n      value: arrivalDateTimeValue,\n      onChange: handleRideArrivalTimeChange,\n    },\n  };\n};\n","import React  from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport VisitInfo from 'travel/components/VisitInfo';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from './localization';\nimport tieDateTimeFields from './tieDateTimeFields';\nimport * as locators from './locators';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVisit = visitsDict => ({ option: visitId }) => {\n  if (visitId === ORIGIN_OF_TRIP) {\n    return 'Пункт отправления';\n  }\n  return <VisitInfo visit={visitsDict[visitId]} />;\n};\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nconst useStyles = makeStyles({\n  option: {\n    width: '100%',\n  },\n});\n\nconst RideEditFormSection = ({\n  tripVisitsIds,\n  visitsDict,\n  formikProps: {\n    values: {\n      vehicleType,\n      rideType,\n      rideComment,\n      rideClass,\n      rideOccupation,\n      departureVisitId,\n      departureDateTime,\n      arrivalVisitId,\n      arrivalDateTime,\n    },\n    handleChange,\n    setFieldValue,\n  },\n}) => {\n  const classes = useStyles();\n  const isTripHasVisits = tripVisitsIds && tripVisitsIds.length > 0;\n  const {\n    rideArrivalDateField,\n    rideArrivalTimeField,\n    rideDepartureDateField,\n    rideDepartureTimeField,\n    isSameDateField,\n  } = tieDateTimeFields({\n    arrivalDateTimeField: {\n      value: arrivalDateTime,\n      onChange: nextArrivalDateTime =>\n        setFieldValue('arrivalDateTime', nextArrivalDateTime),\n    },\n    departureDateTimeField: {\n      value: departureDateTime,\n      onChange: nextDepartureDateTime =>\n        setFieldValue('departureDateTime', nextDepartureDateTime),\n    },\n  });\n\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      {isTripHasVisits && (\n        <>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              data-locator={locators.DEPARTURE_VISIT_SELECT}\n              name=\"departureVisitId\"\n              caption=\"Отправление из\"\n              inputId=\"RideEditCard-departureVisitId\"\n              optionRender={renderVisit(visitsDict)}\n              hasNullOption={false}\n              options={[ORIGIN_OF_TRIP, ...tripVisitsIds]}\n              value={departureVisitId}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              data-locator={locators.ARRIVAL_VISIT_SELECT}\n              name=\"arrivalVisitId\"\n              caption=\"Прибытие в\"\n              inputId=\"RideEditCard-arrivalVisitId\"\n              hasNullOption={false}\n              optionRender={renderVisit(visitsDict)}\n              options={[...tripVisitsIds, ORIGIN_OF_TRIP]}\n              onChange={handleChange}\n              value={arrivalVisitId}\n            />\n          </Grid>\n        </>\n      )}\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.VEHICLE_TYPE_SELECT}\n          name=\"vehicleType\"\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          onChange={handleChange}\n          value={vehicleType}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_TYPE_SELECT}\n          name=\"rideType\"\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          onChange={handleChange}\n          value={rideType}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_CLASS_SELECT}\n          name=\"rideClass\"\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          onChange={handleChange}\n          value={rideClass}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_OCCUPATION_SELECT}\n          name=\"rideOccupation\"\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          onChange={handleChange}\n          value={rideOccupation}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardDatePicker\n          data-locator={locators.DEPARTURE_DATE_PICKER}\n          name=\"departureDateTime\"\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          value={rideDepartureDateField.value}\n          onChange={rideDepartureDateField.onChange}\n          format=\"dd/MM/yyyy\"\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        {isSameDateField.value ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSameDateField.value}\n                onChange={event =>\n                  isSameDateField.onChange(event.target.checked)\n                }\n              />\n            }\n            label=\"Прибытие в тот же день\"\n          />\n        ) : (\n          <KeyboardDatePicker\n            data-locator={locators.ARRIVAL_DATE_PICKER}\n            name=\"arrivalDateTime\"\n            autoOk={true}\n            className={classes.option}\n            label=\"Дата прибытия\"\n            value={rideArrivalDateField.value}\n            onChange={rideArrivalDateField.onChange}\n            format=\"dd/MM/yyyy\"\n          />\n        )}\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardTimePicker\n          name=\"departureDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          value={rideDepartureTimeField.value}\n          onChange={rideDepartureTimeField.onChange}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardTimePicker\n          name=\"arrivalDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          value={rideArrivalTimeField.value}\n          onChange={rideArrivalTimeField.onChange}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <TextField\n          name=\"rideComment\"\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={handleChange}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nRideEditFormSection.propTypes = {};\nRideEditFormSection.defaultProps = {};\n\nexport default RideEditFormSection;\n","export const DEPARTURE_VISIT_SELECT =\n  'RIDE_EDIT_FORM_SECTION.DEPARTURE_VISIT_SELECT';\nexport const ARRIVAL_VISIT_SELECT =\n  'RIDE_EDIT_FORM_SECTION.ARRIVAL_VISIT_SELECT';\nexport const VEHICLE_TYPE_SELECT = 'RIDE_EDIT_FORM_SECTION.VEHICLE_TYPE_SELECT';\nexport const RIDE_TYPE_SELECT = 'RIDE_EDIT_FORM_SECTION.RIDE_TYPE_SELECT';\nexport const RIDE_CLASS_SELECT = 'RIDE_EDIT_FORM_SECTION.RIDE_CLASS_SELECT';\nexport const RIDE_OCCUPATION_SELECT =\n  'RIDE_EDIT_FORM_SECTION.RIDE_OCCUPATION_SELECT';\nexport const DEPARTURE_DATE_PICKER =\n  'RIDE_EDIT_FORM_SECTION.DEPARTURE_DATE_PICKER';\nexport const ARRIVAL_DATE_PICKER = 'RIDE_EDIT_FORM_SECTION.ARRIVAL_DATE_PICKER';\n","import React from 'react';\nimport FormDialog from 'modules/components/FormDialog';\nimport RideEditFormSection from 'travel/components/RideEditFormSection';\nimport * as locators from '../../../../locators';\n\nexport default function RideEditDialog({\n  isCreation,\n  tripVisitsIds,\n  visitsDict,\n  ...forwardingProps\n}) {\n  return (\n    <FormDialog\n      data-locator={locators.RIDE_DIALOG}\n      title={isCreation ? 'Создание маршрута' : 'Редактирование маршрута'}\n      {...forwardingProps}\n    >\n      <RideEditFormSection\n        tripVisitsIds={tripVisitsIds}\n        visitsDict={visitsDict}\n        formikProps={null /* will be passed in FormDialog */}\n      />\n    </FormDialog>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport Suggest, { QUERY_FORMATS } from 'modules/components/muiExtended/Suggest';\nimport RideInfo from 'travel/components/RideInfo';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport * as locators from './locators';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n\nconst renderRide = ridesDict => ({ option: rideId }) => (\n  <RideInfo ride={ridesDict[rideId]} isLong={true} />\n);\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nconst useStyles = makeStyles({\n  option: {\n    width: '100%',\n  },\n});\n\nexport default function VisitEditFormSection({\n  tripRidesIds,\n  ridesDict,\n  formikProps: {\n    values: {\n      locationName,\n      visitType,\n      visitComment,\n      arrivalRideId,\n      departureRideId,\n    },\n    handleChange,\n    handleBlur,\n    setFieldValue,\n  },\n}) {\n  const classes = useStyles();\n  const isTripHasRides = tripRidesIds && tripRidesIds.length > 0;\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={12}>\n        <Suggest\n          data-locator={locators.LOCATION_SUGGEST}\n          inputProps={{\n            placeholder: 'Место посещения...',\n          }}\n          initialInputValue={locationName}\n          onChange={({ suggestion: { geonameId } }) =>\n            setFieldValue('geonameId', geonameId)\n          }\n          onBlur={handleBlur}\n          sourceProps={{\n            domain: 'visitEditFormSection.geoname',\n            modelName: 'geonames',\n            filterField: 'locationName',\n            queryFormat: QUERY_FORMATS.SEARCH,\n          }}\n          transformSuggestionToOption={transformSuggestionToOption}\n          triggerProps={{ label: 'Место посещения' }}\n        />\n      </Grid>\n      {isTripHasRides && (\n        <>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"arrivalRideId\"\n              caption=\"Прибытие\"\n              inputId=\"RideEditCard-arrivalVisitId\"\n              hasNullOption={false}\n              optionRender={renderRide(ridesDict)}\n              options={tripRidesIds}\n              onChange={handleChange}\n              value={arrivalRideId}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"departureRideId\"\n              caption=\"Отправление\"\n              inputId=\"RideEditCard-departureVisitId\"\n              optionRender={renderRide(ridesDict)}\n              hasNullOption={false}\n              options={tripRidesIds}\n              value={departureRideId}\n              onChange={handleChange}\n            />\n          </Grid>\n        </>\n      )}\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.VISIT_TYPE_SELECT}\n          name=\"visitType\"\n          value={visitType}\n          onChange={handleChange}\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <TextField\n          className={classes.option}\n          name=\"visitComment\"\n          value={visitComment}\n          onChange={handleChange}\n          label=\"Комментарий\"\n          fullWidth={true}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nVisitEditFormSection.propTypes = {};\nVisitEditFormSection.defaultProps = {};\n\nfunction transformSuggestionToOption(suggestion) {\n  const { locationName, countryName, regionName } = suggestion;\n  return {\n    label: locationName,\n    details: [countryName, regionName].filter(Boolean).join(', '),\n    suggestion,\n  };\n}\n","export const LOCATION_SUGGEST = 'VISIT_EDIT_FORM_SECTION.LOCATION_SUGGEST';\nexport const VISIT_TYPE_SELECT = 'VISIT_EDIT_FORM_SECTION.VISIT_TYPE_SELECT';\n","import React from 'react';\nimport FormDialog from 'modules/components/FormDialog';\nimport VisitEditFormSection from 'travel/components/VisitEditFormSection';\nimport * as locators from '../../../../locators';\n\nexport default function VisitEditDialog({\n  isCreation,\n  tripRidesIds,\n  ridesDict,\n  ...forwardingProps\n}) {\n  return (\n    <FormDialog\n      data-locator={locators.VISIT_DIALOG}\n      title={isCreation ? 'Создание посещения' : 'Редактирование посещения'}\n      {...forwardingProps}\n    >\n      <VisitEditFormSection\n        tripRidesIds={tripRidesIds}\n        ridesDict={ridesDict}\n        formikProps={null /* will be passed in FormDialog */}\n      />\n    </FormDialog>\n  );\n}\n","import React from 'react';\nimport Dialog from 'modules/components/Dialog';\nimport VisitInfo from 'travel/components/VisitInfo';\n\nexport default function VisitDeleteDialog({\n  visit,\n  onSubmit,\n  onReset,\n  ...forwardingProps\n}) {\n  return (\n    <Dialog\n      title=\"Удалить посещение\"\n      description=\"Вы действительно хотите удалить посещение\"\n      primaryButtonCaption=\"Да\"\n      primaryButtonHandler={event => onSubmit(event, visit)}\n      secondaryButtonCaption=\"Нет\"\n      secondaryButtonHandler={onReset}\n      {...forwardingProps}\n    >\n      <VisitInfo visit={visit} />\n    </Dialog>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { initializeRide } from 'travel/models/rides';\nimport { initializeVisit } from 'travel/models/visits';\nimport RideEditDialog from './blocks/RideEditDialog';\nimport VisitEditDialog from './blocks/VisitEditDialog';\nimport VisitDeleteDialog from './blocks/VisitDeleteDialog';\nimport { DIALOG_NAMES } from '../../useTripEditPageDialogs';\n\nexport default function TripEditAssociatedDialogs({\n  provision,\n  dialogsState,\n  hideDialog,\n  handleSubmitRide,\n  handleSubmitVisit,\n  handleDeleteVisit,\n  trip,\n}) {\n  const { ridesDict, visitsDict } = provision;\n  const { tripId, visits: tripVisitsIds, rides: tripRidesIds } = trip;\n  const { dialogName, dialogParams = {} } = dialogsState;\n\n  const initialRideValues = useMemo(\n    () => {\n      const { rideId } = dialogParams;\n      const initialValues = rideId ? ridesDict[rideId] : initializeRide();\n      return {\n        ...initialValues,\n        ...dialogParams,\n        tripId,\n      };\n    },\n    [ridesDict, tripId, dialogParams],\n  );\n\n  const initialVisitValues = useMemo(\n    () => {\n      const { visitId } = dialogParams;\n      const initialValues = visitId ? visitsDict[visitId] : initializeVisit();\n      return {\n        ...initialValues,\n        ...dialogParams,\n        tripId,\n      };\n    },\n    [visitsDict, tripId, dialogParams],\n  );\n\n  const isRideEditDialogShown = checkIsRideEditDialogShown(dialogName);\n  const isVisitEditDialogShown = checkIsVisitEditDialogShown(dialogName);\n  const isVisitDeleteDialogShown = dialogName === DIALOG_NAMES.VISIT_DELETE;\n  return (\n    <>\n      <RideEditDialog\n        initialValues={initialRideValues}\n        tripVisitsIds={tripVisitsIds}\n        isOpen={isRideEditDialogShown}\n        onSubmit={values => {\n          handleSubmitRide(values);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n        isCreation={dialogName === DIALOG_NAMES.RIDE_CREATE}\n        visitsDict={visitsDict}\n      />\n      <VisitEditDialog\n        initialValues={initialVisitValues}\n        tripRidesIds={tripRidesIds}\n        isOpen={isVisitEditDialogShown}\n        onSubmit={values => {\n          handleSubmitVisit(values);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n        isCreation={dialogName === DIALOG_NAMES.VISIT_CREATE}\n        ridesDict={ridesDict}\n      />\n      <VisitDeleteDialog\n        visit={visitsDict[dialogParams.visitId]}\n        isOpen={isVisitDeleteDialogShown}\n        onSubmit={(event, { visitId }) => {\n          handleDeleteVisit(visitId);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n      />\n    </>\n  );\n}\n\nfunction checkIsRideEditDialogShown(dialogName) {\n  return (\n    dialogName === DIALOG_NAMES.RIDE_EDIT ||\n    dialogName === DIALOG_NAMES.RIDE_CREATE\n  );\n}\n\nfunction checkIsVisitEditDialogShown(dialogName) {\n  return (\n    dialogName === DIALOG_NAMES.VISIT_EDIT ||\n    dialogName === DIALOG_NAMES.VISIT_CREATE\n  );\n}\n","const INITIAL_ORDER = 100;\nexport default ({ orderResolver: resolveOrder }) => ({ index, collection }) => {\n  if (!collection.length) {\n    return INITIAL_ORDER;\n  }\n  if (index <= 0) {\n    return resolveOrder(collection[0]) - 1;\n  }\n  if (index >= collection.length - 1) {\n    return resolveOrder(collection[collection.length - 1]) + 1;\n  }\n  const prevOrder = resolveOrder(collection[index - 1]);\n  const nextOrder = resolveOrder(collection[index]);\n  const randomness = ((Math.random() - 0.5) * (nextOrder - prevOrder)) / 2;\n  return (prevOrder + nextOrder) / 2 + randomness;\n};\n","import { useCallback } from 'react';\nimport { useRequest } from 'core/connection';\nimport createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nconst domain = 'travel.TripEditPage';\n\nexport default function useTripEditRequests(invalidate) {\n  const [submitRide] = useRequest({\n    domain: `${domain}.rides`,\n    modelName: 'rides',\n  });\n  const handleSubmitRide = useCallback(\n    ride =>\n      submitRide({\n        query: {\n          id: ride.rideId,\n          body: ride,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [submitTrip] = useRequest({\n    domain: `${domain}.trips`,\n    modelName: 'trips',\n  });\n  const handleSubmitTrip = useCallback(\n    trip =>\n      submitTrip({\n        query: {\n          id: trip.tripId,\n          body: trip,\n        },\n      }).finally(invalidate),\n    [],\n  );\n\n  const [submitVisit] = useRequest({\n    domain: `${domain}.visits`,\n    modelName: 'visits',\n  });\n\n  const handleSubmitVisit = useCallback(\n    visit =>\n      submitVisit({\n        query: {\n          id: visit.visitId,\n          body: visit,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [deleteVisit] = useRequest({\n    domain: `${domain}.visits`,\n    modelName: 'visits',\n  });\n\n  const handleDeleteVisit = useCallback(\n    visitId =>\n      deleteVisit({\n        method: 'DELETE',\n        query: {\n          id: visitId,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  return {\n    handleSubmitRide,\n    handleSubmitTrip,\n    handleSubmitVisit,\n    handleDeleteVisit,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { usePaths } from 'modules/packages';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { useTripsStats } from 'travel/dataSource';\nimport { initializeTrip } from 'travel/models/trips';\nimport TripEditForm from './blocks/TripEditForm';\nimport TripEditAssociatedDialogs from './blocks/TripEditAssociatedDialogs';\nimport useTripEditRequests from './useTripEditRequests';\nimport useTripEditPageDialogs from './useTripEditPageDialogs';\n\nfunction TripEditPage({\n  match: {\n    params: { userAlias, strTripId, action },\n  },\n}) {\n  const {\n    travel: { tripEdit: tripEditPath },\n  } = usePaths();\n  const history = useHistory();\n  const isCreation = action === 'create';\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const tripId = strTripId && parseInt(strTripId, 10);\n  const provision = useTripsStats({\n    userAlias,\n    tripsIds: tripId ? [tripId] : [],\n  });\n  const { tripsDict, tripsProvision } = provision;\n  const trip = isCreation ? initializeTrip() : tripsDict[tripId];\n\n  const {\n    handleSubmitRide,\n    handleSubmitTrip,\n    handleSubmitVisit,\n    handleDeleteVisit,\n  } = useTripEditRequests(tripsProvision.invalidate);\n\n  const { showDialog, hideDialog, dialogsState } = useTripEditPageDialogs();\n\n  const { isError, isReady, isPending } = provision;\n  if ((!tripId || (isReady && !trip)) && !isCreation) {\n    return <div>Запрашиваемая вами страница не найдена</div>;\n  }\n  if (!isAuthenticated || authenticatedUserAlias !== userAlias) {\n    return <div>У вас не достаочно прав для просмотра данной страницы</div>;\n  }\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  if (!trip) {\n    return <div>...Error, no trip is provided</div>;\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={{ trip }}\n        onSubmit={values => {\n          return handleSubmitTrip(values.trip).then(newTripId => {\n            if (tripId || !newTripId) {\n              return;\n            }\n            const tripEditPageUrl = tripEditPath.toUrl({\n              userAlias,\n              strTripId: String(newTripId),\n            });\n            history.push(tripEditPageUrl);\n          });\n        }}\n      >\n        {formikProps => (\n          <TripEditForm\n            isCreation={isCreation}\n            showDialog={showDialog}\n            formikProps={formikProps}\n            provision={provision}\n          />\n        )}\n      </Formik>\n      <TripEditAssociatedDialogs\n        provision={provision}\n        dialogsState={dialogsState}\n        hideDialog={hideDialog}\n        handleSubmitRide={handleSubmitRide}\n        handleSubmitVisit={handleSubmitVisit}\n        handleDeleteVisit={handleDeleteVisit}\n        trip={trip}\n      />\n    </>\n  );\n}\n\nTripEditPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default TripEditPage;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport { useProvision, selectDict } from 'core/connection';\nimport { selectResult } from 'core/connection/request/controllerRedux';\nimport mergeProvisionsState from 'core/connection/request/utils/mergeProvisionsState';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias, tripsIds: requiredTripsIds }) {\n  const { tripsDict } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n  }));\n\n  const shouldRequireAllTrips = !requiredTripsIds;\n  const missingTripsIds =\n    !shouldRequireAllTrips &&\n    requiredTripsIds.filter(tripId => !tripsDict[tripId]);\n\n  const tripsIdsUniqStr = missingTripsIds ? missingTripsIds.join(',') : '*';\n  const tripsFilter = shouldRequireAllTrips\n    ? {}\n    : { id: { comparator: 'in', value: missingTripsIds } };\n\n  return useProvision({\n    domain: `travel.trips-${userAlias}-${tripsIdsUniqStr}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    condition: shouldRequireAllTrips || missingTripsIds.length > 0,\n    query: {\n      userAlias,\n      navigation: { isDisabled: true },\n      filter: {\n        user_alias: { comparator: '=', value: userAlias },\n        ...tripsFilter,\n      },\n    },\n  });\n}\n\nexport function useTripsStats({ userAlias, tripsIds: requiredTripsIds }) {\n  const tripsProvision = useTrips({ userAlias, tripsIds: requiredTripsIds });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = requiredTripsIds\n    ? { data: requiredTripsIds }\n    : selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = useUniqField(tripsIds, tripsDict, 'visits');\n  const ridesIds = useUniqField(tripsIds, tripsDict, 'rides');\n  const countriesIds = useUniqField(visitsIds, visitsDict, 'countryId');\n  const locationsIds = useUniqField(visitsIds, visitsDict, 'locationId');\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  return {\n    userProvision,\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n\nfunction useUniqField(entitiesIds, entitiesDict, fieldName) {\n  return useMemo(\n    () =>\n      Array.from(\n        new Set(\n          entitiesIds.flatMap(\n            entityId => entitiesDict[entityId]?.[fieldName] || [],\n          ),\n        ),\n      ),\n    [entitiesIds, entitiesDict, fieldName],\n  );\n}\n","import sum from 'lodash/sum';\nimport {\n  selectError,\n  selectIsError,\n  selectIsPending,\n  selectIsReady,\n  selectIsValid,\n  selectUpdatesCounter,\n} from '../controllerRedux';\n\nexport default function mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n    invalidate: () => provisions.forEach(({ invalidate }) => invalidate()),\n  };\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MUILink from '@material-ui/core/Link';\nimport { Typography } from '@material-ui/core';\n\nexport default function ConnectedLink({\n  optional,\n  children,\n  ...forwardingProps\n}) {\n  const linkable = Boolean(\n    !optional ||\n      forwardingProps.href ||\n      forwardingProps.to ||\n      forwardingProps.onClick,\n  );\n\n  if (!linkable) {\n    return <Typography {...forwardingProps}>{children}</Typography>;\n  }\n\n  return (\n    <MUILink {...forwardingProps} component={RouterLink}>\n      {children}\n    </MUILink>\n  );\n}\n\nConnectedLink.defaultProps = {\n  optional: false,\n};\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport ru from 'date-fns/locale/ru';\nimport dateFormat from 'modules/utilities/dateTime/safeDateFormat';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  MONTH_YEAR: 'LLLL yyyy',\n  MONTH_ONLY: 'LLLL',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nexport function dateTimePeriodToString(periodStart, periodEnd, isObscure) {\n  const fullFormat = isObscure ? DATE_FORMATS.MONTH_YEAR : DATE_FORMATS.FULL;\n  const periodEndString = dateFormat(periodEnd, fullFormat, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    if (!isObscure) {\n      periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n        locale: ru,\n      });\n    }\n  } else if (isSameYear(periodStart, periodEnd)) {\n    const shortFormat = isObscure\n      ? DATE_FORMATS.MONTH_ONLY\n      : DATE_FORMATS.DAY_MONTH;\n    periodStartString = dateFormat(periodStart, shortFormat, { locale: ru });\n  } else {\n    periodStartString = dateFormat(periodStart, fullFormat, { locale: ru });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString(\n  { departureDateTime, arrivalDateTime },\n  isObscure,\n) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime, isObscure);\n}\n\nexport function visitDateTimePeriodToString(\n  { departureDateTime, arrivalDateTime },\n  isObscure,\n) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime, isObscure);\n}\n\nexport function dateTimeOpenPeriodToString({\n  periodStart,\n  periodEnd,\n  isObscure,\n  placeholder,\n}) {\n  if (!periodEnd) {\n    const format = isObscure ? DATE_FORMATS.MONTH_YEAR : DATE_FORMATS.FULL;\n    const startDateStr = dateFormat(periodStart, format, { locale: ru });\n    return `${startDateStr}—${placeholder}`;\n  }\n  return dateTimePeriodToString(periodStart, periodEnd, isObscure);\n}\n","import { useProvision } from 'core/connection';\n\nexport default function useCountries() {\n  return useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n}\n","import dateFormat from 'date-fns/format';\nimport isValidDate from './isValidDate';\n\nexport default function safeDateFormat(date, ...args) {\n  if (!isValidDate(date)) {\n    return '?';\n  }\n  return dateFormat(date, ...args);\n}\n","export default function isValidDate(date) {\n  return date instanceof Date && !Number.isNaN(date.getTime());\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  return useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useVisit({ userAlias, visitId: requiredVisitId }) {\n  const { visitsDict } = useSelector(state => ({\n    visitsDict: selectDict(state, 'visits') || {},\n  }));\n  const visit = visitsDict[requiredVisitId];\n\n  return {\n    visit,\n    ...useProvision({\n      domain: `travel.visit${requiredVisitId}-${userAlias}`,\n      isProvision: true,\n      modelName: 'visits',\n      observe: requiredVisitId,\n      condition: !visit,\n      query: {\n        userAlias,\n        filter: { visit_id: { comparator: '=', value: requiredVisitId } },\n        navigation: { isDisabled: true },\n      },\n    }),\n  };\n}\n\nexport function useAddVisitPhotoRequest({ domain }) {\n  const [submitVisitPhoto, provision] = useRequest({\n    domain,\n    modelName: 'visits', // todo: actually this is assets model, not visits. Moreover this is photos model\n    method: 'POST',\n    contentType: 'multipart/form-data',\n  });\n\n  return {\n    ...provision,\n    submitVisitPhoto,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import React from 'react';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { VEHICLE_TYPES } from 'travel/models/rides/consts';\n\nexport default function RideIcon({ ride: { vehicleType }, className }) {\n  const IconComponent = resolveRideIconComponent(vehicleType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(vehicleType) {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n      return CustomTransportIcon;\n    default:\n      return UnknownRideIcon;\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { RIDE_TYPES } from 'travel/models/rides/consts';\nimport RideIcon from 'travel/components/RideIcon';\n\nconst useStyles = makeStyles({\n  icon: { color: 'gray', fontSize: 16, height: 16 },\n  absoluteIcon: {\n    // todo fast decision, need refactor\n    color: 'gray',\n    fontSize: 16,\n    height: 16,\n    position: 'absolute',\n  },\n  detail: { color: 'gray', fontSize: 12 },\n});\n\nexport default function RideInfo({\n  ride,\n  ride: { rideType } = {},\n  className,\n  isLong,\n}) {\n  const classes = useStyles();\n\n  if (!ride) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <RideIcon ride={ride} className={classes.icon} />\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.absoluteIcon} />\n      )}\n      {isLong && rideDateTimePeriodToString(ride)}\n    </div>\n  );\n}\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import dateMin from 'date-fns/min';\nimport dateMax from 'date-fns/max';\nimport groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\n\nconst FALLBACK = 'Без названия';\nexport default function resolveTripCaption(\n  trip,\n  visitsDict,\n  countriesDict,\n  locationsDict,\n) {\n  const {\n    visits: visitsIds,\n    originLocationId,\n    tripName,\n    hasAutogeneratedTripName,\n  } = trip || {};\n\n  const originCountryId = locationsDict[originLocationId]?.countryId;\n\n  if (!hasAutogeneratedTripName) {\n    return tripName || FALLBACK;\n  }\n  if (!visitsIds.length) {\n    return FALLBACK;\n  }\n\n  const periodStr = visitDateTimePeriodToString({\n    arrivalDateTime: dateMin(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.arrivalDateTime),\n    ),\n    departureDateTime: dateMax(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.departureDateTime),\n    ),\n  });\n\n  const visitsByCountries = Object.keys(\n    groupBy(\n      visitsIds.filter(\n        visitId => visitsDict[visitId]?.visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n\n  if (visitsByCountries.length === 1) {\n    const locationsNames = uniqTrimAndJoin(\n      visitsIds.map(visitId => visitsDict[visitId]?.locationName),\n      { maxLength: 4 },\n    );\n    return `${locationsNames || FALLBACK}, ${periodStr}`;\n  }\n\n  const countriesNames = uniqTrimAndJoin(\n    visitsByCountries\n      .map(\n        countryId =>\n          Number(countryId) !== originCountryId &&\n          countriesDict[countryId] &&\n          countriesDict[countryId].countryName,\n      )\n      .filter(Boolean),\n    { maxLength: 4 },\n  );\n  return `${countriesNames || FALLBACK}, ${periodStr}`;\n}\n"],"sourceRoot":""}