{"version":3,"sources":["webpack:///./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Option.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Overlay.jsx","webpack:///./src/modules/components/muiExtended/Select/blocks/Trigger.jsx","webpack:///./src/modules/components/muiExtended/Select/Select.jsx","webpack:///./src/modules/components/muiExtended/Suggest/useSuggest.js","webpack:///./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/localization.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/TripEditFormSection.jsx","webpack:///./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack:///./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack:///./src/modules/components/Sortable/Sortable.jsx","webpack:///./src/modules/components/DragHandler/DragHandler.jsx","webpack:///./src/packages/travel/pages/TripEditPage/useTripEditPageDialogs.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/VisitCreator.jsx","webpack:///./src/packages/travel/components/common/Actions/buttons/CreateButton.jsx","webpack:///./src/packages/travel/components/common/Actions/buttons/EditButton.jsx","webpack:///./src/packages/travel/components/common/Actions/buttons/DeleteButton.jsx","webpack:///./src/packages/travel/components/common/Actions/Actions.jsx","webpack:///./src/packages/travel/components/models/visits/VisitIcon/VisitIcon.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/Visit.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/Ride.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/VisitAndRidesFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/VisitsAndRidesFormSection.jsx","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/TripEditTitle.jsx","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/TripEditForm.jsx","webpack:///./src/modules/components/Dialog/Dialog.jsx","webpack:///./src/modules/components/FormDialog/FormDialog.jsx","webpack:///./src/packages/travel/components/models/visits/VisitInfo/VisitInfo.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditFormSection/localization.js","webpack:///./src/packages/travel/components/models/rides/RideEditFormSection/tieDateTimeFields.js","webpack:///./src/packages/travel/components/models/rides/RideEditFormSection/RideEditFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/RideEditDialog/RideEditDialog.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditFormSection/VisitEditFormSection.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/VisitEditDialog/VisitEditDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/VisitDeleteDialog/VisitDeleteDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/TripEditAssociatedDialogs.jsx","webpack:///./src/modules/utilities/algorithms/createOrderCalculator.js","webpack:///./src/packages/travel/pages/TripEditPage/useTripEditRequests.js","webpack:///./src/packages/travel/pages/TripEditPage/TripEditPage.jsx","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack:///./src/packages/travel/components/models/rides/RideInfo/RideInfo.jsx","webpack:///./src/packages/travel/components/models/rides/RideIcon/RideIcon.jsx"],"names":["OptionsSelect","caption","classes","hasNullOption","inputId","name","handleChange","onChange","optionRender","options","value","className","container","InputLabel","component","shrink","htmlFor","Select","displayEmpty","input","Input","id","selectRoot","MenuItem","key","option","index","map","valuePropTypes","PropTypes","oneOfType","number","string","propTypes","isRequired","objectOf","bool","func","arrayOf","defaultProps","undefined","withStyles","display","Option","isHighlighted","isSelected","forwardedProps","selected","style","fontWeight","ListItemText","primary","label","secondary","details","Overlay","isOpen","getMenuProps","getItemProps","selectedItem","highlightedIndex","Paper","paper","square","item","Boolean","Trigger","triggerProps","triggerInputProps","TextField","InputProps","root","inputRoot","inputInput","fullWidth","useStyles","makeStyles","theme","position","zIndex","marginTop","spacing","left","right","defaultItemToString","customClasses","inputProps","downshiftProps","itemToString","getInputProps","inputValue","QUERY_FORMATS","resolveQueryByFormat","queryFormat","filterField","searchString","navigation","pageSize","numberOfItemsToRequest","search","filter","comparator","Suggest","sourceProps","transformSuggestionToOption","suggestion","forwardingProps","useState","setInputValue","suggestions","domain","modelName","debounceRequestDelayMs","provision","useProvision","debounceRequest","isProvision","observe","query","selectResult","data","entitiesIds","entitiesDict","useSelector","state","selectDict","entityId","useSuggest","handleInputChange","useCallback","event","target","actualInputProps","useMemo","TRIP_TYPE_NAMES","TRIP_TYPES","LEISURE","BUSINESS","MIXED","RELOCATION","OTHER","renderTripType","tripType","optionGroup","minWidth","suggest","flexGrow","TripEditFormSection","locationsDict","formikProps","setFieldValue","handleBlur","errors","touched","values","trip","tripFormValues","locationName","originLocationId","Grid","alignItems","xs","FormControlLabel","control","Checkbox","helperText","hasAutogeneratedTripName","onBlur","textField","tripName","margin","placeholder","initialInputValue","geonameId","resolveDetails","countryName","regionName","join","Object","detail","prevVisit","nextVisit","departureRideId","arrivalRideId","element","dataset","sortHandler","parentNode","SortableContainer","SortableContainerHOC","children","SortableElement","SortableElementHOC","node","Sortable","shouldCancelStart","checkIsNodeNotSortable","lockAxis","lockToContainerEdges","React","Children","dragHandler","cursor","DragHandler","cls","data-sort-handler","DIALOG_NAMES","justifyContent","background","padding","border","boxShadow","visibility","visibleOnlyOnHover","VisitCreator","showDialog","Button","size","variant","color","onClick","CreateButton","IconButton","EditButton","DeleteButton","actions","Actions","isEntityExist","onEditClick","onDeleteClick","onCreateClick","hasCreateAction","hasEditAction","hasDeleteAction","VisitIcon","visitType","visit","IconComponent","VISIT_TYPES","TRANSIT","TransferWithinAStationIcon","BASE_CAMP","DomainIcon","LocalShippingIcon","REGULAR","LocationCityIcon","resolveRideIconComponent","marginRight","icon","verticalAlign","visibleOnHover","Visit","shape","visitPropTypes","Ride","ride","rideId","arrivalDateTime","departureDateTime","isRideExists","RideIcon","rideDateTimePeriodToString","ridePropTypes","alwaysVisible","editDialogTrigger","marginLeft","top","transform","warning","VisitAndRidesFormSection","isArrivalRideMatch","isDepartureRideMatch","tripId","ridesDict","visitId","formArrivalRideId","formDepartureVisitId","prevVisitId","nextVisitId","dialogName","dialogParams","departureVisitId","arrivalVisitId","editIcon","creatorsContainer","isCompact","resetFlow","VisitsAndRidesFormSection","formVisitsIds","visits","visitsDict","length","creatorsNodeIndex","setCreatorsNodeIndex","isSorting","setIsSorting","showCreationDialog","neighbors","orderInTrip","calculateOrderInTripBetweenTwoVisits","render","arrayHelpers","updateBeforeSortStart","onSortEnd","oldIndex","newIndex","move","flatMap","formVisitId","indexOfVisit","prevVisitFormValues","visitFormValues","nextVisitFormValues","checkIsVisitsConnectedByRide","checkIsRidesMatch","shouldCollapseRides","visitAndRidesFormSectionNode","shouldInsertCreatorsNodeBeforeFormSection","shouldInsertCreatorsNodeAfterFormSection","visitCreatorNode","prevOrderInTrip","nextOrderInTrip","Math","random","array","maxLength","separator","uniqArray","uniq","result","slice","TripEditTitle","isCreation","formTrip","formVisitsDict","countriesDict","modeCaption","visitsIds","originCountryId","fallback","visitsByCountries","keys","groupBy","uniqTrimAndJoin","countryId","Number","resolveTripCaption","tripCaption","Typography","TripEditForm","type","title","description","primaryButtonCaption","primaryButtonHandler","secondaryButtonCaption","secondaryButtonHandler","onClose","Dialog","transitionDuration","open","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","initialValues","onSubmit","onReset","enableReinitialize","handleSubmit","cloneElement","VisitInfo","RIDE_CLASSES_NAMES","RIDE_CLASSES","ECONOMY","COMFORT","FIRST","PRIVATE","RIDE_OCCUPATION_NAMES","RIDE_OCCUPATION","PASSENGER","STUFF","DRIVER","RIDE_TYPES_NAMES","RIDE_TYPES","SELF_DRIVE","SCHEDULED","CHARTER","TOUR","CARPOOL","HITCH_HIKING","DROP_OFF","VEHICLE_NAMES","VEHICLE_TYPES","CAR","TRAIN","AIRCRAFT","BUS","MOTORHOME","LOCAL_TRAIN","FERRY","BIKE","BY_FEET","ROPEWAY","FUNICULAR","MOTORBIKE","TRUCK","ALL_TERRAIN_VEHICLE","TRAM","TROLLEY","TAXI","CITY_BUS","JITNEY","SUBWAY","PUBLIC_TRANSPORT","mixDateTime","dateFrom","timeFrom","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","rideDeparture","rideArrival","isSameDay","checkIsSameDay","setDatesAndTimes","nextRideDeparture","nextRideArrival","beforeDateTime","afterDateTime","isInverted","checkIsAfter","actualNextRideDeparture","actualNextRideArrival","checkIsDatesEqual","setRideDeparture","setRideArrival","isSameDateField","nextIsSameDay","addDays","rideDepartureField","rideArrivalField","ORIGIN_OF_TRIP","renderVisit","renderVehicleType","vehicleType","renderRideType","rideType","renderRideClass","rideClass","renderRideOccupation","rideOccupation","width","RideEditFormSection","tripVisitsIds","rideComment","isTripHasVisits","tieDateTimeFields","autoOk","format","checked","TimePicker","ampm","multiline","rows","rowsMax","RideEditDialog","FormDialog","VISIT_TYPE_NAMES","renderRide","RideInfo","isLong","renderVisitType","VisitEditFormSection","tripRidesIds","visitComment","isTripHasRides","VisitEditDialog","VisitDeleteDialog","TripEditAssociatedDialogs","dialogsState","hideDialog","handleSubmitRide","handleSubmitVisit","handleDeleteVisit","rides","initialRideValues","initializeRide","initialVisitValues","initializeVisit","isRideEditDialogShown","checkIsRideEditDialogShown","isVisitEditDialogShown","checkIsVisitEditDialogShown","isVisitDeleteDialogShown","resolveOrder","orderResolver","createOrderCalculator","TripEditPage","match","params","userAlias","strTripId","action","useAuthContext","isAuthenticated","authenticatedUserAlias","parseInt","useTripsStats","tripsIds","tripsDict","tripsProvision","initializeTrip","invalidate","submitRide","useRequest","body","then","submitTrip","handleSubmitTrip","submitVisit","deleteVisit","method","useTripEditRequests","setDialogsState","useTripEditPageDialogs","isError","isReady","isPending","requiredTripsIds","shouldRequireAllTrips","missingTripsIds","isDisabled","useTrips","useUser","user","locationsRating","userProvision","Array","from","Set","tripsId","ridesIds","countriesIds","locationsIds","locationId","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","updatesCounter","sum","selectUpdatesCounter","every","selectIsReady","some","selectIsPending","isValid","selectIsValid","error","find","selectIsError","selectError","forEach","mergeProvisionsState","countriesRating","ratingsGroupedByCountries","reduce","memo","location","locationRating","push","mapValues","ratingsByCountry","ratings","Infinity","avg","rating","a","b","best","max","lengthRatio","log","averageRating","calcCountriesRating","ridesStats","calcRidesStats","earliestDeparture","min","getTime","latestArrival","isLoading","counters","selectItem","applicableSchemaName","condition","requiredLocationIds","missingLocationsIds","useLocationRatingRequest","submitLocationRating","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","periodEndString","dateFormat","locale","ru","periodStartString","isSameMonth","isSameYear","visitDateTimePeriodToString","fontSize","height","absoluteIcon","CarIcon","TrainIcon","FlightIcon","BusIcon","VanIcon","BoatIcon","BikeIcon","WalkIcon","MotorcycleIcon","TruckIcon","TerrainIcon","TramIcon","LocalTaxiIcon","SubwayIcon","SeatIcon","CustomTransportIcon","UnknownRideIcon"],"mappings":"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","file":"travel-Trips-c2915dc4ae1b9153b7f2.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'block',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  name,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      name={name}\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n    >\n      {hasNullOption && (\n        <MenuItem key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nconst valuePropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\nOptionsSelect.propTypes = {\n  name: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  hasNullOption: PropTypes.bool,\n  inputId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionRender: PropTypes.func,\n  options: PropTypes.arrayOf(valuePropTypes),\n  value: valuePropTypes,\n};\n\nOptionsSelect.defaultProps = {\n  name: undefined,\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport default function Option({\n  isHighlighted,\n  isSelected,\n  option,\n  ...forwardedProps\n}) {\n  return (\n    <MenuItem\n      component=\"div\"\n      selected={isHighlighted}\n      style={{ fontWeight: isSelected ? 500 : 400 }}\n      {...forwardedProps}\n    >\n      <ListItemText primary={option.label} secondary={option.details} />\n    </MenuItem>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Option from './Option';\n\nexport default function Overlay({\n  isOpen,\n  options,\n  classes,\n  getMenuProps,\n  getItemProps,\n  selectedItem,\n  highlightedIndex,\n}) {\n  return (\n    <div {...getMenuProps()}>\n      {isOpen && (\n        <Paper className={classes.paper} square={true}>\n          {options.map((option, index) => (\n            <Option\n              key={option.label}\n              {...getItemProps({ item: option })}\n              isHighlighted={highlightedIndex === index}\n              isSelected={\n                Boolean(selectedItem) && selectedItem.label === option.label\n              }\n              option={option}\n            />\n          ))}\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Trigger({\n  classes,\n  triggerProps,\n  triggerInputProps,\n  // inputValue,\n  // onChange,\n}) {\n  // const inputValueRef = useRef(inputValue);\n  // useEffect(\n  //   () => {\n  //     const prevInputValue = inputValueRef.current;\n  //     inputValueRef.current = inputValue;\n  //     if (prevInputValue !== inputValue) {\n  //       onChange(inputValue);\n  //     }\n  //   },\n  //   [inputValue, onChange],\n  // );\n  return (\n    <TextField\n      InputProps={{\n        // inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        },\n        ...triggerInputProps,\n      }}\n      fullWidth={true}\n      classes={classes}\n      {...triggerProps}\n    />\n  );\n}\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Overlay from './blocks/Overlay';\nimport Trigger from './blocks/Trigger';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\n// export default ({ inputProps, classes, ref, ...other }) => {};\nexport default function Select({\n  classes: customClasses,\n  options,\n  inputProps,\n  triggerProps,\n  ...downshiftProps\n}) {\n  const classes = { ...useStyles(), ...customClasses };\n  return (\n    <div className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <Trigger\n              classes={classes}\n              inputValue={inputValue}\n              triggerProps={triggerProps}\n              triggerInputProps={getInputProps(inputProps)}\n            />\n            <Overlay\n              isOpen={isOpen}\n              options={options}\n              classes={classes}\n              getMenuProps={getMenuProps}\n              getItemProps={getItemProps}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n            />\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectResult } from 'core/connection/request/controllerRedux';\nimport { useProvision, selectDict } from 'core/connection';\n\nexport const QUERY_FORMATS = {\n  FILTER: 'FILTER',\n  SEARCH: 'SEARCH',\n};\nconst DEFAULT_SUGGEST_DEBOUNCE_TIME_MS = 400;\n\nexport default function useSuggest({\n  domain,\n  modelName,\n  inputValue,\n  queryFormat,\n  filterField,\n  numberOfItemsToRequest,\n  debounceRequestDelayMs = DEFAULT_SUGGEST_DEBOUNCE_TIME_MS,\n}) {\n  const provision = useProvision({\n    debounceRequest: debounceRequestDelayMs,\n    domain,\n    isProvision: true,\n    modelName,\n    observe: inputValue,\n    query: resolveQueryByFormat({\n      queryFormat,\n      filterField,\n      inputValue,\n      numberOfItemsToRequest,\n    }),\n  });\n  const { data: entitiesIds = [] } = selectResult(provision) || {};\n  const entitiesDict = useSelector(state => selectDict(state, modelName) || {});\n\n  return {\n    provision,\n    suggestions: entitiesIds\n      .map(entityId => entitiesDict[entityId])\n      .filter(Boolean),\n  };\n}\n\nfunction resolveQueryByFormat({\n  queryFormat,\n  filterField,\n  inputValue: searchString,\n  numberOfItemsToRequest,\n}) {\n  const navigation = { pageSize: numberOfItemsToRequest };\n  switch (queryFormat) {\n    case QUERY_FORMATS.SEARCH:\n      return { navigation, search: searchString };\n    case QUERY_FORMATS.FILTER:\n    default:\n      return {\n        navigation,\n        filter: {\n          [filterField]: { comparator: '~', value: `%${searchString}%` },\n        },\n      };\n  }\n}\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Select from '../Select';\nimport useSuggest, { QUERY_FORMATS } from './useSuggest';\n\nexport { QUERY_FORMATS };\nexport default function Suggest({\n  classes: customClasses,\n  inputProps,\n  triggerProps,\n  sourceProps,\n  transformSuggestionToOption = suggestion => suggestion,\n  ...forwardingProps\n}) {\n  const [inputValue, setInputValue] = useState('');\n  const { suggestions } = useSuggest({ ...sourceProps, inputValue });\n  const handleInputChange = useCallback(event => {\n    setInputValue(event.target?.value);\n  });\n  const actualInputProps = useMemo(\n    () => ({\n      ...inputProps,\n      onChange: handleInputChange,\n    }),\n    [inputProps, handleInputChange],\n  );\n\n  const options = useMemo(() => suggestions.map(transformSuggestionToOption), [\n    suggestions,\n  ]);\n\n  return (\n    <Select\n      classes={customClasses}\n      inputProps={actualInputProps}\n      triggerProps={triggerProps}\n      options={options}\n      {...forwardingProps}\n    />\n  );\n}\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.RELOCATION]: 'Переезд',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport Suggest, { QUERY_FORMATS } from 'modules/components/muiExtended/Suggest';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from './localization';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n  originGeonameId: initialOriginGeonameId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n    originGeonameId: initialOriginGeonameId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst useStyles = makeStyles({\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n});\n\nexport default function TripEditFormSection({\n  provision: { locationsDict = {} } = {},\n  formikProps,\n}) {\n  const classes = useStyles();\n  const {\n    handleChange,\n    setFieldValue,\n    handleBlur,\n    errors,\n    touched,\n    values: { trip: tripFormValues = {} },\n  } = formikProps;\n\n  const originLocation = locationsDict[tripFormValues.originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={6}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              fullWidth={true}\n              helperText={\n                touched.trip?.hasAutogeneratedTripName &&\n                errors.trip?.hasAutogeneratedTripName\n              }\n              name=\"trip.hasAutogeneratedTripName\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={tripFormValues.hasAutogeneratedTripName}\n            />\n          }\n          label=\"Автогенерируемое название\"\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        {!tripFormValues.hasAutogeneratedTripName && (\n          <TextField\n            className={classes.textField}\n            fullWidth={true}\n            helperText={touched.trip?.tripName && errors.trip?.tripName}\n            label=\"Название поездки\"\n            margin=\"normal\"\n            name=\"trip.tripName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            value={tripFormValues.tripName}\n          />\n        )}\n      </Grid>\n      <Grid item={true} xs={6}>\n        <Suggest\n          classes={{ root: classes.suggest }}\n          inputProps={{ placeholder: 'Пункт отправления...' }}\n          initialInputValue={locationName}\n          onChange={({ suggestion: { geonameId } }) =>\n            setFieldValue('trip.originGeonameId', geonameId)\n          }\n          onBlur={handleBlur}\n          sourceProps={{\n            domain: 'tripEditCard.geoname',\n            modelName: 'geonames',\n            filterField: 'locationName',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n          transformSuggestionToOption={transformSuggestionToOption}\n          triggerProps={{ label: 'Старт из' }}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          caption=\"Тип поездки\"\n          name=\"trip.tripType\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripFormValues.tripType}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nTripEditFormSection.propTypes = {};\n\nTripEditFormSection.defaultProps = {};\n\nfunction transformSuggestionToOption(suggestion) {\n  const { locationName, countryName } = suggestion;\n  return {\n    label: locationName,\n    detail: countryName,\n    suggestion,\n  };\n}\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    const { dataset } = element;\n\n    if (dataset) {\n      const { sortHandler } = dataset;\n      if (sortHandler === 'enabled') {\n        return false;\n      }\n      if (sortHandler === 'disabled') {\n        return true;\n      }\n    }\n\n    element = element.parentNode;\n  }\n  return true;\n};\n","import React from 'react';\nimport {\n  SortableContainer as SortableContainerHOC,\n  SortableElement as SortableElementHOC,\n} from 'react-sortable-hoc';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\n\nconst SortableContainer = SortableContainerHOC(({ children, className }) => (\n  <div className={className}>{children}</div>\n));\nconst SortableElement = SortableElementHOC(({ node }) => node);\n\nexport default function Sortable({ children, ...forwardingProps }) {\n  return (\n    <SortableContainer\n      shouldCancelStart={checkIsNodeNotSortable}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n      {...forwardingProps}\n    >\n      {React.Children.map(children, (node, index) => (\n        <SortableElement node={node} index={index} />\n      ))}\n    </SortableContainer>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst useStyles = makeStyles({\n  dragHandler: {\n    cursor: 'grab',\n  },\n});\n\nexport default function DragHandler({ className }) {\n  const classes = useStyles();\n  return (\n    <IconDragHandle\n      className={cls(className, classes.dragHandler)}\n      data-sort-handler=\"enabled\"\n    />\n  );\n}\n\nDragHandler.propTypes = {\n  className: PropTypes.string,\n};\n\nDragHandler.defaultProps = { className: undefined };\n","import { useState } from 'react';\n\nexport const DIALOG_NAMES = {\n  RIDE_CREATE: 'RIDE_CREATE_DIALOG',\n  RIDE_EDIT: 'RIDE_EDIT_DIALOG',\n  RIDE_DELETE: 'RIDE_DELETE_DIALOG',\n  VISIT_CREATE: 'VISIT_CREATE_DIALOG',\n  VISIT_EDIT: 'VISIT_EDIT_DIALOG',\n  VISIT_DELETE: 'VISIT_DELETE_DIALOG',\n};\n\nexport default function useTripEditPageDialogs() {\n  const [dialogsState, setDialogsState] = useState({ name: null });\n  const showDialog = (dialogName, dialogParams) => {\n    setDialogsState({ dialogName, dialogParams });\n  };\n  const hideDialog = () => {\n    setDialogsState({ name: null });\n  };\n  return { showDialog, hideDialog, dialogsState };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DragHandler from 'modules/components/DragHandler';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '12px 0',\n    cursor: 'grab',\n    background: '#fff',\n    padding: '12px',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(0, 0, 0, 0.2)',\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nexport default function VisitCreator({ showDialog }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.container} data-sort-handler=\"enabled\">\n      <Button\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => showDialog(DIALOG_NAMES.VISIT_CREATE)}\n      >\n        <span>Добавить посещение</span>\n      </Button>\n      <DragHandler className={classes.visibleOnlyOnHover} />\n    </div>\n  );\n}\n\nVisitCreator.propTypes = {\n  showDialog: PropTypes.func.isRequired,\n};\n\nVisitCreator.defaultProps = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nexport default function CreateButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <AddCircleIcon />\n    </IconButton>\n  );\n}\n\nCreateButton.propTypes = {};\n\nCreateButton.defaultProps = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport default function EditButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n}\n\nEditButton.propTypes = {};\n\nEditButton.defaultProps = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport default function DeleteButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <DeleteIcon />\n    </IconButton>\n  );\n}\n\nDeleteButton.propTypes = {};\n\nDeleteButton.defaultProps = {};\n","import React from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateButton from './buttons/CreateButton';\nimport EditButton from './buttons/EditButton';\nimport DeleteButton from './buttons/DeleteButton';\n\nconst useStyles = makeStyles({\n  actions: {\n    display: 'inline-block',\n  },\n});\n\nexport default function Actions({\n  className,\n  isEntityExist,\n  onEditClick,\n  onDeleteClick,\n  onCreateClick,\n}) {\n  const classes = useStyles();\n  const hasCreateAction = !isEntityExist && Boolean(onCreateClick);\n  const hasEditAction = isEntityExist && Boolean(onEditClick);\n  const hasDeleteAction = isEntityExist && Boolean(onDeleteClick);\n  return (\n    <div\n      data-sort-handler=\"disabled\"\n      className={cls(classes.actions, className)}\n    >\n      {hasCreateAction && <CreateButton onClick={onCreateClick} />}\n      {hasEditAction && <EditButton onClick={onEditClick} />}\n      {hasDeleteAction && <DeleteButton onClick={onDeleteClick} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default function VisitIcon({ visit: { visitType }, className }) {\n  const IconComponent = resolveRideIconComponent(visitType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(visitType) {\n  switch (visitType) {\n    case VISIT_TYPES.TRANSIT:\n      return TransferWithinAStationIcon;\n    case VISIT_TYPES.BASE_CAMP:\n      return DomainIcon;\n    case VISIT_TYPES.RELOCATION:\n      return LocalShippingIcon;\n    case VISIT_TYPES.REGULAR:\n    default:\n      return LocationCityIcon;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Actions from 'travel/components/common/Actions';\nimport VisitIcon from 'travel/components/models/visits/VisitIcon';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n    '&:hover $visibleOnHover': {\n      visibility: 'visible',\n    },\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  visibleOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst Visit = ({ visit, showDialog }) => {\n  const classes = useStyles();\n  if (!visit) {\n    return 'Не указано';\n  }\n\n  const { locationName } = visit;\n\n  return (\n    <div className={classes.container}>\n      <VisitIcon visit={visit} className={classes.icon} />\n      {locationName}\n      <Actions\n        className={classes.visibleOnHover}\n        isEntityExist={true}\n        onEditClick={() => showDialog(DIALOG_NAMES.VISIT_EDIT, visit)}\n        onDeleteClick={() => showDialog(DIALOG_NAMES.VISIT_DELETE, visit)}\n      />\n    </div>\n  );\n};\n\nVisit.propTypes = {\n  visit: PropTypes.shape(visitPropTypes),\n};\n\nVisit.defaultProps = {\n  visit: {},\n};\n\nexport default Visit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport RideIcon from 'travel/components/models/rides/RideIcon';\nimport Actions from 'travel/components/common/Actions';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\n\nexport const useStyles = makeStyles({\n  container: {\n    '&:hover $visibleOnHover': {\n      visibility: 'visible',\n    },\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  visibleOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst Ride = ({ className, ride, showDialog }) => {\n  const classes = useStyles();\n  const { rideId, arrivalDateTime, departureDateTime } = ride || {};\n  const isRideExists = Boolean(rideId);\n\n  return (\n    <div className={cls(className, classes.container)}>\n      {isRideExists && (\n        <>\n          <RideIcon ride={ride} className={classes.icon} />\n          <span className={classes.details}>\n            {rideDateTimePeriodToString({ departureDateTime, arrivalDateTime })}\n          </span>\n        </>\n      )}\n      <Actions\n        className={cls({\n          [classes.visibleOnHover]: isRideExists,\n        })}\n        isEntityExist={isRideExists}\n        onCreateClick={() => showDialog(DIALOG_NAMES.RIDE_CREATE)}\n        onEditClick={() => showDialog(DIALOG_NAMES.RIDE_EDIT, ride)}\n      />\n    </div>\n  );\n};\n\nRide.propTypes = {\n  className: PropTypes.string,\n  ride: PropTypes.shape(ridePropTypes),\n};\n\nRide.defaultProps = {\n  className: undefined,\n  ride: {},\n};\n\nexport default Ride;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Visit from './Visit';\nimport Ride from './Ride';\n\nconst useStyles = makeStyles({\n  alwaysVisible: {},\n  container: {\n    margin: '12px 0',\n    cursor: 'grab',\n    background: '#fff',\n    padding: '12px',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(0, 0, 0, 0.2)',\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n});\n\nexport default function VisitAndRidesFormSection({\n  style,\n  className,\n  prevVisit,\n  visit,\n  nextVisit,\n  showDialog,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  tripId,\n  provision,\n}) {\n  const classes = useStyles();\n\n  const { ridesDict } = provision;\n\n  const {\n    visitId,\n    arrivalRideId: formArrivalRideId,\n    departureRideId: formDepartureVisitId,\n  } = visit || {};\n\n  const { visitId: prevVisitId } = prevVisit || {};\n  const { visitId: nextVisitId } = nextVisit || {};\n\n  return (\n    <div\n      className={cls(classes.container, className)}\n      style={style}\n      data-sort-handler=\"enabled\"\n    >\n      <Ride\n        showDialog={(dialogName, dialogParams) =>\n          showDialog(dialogName, {\n            ...dialogParams,\n            departureVisitId: isArrivalRideMatch ? prevVisitId : undefined,\n            arrivalVisitId: visitId,\n          })\n        }\n        className={cls(classes.ride, {\n          [classes.warning]: !isArrivalRideMatch,\n        })}\n        ride={ridesDict[formArrivalRideId]}\n        provision={provision}\n      />\n      <Visit\n        showDialog={showDialog}\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        visit={visit}\n        provision={provision}\n      />\n      <Ride\n        showDialog={(dialogName, dialogParams) =>\n          showDialog(dialogName, {\n            ...dialogParams,\n            departureVisitId: visitId,\n            arrivalVisitId: isDepartureRideMatch ? nextVisitId : undefined,\n          })\n        }\n        visitId={visitId}\n        className={cls(classes.ride, {\n          [classes.warning]: !isDepartureRideMatch,\n        })}\n        ride={ridesDict[formDepartureVisitId]}\n        provision={provision}\n      />\n    </div>\n  );\n}\n\nVisitAndRidesFormSection.propTypes = {};\n\nVisitAndRidesFormSection.defaultProps = {};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { FieldArray } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport Sortable from 'modules/components/Sortable';\nimport VisitCreator from './blocks/VisitCreator';\nimport VisitAndRidesFormSection from './blocks/VisitAndRidesFormSection';\n\nconst useStyles = makeStyles({\n  creatorsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  isCompact: {\n    marginTop: '-52px',\n  },\n  resetFlow: {\n    transform: 'translate(0, 0)',\n  },\n});\n\nfunction checkIsRidesMatch(\n  prevVisitFormValues,\n  visitFormValues,\n  nextVisitFormValues,\n) {\n  const isArrivalRideMatch = checkIsVisitsConnectedByRide(\n    prevVisitFormValues,\n    visitFormValues,\n  );\n  const isDepartureRideMatch = checkIsVisitsConnectedByRide(\n    visitFormValues,\n    nextVisitFormValues,\n  );\n  return { isDepartureRideMatch, isArrivalRideMatch };\n}\n\nexport default function VisitsAndRidesFormSection({\n  showDialog,\n  provision,\n  formikProps,\n}) {\n  const { values } = formikProps;\n  const {\n    trip: { visits: formVisitsIds },\n  } = values;\n\n  const { visitsDict } = provision;\n\n  const classes = useStyles();\n\n  const [creatorsNodeIndex, setCreatorsNodeIndex] = useState(\n    formVisitsIds.length,\n  );\n  const [isSorting, setIsSorting] = useState(false);\n\n  const showCreationDialog = (dialogName, dialogParams) => {\n    const [prevVisit, visit] = neighbors(formVisitsIds, creatorsNodeIndex).map(\n      visitId => (visitId && visitsDict[visitId]) || null,\n    );\n    showDialog(dialogName, {\n      ...dialogParams,\n      orderInTrip: calculateOrderInTripBetweenTwoVisits(prevVisit, visit),\n    });\n  };\n\n  if (!formVisitsIds.length) {\n    return <VisitCreator key=\"visitCreator\" showDialog={showCreationDialog} />;\n  }\n  return (\n    <FieldArray\n      name=\"trip.visits\"\n      render={arrayHelpers => (\n        <Sortable\n          className={classes.resetFlow}\n          updateBeforeSortStart={() => setIsSorting(true)}\n          onSortEnd={data => {\n            setIsSorting(false);\n            const { oldIndex, newIndex } = data;\n            const isVisitCreatorNodeMoved = oldIndex === creatorsNodeIndex;\n            if (isVisitCreatorNodeMoved) {\n              setCreatorsNodeIndex(newIndex);\n            } else {\n              arrayHelpers.move(oldIndex, newIndex);\n            }\n          }}\n        >\n          {formVisitsIds.flatMap((formVisitId, indexOfVisit) => {\n            const [prevVisit, visit, nextVisit] = neighbors(\n              formVisitsIds,\n              indexOfVisit,\n            ).map(visitId => (visitId && visitsDict[visitId]) || null);\n\n            const {\n              isArrivalRideMatch,\n              isDepartureRideMatch,\n            } = checkIsRidesMatch(prevVisit, visit, nextVisit);\n\n            const shouldCollapseRides =\n              indexOfVisit >= 1 &&\n              !isSorting &&\n              isArrivalRideMatch &&\n              creatorsNodeIndex !== indexOfVisit;\n\n            const visitAndRidesFormSectionNode = (\n              <VisitAndRidesFormSection\n                key={`v${formVisitId}`}\n                index={indexOfVisit /* for SortableNode */}\n                style={{ zIndex: formVisitsIds.length - indexOfVisit }}\n                className={cls({ [classes.isCompact]: shouldCollapseRides })}\n                showDialog={showDialog}\n                isArrivalRideMatch={isArrivalRideMatch}\n                isDepartureRideMatch={isDepartureRideMatch}\n                prevVisit={prevVisit}\n                visit={visit}\n                nextVisit={nextVisit}\n                formikProps={formikProps}\n                provision={provision}\n              />\n            );\n\n            const shouldInsertCreatorsNodeBeforeFormSection =\n              creatorsNodeIndex === indexOfVisit;\n            const shouldInsertCreatorsNodeAfterFormSection =\n              creatorsNodeIndex === formVisitsIds.length &&\n              creatorsNodeIndex === indexOfVisit + 1;\n\n            if (\n              !shouldInsertCreatorsNodeBeforeFormSection &&\n              !shouldInsertCreatorsNodeAfterFormSection\n            ) {\n              return visitAndRidesFormSectionNode;\n            }\n\n            const visitCreatorNode = (\n              <div style={{ zIndex: formVisitsIds.length + 1 }}>\n                <VisitCreator\n                  key=\"visitCreator\"\n                  showDialog={showCreationDialog}\n                />\n              </div>\n            );\n\n            if (shouldInsertCreatorsNodeBeforeFormSection) {\n              return [visitCreatorNode, visitAndRidesFormSectionNode];\n            }\n            return [visitAndRidesFormSectionNode, visitCreatorNode];\n          })}\n        </Sortable>\n      )}\n    />\n  );\n}\n\nVisitsAndRidesFormSection.propTypes = {};\n\nVisitsAndRidesFormSection.defaultProps = {};\n\nfunction calculateOrderInTripBetweenTwoVisits(prevVisit, nextVisit) {\n  const { orderInTrip: prevOrderInTrip } = prevVisit || {};\n  const { orderInTrip: nextOrderInTrip } = nextVisit || {};\n  if (!prevVisit) {\n    return nextOrderInTrip - 1;\n  }\n  if (!nextVisit) {\n    return prevOrderInTrip + 1;\n  }\n  const randomness =\n    ((Math.random() - 0.5) * (nextOrderInTrip - prevOrderInTrip)) / 2;\n  return (prevOrderInTrip + nextOrderInTrip) / 2 + randomness;\n}\n\nfunction neighbors(array, index) {\n  const prevValue = array[index - 1] || null;\n  const value = array[index] || null;\n  const nextValue = array[index + 1] || null;\n  return [prevValue, value, nextValue];\n}\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\n\nexport default function TripEditTitle({\n  isCreation,\n  className,\n  provision,\n  formikProps: { values },\n}) {\n  const { trip: formTrip, visitsDict: formVisitsDict } = values;\n  const { countriesDict, locationsDict } = provision;\n\n  const modeCaption = isCreation\n    ? 'Создание поездки'\n    : 'Редактирование поездки';\n\n  const tripName = formTrip.hasAutogeneratedTripName\n    ? resolveTripCaption(\n        formTrip.visits,\n        formVisitsDict,\n        countriesDict,\n        locationsDict[formTrip.originLocationId] &&\n          locationsDict[formTrip.originLocationId].countryId,\n        formTrip.tripName,\n      )\n    : formTrip.tripName;\n\n  const tripCaption = `${modeCaption}: \"${tripName}\"`;\n\n  return (\n    <Typography variant=\"h6\" className={className}>\n      {tripCaption}\n    </Typography>\n  );\n}\n","import groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default (\n  visitsIds,\n  visitsDict,\n  countriesDict,\n  originCountryId,\n  fallback = 'Без названия',\n) => {\n  if (!visitsIds.length) {\n    return fallback;\n  }\n  const visitsByCountries = Object.keys(\n    groupBy(\n      visitsIds.filter(\n        visitId => visitsDict[visitId]?.visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n  if (visitsByCountries.length === 1) {\n    return (\n      uniqTrimAndJoin(\n        visitsIds.map(visitId => visitsDict[visitId]?.locationName),\n        { maxLength: 4 },\n      ) || fallback\n    );\n  }\n  return (\n    uniqTrimAndJoin(\n      visitsByCountries\n        .map(\n          countryId =>\n            Number(countryId) !== originCountryId &&\n            countriesDict[countryId] &&\n            countriesDict[countryId].countryName,\n        )\n        .filter(Boolean),\n      { maxLength: 4 },\n    ) || fallback\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TripEditFormSection from './blocks/TripEditFormSection';\nimport VisitsAndRidesFormSection from './blocks/VisitsAndRidesFormSection/VisitsAndRidesFormSection';\nimport TripEditTitle from './blocks/TripEditTitle';\n\nconst useStyles = makeStyles({\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst TripEditForm = ({ isCreation, showDialog, provision, formikProps }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TripEditTitle\n        className={classes.container}\n        formikProps={formikProps}\n        isCreation={isCreation}\n        provision={provision}\n      />\n      <Form>\n        <TripEditFormSection formikProps={formikProps} provision={provision} />\n        <VisitsAndRidesFormSection\n          classes={classes}\n          showDialog={showDialog}\n          formikProps={formikProps}\n          provision={provision}\n        />\n        <Button type=\"submit\" color=\"primary\">\n          Сохранить\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nTripEditForm.propTypes = {\n  isCreation: PropTypes.bool.isRequired,\n};\n\nTripEditForm.defaultProps = {};\n\nexport default TripEditForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst TRANSITION_DURATION_MS = 500;\n\nexport default function({\n  isOpen,\n  title,\n  description,\n  children,\n  primaryButtonCaption,\n  primaryButtonHandler,\n  secondaryButtonCaption,\n  secondaryButtonHandler,\n  onClose,\n}) {\n  return (\n    <Dialog\n      transitionDuration={TRANSITION_DURATION_MS}\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{description}</DialogContentText>\n        {children}\n      </DialogContent>\n      <DialogActions>\n        {secondaryButtonHandler && (\n          <Button onClick={secondaryButtonHandler} color=\"secondary\">\n            {secondaryButtonCaption}\n          </Button>\n        )}\n        {primaryButtonHandler && (\n          <Button onClick={primaryButtonHandler} color=\"primary\">\n            {primaryButtonCaption}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Dialog from '../Dialog';\n\nexport default function({\n  initialValues,\n  isOpen,\n  onSubmit,\n  onReset,\n  title,\n  description,\n  children,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      enableReinitialize={true}\n      onSubmit={onSubmit}\n    >\n      {formikProps => (\n        <Dialog\n          description={description}\n          onClose={onReset}\n          isOpen={isOpen}\n          primaryButtonCaption=\"Сохранить\"\n          primaryButtonHandler={formikProps.handleSubmit}\n          secondaryButtonCaption=\"Отмена\"\n          secondaryButtonHandler={onReset}\n          title={title}\n        >\n          {React.cloneElement(children, { formikProps })}\n        </Dialog>\n      )}\n    </Formik>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VisitIcon from '../VisitIcon';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  editIcon: {},\n});\n\nconst VisitInfo = ({ visit }) => {\n  const classes = useStyles();\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName } = visit;\n  return (\n    <div className={classes.container}>\n      <VisitIcon visit={visit} className={classes.icon} />\n      {locationName}\n    </div>\n  );\n};\n\nVisitInfo.propTypes = {\n  visit: PropTypes.shape(visitPropTypes),\n};\n\nVisitInfo.defaultProps = {\n  visit: {},\n};\n\nexport default VisitInfo;\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n","import checkIsSameDay from 'date-fns/isSameDay';\nimport checkIsDatesEqual from 'date-fns/isEqual';\nimport addDays from 'date-fns/addDays';\nimport checkIsAfter from 'date-fns/isAfter';\n\nconst checkIsPeriodInverted = (beforeDateTime, afterDateTime) =>\n  checkIsAfter(beforeDateTime, afterDateTime);\n\nconst mixDateTime = ({ dateFrom, timeFrom }) =>\n  new Date(\n    dateFrom.getFullYear(),\n    dateFrom.getMonth(),\n    dateFrom.getDate(),\n    timeFrom.getHours(),\n    timeFrom.getMinutes(),\n    timeFrom.getSeconds(),\n  );\n\nexport default ({ values: { rideDeparture, rideArrival }, setFieldValue }) => {\n  const setRideDeparture = nextRideDeparture =>\n    setFieldValue('departureDateTime', nextRideDeparture);\n  const setRideArrival = nextRideArrival =>\n    setFieldValue('arrivalDateTime', nextRideArrival);\n\n  const isSameDay = checkIsSameDay(rideDeparture, rideArrival);\n\n  const setDatesAndTimes = (nextRideDeparture, nextRideArrival) => {\n    const isInverted = checkIsPeriodInverted(\n      nextRideDeparture,\n      nextRideArrival,\n    );\n    const actualNextRideDeparture = isInverted\n      ? nextRideArrival\n      : nextRideDeparture;\n\n    const actualNextRideArrival = isInverted\n      ? nextRideDeparture\n      : nextRideArrival;\n\n    if (!checkIsDatesEqual(rideDeparture, actualNextRideDeparture)) {\n      setRideDeparture(actualNextRideDeparture);\n    }\n    if (!checkIsDatesEqual(rideArrival, actualNextRideArrival)) {\n      setRideArrival(actualNextRideArrival);\n    }\n  };\n\n  const handleIsSameDayFlagChange = nextIsSameDay => {\n    if (Boolean(isSameDay) !== Boolean(nextIsSameDay)) {\n      setDatesAndTimes(\n        rideDeparture,\n        mixDateTime({\n          dateFrom: nextIsSameDay ? rideDeparture : addDays(rideDeparture, 1),\n          timeFrom: rideArrival,\n        }),\n      );\n    }\n  };\n\n  const handleRideDepartureChange = nextRideDeparture => {\n    const nextRideArrival = isSameDay\n      ? mixDateTime({\n          timeFrom: rideArrival,\n          dateFrom: nextRideDeparture,\n        })\n      : rideArrival;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  const handleRideArrivalChange = nextRideArrival => {\n    const nextRideDeparture = isSameDay\n      ? mixDateTime({\n          timeFrom: rideDeparture,\n          dateFrom: nextRideArrival,\n        })\n      : rideDeparture;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  return {\n    isSameDateField: {\n      value: isSameDay,\n      onChange: handleIsSameDayFlagChange,\n    },\n    rideDepartureField: {\n      value: rideDeparture,\n      onChange: handleRideDepartureChange,\n    },\n    rideArrivalField: {\n      value: rideArrival,\n      onChange: handleRideArrivalChange,\n    },\n  };\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { KeyboardDatePicker, TimePicker } from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport VisitInfo from 'travel/components/models/visits/VisitInfo';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from './localization';\nimport tieDateTimeFields from './tieDateTimeFields';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVisit = visitsDict => ({ option: visitId }) => {\n  if (visitId === ORIGIN_OF_TRIP) {\n    return 'Пункт отправления';\n  }\n  return <VisitInfo visit={visitsDict[visitId]} />;\n};\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nconst useStyles = makeStyles({\n  option: {\n    width: '100%',\n  },\n});\n\nconst RideEditFormSection = ({\n  tripVisitsIds,\n  visitsDict,\n  formikProps: {\n    values: {\n      vehicleType,\n      rideType,\n      rideComment,\n      rideClass,\n      rideOccupation,\n      departureVisitId,\n      departureDateTime,\n      arrivalVisitId,\n      arrivalDateTime,\n    },\n    handleChange,\n    setFieldValue,\n  },\n}) => {\n  const classes = useStyles();\n  const isTripHasVisits = tripVisitsIds && tripVisitsIds.length > 0;\n  const {\n    rideArrivalField,\n    rideDepartureField,\n    isSameDateField,\n  } = tieDateTimeFields({\n    values: {\n      rideDeparture: departureDateTime,\n      rideArrival: arrivalDateTime,\n    },\n    setFieldValue,\n  });\n\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      {isTripHasVisits && (\n        <>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"departureVisitId\"\n              caption=\"Отправление из\"\n              inputId=\"RideEditCard-departureVisitId\"\n              optionRender={renderVisit(visitsDict)}\n              hasNullOption={false}\n              options={[ORIGIN_OF_TRIP, ...tripVisitsIds]}\n              value={departureVisitId}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"arrivalVisitId\"\n              caption=\"Прибытие в\"\n              inputId=\"RideEditCard-arrivalVisitId\"\n              hasNullOption={false}\n              optionRender={renderVisit(visitsDict)}\n              options={[...tripVisitsIds, ORIGIN_OF_TRIP]}\n              onChange={handleChange}\n              value={arrivalVisitId}\n            />\n          </Grid>\n        </>\n      )}\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          name=\"vehicleType\"\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          onChange={handleChange}\n          value={vehicleType}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          name=\"rideType\"\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          onChange={handleChange}\n          value={rideType}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          name=\"rideClass\"\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          onChange={handleChange}\n          value={rideClass}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          name=\"rideOccupation\"\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          onChange={handleChange}\n          value={rideOccupation}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardDatePicker\n          name=\"departureDateTime\"\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n          format=\"dd/MM/yyyy\"\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        {isSameDateField.value ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSameDateField.value}\n                onChange={event =>\n                  isSameDateField.onChange(event.target.checked)\n                }\n              />\n            }\n            label=\"Прибытие в тот же день\"\n          />\n        ) : (\n          <KeyboardDatePicker\n            name=\"arrivalDateTime\"\n            autoOk={true}\n            className={classes.option}\n            label=\"Дата прибытия\"\n            value={rideArrivalField.value}\n            onChange={rideArrivalField.onChange}\n            format=\"dd/MM/yyyy\"\n          />\n        )}\n      </Grid>\n      <Grid item={true} xs={6}>\n        <TimePicker\n          name=\"departureDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <TimePicker\n          name=\"arrivalDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          value={rideArrivalField.value}\n          onChange={rideArrivalField.onChange}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <TextField\n          name=\"rideComment\"\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={handleChange}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nRideEditFormSection.propTypes = {};\nRideEditFormSection.defaultProps = {};\n\nexport default RideEditFormSection;\n","import React from 'react';\nimport FormDialog from 'modules/components/FormDialog';\nimport RideEditFormSection from 'travel/components/models/rides/RideEditFormSection';\n\nexport default function RideEditDialog({\n  isCreation,\n  tripVisitsIds,\n  visitsDict,\n  ...forwardingProps\n}) {\n  return (\n    <FormDialog\n      title={isCreation ? 'Создание маршрута' : 'Редактирование маршрута'}\n      {...forwardingProps}\n    >\n      <RideEditFormSection\n        tripVisitsIds={tripVisitsIds}\n        visitsDict={visitsDict}\n        formikProps={null /* will be passed in FormDialog */}\n      />\n    </FormDialog>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport Suggest, { QUERY_FORMATS } from 'modules/components/muiExtended/Suggest';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n\nconst renderRide = ridesDict => ({ option: rideId }) => (\n  <RideInfo ride={ridesDict[rideId]} isLong={true} />\n);\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nconst useStyles = makeStyles({\n  option: {\n    width: '100%',\n  },\n});\n\nexport default function VisitEditFormSection({\n  tripRidesIds,\n  ridesDict,\n  formikProps: {\n    values: {\n      locationName,\n      visitType,\n      visitComment,\n      arrivalRideId,\n      departureRideId,\n    },\n    handleChange,\n    handleBlur,\n    setFieldValue,\n  },\n}) {\n  const classes = useStyles();\n  const isTripHasRides = tripRidesIds && tripRidesIds.length > 0;\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={12}>\n        <Suggest\n          inputProps={{ placeholder: 'Место посещения...' }}\n          initialInputValue={locationName}\n          onChange={({ suggestion: { geonameId } }) =>\n            setFieldValue('geonameId', geonameId)\n          }\n          onBlur={handleBlur}\n          sourceProps={{\n            domain: 'visitEditFormSection.geoname',\n            modelName: 'geonames',\n            filterField: 'locationName',\n            queryFormat: QUERY_FORMATS.SEARCH,\n          }}\n          transformSuggestionToOption={transformSuggestionToOption}\n          triggerProps={{ label: 'Место посещения' }}\n        />\n      </Grid>\n      {isTripHasRides && (\n        <>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"arrivalRideId\"\n              caption=\"Прибытие\"\n              inputId=\"RideEditCard-arrivalVisitId\"\n              hasNullOption={false}\n              optionRender={renderRide(ridesDict)}\n              options={tripRidesIds}\n              onChange={handleChange}\n              value={arrivalRideId}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"departureRideId\"\n              caption=\"Отправление\"\n              inputId=\"RideEditCard-departureVisitId\"\n              optionRender={renderRide(ridesDict)}\n              hasNullOption={false}\n              options={tripRidesIds}\n              value={departureRideId}\n              onChange={handleChange}\n            />\n          </Grid>\n        </>\n      )}\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          name=\"visitType\"\n          value={visitType}\n          onChange={handleChange}\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <TextField\n          className={classes.option}\n          name=\"visitComment\"\n          value={visitComment}\n          onChange={handleChange}\n          label=\"Комментарий\"\n          fullWidth={true}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nVisitEditFormSection.propTypes = {};\nVisitEditFormSection.defaultProps = {};\n\nfunction transformSuggestionToOption(suggestion) {\n  const { locationName, countryName, regionName } = suggestion;\n  return {\n    label: locationName,\n    details: [countryName, regionName].filter(Boolean).join(', '),\n    suggestion,\n  };\n}\n","import React from 'react';\nimport FormDialog from 'modules/components/FormDialog';\nimport VisitEditFormSection from 'travel/components/models/visits/VisitEditFormSection';\n\nexport default function VisitEditDialog({\n  isCreation,\n  tripRidesIds,\n  ridesDict,\n  ...forwardingProps\n}) {\n  return (\n    <FormDialog\n      title={isCreation ? 'Создание посешения' : 'Редактирование посещения'}\n      {...forwardingProps}\n    >\n      <VisitEditFormSection\n        tripRidesIds={tripRidesIds}\n        ridesDict={ridesDict}\n        formikProps={null /* will be passed in FormDialog */}\n      />\n    </FormDialog>\n  );\n}\n","import React from 'react';\nimport Dialog from 'modules/components/Dialog';\nimport VisitInfo from 'travel/components/models/visits/VisitInfo';\n\nexport default function VisitDeleteDialog({\n  visit,\n  onSubmit,\n  onReset,\n  ...forwardingProps\n}) {\n  return (\n    <Dialog\n      title=\"Удалить посещение\"\n      description=\"Вы действительно хотите удалить посещение\"\n      primaryButtonCaption=\"Да\"\n      primaryButtonHandler={event => onSubmit(event, visit)}\n      secondaryButtonCaption=\"Нет\"\n      secondaryButtonHandler={onReset}\n      {...forwardingProps}\n    >\n      <VisitInfo visit={visit} />\n    </Dialog>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { initializeRide } from 'travel/models/rides';\nimport { initializeVisit } from 'travel/models/visits';\nimport RideEditDialog from './blocks/RideEditDialog';\nimport VisitEditDialog from './blocks/VisitEditDialog';\nimport VisitDeleteDialog from './blocks/VisitDeleteDialog';\nimport { DIALOG_NAMES } from '../../useTripEditPageDialogs';\n\nexport default function TripEditAssociatedDialogs({\n  provision,\n  dialogsState,\n  hideDialog,\n  handleSubmitRide,\n  handleSubmitVisit,\n  handleDeleteVisit,\n  trip,\n}) {\n  const { ridesDict, visitsDict } = provision;\n  const { tripId, visits: tripVisitsIds, rides: tripRidesIds } = trip;\n  const { dialogName, dialogParams = {} } = dialogsState;\n\n  const initialRideValues = useMemo(\n    () => {\n      const { rideId } = dialogParams;\n      const initialValues = rideId ? ridesDict[rideId] : initializeRide();\n      return {\n        ...initialValues,\n        ...dialogParams,\n        tripId,\n      };\n    },\n    [ridesDict, tripId, dialogParams],\n  );\n\n  const initialVisitValues = useMemo(\n    () => {\n      const { visitId } = dialogParams;\n      const initialValues = visitId ? visitsDict[visitId] : initializeVisit();\n      return {\n        ...initialValues,\n        ...dialogParams,\n        tripId,\n      };\n    },\n    [visitsDict, tripId, dialogParams],\n  );\n\n  const isRideEditDialogShown = checkIsRideEditDialogShown(dialogName);\n  const isVisitEditDialogShown = checkIsVisitEditDialogShown(dialogName);\n  const isVisitDeleteDialogShown = dialogName === DIALOG_NAMES.VISIT_DELETE;\n  return (\n    <>\n      <RideEditDialog\n        initialValues={initialRideValues}\n        tripVisitsIds={tripVisitsIds}\n        isOpen={isRideEditDialogShown}\n        onSubmit={values => {\n          handleSubmitRide(values);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n        isCreation={dialogName === DIALOG_NAMES.RIDE_CREATE}\n        visitsDict={visitsDict}\n      />\n      <VisitEditDialog\n        initialValues={initialVisitValues}\n        tripRidesIds={tripRidesIds}\n        isOpen={isVisitEditDialogShown}\n        onSubmit={values => {\n          handleSubmitVisit(values);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n        isCreation={dialogName === DIALOG_NAMES.VISIT_CREATE}\n        ridesDict={ridesDict}\n      />\n      <VisitDeleteDialog\n        visit={visitsDict[dialogParams.visitId]}\n        isOpen={isVisitDeleteDialogShown}\n        onSubmit={(event, { visitId }) => {\n          handleDeleteVisit(visitId);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n      />\n    </>\n  );\n}\n\nfunction checkIsRideEditDialogShown(dialogName) {\n  return (\n    dialogName === DIALOG_NAMES.RIDE_EDIT ||\n    dialogName === DIALOG_NAMES.RIDE_CREATE\n  );\n}\n\nfunction checkIsVisitEditDialogShown(dialogName) {\n  return (\n    dialogName === DIALOG_NAMES.VISIT_EDIT ||\n    dialogName === DIALOG_NAMES.VISIT_CREATE\n  );\n}\n","const INITIAL_ORDER = 100;\nexport default ({ orderResolver: resolveOrder }) => ({ index, collection }) => {\n  if (!collection.length) {\n    return INITIAL_ORDER;\n  }\n  if (index <= 0) {\n    return resolveOrder(collection[0]) - 1;\n  }\n  if (index >= collection.length - 1) {\n    return resolveOrder(collection[collection.length - 1]) + 1;\n  }\n  const prevOrder = resolveOrder(collection[index - 1]);\n  const nextOrder = resolveOrder(collection[index]);\n  const randomness = ((Math.random() - 0.5) * (nextOrder - prevOrder)) / 2;\n  return (prevOrder + nextOrder) / 2 + randomness;\n};\n","import { useCallback } from 'react';\nimport { useRequest } from 'core/connection';\nimport createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nconst domain = 'travel.TripEditPage';\n\nexport default function useTripEditRequests(invalidate) {\n  const [submitRide] = useRequest({\n    domain: `${domain}.rides`,\n    modelName: 'rides',\n  });\n  const handleSubmitRide = useCallback(\n    ride =>\n      submitRide({\n        query: {\n          id: ride.rideId,\n          body: ride,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [submitTrip] = useRequest({\n    domain: `${domain}.trips`,\n    modelName: 'trips',\n  });\n  const handleSubmitTrip = useCallback(\n    trip =>\n      submitTrip({\n        query: {\n          id: trip.tripId,\n          body: trip,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [submitVisit] = useRequest({\n    domain: `${domain}.visits`,\n    modelName: 'visits',\n  });\n\n  const handleSubmitVisit = useCallback(\n    visit =>\n      submitVisit({\n        query: {\n          id: visit.visitId,\n          body: visit,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [deleteVisit] = useRequest({\n    domain: `${domain}.visits`,\n    modelName: 'visits',\n  });\n\n  const handleDeleteVisit = useCallback(\n    visitId =>\n      deleteVisit({\n        method: 'DELETE',\n        query: {\n          id: visitId,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  return {\n    handleSubmitRide,\n    handleSubmitTrip,\n    handleSubmitVisit,\n    handleDeleteVisit,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { useTripsStats } from 'travel/dataSource';\nimport { initializeTrip } from 'travel/models/trips';\nimport TripEditForm from './blocks/TripEditForm';\nimport TripEditAssociatedDialogs from './blocks/TripEditAssociatedDialogs';\nimport useTripEditRequests from './useTripEditRequests';\nimport useTripEditPageDialogs from './useTripEditPageDialogs';\n\nfunction TripEditPage({\n  match: {\n    params: { userAlias, strTripId, action },\n  },\n}) {\n  const isCreation = action === 'create';\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const tripId = strTripId && parseInt(strTripId, 10);\n  const provision = useTripsStats({\n    userAlias,\n    tripsIds: tripId ? [tripId] : [],\n  });\n  const { tripsDict, tripsProvision } = provision;\n  const trip = isCreation ? initializeTrip() : tripsDict[tripId];\n\n  const {\n    handleSubmitRide,\n    handleSubmitTrip,\n    handleSubmitVisit,\n    handleDeleteVisit,\n  } = useTripEditRequests(tripsProvision.invalidate);\n\n  const { showDialog, hideDialog, dialogsState } = useTripEditPageDialogs();\n\n  const { isError, isReady, isPending } = provision;\n  if ((!tripId || (isReady && !trip)) && !isCreation) {\n    return <div>Запрашиваемая вами страница не найдена</div>;\n  }\n  if (!isAuthenticated || authenticatedUserAlias !== userAlias) {\n    return <div>У вас не достаочно прав для просмотра данной страницы</div>;\n  }\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  if (!trip) {\n    return <div>...Error, no trip is provided</div>;\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={{ trip }}\n        onSubmit={values => handleSubmitTrip(values.trip)}\n      >\n        {formikProps => (\n          <TripEditForm\n            isCreation={isCreation}\n            showDialog={showDialog}\n            formikProps={formikProps}\n            provision={provision}\n          />\n        )}\n      </Formik>\n      <TripEditAssociatedDialogs\n        provision={provision}\n        dialogsState={dialogsState}\n        hideDialog={hideDialog}\n        handleSubmitRide={handleSubmitRide}\n        handleSubmitVisit={handleSubmitVisit}\n        handleDeleteVisit={handleDeleteVisit}\n        trip={trip}\n      />\n    </>\n  );\n}\n\nTripEditPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default TripEditPage;\n","import { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport mapValues from 'lodash/mapValues';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias, tripsIds: requiredTripsIds }) {\n  const { tripsDict } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n  }));\n  const shouldRequireAllTrips = !requiredTripsIds;\n  const missingTripsIds =\n    !shouldRequireAllTrips &&\n    requiredTripsIds.filter(tripId => !tripsDict[tripId]);\n\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: {\n      userAlias,\n      navigation: { isDisabled: true },\n      filter: shouldRequireAllTrips\n        ? {}\n        : { id: { comparator: 'in', value: missingTripsIds } },\n    },\n  });\n}\n\nexport function useTripsStats({ userAlias, tripsIds: requiredTripsIds }) {\n  const tripsProvision = useTrips({ userAlias, tripsIds: requiredTripsIds });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n  );\n\n  const ridesIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n  );\n\n  const countriesIds = Array.from(\n    new Set(visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || [])),\n  );\n\n  const locationsIds = Array.from(\n    new Set(\n      visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n    ),\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  const countriesRating = calcCountriesRating(\n    locationsIds,\n    locationsDict,\n    locationsRating,\n  );\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n    countriesRating,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n    invalidate: () => provisions.forEach(({ invalidate }) => invalidate()),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n\nfunction calcCountriesRating(locationsIds, locationsDict, locationsRating) {\n  const ratingsGroupedByCountries = locationsIds.reduce((memo, locationId) => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return memo;\n    }\n    const locationRating = locationsRating[locationId];\n    const { countryId } = location;\n    if (!memo[countryId]) {\n      memo[countryId] = [];\n    }\n    memo[countryId].push(locationRating);\n    return memo;\n  }, {});\n\n  return mapValues(ratingsGroupedByCountries, ratingsByCountry =>\n    averageRating(ratingsByCountry),\n  );\n}\n\nfunction averageRating(ratings) {\n  if (!ratings.length) {\n    return Infinity;\n  }\n  const avg =\n    ratings.length / ratings.map(rating => 1 / rating).reduce((a, b) => a + b);\n\n  const best = max(ratings);\n\n  const lengthRatio = Math.log(ratings.length);\n\n  return 1 / (1 / avg + lengthRatio / best);\n}\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  const provision = useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n\n  const { data: countriesIds = [] } = selectResult(provision) || {};\n\n  return {\n    countriesIds,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport {\n  useProvision,\n  useRequest,\n  selectDict,\n} from 'core/connection';\nimport {\n  selectIsPending,\n  selectIsError,\n  selectIsReady,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  const provision = useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n\n  return {\n    locationsDict,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport dateFormat from 'date-fns/format';\nimport ru from 'date-fns/locale/ru';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nfunction dateTimePeriodToString(periodStart, periodEnd) {\n  const periodEndString = dateFormat(periodEnd, DATE_FORMATS.FULL, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n      locale: ru,\n    });\n  } else if (isSameYear(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_MONTH, {\n      locale: ru,\n    });\n  } else {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.FULL, {\n      locale: ru,\n    });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime);\n}\n\nexport function visitDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime);\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { RIDE_TYPES } from 'travel/models/rides/consts';\nimport RideIcon from 'travel/components/models/rides/RideIcon';\n\nconst useStyles = makeStyles({\n  icon: { color: 'gray', fontSize: 16, height: 16 },\n  absoluteIcon: {\n    // todo fast decision, need refactor\n    color: 'gray',\n    fontSize: 16,\n    height: 16,\n    position: 'absolute',\n  },\n  detail: { color: 'gray', fontSize: 12 },\n});\n\nexport default function RideInfo({\n  ride,\n  ride: { rideType } = {},\n  className,\n  isLong,\n}) {\n  const classes = useStyles();\n\n  if (!ride) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <RideIcon ride={ride} className={classes.icon} />\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.absoluteIcon} />\n      )}\n      {isLong && rideDateTimePeriodToString(ride)}\n    </div>\n  );\n}\n","import React from 'react';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { VEHICLE_TYPES } from 'travel/models/rides/consts';\n\nexport default function RideIcon({ ride: { vehicleType }, className }) {\n  const IconComponent = resolveRideIconComponent(vehicleType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(vehicleType) {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n      return CustomTransportIcon;\n    default:\n      return UnknownRideIcon;\n  }\n}\n"],"sourceRoot":""}