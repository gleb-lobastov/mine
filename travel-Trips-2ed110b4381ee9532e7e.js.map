{"version":3,"sources":["webpack:///./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionsResolver.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultInputRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack:///./src/modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/localization.js","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/blocks/TripEditCard.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/TripEditDialog.jsx","webpack:///./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack:///./src/modules/utilities/types/array.js","webpack:///./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack:///./src/packages/travel/components/models/locations/Location.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/localization.js","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/blocks/VisitEditCard.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/VisitEditDialog.jsx","webpack:///./src/packages/travel/components/models/visits/Visit.jsx","webpack:///./src/modules/components/muiExtended/DialogWithForm/DialogWithForm.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/tieDateTimeFields.js","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/blocks/RideEditForm.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/RideEditDialog.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/Ride.jsx","webpack:///./src/modules/utilities/dateTime/arrivalDepartureDateTimeToString.js","webpack:///./src/packages/travel/pages/TripsPage/blocks/DragHandler.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/VisitWithRides.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/VisitCreator.jsx","webpack:///./src/packages/travel/models/visits/initialize.js","webpack:///./src/packages/travel/pages/TripsPage/blocks/Trip.jsx","webpack:///./src/packages/travel/pages/TripsPage/actionCreators.js","webpack:///./src/modules/utilities/algorithms/createOrderCalculator.js","webpack:///./src/packages/travel/pages/TripsPage/TripsPage.jsx","webpack:///./src/packages/travel/models/trips/initialize.js","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/packages/travel/components/common/WelcomeScreen/WelcomeScreen.jsx","webpack:///./src/packages/travel/components/common/withTripsData/withTripsData.jsx","webpack:///./src/packages/travel/components/common/withTripsData/selectors.js","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack:///./src/packages/travel/models/trips/utils/index.js","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/localization.js"],"names":["OptionsSelect","_ref","caption","classes","hasNullOption","inputId","name","handleChange","onChange","optionRender","options","value","react_default","a","createElement","className","container","InputLabel","component","shrink","htmlFor","Select","displayEmpty","input","Input","id","selectRoot","MenuItem","key","option","index","map","valuePropTypes","PropTypes","oneOfType","number","string","propTypes","isRequired","objectOf","bool","func","arrayOf","defaultProps","undefined","_ref2","withStyles","display","flexGrow","flexBasis","DefaultSuggestionResolver","inputValue","_ref$sourceProps","sourceProps","_ref$sourceProps$sugg","suggestions","renderProp","children","lowerCaseInputValue","toLowerCase","Fragment","filter","label","includes","shape","array","DefaultInputRender","inputProps","ref","other","_objectWithoutProperties","TextField","_extends","InputProps","_objectSpread","inputRef","root","inputRoot","inputInput","DefaultSuggestionRender","itemProps","isHighlighted","isSelected","_ref$children","details","DefaultSuggestionRender_extends","selected","style","fontWeight","ListItemText","primary","secondary","object","useStyles","makeStyles","theme","paper","position","zIndex","marginTop","spacing","left","right","defaultItemToString","item","createSuggestComponent","arguments","length","_ref2$SuggestionsReso","SuggestionsResolver","DefaultSuggestionsResolver","_ref2$SuggestionItemC","SuggestionItemComponent","_ref2$InputComponent","InputComponent","_ref3","customClasses","inputFieldProps","downshiftProps","Suggest_objectWithoutProperties","Suggest_objectSpread","downshift_esm","Suggest_extends","itemToString","_ref4","getInputProps","getItemProps","getMenuProps","highlightedIndex","isOpen","selectedItem","fullWidth","Paper","square","resolvedSuggestions","suggestion","Boolean","QUERY_FORMATS","resolveQueryByFormat","queryFormat","filterField","searchString","navigation","pageSize","numberOfItemsToRequest","search","ProvisionedSuggest_defineProperty","comparator","concat","withProvision","state","_ref3$sourceProps","modelName","domain","identity","request","entities","observe","query","debounceRequest","_ref2$sourceProps","resolveDetails","_ref2$sourceProps$con","convertEntityToSuggestion","entity","ProvisionedSuggest_objectSpread","_ref2$entities","_ref2$entities$data","data","entitiesList","TRIP_TYPE_NAMES","localization_defineProperty","_TRIP_TYPE_NAMES","TRIP_TYPES","LEISURE","BUSINESS","MIXED","RELOCATION","OTHER","renderTripType","tripType","useTripState","initialTripName","tripName","initialTripType","initialOriginLocationId","originLocationId","initialOriginGeonameId","originGeonameId","_useState2","_slicedToArray","useState","tripState","setTripState","tripStateUpdate","TripEditCard_objectSpread","TripEditCard","locationsDict","_ref3$tripState","setTripName","useCallback","nextTripName","target","setTripType","_ref5","nextTripType","setOriginGeoname","_ref6","nextOriginGeonameId","geonameId","locationName","optionGroup","ProvisionedSuggest","suggest","textFieldProps","initialInputValue","placeholder","_ref8","countryName","regionName","join","muiExtended_OptionsSelect_OptionsSelect","Object","values","compose","connect","selectDict","minWidth","TripEditDialog","initialState","handleSubmit","onSubmit","_useTripState","_React$useState2","TripEditDialog_slicedToArray","React","setOpen","handleClose","cloneElement","onClick","Dialog","transitionDuration","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","blocks_TripEditCard","DialogActions","Button","color","ridePropTypes","node","checkIsNodeNotSortable","event","element","dataset","sortHandler","parentNode","checkIsVisitsConnectedByRide","prevVisit","nextVisit","departureRideId","arrivalRideId","Location","_ref$location","location","locationId","_ref$location$locatio","locationPath","Icon","locationNode","react_router_dom","to","toUrl","strLocationId","String","icon","locationPropTypes","reactComponentPropType","pathPropType","marginRight","verticalAlign","VISIT_TYPE_NAMES","VisitEditDialog_localization_defineProperty","_VISIT_TYPE_NAMES","VISIT_TYPES","TRANSIT","REGULAR","BASE_CAMP","renderVisitType","visitType","useVisitState","initialVisitType","initialVisitComment","visitComment","initialLocationId","initialLocationName","initialGeonameId","VisitEditCard_slicedToArray","visitState","setVisitState","visitStateUpdate","VisitEditCard_objectSpread","VisitEditCard","_ref3$visitState","setVisitType","nextVisitType","setGeoname","nextGeonameId","setVisitComment","nextVisitComment","_ref7","multiline","rows","rowsMax","VisitEditDialog","_useVisitState","VisitEditDialog_slicedToArray","blocks_VisitEditCard","Visit","visit","handleVisitUpdate","onVisitUpdate","isEditable","TransferWithinAStationIcon","DomainIcon","LocalShippingIcon","LocationCityIcon","resolveVisitIconComponent","visits_VisitEditDialog_VisitEditDialog","updatedVisit","Visit_objectSpread","IconButton","data-sort-handler","size","variant","Edit_default","editIcon","visitPropTypes","DialogWithForm","description","handleReject","onReject","title","forwardedProps","DialogWithForm_objectWithoutProperties","formik_esm","DialogWithForm_extends","handleSubmitInternal","formikProps","mixDateTime","dateFrom","timeFrom","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","tieDateTimeFields","_ref2$values","rideDeparture","rideArrival","isSameDay","checkIsSameDay","setDatesAndTimes","nextRideDeparture","nextRideArrival","beforeDateTime","afterDateTime","isInverted","checkIsAfter","actualNextRideDeparture","actualNextRideArrival","checkIsDatesEqual","setRideDeparture","setRideArrival","isSameDateField","nextIsSameDay","addDays","rideDepartureField","rideArrivalField","ORIGIN_OF_TRIP","renderVehicleType","vehicleType","VEHICLE_NAMES","renderRideType","rideType","RIDE_TYPES_NAMES","renderRideClass","rideClass","RIDE_CLASSES_NAMES","renderRideOccupation","rideOccupation","RIDE_OCCUPATION_NAMES","RideEditForm","availableVisits","originLocation","_ref5$values","departureVisitId","arrivalVisitId","rideComment","departureDateTime","arrivalDateTime","availableVisitsIds","visitId","visitsDict","fromEntries","_tieDateTimeFields","renderVisit","RideEditForm_toConsumableArray","VEHICLE_TYPES","RIDE_TYPES","RIDE_CLASSES","RIDE_OCCUPATION","DatePicker","autoOk","format","FormControlLabel","control","Checkbox","checked","TimePicker","ampm","RideEditDialog","RideEditDialog_slicedToArray","muiExtended_DialogWithForm_DialogWithForm","initialValues","enableReinitialize","blocks_RideEditForm","locationsPropTypes","Ride","defaultArrivalVisitId","defaultDepartureVisitId","handleRideUpdate","onRideUpdate","ride","_ref$ride","rideId","showDetails","rideInitialState","initializeRide","CAR","CarIcon","TRAIN","TrainIcon","AIRCRAFT","FlightIcon","BUS","TROLLEY","CITY_BUS","BusIcon","MOTORHOME","JITNEY","VanIcon","LOCAL_TRAIN","FERRY","BoatIcon","BIKE","BikeIcon","BY_FEET","WalkIcon","MOTORBIKE","MotorcycleIcon","TRUCK","TruckIcon","ALL_TERRAIN_VEHICLE","TerrainIcon","TRAM","TramIcon","TAXI","LocalTaxiIcon","SUBWAY","SubwayIcon","PUBLIC_TRANSPORT","SeatIcon","ROPEWAY","FUNICULAR","CustomTransportIcon","resolveRideIconComponent","UnknownRideIcon","iconNode","rideNode","rides_RideEditDialog_RideEditDialog","editDialogTrigger","updatedRide","Ride_objectSpread","cls","HITCH_HIKING","ThumbUp_default","arrivalDateTimeString","toLocaleDateString","departureDateTimeString","arrivalDepartureDateTimeToString","DragHandler","DragHandle_default","dragHandler","cursor","marginLeft","top","transform","VisitWithRides","_cls","_cls2","_ref$visit","ridesDict","prevVisitId","nextVisitId","tripVisitsList","isSortable","isSorting","isArrivalRideMatch","isDepartureRideMatch","shouldWarnForArrivalRide","shouldWarnForDepartureRide","blocks_Ride","VisitWithRides_defineProperty","alwaysVisible","warning","visits_Visit","visibleOnlyOnHover","blocks_DragHandler","&:hover $editDialogTrigger","visibility","&:hover $visibleOnlyOnHover","VisitCreator","draggableContainer","SortableTrip","SortableContainer","SortableVisitWithRides","SortableElement","replaceWithNode","props","Trip_objectWithoutProperties","blocks_VisitWithRides","Trip_extends","Trip","countriesDict","handleVisitsOrderUpdate","onVisitsOrderUpdate","trip","_ref3$trip","tripId","tripIndex","handleTripUpdate","onTripUpdate","storyPath","Trip_slicedToArray","setIsSorting","_useState4","addVisitControlIndex","setAddVisitControlIndex","VisitWithRidesComponent","visitsNodes","_toConsumableArray","slice","withItem","isItVisitCreatorControl","indexOfVisit","blocks_VisitCreator","newVisit","indexInCollection","collection","_resolveVisitsWindow2","overstepIndex","prevVisitIndex","nextVisitIndex","resolveVisitsWindow","wrappedVisitsNodes","onSortEnd","oldIndex","newIndex","shouldCancelStart","updateBeforeSortStart","lockAxis","lockToContainerEdges","originLocationNode","locations_Location","IconHome","tripEditControlsNode","trips_TripEditDialog_TripEditDialog","updatedTrip","Trip_objectSpread","lastVisit","lastButOneVisit","rideToOriginId","recentVisitId","isRelocation","rideToOriginNode","hasStory","some","departureRideComment","resolveTripCaption","countryId","strTripId","tripPropTypes","resolveOrder","calcOrder","orderResolver","orderInTrip","prevOrder","nextOrder","Math","random","memoizedGroupAndSortVisitsByTrips","memoizeByLastArgs","groupAndSortVisitsByTrips","TripsPage","visitedUserAlias","match","params","userAlias","isTripsComplete","_ref$userTrips","userTrips","_ref$userTrips$data","tripsList","_ref$userVisits","userVisits","_ref$userVisits$data","visitsList","namedPaths","invalidateRequest","_useAuthContext","useAuthContext","isAuthenticated","authenticatedUserAlias","body","submitOrderInTrip","submitRide","submitTrip","then","actionCreators_objectSpread","submitVisit","addTripNode","useMemo","WelcomeScreen","shouldShowLinkToTrips","visitsGroupedByTrips","blocks_Trip","travel","tripStory","pathsPropTypes","trips","visits","ridesPropTypes","withPaths","withTripsData","mapStateToProps","selectProvisionStatus","isComplete","requirementsConfig","_requirementsConfig","TripsPage_defineProperty","DATA_CHUNKS","COMMON","COUNTRIES","USER","TRIPS","LOCATIONS","VISITS","RIDES","withLoader","Component","_props$provision","provision","_props$provision$isPe","isPending","hasFallback","PlainLoader","__webpack_exports__","_len2","provisionParams","Array","_key2","ExtendableComponent","_len","funcsArray","_key","arg","reduceRight","composed","provide","apply","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_3__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_3___default","modules_utilities_routing_Path__WEBPACK_IMPORTED_MODULE_4__","core_context_AppContext__WEBPACK_IMPORTED_MODULE_5__","core_context_AuthContext__WEBPACK_IMPORTED_MODULE_6__","_ref$namedPaths","_ref$namedPaths$trave","tripsPath","Message","path","instanceOf","Path","withRouter","d","mapStateToRequirementsConfig","ProvisionedComponent","userTripsIds","selectPlaceholder","selectUserTripsIds","isFunction","countries","condition","keys","isDisabled","_selectLocationsIds","tripsDict","requiredLocationsIds","uniq","reduce","memo","push","missingLocationsIds","requiredLocationId","selectLocationsIds","userLocations","year","actualYear","parseInt","test","trip_id","departure_date_time","arrival_date_time","userRides","uniqTrimAndJoin","maxLength","_ref$separator","separator","uniqArray","result","originCountryId","fallback","visitsByCountries","groupBy","Number","sortVisitsByTrips","utils_groupAndSortVisitsByTrips","sort","mapValues","_defineProperty","_RIDE_CLASSES_NAMES","ECONOMY","COMFORT","FIRST","PRIVATE","_RIDE_OCCUPATION_NAME","PASSENGER","STUFF","DRIVER","_RIDE_TYPES_NAMES","SELF_DRIVE","SCHEDULED","CHARTER","TOUR","CARPOOL","DROP_OFF","_VEHICLE_NAMES"],"mappings":"qVAmBMA,EAAgB,SAAAC,GAAA,IACpBC,EADoBD,EACpBC,QACAC,EAFoBF,EAEpBE,QACAC,EAHoBH,EAGpBG,cACAC,EAJoBJ,EAIpBI,QACAC,EALoBL,EAKpBK,KACUC,EANUN,EAMpBO,SACAC,EAPoBR,EAOpBQ,aACAC,EARoBT,EAQpBS,QACAC,EAToBV,EASpBU,MAToB,OAWpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQa,WACtBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYC,UAAU,QAAQC,QAAQ,EAAMC,QAASf,GAClDH,GAEHU,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEf,KAAMA,EACNK,MAAOA,EACPW,cAAc,EACdd,SAAUD,EACVgB,MAAOX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,GAAIpB,IAClBU,UAAWZ,EAAQuB,YAElBtB,GACCQ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,IAAK,KAAMjB,MAAO,MACzBF,EAAa,CAAEoB,OAAQ,KAAMC,OAAQ,EAAGpB,aAG5CA,EAAQqB,IAAI,SAACF,EAAQC,GAAT,OACXlB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,IAAKC,EAAQlB,MAAOkB,GAC3BpB,EAAa,CAAEoB,SAAQC,QAAOpB,kBAOnCsB,EAAiBC,IAAUC,UAAU,CACzCD,IAAUE,OACVF,IAAUG,SAEZpC,EAAcqC,UAAY,CACxB/B,KAAM2B,IAAUG,OAChBlC,QAAS+B,IAAUG,OAAOE,WAC1BnC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,WAC9ClC,cAAe6B,IAAUO,KACzBnC,QAAS4B,IAAUG,OAAOE,WAC1B9B,SAAUyB,IAAUQ,KAAKH,WACzB7B,aAAcwB,IAAUQ,KACxB/B,QAASuB,IAAUS,QAAQV,GAC3BrB,MAAOqB,GAGThC,EAAc2C,aAAe,CAC3BrC,UAAMsC,EACNxC,eAAe,EACfK,aAAc,SAAAoC,GAAA,OAAAA,EAAGhB,QAAuB,IACxCnB,QAAS,GACTC,WAAOiC,GAGME,kBAxEA,CACb9B,UAAW,CACT+B,QAAS,eACTC,SAAU,IACVC,UAAW,KAEbvB,WAAY,CACVqB,QAAS,UAiEED,CAAmB9C,wCC7E5BkD,EAA4B,SAAAjD,GAI5B,IAHJkD,EAGIlD,EAHJkD,WAGIC,EAAAnD,EAFJoD,YAEIC,GAAAF,OAAA,IAAAA,EAFgC,GAEhCA,GAFWG,mBAEX,IAAAD,EAFyB,GAEzBA,EADME,EACNvD,EADJwD,SAEMC,EAAsBP,EAAWQ,cACvC,OACE/C,EAAAC,EAAAC,cAACF,EAAAC,EAAM+C,SAAP,KACGJ,EACCD,EAAYM,OAAO,SAAAhB,GAAA,OAAAA,EAAGiB,MACdH,cAAcI,SAASL,QAOvCR,EAA0Bb,UAAY,CACpCc,WAAYlB,IAAUG,OAAOE,WAC7Be,YAAapB,IAAU+B,MAAM,CAE3BT,YAAatB,IAAUgC,QACtB3B,WACHmB,SAAUxB,IAAUQ,KAAKH,YAGZY,ugCC1BA,IAAAgB,EAAA,SAAAjE,GAAA,IAAGkE,EAAHlE,EAAGkE,WAAYhE,EAAfF,EAAeE,QAASiE,EAAxBnE,EAAwBmE,IAAQC,EAAhCC,EAAArE,EAAA,uCACbW,EAAAC,EAAAC,cAACyD,EAAA,EAADC,EAAA,CACEC,WAAUC,EAAA,CACRC,SAAUP,EACVjE,QAAS,CACPyE,KAAMzE,EAAQ0E,UACdtD,MAAOpB,EAAQ2E,aAEdX,IAEDE,6NCRR,IAAMU,EAA0B,SAAA9E,GAAA,IAC9B+E,EAD8B/E,EAC9B+E,UACAC,EAF8BhF,EAE9BgF,cACAC,EAH8BjF,EAG9BiF,WAH8BC,EAAAlF,EAI9BwD,SAAYK,EAJkBqB,EAIlBrB,MAAOsB,EAJWD,EAIXC,QAJW,OAM9BxE,EAAAC,EAAAC,cAACa,EAAA,EAAD0D,EAAA,GACML,EADN,CAEEM,SAAUL,EACV/D,UAAU,MACVqE,MAAO,CACLC,WAAYN,EAAa,IAAM,OAGjCtE,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAcC,QAAS5B,EAAO6B,UAAWP,MAI7CL,EAAwB1C,UAAY,CAElC2C,UAAW/C,IAAU2D,OACrBX,cAAehD,IAAUO,KACzB0C,WAAYjD,IAAUO,KACtBiB,SAAUxB,IAAUQ,KAAKH,YAG3ByC,EAAwBpC,aAAe,CACrCqC,eAAWpC,EACXqC,eAAe,EACfC,YAAY,GAGCH,msBC7Bf,IAAMc,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCnB,KAAM,GACN5D,UAAW,GACXgF,MAAO,CACLC,SAAU,WACVC,OAAQ,EACRC,UAAWJ,EAAMK,QAAQ,GACzBC,KAAM,EACNC,MAAO,GAETzB,UAAW,GACXC,WAAY,MAGRyB,EAAsB,SAAAC,GAE1B,OADkBA,GAAQ,IAAlB1C,OAIG2C,EAAyB,eAAA5D,EAAA6D,UAAAC,OAAA,QAAA/D,IAAA8D,UAAA,GAAAA,UAAA,GAIlC,GAJkCE,EAAA/D,EACpCgE,2BADoC,IAAAD,EACdE,EADcF,EAAAG,EAAAlE,EAEpCmE,+BAFoC,IAAAD,EAEVhC,EAFUgC,EAAAE,EAAApE,EAGpCqE,sBAHoC,IAAAD,EAGnB/C,EAHmB+C,EAAA,OAI3B,SAAAE,GAML,IALKC,EAKLD,EALJhH,QACAkD,EAII8D,EAJJ9D,YACAc,EAGIgD,EAHJhD,WACAkD,EAEIF,EAFJE,gBACGC,EACCC,EAAAJ,EAAA,0DACEhH,oUAAUqH,CAAA,GAAK3B,IAAgBuB,GACrC,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQyE,MACtBhE,EAAAC,EAAAC,cAAC2G,EAAA,EAADC,EAAA,CAAWC,aAAcpB,GAAyBe,GAC/C,SAAAM,GAAA,IACCC,EADDD,EACCC,cACAC,EAFDF,EAECE,aACAC,EAHDH,EAGCG,aACAC,EAJDJ,EAICI,iBACA7E,EALDyE,EAKCzE,WACA8E,EANDL,EAMCK,OACAC,EAPDN,EAOCM,aAPD,OASCtH,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQa,WACtBJ,EAAAC,EAAAC,cAACoG,EAADQ,EAAA,CACES,WAAW,EACXhI,QAASA,EACTgE,WAAY0D,EAAc1D,IACtBkD,IAENzG,EAAAC,EAAAC,cAAA,MAASiH,IACNE,GACCrH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOrH,UAAWZ,EAAQ6F,MAAOqC,QAAQ,GACvCzH,EAAAC,EAAAC,cAAC+F,EAAD,CACE1D,WAAYA,EACZE,YAAaA,GAEZ,SAAAiF,GAAmB,OAClBA,EAAoBvG,IAAI,SAACwG,EAAYzG,GAAb,OACtBlB,EAAAC,EAAAC,cAACkG,EAAD,CACEpF,IAAK2G,EAAWzE,MAChBkB,UAAW8C,EAAa,CACtBtB,KAAM+B,IAERtD,cAAe+C,IAAqBlG,EACpCoD,WACEsD,QAAQN,IACRA,EAAapE,QAAUyE,EAAWzE,OAGnCyE,eAeZ9B,4HC1FR,OAAMgC,GACH,SADGA,GAEH,SAGJC,GAAuB,SAAAzI,GAKvB,IAJJ0I,EAII1I,EAJJ0I,YACAC,EAGI3I,EAHJ2I,YACYC,EAER5I,EAFJkD,WAGM2F,EAAa,CAAEC,SADjB9I,EADJ+I,wBAGA,OAAQL,GACN,KAAKF,GACH,MAAO,CAAEK,aAAYG,OAAQJ,GAC/B,KAAKJ,GACL,QACE,MAAO,CACLK,aACAjF,OAAQqF,EAAA,GACLN,EAAc,CAAEO,WAAY,IAAKxI,MAAK,IAAAyI,OAAMP,EAAN,UAoBlCpC,KAAuB,CACpCI,oBAAqBwC,YACnB,SACEC,EADFnC,GAAA,IAGIhE,EAHJgE,EAGIhE,WAHJoG,EAAApC,EAII9D,YACEmG,EALND,EAKMC,UACAC,EANNF,EAMME,OACAb,EAPNW,EAOMX,YACAI,EARNO,EAQMP,uBACAL,EATNY,EASMZ,YATN,MAYM,CACJc,SACAC,SAAUvG,EACVwG,QAAS,CACPC,SAAU,CACRJ,YACAK,QAAS1G,EACT2G,MAAOpB,GAAqB,CAC1BC,cACAC,cACAzF,aACA6F,6BAINe,gBAAiB,MA5BAV,CAfN,SAAAxG,GAAA,IAAAmH,EAAAnH,EACfQ,YACEuF,GAFaoB,OAAA,IAAAA,EASX,GATWA,GAEbpB,YACAqB,EAHaD,EAGbC,eAHaC,EAAAF,EAIbG,iCAJa,IAAAD,EAIe,SAAAE,GAAM,yUAAAC,CAAA,GAC7BD,EAD6B,CAEhCtG,MAAOsG,EAAOxB,GACdxD,QAAS6E,EAAiBA,EAAeG,QAAUxH,KAPxCsH,EAAAI,EAAAzH,EAUf+G,SAVeW,GAAAD,OAAA,IAAAA,EAUyB,GAVzBA,GAUHE,KAAMC,OAVH,IAAAF,EAUkB,GAVlBA,EAAA,OAYX/G,EAZWX,EAWfY,WACgBgH,GAAgB,IAAI1I,IAAIoI,2ICrCnC,IAAMO,IAAeC,GAAAC,GAAA,GACzBC,cAAWC,QAAU,SADIH,GAAAC,GAEzBC,cAAWE,SAAW,UAFGJ,GAAAC,GAGzBC,cAAWG,MAAQ,aAHML,GAAAC,GAIzBC,cAAWI,WAAa,WAJCN,GAAAC,GAKzBC,cAAWK,MAAQ,UALMN,ghBCU5B,IAAMO,GAAiB,SAAAlL,GAAA,IAAWmL,EAAXnL,EAAG4B,OAAH,OACrBuJ,EAAWV,GAAgBU,GAAY,aAE5BC,GAAe,SAAAxI,GAKtB,IAJMyI,EAINzI,EAJJ0I,SACUC,EAGN3I,EAHJuI,SACkBK,EAEd5I,EAFJ6I,iBACiBC,EACb9I,EADJ+I,gBACIC,EAAAC,GAC8BC,mBAAS,CACzCR,SAAUD,EACVF,SAAUI,EACVE,iBAAkBD,EAClBG,gBAAiBD,IALf,GACGK,EADHH,EAAA,GACcI,EADdJ,EAAA,GAQJ,MAAO,CACLG,YACAC,aAAc,SAAAC,GAAe,OAC3BD,qUAAaE,CAAA,GAAKH,EAAcE,OAchCE,GAAe,SAAAjF,GAKf,IAJJhH,EAIIgH,EAJJhH,QACAkM,EAGIlF,EAHJkF,cAGIC,EAAAnF,EAFJ6E,UAAaZ,EAETkB,EAFSlB,SAAUG,EAEnBe,EAFmBf,SAAUG,EAE7BY,EAF6BZ,iBACjCO,EACI9E,EADJ8E,aAEMM,EAAcC,sBAClB,SAAA5E,GAAA,IAAoB6E,EAApB7E,EAAG8E,OAAU/L,MAAb,OACEsL,EAAa,CAAEV,SAAUkB,KAC3B,CAACR,IAEGU,EAAcH,sBAClB,SAAAI,GAAA,IAAoBC,EAApBD,EAAGF,OAAU/L,MAAb,OACEsL,EAAa,CAAEb,SAAUyB,KAC3B,CAACZ,IAEGa,EAAmBN,sBACvB,SAAAO,GAAA,IAAcC,EAAdD,EAAGE,UAAH,OACEhB,EAAa,CAAEL,gBAAiBoB,KAClC,CAACf,IAKKiB,GADeb,EAAcX,IACM,IAAnCwB,aACR,OACEtM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACE4D,WAAW,EACXrE,MAAM,mBACNnD,MAAO4K,EACP/K,SAAU+L,KAGd3L,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAACsM,GAAD,CACEjN,QAAS,CAAEyE,KAAMzE,EAAQkN,SACzBC,eAAgB,CACdxJ,MAAO,YAETyJ,kBAAmBL,EACnB/I,WAAY,CAAEqJ,YAAa,wBAC3BhN,SAAUsM,EACVzJ,YAAa,CACXuF,YAAa,eACbY,UAAW,WACXC,OAAQ,uBACRd,YAAaF,GACbwB,eAAgB,SAAAwD,GAAA,MACd,CADcA,EAAGC,YAAHD,EAAgBE,YACJ9J,OAAO2E,SAASoF,KAAK,WAIvDhN,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAAC+M,EAAD,CACE3N,QAAQ,cACRG,QAAQ,+BACRG,SAAUmM,EACVlM,aAAc0K,GACdzK,QAASoN,OAAOC,OAAOlD,eACvBzK,eAAe,EACfO,MAAOyK,OAOjBgB,GAAa/J,UAAY,CACvBtB,UAAWkB,IAAUG,OACrBjC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,YAEhD8J,GAAazJ,aAAe,CAC1B5B,eAAW6B,GAGb,IAIeoL,OACbC,kBALsB,SAAA3E,GAAK,MAAK,CAChC+C,cAAe6B,YAAW5E,EAAO,gBAKjCxG,YA7Fa,CACbqK,YAAa,CACXpK,QAAS,OACToL,SAAU,SAEZd,QAAS,CACPrK,SAAU,KAqFCgL,CAGb5B,uZCxHF,IAAMgC,GAAiB,SAAAnO,GAAwD,IAArDoO,EAAqDpO,EAArDoO,aAAc5K,EAAuCxD,EAAvCwD,SAAoB6K,EAAmBrO,EAA7BsO,SAA6BC,EACzCnD,GAAagD,GAAzCrC,EADqEwC,EACrExC,UAAWC,EAD0DuC,EAC1DvC,aAD0DwC,EAAAC,GAEnDC,IAAM5C,UAAS,GAFoC,GAEtE9D,EAFsEwG,EAAA,GAE9DG,EAF8DH,EAAA,GAIvEI,EAAc,kBAAMD,GAAQ,IAMlC,OACEhO,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACG+K,IAAMG,aAAarL,EAAU,CAAEsL,QATZ,kBAAMH,GAAQ,MAUjC3G,GACCrH,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CACEC,mBAAoB,IACpBC,KAAMjH,EACNkH,QAASN,EACTO,kBAAgB,qBAEhBxO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAa5N,GAAG,qBAAhB,WACAb,EAAAC,EAAAC,cAACwO,EAAA,EAAD,KACE1O,EAAAC,EAAAC,cAACyO,EAAA,EAAD,+BACA3O,EAAAC,EAAAC,cAAC0O,GAAD,CAAcxD,UAAWA,EAAWC,aAAcA,KAEpDrL,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,KACE7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAQX,QAASF,EAAac,MAAM,aAApC,UAGA/O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAQX,QAxBW,WAC3BT,EAAatC,GACb6C,KAsB+Cc,MAAM,WAA7C,iBAUZvB,GAAe/L,UAAY,CACzBgM,aAAcpM,IAAU+B,MAAM4L,WAAetN,WAC7CmB,SAAUxB,IAAU4N,KAAKvN,WACzBiM,SAAUtM,IAAUQ,KAAKH,YAE3B8L,GAAezL,aAAe,GAEfyL,2HCxDA0B,GAAA,SAAAC,GAEb,IADA,IAAIC,EAAUD,EAAMrD,OACbsD,GAAS,CACd,GAAIA,EAAQC,SAA2C,YAAhCD,EAAQC,QAAQC,YACrC,OAAO,EAETF,EAAUA,EAAQG,WAEpB,OAAO,yVCTF,ICAQC,GAAA,SAACC,EAAWC,GACzB,OAAKD,IAAcC,GAGmCD,EAA9CE,kBAC0CD,EAA1CE,yBCeJC,GAAW,SAAAxQ,GAKX,IAAAyQ,EAAAzQ,EAJJ0Q,SAAYC,EAIRF,EAJQE,WAIRC,EAAAH,EAJoBxD,oBAIpB,IAAA2D,EAJmC,UAInCA,EAHJC,EAGI7Q,EAHJ6Q,aACAC,EAEI9Q,EAFJ8Q,KACA5Q,EACIF,EADJE,QAEM6Q,EAAeF,EACnBlQ,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CAAMC,GAAIJ,EAAaK,MAAM,CAAEC,cAAeC,OAAOT,MAClD1D,GAGHA,EAEF,OACEtM,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQa,WACrB+P,GAAQnQ,EAAAC,EAAAC,cAACiQ,EAAD,CAAMhQ,UAAWZ,EAAQmR,OACjCN,IAKPP,GAASpO,UAAY,CACnBlC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,WAC9CqO,SAAU1O,IAAU+B,MAAMuN,YAC1BR,KAAMS,KACNV,aAAcW,KAGhBhB,GAAS9N,aAAe,CACtBgO,SAAU,GACVI,UAAMnO,EACNkO,kBAAclO,GAGDE,sBA9CO,CACpB9B,UAAW,CACT+B,QAAS,eACT2O,YAAa,OAEfJ,KAAM,CACJI,YAAa,MACb3O,QAAS,eACT4O,cAAe,gBAsCJ7O,CAAmB2N,mPClD3B,IAAMmB,IAAgBC,GAAAC,GAAA,GAC1BC,eAAYC,QAAU,WADIH,GAAAC,GAE1BC,eAAYE,QAAU,aAFIJ,GAAAC,GAG1BC,eAAYG,UAAY,kBAHEL,GAAAC,GAI1BC,eAAY9G,WAAa,WAJC6G,ghBCO7B,IAAMK,GAAkB,SAAAlS,GAAA,IAAWmS,EAAXnS,EAAG4B,OAAH,OACtBuQ,EAAYR,GAAiBQ,GAAa,aAE/BC,GAAgB,SAAAxP,GAMvB,IALOyP,EAKPzP,EALJuP,UACcG,EAIV1P,EAJJ2P,aACYC,EAGR5P,EAHJ+N,WACc8B,EAEV7P,EAFJqK,aACWyF,EACP9P,EADJoK,UACIpB,EAAA+G,GACgC7G,mBAAS,CAC3CyG,aAAcD,EACdH,UAAWE,EACX1B,WAAY6B,EACZvF,aAAcwF,EACdzF,UAAW0F,IANT,GACGE,EADHhH,EAAA,GACeiH,EADfjH,EAAA,GASJ,MAAO,CACLgH,aACAC,cAAe,SAAAC,GAAgB,OAC7BD,qUAAcE,CAAA,GAAKH,EAAeE,OAclCE,GAAgB,SAAA9L,GAIhB,IAHJhH,EAGIgH,EAHJhH,QAGI+S,EAAA/L,EAFJ0L,WAAcT,EAEVc,EAFUd,UAAWI,EAErBU,EAFqBV,aAActF,EAEnCgG,EAFmChG,aACvC4F,EACI3L,EADJ2L,cAEMK,EAAe3G,sBACnB,SAAA5E,GAAA,IAAoBwL,EAApBxL,EAAG8E,OAAU/L,MAAb,OACEmS,EAAc,CAAEV,UAAWgB,KAC7B,CAACN,IAEGO,EAAa7G,sBACjB,SAAAI,GAAA,IAAc0G,EAAd1G,EAAGK,UAAH,OACE6F,EAAc,CAAE7F,UAAWqG,KAC7B,CAACR,IAEGS,EAAkB/G,sBACtB,SAAAO,GAAA,IAAoByG,EAApBzG,EAAGL,OAAU/L,MAAb,OACEmS,EAAc,CAAEN,aAAcgB,KAChC,CAACV,IAGH,OACElS,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAACsM,GAAD,CACEjN,QAAS,CAAEyE,KAAMzE,EAAQkN,SACzBC,eAAgB,CACdxJ,MAAO,mBAETyJ,kBAAmBL,EACnB/I,WAAY,CAAEqJ,YAAa,uBAC3BhN,SAAU6S,EACVhQ,YAAa,CACXuF,YAAa,eACbY,UAAW,WACXC,OAAQ,wBACRd,YAAaF,GACbwB,eAAgB,SAAAwJ,GAAA,MACd,CADcA,EAAG/F,YAAH+F,EAAgB9F,YACJ9J,OAAO2E,SAASoF,KAAK,WAIvDhN,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAAC+M,EAAD,CACE3N,QAAQ,gBACRG,QAAQ,iCACRG,SAAU2S,EACV1S,aAAc0R,GACdzR,QAASoN,OAAOC,OAAOgE,gBACvB3R,eAAe,EACfO,MAAOyR,KAGXxR,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACET,MAAM,cACNqE,WAAW,EACXxH,MAAO6R,EACPhS,SAAU+S,EACVG,WAAW,EACXC,KAAM,EACNC,QAAS,QAOnBX,GAAc5Q,UAAY,CACxBtB,UAAWkB,IAAUG,OACrBjC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,YAGhD2Q,GAActQ,aAAe,CAC3B5B,eAAW6B,GAGEE,mBAvFA,CACbqK,YAAa,CACXpK,QAAS,OACToL,SAAU,SAEZd,QAAS,CACPrK,SAAU,IAiFCF,CAAmBmQ,uZChHlC,IAAMY,GAAkB,SAAA5T,GAIlB,IAHJoO,EAGIpO,EAHJoO,aACA5K,EAEIxD,EAFJwD,SACU6K,EACNrO,EADJsO,SACIuF,EACkCzB,GAAchE,GAA5CwE,EADJiB,EACIjB,WAAYC,EADhBgB,EACgBhB,cADhBrE,EAAAsF,GAEsBpF,IAAM5C,UAAS,GAFrC,GAEG9D,EAFHwG,EAAA,GAEWG,EAFXH,EAAA,GAIEI,EAAc,kBAAMD,GAAQ,IAMlC,OACEhO,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACG+K,IAAMG,aAAarL,EAAU,CAAEsL,QATZ,kBAAMH,GAAQ,MAUjC3G,GACCrH,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CACEC,mBAAoB,IACpBC,KAAMjH,EACNkH,QAASN,EACTO,kBAAgB,qBAEhBxO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAa5N,GAAG,qBAAhB,aACAb,EAAAC,EAAAC,cAACwO,EAAA,EAAD,KACE1O,EAAAC,EAAAC,cAACyO,EAAA,EAAD,iCACA3O,EAAAC,EAAAC,cAACkT,GAAD,CACEnB,WAAYA,EACZC,cAAeA,KAGnBlS,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,KACE7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAQX,QAASF,EAAac,MAAM,aAApC,UAGA/O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAQX,QA3BW,WAC3BT,EAAauE,GACbhE,KAyB+Cc,MAAM,WAA7C,iBAUZkE,GAAgBxR,UAAY,CAC1BgM,aAAcpM,IAAU+B,MAAM4L,WAAetN,WAC7CmB,SAAUxB,IAAU4N,KAAKvN,WACzBiM,SAAUtM,IAAUQ,KAAKH,YAE3BuR,GAAgBlR,aAAe,GAEhBkR,mIClDf,IAcMI,GAAQ,SAAAhU,GAMR,IALJiU,EAKIjU,EALJiU,MACeC,EAIXlU,EAJJmU,cACAjU,EAGIF,EAHJE,QACAkU,EAEIpU,EAFJoU,WACAvD,EACI7Q,EADJ6Q,aAEA,IAAKoD,EACH,MAAO,aAFL,IAIIhH,EAAwCgH,EAAxChH,aAAckF,EAA0B8B,EAA1B9B,UAAWxB,EAAesD,EAAftD,WAC3BG,EAzB0B,SAAAqB,GAChC,OAAQA,GACN,IAAK,UACH,OAAOkC,KACT,IAAK,WACH,OAAOC,KACT,IAAK,aACH,OAAOC,KACT,IAAK,UACL,QACE,OAAOC,MAeEC,CAA0BtC,GACvC,OACExR,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQa,WACrB+P,GAAQnQ,EAAAC,EAAAC,cAACiQ,EAAD,CAAMhQ,UAAWZ,EAAQmR,OAClC1Q,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CAAMC,GAAIJ,EAAaK,MAAM,CAAEC,cAAeC,OAAOT,MAClD1D,GAEFmH,GACCzT,EAAAC,EAAAC,cAAC6T,GAAD,CACEtG,aAAc6F,EACd3F,SAAU,SAAAqG,GAAY,OACpBT,qUAAkBU,CAAA,GAAKX,EAAUU,MAGnChU,EAAAC,EAAAC,cAACgU,GAAA,EAAD,CACEC,oBAAkB,WAClBC,KAAK,QACLC,QAAQ,WACRtF,MAAM,WAEN/O,EAAAC,EAAAC,cAACoU,GAAArU,EAAD,CAAUE,UAAWZ,EAAQgV,eAqBzClB,GAAM5R,UAAY,CAChBlC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,WAC9C+R,WAAYpS,IAAUO,KACtB4R,cAAenS,IAAUQ,KAAKH,WAC9B4R,MAAOjS,IAAU+B,MAAMoR,YACvBtE,aAAcW,IAAanP,YAG7B2R,GAAMtR,aAAe,CACnB0R,YAAY,EACZH,MAAO,IAGMpR,mBA1BA,CACb9B,UAAW,CACT+B,QAAS,eACT2O,YAAa,OAEfJ,KAAM,CACJI,YAAa,MACb3O,QAAS,eACT4O,cAAe,eAEjBwD,SAAU,IAgBGrS,CAAmBmR,89BCnFlC,IAAMoB,GAAiB,SAAApV,GAAA,IACrBwD,EADqBxD,EACrBwD,SACA6R,EAFqBrV,EAErBqV,YACUC,EAHWtV,EAGrBuV,SACUlH,EAJWrO,EAIrBsO,SACAkH,EALqBxV,EAKrBwV,MACGC,EANkBC,GAAA1V,EAAA,iEAQrBW,EAAAC,EAAAC,cAAC8U,GAAA,EAADC,GAAA,GAAYH,EAAZ,CAA4BnH,SAAUD,IACnC,SAAAzL,GAAA,IAAiBiT,EAAjBjT,EAAGyL,aAAuCyH,EAA1CJ,GAAA9S,EAAA,yBACCjC,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CACEC,mBAAoB,IACpBC,MAAM,EACNC,QAASoG,EACTnG,kBAAgB,qBAEhBxO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAa5N,GAAG,qBAAqBgU,GACrC7U,EAAAC,EAAAC,cAACwO,EAAA,EAAD,KACE1O,EAAAC,EAAAC,cAACyO,EAAA,EAAD,KAAoB+F,GACnB3G,IAAMG,aAAarL,EAAUsS,IAEhCnV,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,KACE7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAQX,QAASwG,EAAc5F,MAAM,aAArC,UAGA/O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAQX,QAAS+G,EAAsBnG,MAAM,WAA7C,kBASV0F,GAAehT,UAAY,CACzBoB,SAAUxB,IAAU4N,KAAKvN,WACzBgT,YAAarT,IAAU4N,KACvB2F,SAAUvT,IAAUQ,KAAKH,WACzBiM,SAAUtM,IAAUQ,KAAKH,WACzBmT,MAAOxT,IAAU4N,MAEnBwF,GAAe1S,aAAe,CAC5B2S,iBAAa1S,EACb6S,WAAO7S,GAGMyS,wGChDTW,GAAc,SAAA/V,GAAA,IAAGgW,EAAHhW,EAAGgW,SAAUC,EAAbjW,EAAaiW,SAAb,OAClB,IAAIC,KACFF,EAASG,cACTH,EAASI,WACTJ,EAASK,UACTJ,EAASK,WACTL,EAASM,aACTN,EAASO,eAGEC,GAAA,SAAA7T,GAA8D,IAAA8T,EAAA9T,EAA3DkL,OAAU6I,EAAiDD,EAAjDC,cAAeC,EAAkCF,EAAlCE,YAAetW,EAAmBsC,EAAnBtC,aAMlDuW,EAAYC,aAAeH,EAAeC,GAE1CG,EAAmB,SAACC,EAAmBC,GAC3C,IAtB2BC,EAAgBC,EAsBrCC,GAtBqBF,EAuBzBF,EAvByCG,EAwBzCF,EAvBJI,aAAaH,EAAgBC,IAyBrBG,EAA0BF,EAC5BH,EACAD,EAEEO,EAAwBH,EAC1BJ,EACAC,EAECO,aAAkBb,EAAeW,IApBf,SAAAN,GACvB1W,EAAa,oBAAbA,CAAkC0W,GAoBhCS,CAAiBH,GAEdE,aAAkBZ,EAAaW,IArBf,SAAAN,GACrB3W,EAAa,kBAAbA,CAAgC2W,GAqB9BS,CAAeH,IAoCnB,MAAO,CACLI,gBAAiB,CACfjX,MAAOmW,EACPtW,SAnC8B,SAAAqX,GAC5BrP,QAAQsO,KAAetO,QAAQqP,IACjCb,EACEJ,EACAZ,GAAY,CACVC,SAAU4B,EAAgBjB,EAAgBkB,aAAQlB,EAAe,GACjEV,SAAUW,OA+BhBkB,mBAAoB,CAClBpX,MAAOiW,EACPpW,SA3B8B,SAAAyW,GAChC,IAAMC,EAAkBJ,EACpBd,GAAY,CACVE,SAAUW,EACVZ,SAAUgB,IAEZJ,EACJG,EAAiBC,EAAmBC,KAsBpCc,iBAAkB,CAChBrX,MAAOkW,EACPrW,SArB4B,SAAA0W,GAC9B,IAAMD,EAAoBH,EACtBd,GAAY,CACVE,SAAUU,EACVX,SAAUiB,IAEZN,EACJI,EAAiBC,EAAmBC,6VChDxC,IAAMe,GAAiB,KAEjBC,GAAoB,SAAAjY,GAAA,IAAWkY,EAAXlY,EAAG4B,OAAH,OACxBsW,EAAcC,KAAcD,GAAe,aACvCE,GAAiB,SAAAxV,GAAA,IAAWyV,EAAXzV,EAAGhB,OAAH,OACrByW,EAAWC,KAAiBD,GAAY,aACpCE,GAAkB,SAAArR,GAAA,IAAWsR,EAAXtR,EAAGtF,OAAH,OACtB4W,EAAYC,KAAmBD,GAAa,aACxCE,GAAuB,SAAA/Q,GAAA,IAAWgR,EAAXhR,EAAG/F,OAAH,OAC3B+W,EAAiBC,KAAsBD,GAAkB,aAWrDE,GAAe,SAAAlM,GAgBf,IAfJzM,EAeIyM,EAfJzM,QACA4Y,EAcInM,EAdJmM,gBACAC,EAaIpM,EAbJoM,eAaIC,EAAArM,EAZJmB,OACEmL,EAWED,EAXFC,iBACAC,EAUEF,EAVFE,eACAhB,EASEc,EATFd,YACAG,EAQEW,EARFX,SACAc,EAOEH,EAPFG,YACAX,EAMEQ,EANFR,UACAG,EAKEK,EALFL,eACAS,EAIEJ,EAJFI,kBACAC,EAGEL,EAHFK,gBAEF/Y,EACIqM,EADJrM,aAEMgZ,EAAqBR,EAAgBhX,IAAI,SAAAgL,GAAA,OAAAA,EAAGyM,UAC5CC,EAAa3L,OAAO4L,YACxBX,EAAgBhX,IAAI,SAAAmS,GAElB,MAAO,CADaA,EAAZsF,QACStF,MALjByF,EAaAjD,GAAkB,CACpB3I,OAAQ,CACN6I,cAAeyC,EACfxC,YAAayC,GAEf/Y,iBARAyX,EAVE2B,EAUF3B,iBACAD,EAXE4B,EAWF5B,mBACAH,EAZE+B,EAYF/B,gBASIgC,EAAcpN,sBAClB,SAAAiH,GAAyB,IAAd+F,EAAc/F,EAAtB5R,OACD,GAAI2X,IAAYvB,GAEd,OADyBe,EAAjB9L,aAGV,IAAMgH,EAAQuF,EAAWD,GACzB,OAAKtF,EAGoBA,EAAjBhH,aAFC,cAKX,CAACuM,IAEH,OACE7Y,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAAC+M,EAAD,CACEvN,KAAK,mBACLJ,QAAQ,iBACRG,QAAQ,gCACRI,aAAcmZ,EACdxZ,eAAe,EACfM,QAAO,CAAGuX,IAAH7O,OAAAyQ,GAAsBN,IAC7B5Y,MAAOuY,EACP1Y,SAAUD,IAEZK,EAAAC,EAAAC,cAAC+M,EAAD,CACEvN,KAAK,iBACLJ,QAAQ,aACRG,QAAQ,8BACRD,eAAe,EACfK,aAAcmZ,EACdlZ,QAAO,GAAA0I,OAAAyQ,GAAMN,GAAN,CAA0BtB,KACjCzX,SAAUD,EACVI,MAAOwY,KAGXvY,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAAC+M,EAAD,CACEvN,KAAK,cACLJ,QAAQ,YACRG,QAAQ,kCACRI,aAAcyX,GACdxX,QAASoN,OAAOC,OAAO+L,kBACvBtZ,SAAUD,EACVI,MAAOwX,IAETvX,EAAAC,EAAAC,cAAC+M,EAAD,CACEvN,KAAK,WACLJ,QAAQ,cACRG,QAAQ,+BACRI,aAAc4X,GACd3X,QAASoN,OAAOC,OAAOgM,eACvBvZ,SAAUD,EACVI,MAAO2X,KAGX1X,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAAC+M,EAAD,CACEvN,KAAK,YACLJ,QAAQ,gBACRG,QAAQ,gCACRI,aAAc+X,GACd9X,QAASoN,OAAOC,OAAOiM,iBACvBxZ,SAAUD,EACVI,MAAO8X,IAET7X,EAAAC,EAAAC,cAAC+M,EAAD,CACEvN,KAAK,iBACLJ,QAAQ,OACRG,QAAQ,qCACRI,aAAckY,GACdjY,QAASoN,OAAOC,OAAOkM,oBACvBzZ,SAAUD,EACVI,MAAOiY,KAGXhY,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAACoZ,GAAA,EAAD,CACE5Z,KAAK,oBACL6Z,QAAQ,EACRpZ,UAAWZ,EAAQ0B,OACnBiC,MAAM,mBACNnD,MAAOoX,EAAmBpX,MAC1BH,SAAUuX,EAAmBvX,SAC7B4Z,OAAO,eAERxC,EAAgBjX,MACfC,EAAAC,EAAAC,cAACuZ,GAAA,EAAD,CACEC,QACE1Z,EAAAC,EAAAC,cAACyZ,GAAA,EAAD,CACEC,QAAS5C,EAAgBjX,MACzBH,SAAU,SAAAuP,GAAK,OACb6H,EAAgBpX,SAASuP,EAAMrD,OAAO8N,YAI5C1W,MAAM,2BAGRlD,EAAAC,EAAAC,cAACoZ,GAAA,EAAD,CACE5Z,KAAK,kBACL6Z,QAAQ,EACRpZ,UAAWZ,EAAQ0B,OACnBiC,MAAM,gBACNnD,MAAOqX,EAAiBrX,MACxBH,SAAUwX,EAAiBxX,SAC3B4Z,OAAO,gBAIbxZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAAC2Z,GAAA,EAAD,CACEna,KAAK,oBACLoa,MAAM,EACNP,QAAQ,EACRpZ,UAAWZ,EAAQ0B,OACnBiC,MAAM,oBACNnD,MAAOoX,EAAmBpX,MAC1BH,SAAUuX,EAAmBvX,WAE/BI,EAAAC,EAAAC,cAAC2Z,GAAA,EAAD,CACEna,KAAK,kBACLoa,MAAM,EACNP,QAAQ,EACRpZ,UAAWZ,EAAQ0B,OACnBiC,MAAM,iBACNnD,MAAOqX,EAAiBrX,MACxBH,SAAUwX,EAAiBxX,YAG/BI,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQgN,aACtBvM,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEjE,KAAK,cACLS,UAAWZ,EAAQ0B,OACnBiC,MAAM,cACN4P,WAAW,EACXlT,SAAUD,EACVoT,KAAM,EACNC,QAAS,GACTjT,MAAOyY,OAOjBN,GAAazW,UAAY,CACvBtB,UAAWkB,IAAUG,OACrBjC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,YAEhDwW,GAAanW,aAAe,CAC1B5B,eAAW6B,GAGEE,mBA3MA,CACbqK,YAAa,CACXpK,QAAS,QAEXlB,OAAQ,CACNmB,SAAU,MAsMCF,CAAmBgW,uZCzOlC,IAAM6B,GAAiB,SAAA1a,GAOjB,IANJ8Y,EAMI9Y,EANJ8Y,gBACA1K,EAKIpO,EALJoO,aACA5K,EAIIxD,EAJJwD,SACA1C,EAGId,EAHJc,UACUuN,EAENrO,EAFJsO,SACAyK,EACI/Y,EADJ+Y,eACIvK,EAAAmM,GACsBjM,IAAM5C,UAAS,GADrC,GACG9D,EADHwG,EAAA,GACWG,EADXH,EAAA,GAGEI,EAAc,kBAAMD,GAAQ,IAMlC,OACEhO,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GACdH,EAAAC,EAAAC,cAACgU,GAAA,EAAD,CACEC,oBAAkB,WAClBC,KAAK,QACLC,QAAQ,WACRtF,MAAM,UACNZ,QAdkB,kBAAMH,GAAQ,KAgB/BnL,GAEFwE,GACCrH,EAAAC,EAAAC,cAAC+Z,GAAD,CACEC,cAAezM,EACf0M,oBAAoB,EACpBxM,SApBqB,SAAAR,GAC3BO,EAAaP,GACbc,KAmBM2G,SAAU3G,EACV4G,MAAM,YACNH,YAAY,6DAEZ1U,EAAAC,EAAAC,cAACka,GAAD,CACEjC,gBAAiBA,EACjBC,eAAgBA,OAQ5B2B,GAAetY,UAAY,CACzB0W,gBAAiB9W,IAAUS,QAAQT,IAAU+B,MAAMoR,aACnD/G,aAAcpM,IAAU+B,MAAM4L,WAAetN,WAC7CmB,SAAUxB,IAAU4N,KAAKvN,WACzBvB,UAAWkB,IAAUG,OACrBmM,SAAUtM,IAAUQ,KAAKH,WACzB0W,eAAgB/W,IAAU+B,MAAMiX,YAAoB3Y,YAEtDqY,GAAehY,aAAe,CAC5B5B,eAAW6B,EACXmW,gBAAiB,IAGJ4B,mICtCf,IA6DMO,GAAO,SAAAjb,GAYP,IAXJ8Y,EAWI9Y,EAXJ8Y,gBACAC,EAUI/Y,EAVJ+Y,eACA7Y,EASIF,EATJE,QACAY,EAQId,EARJc,UACAoa,EAOIlb,EAPJkb,sBACAC,EAMInb,EANJmb,wBACA/G,EAKIpU,EALJoU,WACcgH,EAIVpb,EAJJqb,aACAC,EAGItb,EAHJsb,KAGIC,EAAAvb,EAFJsb,KAAQE,EAEJD,EAFIC,OAAQtD,EAEZqD,EAFYrD,YAAaG,EAEzBkD,EAFyBlD,SAAUgB,EAEnCkC,EAFmClC,gBAAiBD,EAEpDmC,EAFoDnC,kBACxDqC,EACIzb,EADJyb,YAEMC,EAAmBF,EACrBF,EACAK,aAAe,CACbR,0BACAD,0BAGApK,EAAO0K,EAjFkB,SAAAtD,GAC/B,OAAQA,GACN,KAAK2B,iBAAc+B,IACjB,OAAOC,KACT,KAAKhC,iBAAciC,MACjB,OAAOC,KACT,KAAKlC,iBAAcmC,SACjB,OAAOC,KACT,KAAKpC,iBAAcqC,IACnB,KAAKrC,iBAAcsC,QACnB,KAAKtC,iBAAcuC,SACjB,OAAOC,KACT,KAAKxC,iBAAcyC,UACnB,KAAKzC,iBAAc0C,OACjB,OAAOC,KACT,KAAK3C,iBAAc4C,YACjB,OAAOV,KACT,KAAKlC,iBAAc6C,MACjB,OAAOC,KACT,KAAK9C,iBAAc+C,KACjB,OAAOC,KACT,KAAKhD,iBAAciD,QACjB,OAAOC,KACT,KAAKlD,iBAAcmD,UACjB,OAAOC,KACT,KAAKpD,iBAAcqD,MACjB,OAAOC,KACT,KAAKtD,iBAAcuD,oBACjB,OAAOC,KACT,KAAKxD,iBAAcyD,KACjB,OAAOC,KACT,KAAK1D,iBAAc2D,KACjB,OAAOC,KACT,KAAK5D,iBAAc6D,OACjB,OAAOC,KACT,KAAK9D,iBAAc+D,iBACjB,OAAOC,KACT,KAAKhE,iBAAciE,QACnB,KAAKjE,iBAAckE,UACnB,QACE,OAAOC,MAyCWC,CAAyB/F,GAAegG,KAExDC,EAAWxd,EAAAC,EAAAC,cAACiQ,EAAD,CAAMhQ,UAAWZ,EAAQmR,OACpC+M,EAAWhK,EACfzT,EAAAC,EAAAC,cAACwd,GAAD,CACEvd,UAAWZ,EAAQoe,kBACnBlQ,aAAcsN,EACd5C,gBAAiBA,EACjBxK,SAAU,SAAAiQ,GAAW,OAAInD,qUAAiBoD,CAAA,GAAKlD,EAASiD,KACxDxF,eAAgBA,GAEfoF,GAGHA,EAGF,OACExd,EAAAC,EAAAC,cAAA,OAAKC,UAAW2d,KAAI3d,EAAWZ,EAAQa,YACpCsX,IAAayB,cAAW4E,cACvB/d,EAAAC,EAAAC,cAAC8d,GAAA/d,EAAD,CAAgBE,UAAWZ,EAAQmR,OAEpC+M,EACA7V,QAAQiT,GAAUC,IACjB9a,EAAAC,EAAAC,cAAA,QAAMC,UAAWZ,EAAQiF,SCvIlB,SAACiU,EAAmBC,GACjC,IAAMuF,EACJrW,QAAQ8Q,IAAoBA,EAAgBwF,qBACxCC,EACJvW,QAAQ6Q,IAAsBA,EAAkByF,qBAClD,OAAID,IAA0BE,EACrBF,EAET,GAAAzV,OAAU2V,EAAV,KAAA3V,OAAqCyV,GDgI5BG,CAAiC3F,EAAmBC,MAO/D4B,GAAK7Y,UAAY,CACf0W,gBAAiB9W,IAAUS,QAAQT,IAAU+B,MAAMoR,aACnDjV,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,WAC9CvB,UAAWkB,IAAUG,OACrB+Y,sBAAuBlZ,IAAUE,OACjCiZ,wBAAyBnZ,IAAUE,OACnCkS,WAAYpS,IAAUO,KACtB8Y,aAAcrZ,IAAUQ,KAAKH,WAC7B0W,eAAgB/W,IAAU+B,MAAMiX,YAAoB3Y,WACpDiZ,KAAMtZ,IAAU+B,MAAM4L,WACtB8L,YAAazZ,IAAUO,MAGzB0Y,GAAKvY,aAAe,CAClBoW,gBAAiB,GACjBhY,eAAW6B,EACXuY,2BAAuBvY,EACvBwY,6BAAyBxY,EACzByR,YAAY,EACZkH,KAAM,GACNG,aAAa,GAGA5Y,mBA5FO,CACpB9B,UAAW,CACT+B,QAAS,gBAEXuO,KAAM,CACJI,YAAa,MACb3O,QAAS,eACT4O,cAAe,eAEjBvM,QAAS,CACPsM,YAAa,OAEf6M,kBAAmB,CACjBxb,QAAS,iBA+EED,CAAmBoY,0BErJ5B+D,GAAc,SAAAhf,GAAA,IAAGc,EAAHd,EAAGc,UAAWZ,EAAdF,EAAcE,QAAd,OAClBS,EAAAC,EAAAC,cAACoe,GAAAre,EAAD,CACEE,UAAW2d,KAAI3d,EAAWZ,EAAQgf,aAClCpK,oBAAkB,aAItBkK,GAAY5c,UAAY,CACtBtB,UAAWkB,IAAUG,OACrBjC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,YAGhD2c,GAAYtc,aAAe,CAAE5B,eAAW6B,GAEzBE,mBAzBA,CACbqc,YAAa,CACXC,OAAQ,OACRC,WAAY,MACZpZ,SAAU,WACVqZ,IAAK,MACLC,UAAW,mBACXxc,QAAS,iBAkBED,CAAmBmc,6HCnBlC,IA8BMO,GAAiB,SAAAvf,GAiBjB,IAAAwf,EAAAC,EAhBJxL,EAgBIjU,EAhBJiU,MAgBIyL,EAAA1f,EAfJiU,MAASsF,GAeLmG,OAAA,IAAAA,EAfiD,GAejDA,GAfKnG,QAAShJ,EAedmP,EAfcnP,cAAeD,EAe7BoP,EAf6BpP,gBACjCqP,EAcI3f,EAdJ2f,UACAzf,EAaIF,EAbJE,QACA0f,EAYI5f,EAZJ4f,YACAC,EAWI7f,EAXJ6f,YACAC,EAUI9f,EAVJ8f,eACA1L,EASIpU,EATJoU,WACA2L,EAQI/f,EARJ+f,WACAC,EAOIhgB,EAPJggB,UACAC,EAMIjgB,EANJigB,mBACAC,EAKIlgB,EALJkgB,qBACc9E,EAIVpb,EAJJqb,aACenH,EAGXlU,EAHJmU,cACA4E,EAEI/Y,EAFJ+Y,eACAlI,EACI7Q,EADJ6Q,aAEMsP,EAA2B/L,IAAe6L,EAC1CG,EAA6BhM,IAAe8L,EAElD,OACEvf,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQa,WACtBJ,EAAAC,EAAAC,cAACwf,GAAD,CACEvH,gBAAiBgH,EACjB3E,wBAAyByE,EACzB1E,sBAAuB3B,EACvBA,QAASA,EACTnF,WAAYA,EACZtT,UAAW2d,KAAIve,EAAQob,MAATkE,EAAA,GAAAc,GAAAd,EACXtf,EAAQqgB,cAAgBP,IAAcE,GAD3BI,GAAAd,EAEXtf,EAAQsgB,QAAUL,GAFPX,IAIdlE,KAAMqE,EAAUpP,GAChBkL,YAAauE,GAAaG,EAC1B9E,aAAcD,EACdrC,eAAgBA,IAElBpY,EAAAC,EAAAC,cAAC4f,GAAD,CACEvgB,QAAS,CAAEgV,SAAUhV,EAAQwgB,oBAC7BtM,WAAYA,EACZD,cAAeD,EACfD,MAAOA,EACPpD,aAAcA,MAEbqP,GAAwBF,IACzBrf,EAAAC,EAAAC,cAACwf,GAAD,CACEvf,UAAW2d,KAAIve,EAAQob,MAATmE,EAAA,GAAAa,GAAAb,EACXvf,EAAQqgB,cAAgBP,IAAcE,GAD3BI,GAAAb,EAEXvf,EAAQsgB,QAAUJ,GAFPX,IAIdnE,KAAMqE,EAAUrP,GAChBwI,gBAAiBgH,EACjB3E,wBAAyB5B,EACzB2B,sBAAuB2E,EACvBzL,WAAYA,IAAe8L,EAC3BzE,YAAauE,GAAaI,EAC1B/E,aAAcD,EACdrC,eAAgBA,IAGnBgH,IACEC,GAAarf,EAAAC,EAAAC,cAAC8f,GAAD,CAAa7f,UAAWZ,EAAQwgB,uBAKtDnB,GAAend,UAAY,CACzBlC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,WAC9C4d,mBAAoBje,IAAUO,KAC9B2d,qBAAsBle,IAAUO,KAChC6R,WAAYpS,IAAUO,KACtBwd,WAAY/d,IAAUO,KACtByd,UAAWhe,IAAUO,KACrBsd,YAAa7d,IAAUE,OACvBmZ,aAAcrZ,IAAUQ,KAAKH,WAC7B8R,cAAenS,IAAUQ,KAAKH,WAC9B0W,eAAgB/W,IAAU+B,MAAMiX,YAAoB3Y,WACpDud,YAAa5d,IAAUE,OACvByd,UAAW3d,IAAUM,SAASN,IAAU+B,MAAM4L,YAAgBtN,WAC9Dyd,eAAgB9d,IAAUS,QAAQT,IAAU+B,MAAMoR,aAClDlB,MAAOjS,IAAU+B,MAAMoR,YAAgB9S,WACvCwO,aAAcW,IAAanP,YAG7Bkd,GAAe7c,aAAe,CAC5Bud,oBAAoB,EACpBC,sBAAsB,EACtB9L,YAAY,EACZ2L,YAAY,EACZC,WAAW,EACXH,YAAa,KACbD,YAAa,KACbE,eAAgB,IAGHjd,mBA9HA,CACb0d,cAAe,GACfxf,UAAW,CACTiF,SAAU,WACV4a,6BAA8B,CAC5BC,WAAY,WAEdC,8BAA+B,CAC7BD,WAAY,YAGhBvC,kBAAmB,CACjBc,WAAY,MACZpZ,SAAU,WACVqZ,IAAK,MACLC,UAAW,mBACXxc,QAAS,eACT+d,WAAY,UAEdH,mBAAoB,CAClBG,WAAY,UAEdvF,KAAM,GAGNkF,QAAS,CACP9Q,MAAO,QAoGI7M,CAAmB0c,ICjIlC,IAYMwB,GAAe,SAAA/gB,GAAA,UACnBE,EADmBF,EACnBE,QACA8f,EAFmBhgB,EAEnBggB,UACe9L,EAHIlU,EAGnBmU,cAHmB,OAKnBxT,EAAAC,EAAAC,cAAA,OAAKC,UAAW2d,QAAI,KAAGve,EAAQ8gB,sBAAsBhB,oGACnDrf,EAAAC,EAAAC,cAAC6T,GAAD,CACEtG,aC5BgB,CACpB+D,UAAW,KACXI,aAAc,ID2BVjE,SAAU4F,GAEVvT,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CACEqF,oBAAkB,WAClBC,KAAK,QACLC,QAAQ,WACRtF,MAAM,WAEN/O,EAAAC,EAAAC,cAAA,oCAGJF,EAAAC,EAAAC,cAAC8f,GAAD,CAAa7f,UAAWZ,EAAQwgB,uBAIpCK,GAAa3e,UAAY,CACvBlC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,WAC9C2d,UAAWhe,IAAUO,KACrB4R,cAAenS,IAAUQ,KAAKH,YAGhC0e,GAAare,aAAe,CAC1Bsd,WAAW,GAGEnd,mBA7CA,CACb6d,mBAAoB,CAClBG,WAAY,UAEdG,mBAAoB,CAClBhb,SAAU,WACV8a,8BAA+B,CAC7BD,WAAY,aAsCHhe,CAAmBke,slCE9BlC,IAAME,GAAeC,6BAAkB,SAAAlhB,GAAA,IAAGwD,EAAHxD,EAAGwD,SAAH,OAAkB7C,EAAAC,EAAAC,cAAA,WAAM2C,KACzD2d,GAAyBC,2BAC7B,SAAAxe,GAAA,IAAGye,EAAHze,EAAGye,gBAAgCnN,EAAnCtR,EAAoBuR,cAAqCmN,EAAzDC,GAAA3e,EAAA,4CACEye,GACE1gB,EAAAC,EAAAC,cAAC2gB,GAADC,GAAA,CAAgBtN,cAAeD,GAAuBoN,MA4BtDI,GAAO,SAAAxa,GAgBP,IAfJhH,EAeIgH,EAfJhH,QACAyhB,EAcIza,EAdJya,cACAvN,EAaIlN,EAbJkN,WACAhI,EAYIlF,EAZJkF,cACcgP,EAWVlU,EAXJmU,aACqBuG,EAUjB1a,EAVJ2a,oBACAlC,EASIzY,EATJyY,UACAmC,EAQI5a,EARJ4a,KAQIC,EAAA7a,EAPJ4a,KAAQE,EAOJD,EAPIC,OAAQvW,EAOZsW,EAPYtW,iBAAkBH,EAO9ByW,EAP8BzW,SAAUH,EAOxC4W,EAPwC5W,SAC5C8W,EAMI/a,EANJ+a,UACAnC,EAKI5Y,EALJ4Y,eACcoC,EAIVhb,EAJJib,aACejO,EAGXhN,EAHJiN,cACAiO,EAEIlb,EAFJkb,UACAvR,EACI3J,EADJ2J,aAEMkP,EAAa3L,EADfxI,EAAAyW,GAE8BvW,oBAAS,GAFvC,GAEGkU,EAFHpU,EAAA,GAEc0W,EAFd1W,EAAA,GAAA2W,EAAAF,GAGoDvW,mBACtDgU,EAAepZ,QAJb,GAGG8b,EAHHD,EAAA,GAGyBE,EAHzBF,EAAA,GAoBEG,EAA0B3C,EAC5BoB,GACA5B,GASEoD,GAPwBvO,EjBhGR,SAACpQ,EAAOuC,GAAR,IAAc1E,EAAd4E,UAAAC,OAAA,QAAA/D,IAAA8D,UAAA,GAAAA,UAAA,GAAsBzC,EAAM0C,OAA5B,SAAAyC,OAAAyZ,GACnB5e,EAAM6e,MAAM,EAAGhhB,IADI,CAEtB0E,GAFsBqc,GAGnB5e,EAAM6e,MAAMhhB,KiB+FXihB,CACEhD,EACA,CAAEiD,yBAAyB,GAC3BP,GAJF1C,GAMqChe,IAAI,SAACmS,EAAO+O,GAAiB,IAC5DD,EAAqC9O,EAArC8O,wBAAyBxJ,EAAYtF,EAAZsF,QACjC,GAAIwJ,EACF,OACEpiB,EAAAC,EAAAC,cAACsgB,GAAD,CACExf,IAAI,eACJE,MAAOmhB,EACP3B,gBACE1gB,EAAAC,EAAAC,cAACoiB,GAAD,CACEjD,UAAWA,EACX7L,cAAe,SAAA+O,GAAQ,OACrBhP,EAAkBgP,EAAU,CAC1BC,kBAAmBX,EACnBY,WAAYtD,EACZkC,gBAdsD,IAAAqB,EAAAhB,GA5D5C,SAACvC,EAAgBkD,EAAcM,GACzD,IAAMC,EACJP,EAAe,GAAKA,EAAeM,EAAgB,EAAI,GACnDE,EACJR,EAAe,GAAKA,EAAe,EAAIM,EAAgB,EAAI,GAM7D,MAAO,CALWC,GAAkB,EAAIzD,EAAeyD,GAAkB,KAEvEC,EAAiB1D,EAAepZ,OAC5BoZ,EAAe0D,GACf,MAyE2BC,CAC7B3D,EACAkD,EACAR,GAzBkE,GAsB7DpS,EAtB6DiT,EAAA,GAsBlDhT,EAtBkDgT,EAAA,GA2BnDzD,GAAgBxP,GAAa,IAAtCmJ,QACSsG,GAAgBxP,GAAa,IAAtCkJ,QACR,OACE5Y,EAAAC,EAAAC,cAAC6hB,EAAD,CACE7gB,MAAOmhB,EACP/C,mBAAoB9P,GAA6BC,EAAW6D,GAC5DiM,qBAAsB/P,GAA6B8D,EAAO5D,GAC1D+D,WAAYA,EACZ2L,WAAYA,EACZC,UAAWA,EACXre,IAAK4X,EACLsG,YAAaA,EACbxE,aAAcD,EACdjH,cAAeD,EACf6E,eAAgB3M,EAAcX,GAC9BmU,YAAaA,EACbD,UAAWA,EACXG,eAAgBA,EAChB7L,MAAOA,EACPpD,aAAcA,MAKd6S,EAAqB3D,EACzBpf,EAAAC,EAAAC,cAACogB,GAAD,CACE0C,UA9EkB,SAACpZ,EAAMuF,GAC3BwS,GAAa,GADwB,IAE7BsB,EAAuBrZ,EAAvBqZ,SAAUC,EAAatZ,EAAbsZ,SACdD,IAAapB,EACfC,EAAwBoB,GAExBjC,EAAwB9R,EAAO,CAC7B8T,SAAUA,EAAWpB,EAAuBoB,EAAW,EAAIA,EAC3DC,SAAUA,EAAWrB,EAAuBqB,EAAW,EAAIA,EAC3DT,WAAYtD,KAsEdgE,kBAAmBjU,GACnBkU,sBAAuB,kBAAMzB,GAAa,IAC1C0B,SAAS,IACTC,sBAAsB,GAErBtB,GAGHhiB,EAAAC,EAAAC,cAAA,WAAM8hB,GAGFuB,EACJvjB,EAAAC,EAAAC,cAACsjB,GAAD,CACEzT,SAAUtE,EAAcX,GACxBqF,KAAMsT,KACNvT,aAAcA,IAIZwT,EACJ1jB,EAAAC,EAAAC,cAACyjB,GAAD,CACElW,aAAc0T,EACdxT,SAAU,SAAAiW,GAAW,OAAIrC,qUAAiBsC,CAAA,GAAK1C,EAASyC,MAExD5jB,EAAAC,EAAAC,cAACgU,GAAA,EAAD,CACEC,oBAAkB,WAClBC,KAAK,QACLC,QAAQ,WACRtF,MAAM,WAEN/O,EAAAC,EAAAC,cAACoU,GAAArU,EAAD,CAAUE,UAAWZ,EAAQwgB,uBAK7B+D,EAAY3E,EAAeA,EAAepZ,OAAS,GACnDge,EAAkB5E,EAAeA,EAAepZ,OAAS,GAzH3DoG,EA2HF2X,GAAa,GADUE,EA1HrB7X,EA0HIwD,gBAA0CsU,EA1H9C9X,EA0HqCyM,QAGnCsL,EAAe1Z,IAAaP,cAAWI,WACvC8Z,EAAmBD,EAAe,KACtClkB,EAAAC,EAAAC,cAACwf,GAAD,CACEvH,gBAAiBgH,EACjB3E,wBAAyByJ,EACzBxQ,WAAYA,EACZiH,aAAcD,EACdrC,eAAgB3M,EAAcX,GAC9B6P,KAAMqE,EAAUgF,GAChBlJ,YACEuE,GAAa7P,GAA6BuU,EAAiBD,KAK3DM,EAAWjF,EAAekF,KAC9B,SAAAxR,GAAsD,IAAnDjB,EAAmDiB,EAAnDjB,aAAchC,EAAqCiD,EAArCjD,cAAeD,EAAsBkD,EAAtBlD,gBAC9B,GAAIiC,EACF,OAAO,EAIT,IADEoN,EAAUpP,IAAkB,IADtB4I,YAGN,OAAO,EAP2C,IAS/B8L,GACnBtF,EAAUrP,IAAoB,IADxB6I,YAER,OAAO5Q,QAAQ0c,KAGnB,OACEtkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACEhD,EAAAC,EAAAC,cAAA,MAAIC,UAAWZ,EAAQa,WAAvB,GAAAoI,OACM8Y,EAAY,EADlB,MAAA9Y,OACwB+b,aACpBpF,EACA6B,EACAvV,EAAcX,IACZW,EAAcX,GAAkB0Z,UAClC7Z,IAED8I,GAAciQ,GAEhBH,EACAR,GACCmB,GACAlkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACGmhB,EACAZ,GAGJa,GACCpkB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CAAMC,GAAImR,EAAUlR,MAAM,CAAEkU,UAAWhU,OAAO4Q,MAA9C,cAQVN,GAAKtf,UAAY,CACflC,QAAS8B,IAAUM,SAASN,IAAUG,QAAQE,WAC9C4f,UAAWjgB,IAAUE,OAAOG,WAC5B+R,WAAYpS,IAAUO,KACtB6J,cAAepK,IAAUM,SAASN,IAAU+B,MAAMuN,aAC/CjP,WACHgZ,aAAcrZ,IAAUQ,KAAKH,WAC7B8f,aAAcngB,IAAUQ,KAAKH,WAC7Bwf,oBAAqB7f,IAAUQ,KAAKH,WACpCsd,UAAW3d,IAAUM,SAASN,IAAU+B,MAAM4L,YAAgBtN,WAC9Dyf,KAAM9f,IAAU+B,MAAMshB,YAAehjB,WACrCyd,eAAgB9d,IAAUS,QAAQT,IAAU+B,MAAMoR,aAClDiN,UAAW5Q,IAAanP,WACxBwO,aAAcW,IAAanP,YAG7Bqf,GAAKhf,aAAe,CAClBqd,YAAY,EACZD,eAAgB,IAGHjd,mBAtPA,CACb9B,UAAW,CACT+f,8BAA+B,CAC7BD,WAAY,YAGhBH,mBAAoB,CAClBG,WAAY,WA+ODhe,CAAmB6e,mcCpRlC,ICDiC4D,MDC3BC,ICD2BD,GDCO,CACtCE,cAAe,SAAAxlB,GAAA,OAAAA,EAAGylB,cCFFD,cAAkC,SAAA5iB,GAA2B,IAAxBf,EAAwBe,EAAxBf,MAAOuhB,EAAiBxgB,EAAjBwgB,WAC5D,IAAKA,EAAW1c,OACd,OAHkB,IAKpB,GAAI7E,GAAS,EACX,OAAOyjB,GAAalC,EAAW,IAAM,EAEvC,GAAIvhB,GAASuhB,EAAW1c,OAAS,EAC/B,OAAO4e,GAAalC,EAAWA,EAAW1c,OAAS,IAAM,EAE3D,IAAMgf,EAAYJ,GAAalC,EAAWvhB,EAAQ,IAC5C8jB,EAAYL,GAAalC,EAAWvhB,IAE1C,OAAQ6jB,EAAYC,GAAa,GADZC,KAAKC,SAAW,KAAQF,EAAYD,GAAc,6HCczE,IAAMI,GAAoCC,YACxCC,MAGIC,GAAY,SAAAjmB,GAaZ,IAXmBkmB,EAWnBlmB,EAZJmmB,MACEC,OAAUC,UAEZC,EASItmB,EATJsmB,gBASIC,EAAAvmB,EARJwmB,UAQIC,GAAAF,OAAA,IAAAA,EARkC,GAQlCA,GARShc,KAAMmc,OAQf,IAAAD,EAR2B,GAQ3BA,EAAAE,EAAA3mB,EAPJ4mB,WAOIC,GAAAF,OAAA,IAAAA,EAPoC,GAOpCA,GAPUpc,KAAMuc,OAOhB,IAAAD,EAP6B,GAO7BA,EANJlF,EAMI3hB,EANJ2hB,cACAvV,EAKIpM,EALJoM,cACA2a,EAII/mB,EAJJ+mB,WACApH,EAGI3f,EAHJ2f,UACAjW,EAEI1J,EAFJ0J,QACAsd,EACIhnB,EADJgnB,kBACIC,EAIAC,cAFFC,EAFEF,EAEFE,gBACWC,EAHTH,EAGFZ,UAGIjS,EACJ+S,GAAmBC,IAA2BlB,EAE1CtE,EAA0BrV,sBAC9B,SAACuD,EAADlN,GAA+C,IAArCghB,EAAqChhB,EAArCghB,SAAUC,EAA2BjhB,EAA3BihB,SAAUT,EAAiBxgB,EAAjBwgB,WACxBQ,IAAaC,GACfna,EFlDyB,SAAA9G,GAAA,IAAGghB,EAAHhhB,EAAGghB,SAAUC,EAAbjhB,EAAaihB,SAAUT,EAAvBxgB,EAAuBwgB,WAAvB,MAAyC,CACxE5Z,OAAQ,wBACRD,UAAW,SACXM,MAAO,CACLrI,GAAI4hB,EAAWQ,GAAUrK,QACzB8N,KAAM,CACJ5B,YAAaF,GAAU,CAAE1jB,MAAOgiB,EAAUT,kBE4ChCkE,CAAkB,CAAE1D,WAAUC,WAAUT,iBAGpD,CAAC1Z,IAGG0R,EAAmB7O,sBACvB,SAAA+O,GAAI,OACF5R,EF/CoB,SAAAxC,GAAA,IAAGoU,EAAHpU,EAAGoU,KAAH,MAAiC,CACzD9R,OAAQ,yBACRD,UAAW,QACXM,MAAO,CACLrI,GAJsB0F,EAASoU,KAAQE,OAKvC6L,KAAM/L,IE2CFiM,CAAW,CACTjM,WAGN,CAAC5R,IAGGwY,EAAmB3V,sBACvB,SAAAuV,GAAI,OACFpY,EFhDoB,SAAA/B,GAAA,IAAGma,EAAHna,EAAGma,KAAH,MAAiC,CACzDtY,OAAQ,yBACRD,UAAW,QACXM,MAAO,CACLrI,GAJsBmG,EAASma,KAAQE,OAKvCqF,KAAMvF,IE4CF0F,CAAW,CACT1F,UAEF2F,KAAK,kBAAMT,EAAkB,CAAExd,OAAQ,uBAC3C,CAACE,IAGGwK,EAAoB3H,sBACxB,SAAC0H,GAAD,IAAA/M,EAAAT,UAAAC,OAAA,QAAA/D,IAAA8D,UAAA,GAAAA,UAAA,GAAoD,GAA1C0c,EAAVjc,EAAUic,kBAAmBC,EAA7Blc,EAA6Bkc,WAAYpB,EAAzC9a,EAAyC8a,OAAzC,OACEtY,EFjDqB,SAAAiD,GAAA,IACzBsH,EADyBtH,EACzBsH,MACSsF,EAFgB5M,EAEzBsH,MAASsF,QACTyI,EAHyBrV,EAGzBqV,OACAmB,EAJyBxW,EAIzBwW,kBACAC,EALyBzW,EAKzByW,WALyB,MAMpB,CACL5Z,OAAQ,yBACRD,UAAW,SACXM,MAAO,CACLrI,GAAI+X,EACJ8N,KAAMK,GAAA,GACDzT,EADD,CAEF+N,SACAyD,YACEtC,GAA2C,IAAtBA,EACjBoC,GAAU,CAAE1jB,MAAOshB,EAAmBC,oBACtCzgB,MEiCJglB,CAAY,CACV1T,QACA+N,SACAmB,oBACAC,gBAEFqE,KAAK,kBAAMT,EAAkB,CAAExd,OAAQ,wBAC3C,CAACE,IAMGke,EAAcC,kBAClB,kBACElnB,EAAAC,EAAAC,cAACyjB,GAAD,CACElW,aCrGc,CACpBjD,SAAU,MDqGJmD,SAAU4T,GAEVvhB,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAQsF,KAAK,QAAQC,QAAQ,WAAWtF,MAAM,WAA9C,sBAKJ,CAACwS,IAEH,GAAIoE,IAAoBI,EAAUhgB,OAChC,OACE/F,EAAAC,EAAAC,cAACinB,EAAA,EAAD,CAAeC,uBAAuB,GAAQH,GAIlD,IAAMI,EAAuBlC,GAAkCgB,GAC/D,OACEnmB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACGyQ,GAAcwT,EACdlB,EAAU5kB,IAAI,SAACggB,EAAMG,GAAc,IAC1BD,EAAWF,EAAXE,OACR,OACErhB,EAAAC,EAAAC,cAAA,OAAKc,IAAKqgB,GACRrhB,EAAAC,EAAAC,cAAConB,GAAD,CACE7b,cAAeA,EACfuV,cAAeA,EACftG,aAAcD,EACd+G,aAAcD,EACd/N,cAAeD,EACf2N,oBAAqBD,EACrBjC,UAAWA,EACXmC,KAAMA,EACNG,UAAWA,EACXnC,eAAgBkI,EAAqBhG,GACrC5N,WAAYA,EACZgO,UAAW2E,EAAWmB,OAAOC,UAC7BtX,aAAckW,EAAWmB,OAAOrX,oBAS9CoV,GAAU7jB,UAAY,CACpB+jB,MAAOnkB,IAAU+B,MAAM,CACrBqiB,OAAQpkB,IAAU+B,MAAM,CACtBsiB,UAAWrkB,IAAUG,OAAOE,aAC3BA,aACFA,WACH0kB,WAAYqB,IAAerB,WAAW1kB,WACtCqH,QAAS1H,IAAUQ,KAAKH,WACxBikB,gBAAiBtkB,IAAUO,KAAKF,WAChCgmB,MAAOrmB,IAAU+B,MAAM,CACrBwG,KAAMvI,IAAUS,QAAQT,IAAU+B,MAAMshB,eACvChjB,WACHimB,OAAQtmB,IAAU+B,MAAM,CACtBwG,KAAMvI,IAAUS,QAAQT,IAAU+B,MAAMoR,eACvC9S,WACHsd,UAAW3d,IAAUM,SAASN,IAAU+B,MAAMwkB,YAAiBlmB,WAC/D+J,cAAepK,IAAUM,SAASN,IAAU+B,MAAMiX,aAC/C3Y,YAWU0L,cACbya,IACAC,YAAc,CACZjf,OAAQ,YACRkf,gBAZoB,SAAArf,GAAK,MAAK,CAChCsY,cAAe1T,YAAW5E,EAAO,aACjC+C,cAAe6B,YAAW5E,EAAO,aACjCsW,UAAW1R,YAAW5E,EAAO,SAC7Bid,gBAAiBqC,YAAsBtf,EAAO,uBAC3Cuf,aAQDC,oBAAkBC,GAAA,GAAAC,GAAAD,GACfE,IAAYC,OAAOC,WAAY,GADhBH,GAAAD,GAEfE,IAAYG,KAAKC,OAAQ,GAFVL,GAAAD,GAGfE,IAAYG,KAAKE,WAAY,GAHdN,GAAAD,GAIfE,IAAYG,KAAKG,QAAS,GAJXP,GAAAD,GAKfE,IAAYG,KAAKI,OAAQ,GALVT,MALP/a,CAabkY,mEEvLWuD,EAAa,SAAAC,GAAS,OAAI,SAAAnI,GAAS,IAAAoI,EACgBpI,EAAtDqI,UADsCC,GAAAF,OAAA,IAAAA,EACS,GADTA,GACzBG,iBADyB,IAAAD,KACPE,EADOJ,EACPI,YACvC,OAAID,IAAcC,EACTnpB,EAAAC,EAAAC,cAACkpB,EAAA,EAAD,MAEFppB,EAAAC,EAAAC,cAAC4oB,EAAcnI,cCJT0I,EAAA,qBAAAC,EAAAxjB,UAAAC,OAAIwjB,EAAJ,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAIF,EAAJE,GAAA3jB,UAAA2jB,GAAA,OAAwB,SAAAC,GAAmB,OAH1C,mBAAAC,EAAA7jB,UAAAC,OAAI6jB,EAAJ,IAAAJ,MAAAG,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAID,EAAJC,GAAA/jB,UAAA+jB,GAAA,OAAmB,SAAAC,GAAG,OACpCF,EAAWG,YAAY,SAACC,EAAUnoB,GAAX,OAAoBA,EAAKmoB,IAAWF,IAG3D1c,CACE6c,IAAOC,WAAP,EAAWX,GACXV,EAFFzb,CAGEsc,uCCVJ,IAAAS,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAE,EAAAI,GAAAE,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,KAQMjD,EAAgB,SAAA9nB,GAMhB,IALJwD,EAKIxD,EALJwD,SAEuB0iB,EAGnBlmB,EAJJmmB,MACEC,OAAUC,UAGRqF,EAAA1rB,EADJ+mB,WACI4E,GAAAD,OAAA,IAAAA,EADgD,GAChDA,GADUxD,OAAiB0D,GAC3BD,OAAA,IAAAA,EADyC,GACzCA,GADoBtD,MAELjB,EAA2BF,cAAtCb,UACR,GAAIH,IAAqBkB,EACvB,OACE4D,EAAApqB,EAAAC,cAAA,yEAGJ,IAAMgrB,EAAUtf,sBACd,kBACEye,EAAApqB,EAAAC,cAAA,WACEmqB,EAAApqB,EAAAC,cAAA,uJAIC2C,IAGL,CAACA,IAEH,OACEwnB,EAAApqB,EAAAC,cAACuqB,EAAA,EAAD,KACEJ,EAAApqB,EAAAC,cAACuqB,EAAA,EAAD,CACEU,KAAMF,EAAU1a,MAAM,CAAEmV,UAAWe,IACnCnmB,UAAW4qB,IAEbb,EAAApqB,EAAAC,cAACuqB,EAAA,EAAD,CAAUna,GAAI2a,EAAU1a,MAAM,CAAEmV,UAAWe,QAKjDU,EAAc1lB,UAAY,CACxBoB,SAAUxB,IAAU4N,KACpBuW,MAAOnkB,IAAU+B,MAAM,CACrBqiB,OAAQpkB,IAAU+B,MAAM,CAAEsiB,UAAWrkB,IAAUG,WAC9CE,WACH0kB,WAAY/kB,IAAU+B,MAAM,CAC1BmkB,OAAQlmB,IAAU+B,MAAM,CAAEskB,MAAOrmB,IAAU+pB,WAAWC,SACrD3pB,YAGLylB,EAAcplB,aAAe,CAC3Bc,SAAU,MAGGuK,QACbke,IACAzD,IAFaza,CAGb+Z,yIC7DFiD,EAAAmB,EAAAlC,EAAA,sBAAAhB,IAOO,IAAMA,EAAc,CACzBC,OAAQ,CACNC,UAAW,oBAEbC,KAAM,CACJC,MAAO,aACPC,UAAW,iBACXC,OAAQ,cACRC,MAAO,eAIIS,EAAA,WAAAhqB,GAAA,IACbwJ,EADaxJ,EACbwJ,OACAkf,EAFa1oB,EAEb0oB,gBACoByD,EAHPnsB,EAGb6oB,mBAHa,OAIT,SAAAY,GACJ,IAsFM2C,EAAuBre,IAC3Bke,IACA7iB,YAxF6B,SAACC,EAAOiY,GAAU,IAE7CK,EAIEL,EAJFK,cAEY0E,EAEV/E,EAHF6E,MACEC,OAAUC,UAGRgG,EC5BwB,SAAChjB,EAAOG,GAGxC,OADE8iB,YAAkBjjB,EAAD,GAAAF,OAAWK,EAAX,gBAAkC,IAD7Ce,KD2BegiB,CAAmBljB,EAAOG,GAEzCqf,EAAqB2D,IAAWL,GAClCA,EAA6B9iB,EAAOiY,GACpC6K,EAEEziB,EAAU,GAehB,GAdImf,EAAmBG,EAAYC,OAAOC,aACxCxf,EAAQ+iB,UAAY,CAClBljB,UAAW,YACXmjB,WAAY/K,IAAkB9T,OAAO8e,KAAKhL,GAAejb,OACzDmD,MAAO,CAAEhB,WAAY,CAAE+jB,YAAY,MAGnC/D,EAAmBG,EAAYG,KAAKC,SACtC1f,EAAQ8c,UAAY,CAClBjd,UAAW,QACXK,QAASyc,EACTxc,MAAO,CAAEwc,YAAWxd,WAAY,CAAE+jB,YAAY,MAG9C/D,EAAmBG,EAAYG,KAAKE,WAAY,KAAAwD,EC3CtB,SAACxjB,EAAOgjB,GACxC,IAAMS,EAAY7e,YAAW5E,EAAO,SAC9B+C,EAAgB6B,YAAW5E,EAAO,aAElC0jB,EAAuBV,EACzBW,IACEX,EAAaY,OAAO,SAACC,EAAMlL,GACzB,IAAMF,EAAOgL,EAAU9K,GACvB,GAAIF,EAAM,KACArW,EAAqBqW,EAArBrW,iBACJA,GACFyhB,EAAKC,KAAK1hB,GAGd,OAAOyhB,GACN,KAEL,GACEE,EAAsBL,EAAqBnpB,OAC/C,SAAAypB,GAAkB,OAAKjhB,EAAcihB,KAEvC,MAAO,CAAEN,uBAAsBK,uBDuB2BE,CACpDjkB,EACAgjB,GAFMU,EAD0CF,EAC1CE,qBAAsBK,EADoBP,EACpBO,oBAK9B1jB,EAAQ6jB,cAAgB,CACtBhkB,UAAW,YACXK,QAASmjB,EACTL,UAAWU,EAAoB1mB,OAC/BmD,MAAO,CACLjG,OAAQ,CAAEpC,GAAI,CAAE0H,WAAY,KAAMxI,MAAO0sB,IACzCvkB,WAAY,CAAE+jB,YAAY,KAIhC,GAAI/D,EAAmBG,EAAYG,KAAKG,QAAS,KACvCkE,EAAS3E,EAAmBG,EAAYG,KAAKG,QAA7CkE,KACFC,EAAaC,SACjB,UAAUC,KAAKvc,OAAOoc,IAASA,OAAO7qB,EACtC,IAEF+G,EAAQkd,WAAa,CACnBrd,UAAW,SACXK,QAAS,CAAEyiB,eAAcmB,QACzBd,UAAWL,GAAgBA,EAAa3lB,OACxCmD,MAAO,CACLjG,OAAQ,CACNgqB,QAAS,CAAE1kB,WAAY,KAAMxI,MAAO2rB,GACpCwB,oBAAqBJ,EACjB,CAAEvkB,WAAY,KAAMxI,MAAK,GAAAyI,OAAKskB,EAAL,gBACzB9qB,EACJmrB,kBAAmBL,EACf,CAAEvkB,WAAY,IAAKxI,MAAK,GAAAyI,OAAKskB,EAAa,EAAlB,gBACxB9qB,GAENkG,WAAY,CAAE+jB,YAAY,KAgBhC,OAZI/D,EAAmBG,EAAYG,KAAKI,SACtC7f,EAAQqkB,UAAY,CAClBxkB,UAAW,QACXK,QAASyiB,EACTK,UAAWL,GAAgBA,EAAa3lB,OACxCmD,MAAO,CACLjG,OAAQ,CAAEgqB,QAAS,CAAE1kB,WAAY,KAAMxI,MAAO2rB,IAC9CxjB,WAAY,CAAE+jB,YAAY,MAKzB,CACLpjB,SACAE,YAMoCgf,GAFX3a,CAG3B0b,GAEF,OAAO,SAAAnI,GAAK,OAAI3gB,EAAAC,EAAAC,cAACurB,EAAyB9K,kGEjH7B0M,EAAA,SAAChqB,EAADhE,GAA4C,IAAlCiuB,EAAkCjuB,EAAlCiuB,UAAkCC,EAAAluB,EAAvBmuB,iBAAuB,IAAAD,EAAX,KAAWA,EACnDE,EAAYpB,IAAKhpB,GACjBqqB,EAASD,EAAUvL,MAAM,EAAGoL,GAAWtgB,KAAKwgB,GAClD,OAAIC,EAAU1nB,OAASunB,EACrB,GAAA9kB,OAAUklB,EAAV,OAEKA,YCJMnJ,EAAA,SAACpF,EAAgB6B,EAAe2M,EAAiBC,GAC9D,IAAKzO,EAAepZ,OAClB,OAAO6nB,EAET,IAAMC,EAAoB3gB,OAAO8e,KAC/B8B,IACE3O,EAAelc,OACb,SAAA5D,GAAA,OAAAA,EAAGmS,YAA8BL,cAAYC,UAE/C,cAGJ,OAAiC,IAA7Byc,EAAkB9nB,OAElBsnB,EAAgBlO,EAAehe,IAAI,SAAAc,GAAA,OAAAA,EAAGqK,eAAkC,CACtEghB,UAAW,KACPM,EAIRP,EACEQ,EACG1sB,IACC,SAAAqjB,GAAS,OACPuJ,OAAOvJ,KAAemJ,GACtB3M,EAAcwD,IACdxD,EAAcwD,GAAW1X,cAE5B7J,OAAO2E,SACV,CAAE0lB,UAAW,KACVM,GClCTxD,EAAAmB,EAAAlC,EAAA,sBAAA2E,IAAA5D,EAAAmB,EAAAlC,EAAA,sBAAA4E,IAAA7D,EAAAmB,EAAAlC,EAAA,sBAAA9E,IAKO,IAAMyJ,EAAoB,SAAA7H,GAAU,OACzCA,EAAW+H,KACT,SAAA7uB,EAAA4C,GAAA,OAAA5C,EAAGylB,YAAH7iB,EAAkC6iB,eAIzBO,EAA4B,SAAAc,GAAU,OACjDgI,IAAUL,IAAQ3H,EAAY,UAAW6H,kTCJpC,IAAMlW,GAAkBsW,EAAAC,EAAA,GAC5BjV,eAAakV,QAAU,UADKF,EAAAC,EAE5BjV,eAAamV,QAAU,WAFKH,EAAAC,EAG5BjV,eAAajP,SAAW,UAHIikB,EAAAC,EAI5BjV,eAAaoV,MAAQ,UAJOJ,EAAAC,EAK5BjV,eAAaqV,QAAU,WALKJ,GAQlBpW,GAAqBmW,EAAAM,EAAA,GAC/BrV,kBAAgBsV,UAAY,YADGP,EAAAM,EAE/BrV,kBAAgBuV,MAAQ,YAFOR,EAAAM,EAG/BrV,kBAAgBwV,OAAS,YAHMH,GAMrB/W,GAAgByW,EAAAU,EAAA,GAC1B3V,aAAW4V,WAAa,2BADEX,EAAAU,EAE1B3V,aAAW6V,UAAY,mBAFGZ,EAAAU,EAG1B3V,aAAW8V,QAAU,kBAHKb,EAAAU,EAI1B3V,aAAW+V,KAAO,OAJQd,EAAAU,EAK1B3V,aAAWgW,QAAU,uBALKf,EAAAU,EAM1B3V,aAAW4E,aAAe,YANAqQ,EAAAU,EAO1B3V,aAAWiW,SAAW,uBAPIN,GAUhBtX,GAAa4W,EAAAiB,EAAA,GACvBnW,gBAAc+B,IAAM,cADGmT,EAAAiB,EAEvBnW,gBAAciC,MAAQ,SAFCiT,EAAAiB,EAGvBnW,gBAAcmC,SAAW,WAHF+S,EAAAiB,EAIvBnW,gBAAcqC,IAAM,WAJG6S,EAAAiB,EAKvBnW,gBAAcyC,UAAY,kBALHyS,EAAAiB,EAMvBnW,gBAAc4C,YAAc,cANLsS,EAAAiB,EAOvBnW,gBAAc6C,MAAQ,SAPCqS,EAAAiB,EAQvBnW,gBAAc+C,KAAO,aAREmS,EAAAiB,EASvBnW,gBAAciD,QAAU,UATDiS,EAAAiB,EAUvBnW,gBAAciE,QAAU,mBAVDiR,EAAAiB,EAWvBnW,gBAAckE,UAAY,aAXHgR,EAAAiB,EAYvBnW,gBAAcmD,UAAY,YAZH+R,EAAAiB,EAavBnW,gBAAcqD,MAAQ,YAbC6R,EAAAiB,EAcvBnW,gBAAcuD,oBAAsB,YAdb2R,EAAAiB,EAevBnW,gBAAcyD,KAAO,WAfEyR,EAAAiB,EAgBvBnW,gBAAcsC,QAAU,cAhBD4S,EAAAiB,EAiBvBnW,gBAAc2D,KAAO,SAjBEuR,EAAAiB,EAkBvBnW,gBAAcuC,SAAW,yBAlBF2S,EAAAiB,EAmBvBnW,gBAAc0C,OAAS,oBAnBAwS,EAAAiB,EAoBvBnW,gBAAc6D,OAAS,SApBAqR,EAAAiB,EAqBvBnW,gBAAc+D,iBAAmB,0BArBVoS","file":"travel-Trips-2ed110b4381ee9532e7e.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    flexGrow: '1',\n    flexBasis: '0',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  name,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      name={name}\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n    >\n      {hasNullOption && (\n        <MenuItem key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nconst valuePropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\nOptionsSelect.propTypes = {\n  name: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  hasNullOption: PropTypes.bool,\n  inputId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionRender: PropTypes.func,\n  options: PropTypes.arrayOf(valuePropTypes),\n  value: valuePropTypes,\n};\n\nOptionsSelect.defaultProps = {\n  name: undefined,\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DefaultSuggestionResolver = ({\n  inputValue,\n  sourceProps: { suggestions = [] } = {},\n  children: renderProp,\n}) => {\n  const lowerCaseInputValue = inputValue.toLowerCase();\n  return (\n    <React.Fragment>\n      {renderProp(\n        suggestions.filter(({ label }) =>\n          label.toLowerCase().includes(lowerCaseInputValue),\n        ),\n      )}\n    </React.Fragment>\n  );\n};\n\nDefaultSuggestionResolver.propTypes = {\n  inputValue: PropTypes.string.isRequired,\n  sourceProps: PropTypes.shape({\n    // eslint-disable-next-line react/forbid-prop-types\n    suggestions: PropTypes.array,\n  }).isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default DefaultSuggestionResolver;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default ({ inputProps, classes, ref, ...other }) => (\n  <TextField\n    InputProps={{\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput,\n      },\n      ...inputProps,\n    }}\n    {...other}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst DefaultSuggestionRender = ({\n  itemProps,\n  isHighlighted,\n  isSelected,\n  children: { label, details },\n}) => (\n  <MenuItem\n    {...itemProps}\n    selected={isHighlighted}\n    component=\"div\"\n    style={{\n      fontWeight: isSelected ? 500 : 400,\n    }}\n  >\n    <ListItemText primary={label} secondary={details} />\n  </MenuItem>\n);\n\nDefaultSuggestionRender.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  itemProps: PropTypes.object,\n  isHighlighted: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n};\n\nDefaultSuggestionRender.defaultProps = {\n  itemProps: undefined,\n  isHighlighted: false,\n  isSelected: false,\n};\n\nexport default DefaultSuggestionRender;\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport DefaultSuggestionsResolver from './components/DefaultSuggestionsResolver';\nimport DefaultInputRender from './components/DefaultInputRender';\nimport DefaultSuggestionRender from './components/DefaultSuggestionRender';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\nexport const createSuggestComponent = ({\n  SuggestionsResolver = DefaultSuggestionsResolver,\n  SuggestionItemComponent = DefaultSuggestionRender,\n  InputComponent = DefaultInputRender,\n} = {}) => ({\n  classes: customClasses,\n  sourceProps,\n  inputProps,\n  inputFieldProps,\n  ...downshiftProps\n}) => {\n  const classes = { ...useStyles(), ...customClasses };\n  return (\n    <div className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <InputComponent\n              fullWidth={true}\n              classes={classes}\n              inputProps={getInputProps(inputProps)}\n              {...inputFieldProps}\n            />\n            <div {...getMenuProps()}>\n              {isOpen && (\n                <Paper className={classes.paper} square={true}>\n                  <SuggestionsResolver\n                    inputValue={inputValue}\n                    sourceProps={sourceProps}\n                  >\n                    {resolvedSuggestions =>\n                      resolvedSuggestions.map((suggestion, index) => (\n                        <SuggestionItemComponent\n                          key={suggestion.label}\n                          itemProps={getItemProps({\n                            item: suggestion,\n                          })}\n                          isHighlighted={highlightedIndex === index}\n                          isSelected={\n                            Boolean(selectedItem) &&\n                            selectedItem.label === suggestion.label\n                          }\n                        >\n                          {suggestion}\n                        </SuggestionItemComponent>\n                      ))\n                    }\n                  </SuggestionsResolver>\n                </Paper>\n              )}\n            </div>\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n};\n\nexport default createSuggestComponent();\n/*\nconst x = (\n  <FetchContacts\n    searchValue={inputValue}\n    omitContacts={selectedContacts}\n    onLoaded={({ contacts }) => {\n      clearItems();\n      if (contacts) {\n        setHighlightedIndex(contacts.length ? 0 : null);\n        setItemCount(contacts.length);\n      }\n    }}\n  >\n    {({ loading, contacts, error }) => (\n      <div\n        {...css({\n          position: 'absolute',\n          backgroundColor: 'white',\n          width: 300,\n          maxHeight: 280,\n          overflow: 'scroll',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n          border: '1px solid rgba(0,0,0,.2)',\n        })}\n      >\n        {loading ? (\n          <div {...css({ padding: 10 })}>loading...</div>\n        ) : error ? (\n          <div {...css({ padding: 10 })}>error...</div>\n        ) : contacts.length ? (\n          <ContactList\n            highlightedIndex={highlightedIndex}\n            getItemProps={getItemProps}\n            contacts={contacts}\n          />\n        ) : (\n          <div {...css({ padding: 10 })}>no results...</div>\n        )}\n      </div>\n    )}\n  </FetchContacts>\n);\n\nclass FetchContacts extends React.Component {\n  static initialState = { loading: false, error: null, contacts: [] };\n  requestId = 0;\n  state = FetchContacts.initialState;\n  mounted = false;\n  reset(overrides) {\n    this.setState({ ...FetchContacts.initialState, ...overrides });\n  }\n  fetch = debounce(\n    () => {\n      if (!this.mounted) {\n        return;\n      }\n      const { omitContacts, limit } = this.props;\n      this.requestId++;\n      fetchContacts(this.props.searchValue, {\n        omitContacts,\n        limit,\n        requestId: this.requestId,\n      }).then(\n        ({ response: { data: contacts, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ contacts });\n            this.setState({ loading: false, contacts });\n          }\n        },\n        ({ response: { error, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ error });\n            this.setState({ loading: false, error });\n          }\n        },\n      );\n    },\n    { wait: 300 },\n  );\n  prepareFetch() {\n    this.reset({ loading: true });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    this.prepareFetch();\n    this.fetch();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.searchValue !== this.props.searchValue ||\n      prevProps.omitContacts !== this.props.omitContacts\n    ) {\n      this.prepareFetch();\n      this.fetch();\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\n*/\n","import withProvision from 'core/connection/withProvision';\nimport { createSuggestComponent } from '../Suggest';\n\nexport const QUERY_FORMATS = {\n  FILTER: 'FILTER',\n  SEARCH: 'SEARCH',\n};\n\nconst resolveQueryByFormat = ({\n  queryFormat,\n  filterField,\n  inputValue: searchString,\n  numberOfItemsToRequest,\n}) => {\n  const navigation = { pageSize: numberOfItemsToRequest };\n  switch (queryFormat) {\n    case QUERY_FORMATS.SEARCH:\n      return { navigation, search: searchString };\n    case QUERY_FORMATS.FILTER:\n    default:\n      return {\n        navigation,\n        filter: {\n          [filterField]: { comparator: '~', value: `%${searchString}%` },\n        },\n      };\n  }\n};\n\nconst Resolver = ({\n  sourceProps: {\n    filterField,\n    resolveDetails,\n    convertEntityToSuggestion = entity => ({\n      ...entity,\n      label: entity[filterField],\n      details: resolveDetails ? resolveDetails(entity) : undefined,\n    }),\n  } = {},\n  entities: { data: entitiesList = [] } = {},\n  children: renderProp,\n}) => renderProp((entitiesList || []).map(convertEntityToSuggestion));\n\nexport default createSuggestComponent({\n  SuggestionsResolver: withProvision(\n    (\n      state,\n      {\n        inputValue,\n        sourceProps: {\n          modelName,\n          domain,\n          filterField,\n          numberOfItemsToRequest,\n          queryFormat,\n        },\n      },\n    ) => ({\n      domain,\n      identity: inputValue,\n      request: {\n        entities: {\n          modelName,\n          observe: inputValue,\n          query: resolveQueryByFormat({\n            queryFormat,\n            filterField,\n            inputValue,\n            numberOfItemsToRequest,\n          }),\n        },\n      },\n      debounceRequest: 500,\n    }),\n  )(Resolver),\n});\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.RELOCATION]: 'Переезд',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport compose from 'lodash/fp/compose';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest, {\n  QUERY_FORMATS,\n} from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { selectDict } from 'core/connection';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from '../localization';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n  originGeonameId: initialOriginGeonameId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n    originGeonameId: initialOriginGeonameId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n};\n\nconst TripEditCard = ({\n  classes,\n  locationsDict,\n  tripState: { tripType, tripName, originLocationId },\n  setTripState,\n}) => {\n  const setTripName = useCallback(\n    ({ target: { value: nextTripName } }) =>\n      setTripState({ tripName: nextTripName }),\n    [setTripState],\n  );\n  const setTripType = useCallback(\n    ({ target: { value: nextTripType } }) =>\n      setTripState({ tripType: nextTripType }),\n    [setTripState],\n  );\n  const setOriginGeoname = useCallback(\n    ({ geonameId: nextOriginGeonameId }) =>\n      setTripState({ originGeonameId: nextOriginGeonameId }),\n    [setTripState],\n  );\n\n  // origin locations is fetched, so name available through locations dict\n  const originLocation = locationsDict[originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <TextField\n          fullWidth={true}\n          label=\"Название поездки\"\n          value={tripName}\n          onChange={setTripName}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          classes={{ root: classes.suggest }}\n          textFieldProps={{\n            label: 'Старт из',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Пункт отправления...' }}\n          onChange={setOriginGeoname}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'geonames',\n            domain: 'tripEditCard.geoname',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип поездки\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={setTripType}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripType}\n        />\n      </div>\n    </>\n  );\n};\n\nTripEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nTripEditCard.defaultProps = {\n  className: undefined,\n};\n\nconst mapStateToProps = state => ({\n  locationsDict: selectDict(state, 'locations'),\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles),\n)(TripEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport TripEditCard, { useTripState } from './blocks/TripEditCard';\n\nconst TripEditDialog = ({ initialState, children, onSubmit: handleSubmit }) => {\n  const { tripState, setTripState } = useTripState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(tripState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      {React.cloneElement(children, { onClick: handleClickOpen })}\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Поездка</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование поездки</DialogContentText>\n            <TripEditCard tripState={tripState} setTripState={setTripState} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nTripEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nTripEditDialog.defaultProps = {};\n\nexport default TripEditDialog;\n","// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    if (element.dataset && element.dataset.sortHandler === 'enabled') {\n      return false;\n    }\n    element = element.parentNode;\n  }\n  return true;\n};\n","export const withItem = (array, item, index = array.length) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index),\n];\n\nexport const withoutItem = (array, index) => [\n  ...array.slice(0, index),\n  ...array.slice(index + 1),\n];\n\nexport const replaceItem = (array, index, item) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index + 1),\n];\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { pathPropType } from 'core/context/AppContext';\nimport reactComponentPropType from 'modules/customPropTypes/reactComponentPropType';\nimport locationPropTypes from 'travel/models/locations/propTypes';\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n};\n\nconst Location = ({\n  location: { locationId, locationName = 'unknown' },\n  locationPath,\n  Icon,\n  classes,\n}) => {\n  const locationNode = locationPath ? (\n    <Link to={locationPath.toUrl({ strLocationId: String(locationId) })}>\n      {locationName}\n    </Link>\n  ) : (\n    locationName\n  );\n  return (\n    <div className={classes.container}>\n      {Icon && <Icon className={classes.icon} />}\n      {locationNode}\n    </div>\n  );\n};\n\nLocation.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  location: PropTypes.shape(locationPropTypes),\n  Icon: reactComponentPropType,\n  locationPath: pathPropType,\n};\n\nLocation.defaultProps = {\n  location: {},\n  Icon: undefined,\n  locationPath: undefined,\n};\n\nexport default withStyles(styles)(Location);\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest, {\n  QUERY_FORMATS,\n} from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { VISIT_TYPE_NAMES } from '../localization';\n\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nexport const useVisitState = ({\n  visitType: initialVisitType,\n  visitComment: initialVisitComment,\n  locationId: initialLocationId,\n  locationName: initialLocationName,\n  geonameId: initialGeonameId,\n}) => {\n  const [visitState, setVisitState] = useState({\n    visitComment: initialVisitComment,\n    visitType: initialVisitType,\n    locationId: initialLocationId,\n    locationName: initialLocationName,\n    geonameId: initialGeonameId,\n  });\n\n  return {\n    visitState,\n    setVisitState: visitStateUpdate =>\n      setVisitState({ ...visitState, ...visitStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n};\n\nconst VisitEditCard = ({\n  classes,\n  visitState: { visitType, visitComment, locationName },\n  setVisitState,\n}) => {\n  const setVisitType = useCallback(\n    ({ target: { value: nextVisitType } }) =>\n      setVisitState({ visitType: nextVisitType }),\n    [setVisitState],\n  );\n  const setGeoname = useCallback(\n    ({ geonameId: nextGeonameId }) =>\n      setVisitState({ geonameId: nextGeonameId }),\n    [setVisitState],\n  );\n  const setVisitComment = useCallback(\n    ({ target: { value: nextVisitComment } }) =>\n      setVisitState({ visitComment: nextVisitComment }),\n    [setVisitState],\n  );\n\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          classes={{ root: classes.suggest }}\n          textFieldProps={{\n            label: 'Место посещения',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Населенный пункт...' }}\n          onChange={setGeoname}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'geonames',\n            domain: 'visitEditCard.geoname',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          onChange={setVisitType}\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n          value={visitType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          label=\"Комментарий\"\n          fullWidth={true}\n          value={visitComment}\n          onChange={setVisitComment}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </div>\n    </>\n  );\n};\n\nVisitEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nVisitEditCard.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(VisitEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport VisitEditCard, { useVisitState } from './blocks/VisitEditCard';\n\nconst VisitEditDialog = ({\n  initialState,\n  children,\n  onSubmit: handleSubmit,\n}) => {\n  const { visitState, setVisitState } = useVisitState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(visitState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      {React.cloneElement(children, { onClick: handleClickOpen })}\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Посещение</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование посещения</DialogContentText>\n            <VisitEditCard\n              visitState={visitState}\n              setVisitState={setVisitState}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nVisitEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nVisitEditDialog.defaultProps = {};\n\nexport default VisitEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { pathPropType } from 'core/context/AppContext';\nimport VisitEditDialog from 'travel/components/models/visits/VisitEditDialog';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst resolveVisitIconComponent = visitType => {\n  switch (visitType) {\n    case 'Transit':\n      return TransferWithinAStationIcon;\n    case 'BaseCamp':\n      return DomainIcon;\n    case 'Relocation':\n      return LocalShippingIcon;\n    case 'Regular':\n    default:\n      return LocationCityIcon;\n  }\n};\n\nconst Visit = ({\n  visit,\n  onVisitUpdate: handleVisitUpdate,\n  classes,\n  isEditable,\n  locationPath,\n}) => {\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName, visitType, locationId } = visit;\n  const Icon = resolveVisitIconComponent(visitType);\n  return (\n    <div className={classes.container}>\n      {Icon && <Icon className={classes.icon} />}\n      <Link to={locationPath.toUrl({ strLocationId: String(locationId) })}>\n        {locationName}\n      </Link>\n      {isEditable && (\n        <VisitEditDialog\n          initialState={visit}\n          onSubmit={updatedVisit =>\n            handleVisitUpdate({ ...visit, ...updatedVisit })\n          }\n        >\n          <IconButton\n            data-sort-handler=\"disabled\"\n            size=\"small\"\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            <EditIcon className={classes.editIcon} />\n          </IconButton>\n        </VisitEditDialog>\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  editIcon: {},\n};\n\nVisit.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isEditable: PropTypes.bool,\n  onVisitUpdate: PropTypes.func.isRequired,\n  visit: PropTypes.shape(visitPropTypes),\n  locationPath: pathPropType.isRequired,\n};\n\nVisit.defaultProps = {\n  isEditable: false,\n  visit: {},\n};\n\nexport default withStyles(styles)(Visit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst DialogWithForm = ({\n  children,\n  description,\n  onReject: handleReject,\n  onSubmit: handleSubmit,\n  title,\n  ...forwardedProps\n}) => (\n  <Formik {...forwardedProps} onSubmit={handleSubmit}>\n    {({ handleSubmit: handleSubmitInternal, ...formikProps }) => (\n      <Dialog\n        transitionDuration={500}\n        open={true}\n        onClose={handleReject}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{description}</DialogContentText>\n          {React.cloneElement(children, formikProps)}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleReject} color=\"secondary\">\n            Отмена\n          </Button>\n          <Button onClick={handleSubmitInternal} color=\"primary\">\n            Сохранить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )}\n  </Formik>\n);\n\nDialogWithForm.propTypes = {\n  children: PropTypes.node.isRequired,\n  description: PropTypes.node,\n  onReject: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.node,\n};\nDialogWithForm.defaultProps = {\n  description: undefined,\n  title: undefined,\n};\n\nexport default DialogWithForm;\n","import checkIsSameDay from 'date-fns/isSameDay';\nimport checkIsDatesEqual from 'date-fns/isEqual';\nimport addDays from 'date-fns/addDays';\nimport checkIsAfter from 'date-fns/isAfter';\n\nconst checkIsPeriodInverted = (beforeDateTime, afterDateTime) =>\n  checkIsAfter(beforeDateTime, afterDateTime);\n\nconst mixDateTime = ({ dateFrom, timeFrom }) =>\n  new Date(\n    dateFrom.getFullYear(),\n    dateFrom.getMonth(),\n    dateFrom.getDate(),\n    timeFrom.getHours(),\n    timeFrom.getMinutes(),\n    timeFrom.getSeconds(),\n  );\n\nexport default ({ values: { rideDeparture, rideArrival }, handleChange }) => {\n  const setRideDeparture = nextRideDeparture =>\n    handleChange('departureDateTime')(nextRideDeparture);\n  const setRideArrival = nextRideArrival =>\n    handleChange('arrivalDateTime')(nextRideArrival);\n\n  const isSameDay = checkIsSameDay(rideDeparture, rideArrival);\n\n  const setDatesAndTimes = (nextRideDeparture, nextRideArrival) => {\n    const isInverted = checkIsPeriodInverted(\n      nextRideDeparture,\n      nextRideArrival,\n    );\n    const actualNextRideDeparture = isInverted\n      ? nextRideArrival\n      : nextRideDeparture;\n\n    const actualNextRideArrival = isInverted\n      ? nextRideDeparture\n      : nextRideArrival;\n\n    if (!checkIsDatesEqual(rideDeparture, actualNextRideDeparture)) {\n      setRideDeparture(actualNextRideDeparture);\n    }\n    if (!checkIsDatesEqual(rideArrival, actualNextRideArrival)) {\n      setRideArrival(actualNextRideArrival);\n    }\n  };\n\n  const handleIsSameDayFlagChange = nextIsSameDay => {\n    if (Boolean(isSameDay) !== Boolean(nextIsSameDay)) {\n      setDatesAndTimes(\n        rideDeparture,\n        mixDateTime({\n          dateFrom: nextIsSameDay ? rideDeparture : addDays(rideDeparture, 1),\n          timeFrom: rideArrival,\n        }),\n      );\n    }\n  };\n\n  const handleRideDepartureChange = nextRideDeparture => {\n    const nextRideArrival = isSameDay\n      ? mixDateTime({\n          timeFrom: rideArrival,\n          dateFrom: nextRideDeparture,\n        })\n      : rideArrival;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  const handleRideArrivalChange = nextRideArrival => {\n    const nextRideDeparture = isSameDay\n      ? mixDateTime({\n          timeFrom: rideDeparture,\n          dateFrom: nextRideArrival,\n        })\n      : rideDeparture;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  return {\n    isSameDateField: {\n      value: isSameDay,\n      onChange: handleIsSameDayFlagChange,\n    },\n    rideDepartureField: {\n      value: rideDeparture,\n      onChange: handleRideDepartureChange,\n    },\n    rideArrivalField: {\n      value: rideArrival,\n      onChange: handleRideArrivalChange,\n    },\n  };\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n  DatePicker,\n  KeyboardDatePicker,\n  TimePicker,\n} from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from '../localization';\nimport tieDateTimeFields from '../tieDateTimeFields';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n  },\n  option: {\n    flexGrow: '1',\n  },\n};\n\nconst RideEditForm = ({\n  classes,\n  availableVisits,\n  originLocation,\n  values: {\n    departureVisitId,\n    arrivalVisitId,\n    vehicleType,\n    rideType,\n    rideComment,\n    rideClass,\n    rideOccupation,\n    departureDateTime,\n    arrivalDateTime,\n  },\n  handleChange,\n}) => {\n  const availableVisitsIds = availableVisits.map(({ visitId }) => visitId);\n  const visitsDict = Object.fromEntries(\n    availableVisits.map(visit => {\n      const { visitId } = visit;\n      return [visitId, visit];\n    }),\n  );\n\n  const {\n    rideArrivalField,\n    rideDepartureField,\n    isSameDateField,\n  } = tieDateTimeFields({\n    values: {\n      rideDeparture: departureDateTime,\n      rideArrival: arrivalDateTime,\n    },\n    handleChange,\n  });\n\n  const renderVisit = useCallback(\n    ({ option: visitId }) => {\n      if (visitId === ORIGIN_OF_TRIP) {\n        const { locationName } = originLocation;\n        return locationName;\n      }\n      const visit = visitsDict[visitId];\n      if (!visit) {\n        return 'Не указано';\n      }\n      const { locationName } = visit;\n      return locationName;\n    },\n    [visitsDict],\n  );\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"departureVisitId\"\n          caption=\"Отправление из\"\n          inputId=\"RideEditCard-departureVisitId\"\n          optionRender={renderVisit}\n          hasNullOption={false}\n          options={[ORIGIN_OF_TRIP, ...availableVisitsIds]}\n          value={departureVisitId}\n          onChange={handleChange}\n        />\n        <OptionsSelect\n          name=\"arrivalVisitId\"\n          caption=\"Прибытие в\"\n          inputId=\"RideEditCard-arrivalVisitId\"\n          hasNullOption={false}\n          optionRender={renderVisit}\n          options={[...availableVisitsIds, ORIGIN_OF_TRIP]}\n          onChange={handleChange}\n          value={arrivalVisitId}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"vehicleType\"\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          onChange={handleChange}\n          value={vehicleType}\n        />\n        <OptionsSelect\n          name=\"rideType\"\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          onChange={handleChange}\n          value={rideType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"rideClass\"\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          onChange={handleChange}\n          value={rideClass}\n        />\n        <OptionsSelect\n          name=\"rideOccupation\"\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          onChange={handleChange}\n          value={rideOccupation}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <KeyboardDatePicker\n          name=\"departureDateTime\"\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n          format=\"dd/MM/yyyy\"\n        />\n        {isSameDateField.value ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSameDateField.value}\n                onChange={event =>\n                  isSameDateField.onChange(event.target.checked)\n                }\n              />\n            }\n            label=\"Прибытие в тот же день\"\n          />\n        ) : (\n          <KeyboardDatePicker\n            name=\"arrivalDateTime\"\n            autoOk={true}\n            className={classes.option}\n            label=\"Дата прибытия\"\n            value={rideArrivalField.value}\n            onChange={rideArrivalField.onChange}\n            format=\"dd/MM/yyyy\"\n          />\n        )}\n      </div>\n      <div className={classes.optionGroup}>\n        <TimePicker\n          name=\"departureDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n        />\n        <TimePicker\n          name=\"arrivalDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          value={rideArrivalField.value}\n          onChange={rideArrivalField.onChange}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          name=\"rideComment\"\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={handleChange}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </div>\n    </>\n  );\n};\n\nRideEditForm.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nRideEditForm.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(RideEditForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogWithForm from 'modules/components/muiExtended/DialogWithForm';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport RideEditForm from './blocks/RideEditForm';\n\nconst RideEditDialog = ({\n  availableVisits,\n  initialState,\n  children,\n  className,\n  onSubmit: handleSubmit,\n  originLocation,\n}) => {\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = values => {\n    handleSubmit(values);\n    handleClose(false);\n  };\n\n  return (\n    <div className={className}>\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        {children}\n      </IconButton>\n      {isOpen && (\n        <DialogWithForm\n          initialValues={initialState}\n          enableReinitialize={true}\n          onSubmit={handleSubmitInternal}\n          onReject={handleClose}\n          title=\"Транспорт\"\n          description=\"Как вы добрались в место назначения и как уехали из него?\"\n        >\n          <RideEditForm\n            availableVisits={availableVisits}\n            originLocation={originLocation}\n          />\n        </DialogWithForm>\n      )}\n    </div>\n  );\n};\n\nRideEditDialog.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n};\nRideEditDialog.defaultProps = {\n  className: undefined,\n  availableVisits: [],\n};\n\nexport default RideEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport arrivalDepartureDateTimeToString from 'modules/utilities/dateTime/arrivalDepartureDateTimeToString';\nimport { VEHICLE_TYPES, RIDE_TYPES } from 'travel/models/rides/consts';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport initializeRide from 'travel/models/rides/initialize';\nimport RideEditDialog from 'travel/components/models/rides/RideEditDialog';\n\nconst resolveRideIconComponent = vehicleType => {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n    default:\n      return CustomTransportIcon;\n  }\n};\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  editDialogTrigger: {\n    display: 'inline-block',\n  },\n};\n\nconst Ride = ({\n  availableVisits,\n  originLocation,\n  classes,\n  className,\n  defaultArrivalVisitId,\n  defaultDepartureVisitId,\n  isEditable,\n  onRideUpdate: handleRideUpdate,\n  ride,\n  ride: { rideId, vehicleType, rideType, arrivalDateTime, departureDateTime },\n  showDetails,\n}) => {\n  const rideInitialState = rideId\n    ? ride\n    : initializeRide({\n        defaultDepartureVisitId,\n        defaultArrivalVisitId,\n      });\n\n  const Icon = rideId ? resolveRideIconComponent(vehicleType) : UnknownRideIcon;\n\n  const iconNode = <Icon className={classes.icon} />;\n  const rideNode = isEditable ? (\n    <RideEditDialog\n      className={classes.editDialogTrigger}\n      initialState={rideInitialState}\n      availableVisits={availableVisits}\n      onSubmit={updatedRide => handleRideUpdate({ ...ride, ...updatedRide })}\n      originLocation={originLocation}\n    >\n      {iconNode}\n    </RideEditDialog>\n  ) : (\n    iconNode\n  );\n\n  return (\n    <div className={cls(className, classes.container)}>\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.icon} />\n      )}\n      {rideNode}\n      {Boolean(rideId && showDetails) && (\n        <span className={classes.details}>\n          {arrivalDepartureDateTimeToString(departureDateTime, arrivalDateTime)}\n        </span>\n      )}\n    </div>\n  );\n};\n\nRide.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  className: PropTypes.string,\n  defaultArrivalVisitId: PropTypes.number,\n  defaultDepartureVisitId: PropTypes.number,\n  isEditable: PropTypes.bool,\n  onRideUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  ride: PropTypes.shape(ridePropTypes),\n  showDetails: PropTypes.bool,\n};\n\nRide.defaultProps = {\n  availableVisits: [],\n  className: undefined,\n  defaultArrivalVisitId: undefined,\n  defaultDepartureVisitId: undefined,\n  isEditable: false,\n  ride: {},\n  showDetails: false,\n};\n\nexport default withStyles(styles)(Ride);\n","export default (departureDateTime, arrivalDateTime) => {\n  const arrivalDateTimeString =\n    Boolean(arrivalDateTime) && arrivalDateTime.toLocaleDateString();\n  const departureDateTimeString =\n    Boolean(departureDateTime) && departureDateTime.toLocaleDateString();\n  if (arrivalDateTimeString === departureDateTimeString) {\n    return arrivalDateTimeString;\n  }\n  return `${departureDateTimeString}—${arrivalDateTimeString}`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst styles = {\n  dragHandler: {\n    cursor: 'grab',\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n  },\n};\n\nconst DragHandler = ({ className, classes }) => (\n  <IconDragHandle\n    className={cls(className, classes.dragHandler)}\n    data-sort-handler=\"enabled\"\n  />\n);\n\nDragHandler.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nDragHandler.defaultProps = { className: undefined };\n\nexport default withStyles(styles)(DragHandler);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { pathPropType } from 'core/context/AppContext';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Visit from 'travel/components/models/visits/Visit';\nimport Ride from './Ride';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  alwaysVisible: {},\n  container: {\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n};\n\nconst VisitWithRides = ({\n  visit,\n  visit: { visitId, arrivalRideId, departureRideId } = {},\n  ridesDict,\n  classes,\n  prevVisitId,\n  nextVisitId,\n  tripVisitsList,\n  isEditable,\n  isSortable,\n  isSorting,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  onRideUpdate: handleRideUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  originLocation,\n  locationPath,\n}) => {\n  const shouldWarnForArrivalRide = isEditable && !isArrivalRideMatch;\n  const shouldWarnForDepartureRide = isEditable && !isDepartureRideMatch;\n\n  return (\n    <div className={classes.container}>\n      <Ride\n        availableVisits={tripVisitsList}\n        defaultDepartureVisitId={prevVisitId}\n        defaultArrivalVisitId={visitId}\n        visitId={visitId}\n        isEditable={isEditable}\n        className={cls(classes.ride, {\n          [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n          [classes.warning]: shouldWarnForArrivalRide,\n        })}\n        ride={ridesDict[arrivalRideId]}\n        showDetails={isSorting || shouldWarnForArrivalRide}\n        onRideUpdate={handleRideUpdate}\n        originLocation={originLocation}\n      />\n      <Visit\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        isEditable={isEditable}\n        onVisitUpdate={handleVisitUpdate}\n        visit={visit}\n        locationPath={locationPath}\n      />\n      {(!isDepartureRideMatch || isSorting) && (\n        <Ride\n          className={cls(classes.ride, {\n            [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n            [classes.warning]: shouldWarnForDepartureRide,\n          })}\n          ride={ridesDict[departureRideId]}\n          availableVisits={tripVisitsList}\n          defaultDepartureVisitId={visitId}\n          defaultArrivalVisitId={nextVisitId}\n          isEditable={isEditable && !isDepartureRideMatch}\n          showDetails={isSorting || shouldWarnForDepartureRide}\n          onRideUpdate={handleRideUpdate}\n          originLocation={originLocation}\n        />\n      )}\n      {isSortable &&\n        !isSorting && <DragHandler className={classes.visibleOnlyOnHover} />}\n    </div>\n  );\n};\n\nVisitWithRides.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isArrivalRideMatch: PropTypes.bool,\n  isDepartureRideMatch: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  isSortable: PropTypes.bool,\n  isSorting: PropTypes.bool,\n  nextVisitId: PropTypes.number,\n  onRideUpdate: PropTypes.func.isRequired,\n  onVisitUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  prevVisitId: PropTypes.number,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  visit: PropTypes.shape(visitPropTypes).isRequired,\n  locationPath: pathPropType.isRequired,\n};\n\nVisitWithRides.defaultProps = {\n  isArrivalRideMatch: true,\n  isDepartureRideMatch: true,\n  isEditable: false,\n  isSortable: false,\n  isSorting: false,\n  nextVisitId: null,\n  prevVisitId: null,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(VisitWithRides);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport initializeVisit from 'travel/models/visits/initialize';\nimport VisitEditDialog from 'travel/components/models/visits/VisitEditDialog';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  draggableContainer: {\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n};\n\nconst VisitCreator = ({\n  classes,\n  isSorting,\n  onVisitUpdate: handleVisitUpdate,\n}) => (\n  <div className={cls({ [classes.draggableContainer]: !isSorting })}>\n    <VisitEditDialog\n      initialState={initializeVisit()}\n      onSubmit={handleVisitUpdate}\n    >\n      <Button\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <span>Добавить посещение</span>\n      </Button>\n    </VisitEditDialog>\n    <DragHandler className={classes.visibleOnlyOnHover} />\n  </div>\n);\n\nVisitCreator.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isSorting: PropTypes.bool,\n  onVisitUpdate: PropTypes.func.isRequired,\n};\n\nVisitCreator.defaultProps = {\n  isSorting: false,\n};\n\nexport default withStyles(styles)(VisitCreator);\n","export default () => ({\n  visitType: null,\n  visitComment: '',\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconHome from '@material-ui/icons/Home';\nimport EditIcon from '@material-ui/icons/Edit';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\nimport { withItem } from 'modules/utilities/types/array';\nimport { pathPropType } from 'core/context/AppContext';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Location from 'travel/components/models/locations/Location';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport VisitWithRides from './VisitWithRides';\nimport Ride from './Ride';\nimport VisitCreator from './VisitCreator';\n\nconst SortableTrip = SortableContainer(({ children }) => <div>{children}</div>);\nconst SortableVisitWithRides = SortableElement(\n  ({ replaceWithNode, onVisitUpdate: handleVisitUpdate, ...props }) =>\n    replaceWithNode || (\n      <VisitWithRides onVisitUpdate={handleVisitUpdate} {...props} />\n    ),\n);\n\nconst styles = {\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n};\n\nconst resolveVisitsWindow = (tripVisitsList, indexOfVisit, overstepIndex) => {\n  const prevVisitIndex =\n    indexOfVisit - 1 - (indexOfVisit > overstepIndex ? 1 : 0);\n  const nextVisitIndex =\n    indexOfVisit + 1 - (indexOfVisit + 1 > overstepIndex ? 1 : 0);\n  const prevVisit = prevVisitIndex >= 0 ? tripVisitsList[prevVisitIndex] : null;\n  const nextVisit =\n    nextVisitIndex < tripVisitsList.length\n      ? tripVisitsList[nextVisitIndex]\n      : null;\n  return [prevVisit, nextVisit];\n};\n\nconst Trip = ({\n  classes,\n  countriesDict,\n  isEditable,\n  locationsDict,\n  onRideUpdate: handleRideUpdate,\n  onVisitsOrderUpdate: handleVisitsOrderUpdate,\n  ridesDict,\n  trip,\n  trip: { tripId, originLocationId, tripName, tripType },\n  tripIndex,\n  tripVisitsList,\n  onTripUpdate: handleTripUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  storyPath,\n  locationPath,\n}) => {\n  const isSortable = isEditable;\n  const [isSorting, setIsSorting] = useState(false);\n  const [addVisitControlIndex, setAddVisitControlIndex] = useState(\n    tripVisitsList.length,\n  );\n  const handleSortEnd = (data, event) => {\n    setIsSorting(false);\n    const { oldIndex, newIndex } = data;\n    if (oldIndex === addVisitControlIndex) {\n      setAddVisitControlIndex(newIndex);\n    } else {\n      handleVisitsOrderUpdate(event, {\n        oldIndex: oldIndex > addVisitControlIndex ? oldIndex - 1 : oldIndex,\n        newIndex: newIndex > addVisitControlIndex ? newIndex - 1 : newIndex,\n        collection: tripVisitsList,\n      });\n    }\n  };\n\n  const VisitWithRidesComponent = isSortable\n    ? SortableVisitWithRides\n    : VisitWithRides;\n\n  const actualTripVisitsList = !isEditable\n    ? tripVisitsList\n    : withItem(\n        tripVisitsList,\n        { isItVisitCreatorControl: true },\n        addVisitControlIndex,\n      );\n  const visitsNodes = actualTripVisitsList.map((visit, indexOfVisit) => {\n    const { isItVisitCreatorControl, visitId } = visit;\n    if (isItVisitCreatorControl) {\n      return (\n        <SortableVisitWithRides\n          key=\"visitCreator\"\n          index={indexOfVisit}\n          replaceWithNode={\n            <VisitCreator\n              isSorting={isSorting}\n              onVisitUpdate={newVisit =>\n                handleVisitUpdate(newVisit, {\n                  indexInCollection: addVisitControlIndex,\n                  collection: tripVisitsList,\n                  tripId,\n                })\n              }\n            />\n          }\n        />\n      );\n    }\n    const [prevVisit, nextVisit] = resolveVisitsWindow(\n      tripVisitsList,\n      indexOfVisit,\n      addVisitControlIndex,\n    );\n    const { visitId: prevVisitId } = prevVisit || {};\n    const { visitId: nextVisitId } = nextVisit || {};\n    return (\n      <VisitWithRidesComponent\n        index={indexOfVisit /* for SortableVisitWithRides */}\n        isArrivalRideMatch={checkIsVisitsConnectedByRide(prevVisit, visit)}\n        isDepartureRideMatch={checkIsVisitsConnectedByRide(visit, nextVisit)}\n        isEditable={isEditable}\n        isSortable={isSortable}\n        isSorting={isSorting}\n        key={visitId}\n        nextVisitId={nextVisitId}\n        onRideUpdate={handleRideUpdate}\n        onVisitUpdate={handleVisitUpdate}\n        originLocation={locationsDict[originLocationId]}\n        prevVisitId={prevVisitId}\n        ridesDict={ridesDict}\n        tripVisitsList={tripVisitsList}\n        visit={visit}\n        locationPath={locationPath}\n      />\n    );\n  });\n\n  const wrappedVisitsNodes = isSortable ? (\n    <SortableTrip\n      onSortEnd={handleSortEnd}\n      shouldCancelStart={checkIsNodeNotSortable}\n      updateBeforeSortStart={() => setIsSorting(true)}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n    >\n      {visitsNodes}\n    </SortableTrip>\n  ) : (\n    <div>{visitsNodes}</div>\n  );\n\n  const originLocationNode = (\n    <Location\n      location={locationsDict[originLocationId]}\n      Icon={IconHome}\n      locationPath={locationPath}\n    />\n  );\n\n  const tripEditControlsNode = (\n    <TripEditDialog\n      initialState={trip}\n      onSubmit={updatedTrip => handleTripUpdate({ ...trip, ...updatedTrip })}\n    >\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <EditIcon className={classes.visibleOnlyOnHover} />\n      </IconButton>\n    </TripEditDialog>\n  );\n\n  const lastVisit = tripVisitsList[tripVisitsList.length - 1];\n  const lastButOneVisit = tripVisitsList[tripVisitsList.length - 2];\n  const { departureRideId: rideToOriginId, visitId: recentVisitId } =\n    lastVisit || {};\n\n  const isRelocation = tripType === TRIP_TYPES.RELOCATION;\n  const rideToOriginNode = isRelocation ? null : (\n    <Ride\n      availableVisits={tripVisitsList}\n      defaultDepartureVisitId={recentVisitId}\n      isEditable={isEditable}\n      onRideUpdate={handleRideUpdate}\n      originLocation={locationsDict[originLocationId]}\n      ride={ridesDict[rideToOriginId]}\n      showDetails={\n        isSorting || checkIsVisitsConnectedByRide(lastButOneVisit, lastVisit)\n      }\n    />\n  );\n\n  const hasStory = tripVisitsList.some(\n    ({ visitComment, arrivalRideId, departureRideId }) => {\n      if (visitComment) {\n        return true;\n      }\n      const { rideComment: arrivalRideComment } =\n        ridesDict[arrivalRideId] || {};\n      if (arrivalRideComment) {\n        return true;\n      }\n      const { rideComment: departureRideComment } =\n        ridesDict[departureRideId] || {};\n      return Boolean(departureRideComment);\n    },\n  );\n  return (\n    <>\n      <h1 className={classes.container}>\n        {`${tripIndex + 1}. ${resolveTripCaption(\n          tripVisitsList,\n          countriesDict,\n          locationsDict[originLocationId] &&\n            locationsDict[originLocationId].countryId,\n          tripName,\n        )}`}\n        {isEditable && tripEditControlsNode}\n      </h1>\n      {originLocationNode}\n      {wrappedVisitsNodes}\n      {!isRelocation && (\n        <>\n          {rideToOriginNode}\n          {originLocationNode}\n        </>\n      )}\n      {hasStory && (\n        <div>\n          <Link to={storyPath.toUrl({ strTripId: String(tripId) })}>\n            Заметки\n          </Link>\n        </div>\n      )}\n    </>\n  );\n};\nTrip.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  tripIndex: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  onRideUpdate: PropTypes.func.isRequired,\n  onTripUpdate: PropTypes.func.isRequired,\n  onVisitsOrderUpdate: PropTypes.func.isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  trip: PropTypes.shape(tripPropTypes).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  storyPath: pathPropType.isRequired,\n  locationPath: pathPropType.isRequired,\n};\n\nTrip.defaultProps = {\n  isSortable: false,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(Trip);\n","import createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nexport const submitOrderInTrip = ({ oldIndex, newIndex, collection }) => ({\n  domain: 'tripsPage.visits.sort',\n  modelName: 'visits',\n  query: {\n    id: collection[oldIndex].visitId,\n    body: {\n      orderInTrip: calcOrder({ index: newIndex, collection }),\n    },\n  },\n});\n\nexport const submitRide = ({ ride, ride: { rideId } }) => ({\n  domain: 'tripsPage.visits.rides',\n  modelName: 'rides',\n  query: {\n    id: rideId,\n    body: ride,\n  },\n});\n\nexport const submitTrip = ({ trip, trip: { tripId } }) => ({\n  domain: 'tripsPage.visits.trips',\n  modelName: 'trips',\n  query: {\n    id: tripId,\n    body: trip,\n  },\n});\n\nexport const submitVisit = ({\n  visit,\n  visit: { visitId },\n  tripId,\n  indexInCollection,\n  collection,\n}) => ({\n  domain: 'tripsPage.visits.visit',\n  modelName: 'visits',\n  query: {\n    id: visitId,\n    body: {\n      ...visit,\n      tripId,\n      orderInTrip:\n        indexInCollection || indexInCollection === 0\n          ? calcOrder({ index: indexInCollection, collection })\n          : undefined,\n    },\n  },\n});\n","const INITIAL_ORDER = 100;\nexport default ({ orderResolver: resolveOrder }) => ({ index, collection }) => {\n  if (!collection.length) {\n    return INITIAL_ORDER;\n  }\n  if (index <= 0) {\n    return resolveOrder(collection[0]) - 1;\n  }\n  if (index >= collection.length - 1) {\n    return resolveOrder(collection[collection.length - 1]) + 1;\n  }\n  const prevOrder = resolveOrder(collection[index - 1]);\n  const nextOrder = resolveOrder(collection[index]);\n  const randomness = ((Math.random() - 0.5) * (nextOrder - prevOrder)) / 2;\n  return (prevOrder + nextOrder) / 2 + randomness;\n};\n","import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'lodash/fp/compose';\nimport Button from '@material-ui/core/Button';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { selectDict, selectProvisionStatus } from 'core/connection';\nimport { withPaths, pathsPropTypes } from 'core/context/AppContext';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport withTripsData, {\n  DATA_CHUNKS,\n} from 'travel/components/common/withTripsData/withTripsData';\nimport WelcomeScreen from 'travel/components/common/WelcomeScreen';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport initializeTrip from 'travel/models/trips/initialize';\nimport { groupAndSortVisitsByTrips } from 'travel/models/trips/utils';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Trip from './blocks/Trip';\nimport {\n  submitRide,\n  submitOrderInTrip,\n  submitTrip,\n  submitVisit,\n} from './actionCreators';\n\nconst memoizedGroupAndSortVisitsByTrips = memoizeByLastArgs(\n  groupAndSortVisitsByTrips,\n);\n\nconst TripsPage = ({\n  match: {\n    params: { userAlias: visitedUserAlias },\n  },\n  isTripsComplete,\n  userTrips: { data: tripsList = [] } = {},\n  userVisits: { data: visitsList = [] } = {},\n  countriesDict,\n  locationsDict,\n  namedPaths,\n  ridesDict,\n  request,\n  invalidateRequest,\n}) => {\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const isEditable =\n    isAuthenticated && authenticatedUserAlias === visitedUserAlias;\n\n  const handleVisitsOrderUpdate = useCallback(\n    (event, { oldIndex, newIndex, collection }) => {\n      if (oldIndex !== newIndex) {\n        request(submitOrderInTrip({ oldIndex, newIndex, collection }));\n      }\n    },\n    [request],\n  );\n\n  const handleRideUpdate = useCallback(\n    ride =>\n      request(\n        submitRide({\n          ride,\n        }),\n      ),\n    [request],\n  );\n\n  const handleTripUpdate = useCallback(\n    trip =>\n      request(\n        submitTrip({\n          trip,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.trips' })),\n    [request],\n  );\n\n  const handleVisitUpdate = useCallback(\n    (visit, { indexInCollection, collection, tripId } = {}) =>\n      request(\n        submitVisit({\n          visit,\n          tripId,\n          indexInCollection,\n          collection,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.visits' })),\n    [request],\n  );\n\n  // changes of node, when used in WelcomeScreen lead to recreation of\n  // Message Component, so loosing all internal state of TripEditDialog\n  // actually it became hidden, after isOpen flag reset\n  const addTripNode = useMemo(\n    () => (\n      <TripEditDialog\n        initialState={initializeTrip()}\n        onSubmit={handleTripUpdate}\n      >\n        <Button size=\"small\" variant=\"outlined\" color=\"primary\">\n          Добавить поездку\n        </Button>\n      </TripEditDialog>\n    ),\n    [handleTripUpdate],\n  );\n  if (isTripsComplete && !tripsList.length) {\n    return (\n      <WelcomeScreen shouldShowLinkToTrips={false}>{addTripNode}</WelcomeScreen>\n    );\n  }\n\n  const visitsGroupedByTrips = memoizedGroupAndSortVisitsByTrips(visitsList);\n  return (\n    <>\n      {isEditable && addTripNode}\n      {tripsList.map((trip, tripIndex) => {\n        const { tripId } = trip;\n        return (\n          <div key={tripId}>\n            <Trip\n              locationsDict={locationsDict}\n              countriesDict={countriesDict}\n              onRideUpdate={handleRideUpdate}\n              onTripUpdate={handleTripUpdate}\n              onVisitUpdate={handleVisitUpdate}\n              onVisitsOrderUpdate={handleVisitsOrderUpdate}\n              ridesDict={ridesDict}\n              trip={trip}\n              tripIndex={tripIndex}\n              tripVisitsList={visitsGroupedByTrips[tripId]}\n              isEditable={isEditable}\n              storyPath={namedPaths.travel.tripStory}\n              locationPath={namedPaths.travel.locationPath}\n            />\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nTripsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  namedPaths: pathsPropTypes.namedPaths.isRequired,\n  request: PropTypes.func.isRequired,\n  isTripsComplete: PropTypes.bool.isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationsPropTypes))\n    .isRequired,\n};\n\nconst mapStateToProps = state => ({\n  countriesDict: selectDict(state, 'countries'),\n  locationsDict: selectDict(state, 'locations'),\n  ridesDict: selectDict(state, 'rides'),\n  isTripsComplete: selectProvisionStatus(state, 'tripsPage.userTrips')\n    .isComplete,\n});\n\nexport default compose(\n  withPaths,\n  withTripsData({\n    domain: 'tripsPage',\n    mapStateToProps,\n    requirementsConfig: {\n      [DATA_CHUNKS.COMMON.COUNTRIES]: true,\n      [DATA_CHUNKS.USER.TRIPS]: true,\n      [DATA_CHUNKS.USER.LOCATIONS]: true,\n      [DATA_CHUNKS.USER.VISITS]: true,\n      [DATA_CHUNKS.USER.RIDES]: true,\n    },\n  }),\n)(TripsPage);\n","export default () => ({\n  tripType: null,\n});\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isPending = true, hasFallback } = {} } = props;\n  if (isPending && !hasFallback) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport compose from 'lodash/fp/compose';\nimport Path from 'modules/utilities/routing/Path';\nimport { withPaths } from 'core/context/AppContext';\nimport { useAuthContext } from 'core/context/AuthContext';\n\nconst WelcomeScreen = ({\n  children,\n  match: {\n    params: { userAlias: visitedUserAlias },\n  },\n  namedPaths: { travel: { trips: tripsPath } = {} } = {},\n}) => {\n  const { userAlias: authenticatedUserAlias } = useAuthContext();\n  if (visitedUserAlias !== authenticatedUserAlias) {\n    return (\n      <span>Пользователь пока еще не внес информацию о своих поездках</span>\n    );\n  }\n  const Message = useCallback(\n    () => (\n      <div>\n        <span>\n          Нам пока ничего не известно о ваших путешествиях. Но очень интересно\n          узнать. Создайте вашу первую поездку, а мы подготовим по ней отчет\n        </span>\n        {children}\n      </div>\n    ),\n    [children],\n  );\n  return (\n    <Switch>\n      <Route\n        path={tripsPath.toUrl({ userAlias: authenticatedUserAlias })}\n        component={Message}\n      />\n      <Redirect to={tripsPath.toUrl({ userAlias: authenticatedUserAlias })} />\n    </Switch>\n  );\n};\n\nWelcomeScreen.propTypes = {\n  children: PropTypes.node,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ userAlias: PropTypes.string }),\n  }).isRequired,\n  namedPaths: PropTypes.shape({\n    travel: PropTypes.shape({ trips: PropTypes.instanceOf(Path) }),\n  }).isRequired,\n};\n\nWelcomeScreen.defaultProps = {\n  children: null,\n};\n\nexport default compose(\n  withRouter,\n  withPaths,\n)(WelcomeScreen);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport isFunction from 'lodash/isFunction';\nimport compose from 'lodash/fp/compose';\nimport withProvision from 'core/connection/withProvision';\nimport { selectUserTripsIds, selectLocationsIds } from './selectors';\n\nexport const DATA_CHUNKS = {\n  COMMON: {\n    COUNTRIES: 'COMMON.COUNTRIES',\n  },\n  USER: {\n    TRIPS: 'USER.TRIPS',\n    LOCATIONS: 'USER.LOCATIONS',\n    VISITS: 'USER.VISITS',\n    RIDES: 'USER.RIDES',\n  },\n};\n\nexport default ({\n  domain,\n  mapStateToProps,\n  requirementsConfig: mapStateToRequirementsConfig,\n}) => Component => {\n  const mapStateToRequirements = (state, props) => {\n    const {\n      countriesDict,\n      match: {\n        params: { userAlias },\n      },\n    } = props;\n    const userTripsIds = selectUserTripsIds(state, domain);\n\n    const requirementsConfig = isFunction(mapStateToRequirementsConfig)\n      ? mapStateToRequirementsConfig(state, props)\n      : mapStateToRequirementsConfig;\n\n    const request = {};\n    if (requirementsConfig[DATA_CHUNKS.COMMON.COUNTRIES]) {\n      request.countries = {\n        modelName: 'countries',\n        condition: !countriesDict || !Object.keys(countriesDict).length,\n        query: { navigation: { isDisabled: true } },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.TRIPS]) {\n      request.userTrips = {\n        modelName: 'trips',\n        observe: userAlias,\n        query: { userAlias, navigation: { isDisabled: true } },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.LOCATIONS]) {\n      const { requiredLocationsIds, missingLocationsIds } = selectLocationsIds(\n        state,\n        userTripsIds,\n      );\n\n      request.userLocations = {\n        modelName: 'locations',\n        observe: requiredLocationsIds,\n        condition: missingLocationsIds.length,\n        query: {\n          filter: { id: { comparator: 'in', value: missingLocationsIds } },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.VISITS]) {\n      const { year } = requirementsConfig[DATA_CHUNKS.USER.VISITS];\n      const actualYear = parseInt(\n        /^\\d{4}$/.test(String(year)) ? year : undefined,\n        10,\n      );\n      request.userVisits = {\n        modelName: 'visits',\n        observe: { userTripsIds, year },\n        condition: userTripsIds && userTripsIds.length,\n        query: {\n          filter: {\n            trip_id: { comparator: 'in', value: userTripsIds },\n            departure_date_time: actualYear\n              ? { comparator: '>=', value: `${actualYear}-01-01` }\n              : undefined,\n            arrival_date_time: actualYear\n              ? { comparator: '<', value: `${actualYear + 1}-01-01` }\n              : undefined,\n          },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.RIDES]) {\n      request.userRides = {\n        modelName: 'rides',\n        observe: userTripsIds,\n        condition: userTripsIds && userTripsIds.length,\n        query: {\n          filter: { trip_id: { comparator: 'in', value: userTripsIds } },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n\n    return {\n      domain,\n      request,\n    };\n  };\n\n  const ProvisionedComponent = compose(\n    withRouter,\n    withProvision(mapStateToRequirements, mapStateToProps),\n  )(Component);\n\n  return props => <ProvisionedComponent {...props} />;\n};\n","import uniq from 'lodash/uniq';\nimport { selectDict, selectPlaceholder } from 'core/connection';\n\nexport const selectUserTripsIds = (state, domain) => {\n  const { data: userTripsIds } =\n    selectPlaceholder(state, `${domain}.userTrips`) || {};\n  return userTripsIds;\n};\n\nexport const selectLocationsIds = (state, userTripsIds) => {\n  const tripsDict = selectDict(state, 'trips');\n  const locationsDict = selectDict(state, 'locations');\n\n  const requiredLocationsIds = userTripsIds\n    ? uniq(\n        userTripsIds.reduce((memo, tripId) => {\n          const trip = tripsDict[tripId];\n          if (trip) {\n            const { originLocationId } = trip;\n            if (originLocationId) {\n              memo.push(originLocationId);\n            }\n          }\n          return memo;\n        }, []),\n      )\n    : [];\n  const missingLocationsIds = requiredLocationsIds.filter(\n    requiredLocationId => !locationsDict[requiredLocationId],\n  );\n  return { requiredLocationsIds, missingLocationsIds };\n};\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default (tripVisitsList, countriesDict, originCountryId, fallback) => {\n  if (!tripVisitsList.length) {\n    return fallback;\n  }\n  const visitsByCountries = Object.keys(\n    groupBy(\n      tripVisitsList.filter(\n        ({ visitType }) => visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n  if (visitsByCountries.length === 1) {\n    return (\n      uniqTrimAndJoin(tripVisitsList.map(({ locationName }) => locationName), {\n        maxLength: 4,\n      }) || fallback\n    );\n  }\n  return (\n    uniqTrimAndJoin(\n      visitsByCountries\n        .map(\n          countryId =>\n            Number(countryId) !== originCountryId &&\n            countriesDict[countryId] &&\n            countriesDict[countryId].countryName,\n        )\n        .filter(Boolean),\n      { maxLength: 4 },\n    ) || fallback\n  );\n};\n","import groupBy from 'lodash/groupBy';\nimport mapValues from 'lodash/mapValues';\n\nexport { default as resolveTripCaption } from './resolveTripCaption';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n\nexport const groupAndSortVisitsByTrips = visitsList =>\n  mapValues(groupBy(visitsList, 'tripId'), sortVisitsByTrips);\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n"],"sourceRoot":""}