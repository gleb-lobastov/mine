{"version":3,"sources":["webpack:///./src/packages/travel/pages/TripStoryPage/TripStoryPage.jsx","webpack:///./src/packages/travel/components/models/locations/LocationCard/useMarker.js","webpack:///./src/packages/travel/components/models/locations/LocationCard/LocationCard.jsx","webpack:///./src/packages/travel/pages/LocationPage/LocationPage.jsx","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack:///./src/packages/travel/models/trips/utils/index.js","webpack:///./src/modules/utilities/types/numbers.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router__WEBPACK_IMPORTED_MODULE_2__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_3__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","modules_utilities_memo__WEBPACK_IMPORTED_MODULE_5__","modules_utilities_types_numbers__WEBPACK_IMPORTED_MODULE_6__","core_connection__WEBPACK_IMPORTED_MODULE_7__","core_connection_withProvision__WEBPACK_IMPORTED_MODULE_8__","travel_models_rides_propTypes__WEBPACK_IMPORTED_MODULE_9__","travel_models_trips_propTypes__WEBPACK_IMPORTED_MODULE_10__","travel_models_trips_utils__WEBPACK_IMPORTED_MODULE_11__","travel_models_visits_propTypes__WEBPACK_IMPORTED_MODULE_12__","memoizedSortVisitsByTrips","memoizeByLastArgs","sortVisitsByTrips","TripStoryPage","_ref","classes","_ref$visits","visits","_ref$visits$data","data","visitsList","ridesDict","a","createElement","noDataNode","length","lastVisitIndex","storiesNodes","map","_ref2","visitIndex","departureRideComment","visitId","arrivalRideId","departureRideId","visitComment","locationName","arrivalRideComment","rideComment","key","concat","className","visitContainer","location","Boolean","storyPart","contentNode","some","container","propTypes","PropTypes","objectOf","string","isRequired","trips","shape","arrayOf","tripPropTypes","visitPropTypes","ridesPropTypes","compose","withRouter","withStyles","fontSize","lineHeight","margin","fontWeight","withProvision","state","_ref5","strTripId","match","params","tripId","toNumber","identity","request","rides","modelName","query","filter","trip_id","comparator","value","navigation","isDisabled","domain","selectDict","createControlledPromise","resolver","rejector","promise","Promise","resolve","reject","LocationCard","_ref10","_ref10$location","lat","lon","_ref10$visits","_ref10$visits$data","react_default","handleGoogleApiLoaded","_useMemo","useMemo","apiPromise","useEffect","marker","then","api","maps","Marker","position","lng","setMap","useMarker","orderedAndCountedVisitsByYear","visitsCountByYear","arrivalDateTime","reduce","memo","date","year","getFullYear","Object","entries","sort","_ref4","_slicedToArray","_ref8","_ref9","join","renderOrderedAndCountedVisitsByYear","googleMapContainer","lib_default","bootstrapURLKeys","__GOOGLE_MAP_API_KEY__","center","defaultZoom","onGoogleApiLoaded","locationPropTypes","ridePropTypes","width","maxWidth","height","maxHeight","_ref11","locationId","_ref12$value","selectProvisionStatus","_ref12$value$location","requiredVisitIds","observe","id","location_id","isNoop","visit_id","LocationPage","strLocationId","locations_LocationCard_LocationCard","withLoader","Component","props","_props$provision","provision","_props$provision$isPe","isPending","hasFallback","PlainLoader","_len2","arguments","provisionParams","Array","_key2","ExtendableComponent","_len","funcsArray","_key","arg","reduceRight","composed","func","provide","apply","uniqTrimAndJoin","array","maxLength","_ref$separator","separator","uniqArray","uniq","result","slice","resolveTripCaption","tripVisitsList","countriesDict","originCountryId","fallback","visitsByCountries","keys","groupBy","visitType","VISIT_TYPES","TRANSIT","countryId","Number","countryName","d","utils_groupAndSortVisitsByTrips","orderInTrip","groupAndSortVisitsByTrips","mapValues","input","number","isNaN","NaN","parseFloat"],"mappings":"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","file":"travel-TripStory-10b78f65002caff12445.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport compose from 'lodash/fp/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { toNumber } from 'modules/utilities/types/numbers';\nimport { selectDict } from 'core/connection';\nimport withProvision from 'core/connection/withProvision';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { sortVisitsByTrips } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst memoizedSortVisitsByTrips = memoizeByLastArgs(sortVisitsByTrips);\n\nconst styles = {\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  storyPart: { margin: '12px 0' },\n};\n\nconst TripStoryPage = ({\n  classes,\n  visits: { data: visitsList = [] } = {},\n  ridesDict,\n}) => {\n  if (!ridesDict || !visitsList) {\n    return <div>None</div>;\n  }\n\n  const noDataNode = <div>Заметки о поездке не найдены</div>;\n  if (!visitsList.length) {\n    return noDataNode;\n  }\n\n  const lastVisitIndex = visitsList.length - 1;\n  const storiesNodes = memoizedSortVisitsByTrips(visitsList).map(\n    (\n      { visitId, arrivalRideId, departureRideId, visitComment, locationName },\n      visitIndex,\n    ) => {\n      const { rideComment: arrivalRideComment } =\n        ridesDict[arrivalRideId] || {};\n\n      let departureRideComment;\n      if (lastVisitIndex === visitIndex) {\n        const { rideComment } = ridesDict[departureRideId] || {};\n        departureRideComment = rideComment;\n      }\n\n      if (!arrivalRideComment && !departureRideComment && !visitComment) {\n        return null;\n      }\n      return (\n        <article key={`id${visitId}`} className={classes.visitContainer}>\n          <h1 className={classes.location}>{locationName}</h1>\n          {Boolean(arrivalRideComment) && (\n            <section className={classes.storyPart}>\n              {arrivalRideComment}\n            </section>\n          )}\n          {Boolean(visitComment) && (\n            <section className={classes.storyPart}>{visitComment}</section>\n          )}\n          {Boolean(departureRideComment) && (\n            <section className={classes.storyPart}>\n              {departureRideComment}\n            </section>\n          )}\n        </article>\n      );\n    },\n  );\n\n  const contentNode = storiesNodes.some(Boolean) ? storiesNodes : noDataNode;\n  return <div className={classes.container}>{contentNode}</div>;\n};\n\nTripStoryPage.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n};\n\nconst mapStateToRequirements = (\n  state,\n  {\n    match: {\n      params: { strTripId },\n    },\n  },\n) => {\n  const tripId = toNumber(strTripId);\n  return {\n    identity: {\n      strTripId,\n    },\n    request: {\n      rides: {\n        modelName: 'rides',\n        query: {\n          filter: { trip_id: { comparator: '=', value: tripId } },\n          navigation: { isDisabled: true },\n        },\n      },\n      visits: {\n        modelName: 'visits',\n        query: {\n          filter: { trip_id: { comparator: '=', value: tripId } },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n    domain: 'tripStoryPage',\n  };\n};\n\nconst mapStateToProps = state => ({\n  ridesDict: selectDict(state, 'rides'),\n});\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  withProvision(mapStateToRequirements, mapStateToProps),\n)(TripStoryPage);\n","import { useMemo, useEffect } from 'react';\n\nconst createControlledPromise = () => {\n  // This fields will be initialized synchronously in promise constructor\n  let resolver = null;\n  let rejector = null;\n\n  const promise = new Promise((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  return { promise, resolver, rejector };\n};\n\nexport default ({ lat, lon }) => {\n  const { promise: apiPromise, resolver: handleGoogleApiLoaded } = useMemo(\n    createControlledPromise,\n    [],\n  );\n\n  useEffect(\n    () => {\n      let marker;\n      apiPromise.then(api => {\n        const { map, maps } = api;\n        marker = new maps.Marker({ position: { lat, lng: lon }, map });\n      });\n      return () => {\n        if (marker) {\n          marker.setMap(null);\n        }\n      };\n    },\n    [lat, lon],\n  );\n  return { handleGoogleApiLoaded };\n};\n","/* globals __GOOGLE_MAP_API_KEY__ */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport GoogleMapReact from 'google-map-react';\nimport compose from 'lodash/fp/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { selectProvisionStatus, selectDict } from 'core/connection';\nimport withProvision from 'core/connection/withProvision';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport useMarker from './useMarker';\n\nconst styles = {\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  googleMapContainer: {\n    margin: '12px 0',\n    width: '800px',\n    maxWidth: '100%',\n    height: '400px',\n    maxHeight: '100%',\n  },\n};\n\nconst renderOrderedAndCountedVisitsByYear = ({ visitsList, ridesDict }) => {\n  const visitsCountByYear = visitsList\n    .map(({ arrivalRideId }) => {\n      const { arrivalDateTime } = ridesDict[arrivalRideId] || {};\n      return arrivalDateTime;\n    })\n    .filter(Boolean)\n    .reduce((memo, date) => {\n      const year = date.getFullYear();\n      if (!memo[year]) {\n        memo[year] = 0;\n      }\n      memo[year] += 1;\n      return memo;\n    }, {});\n\n  return Object.entries(visitsCountByYear)\n    .sort(([keyA], [keyB]) => keyA - keyB)\n    .map(([key, value]) => (value > 1 ? `${key} x${value}` : key))\n    .join(', ');\n};\n\nconst LocationCard = ({\n  classes,\n  location: { locationName, lat, lon } = {},\n  visits: { data: visitsList = [] } = {},\n  ridesDict,\n}) => {\n  const noDataNode = <div>Заметки о поездке не найдены</div>;\n  if (!visitsList.length) {\n    return noDataNode;\n  }\n\n  const { handleGoogleApiLoaded } = useMarker({ lat, lon });\n\n  const orderedAndCountedVisitsByYear = renderOrderedAndCountedVisitsByYear({\n    visitsList,\n    ridesDict,\n  });\n  return (\n    <div className={classes.container}>\n      <h1 className={classes.location}>{locationName}</h1>\n      <div>\n        <span>{`Посещено ${visitsList.length} раз`}</span>\n        &nbsp;\n        {orderedAndCountedVisitsByYear && (\n          <span>{`в ${orderedAndCountedVisitsByYear}`}</span>\n        )}\n      </div>\n      <div className={classes.googleMapContainer}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: __GOOGLE_MAP_API_KEY__ }}\n          center={{ lat, lng: lon }}\n          defaultZoom={11}\n          onGoogleApiLoaded={handleGoogleApiLoaded}\n        />\n      </div>\n    </div>\n  );\n};\n\nLocationCard.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  location: PropTypes.shape(locationPropTypes).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  ridesDict: selectDict(state, 'rides'),\n});\n\nconst mapStateToRequirements = (state, { locationId }) => {\n  const {\n    value: { 'locationPage.visits': { data: requiredVisitIds } = {} } = {},\n  } = selectProvisionStatus(state, 'locationPage.visits') || {};\n  return {\n    request: {\n      location: {\n        modelName: 'locations',\n        observe: locationId,\n        query: { id: locationId },\n      },\n      visits: {\n        modelName: 'visits',\n        observe: locationId,\n        query: {\n          filter: { location_id: { comparator: '=', value: locationId } },\n          navigation: { isDisabled: true },\n        },\n      },\n      rides: {\n        modelName: 'rides',\n        isNoop: !requiredVisitIds || !requiredVisitIds.length,\n        observe: requiredVisitIds,\n        query: {\n          filter: { visit_id: { comparator: 'in', value: requiredVisitIds } },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n    domain: 'locationPage',\n  };\n};\n\nexport default compose(\n  withStyles(styles),\n  withProvision(mapStateToRequirements, mapStateToProps),\n)(LocationCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { toNumber } from 'modules/utilities/types/numbers';\nimport LocationCard from 'travel/components/models/locations/LocationCard';\n\nconst LocationPage = ({\n  match: {\n    params: { strLocationId },\n  },\n}) => <LocationCard locationId={toNumber(strLocationId)} />;\n\nLocationPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({ strLocationId: PropTypes.string }).isRequired,\n  }).isRequired,\n};\n\nexport default LocationPage;\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isPending = true, hasFallback } = {} } = props;\n  if (isPending && !hasFallback) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default (tripVisitsList, countriesDict, originCountryId, fallback) => {\n  if (!tripVisitsList.length) {\n    return fallback;\n  }\n  const visitsByCountries = Object.keys(\n    groupBy(\n      tripVisitsList.filter(\n        ({ visitType }) => visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n  if (visitsByCountries.length === 1) {\n    return (\n      uniqTrimAndJoin(tripVisitsList.map(({ locationName }) => locationName), {\n        maxLength: 4,\n      }) || fallback\n    );\n  }\n  return (\n    uniqTrimAndJoin(\n      visitsByCountries\n        .map(\n          countryId =>\n            Number(countryId) !== originCountryId &&\n            countriesDict[countryId] &&\n            countriesDict[countryId].countryName,\n        )\n        .filter(Boolean),\n      { maxLength: 4 },\n    ) || fallback\n  );\n};\n","import groupBy from 'lodash/groupBy';\nimport mapValues from 'lodash/mapValues';\n\nexport { default as resolveTripCaption } from './resolveTripCaption';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n\nexport const groupAndSortVisitsByTrips = visitsList =>\n  mapValues(groupBy(visitsList, 'tripId'), sortVisitsByTrips);\n","export const toNumber = input => {\n  const number = Number(input);\n  return Number.isNaN(number) ? NaN : parseFloat(input);\n};\n\nexport const toInteger = input => {\n  const number = Number(input);\n  return Number.isNaN(number) ? NaN : parseInt(input, 10);\n};\n"],"sourceRoot":""}