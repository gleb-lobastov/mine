{"version":3,"sources":["webpack:///./src/modules/utilities/request-kit/hocs/flattenIfNeeded.jsx","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/packages/literature/pages/Blog/blocks/Post.jsx","webpack:///./src/packages/literature/pages/Blog/blocks/Posts.jsx","webpack:///./src/packages/literature/pages/Blog/Blog.jsx"],"names":["mergeIfNeeded","provision","requirements","require","Array","isArray","Object","assign","apply","_toConsumableArray","memoizeByLastArgs","withLoader","Component","props","_props$provision","_props$provision$isCo","isComplete","_props$provision$isPe","isPending","react_default","a","createElement","PlainLoader","__webpack_exports__","mapStateToRequirements","ExtendableComponent","_len","arguments","length","funcsArray","_key","arg","reduceRight","composed","func","compose","provide","Post","React","PureComponent","_this$props$source","this","source","content","date","header","concat","format","locale","ru","react_markdown_default","assembleContent","PropTypes","shape","string","isRequired","id","number","sortByDateDesc","_ref","_ref2","dateA","dateB","Posts","sort","map","article","blocks_Post","key","arrayOf","articlePropTypes","contentsPropTypes","articles","Blog","_this$props$articles","_this$props$articles$","data","articlesList","blocks_Posts","withProvision","modelName","meta","domain"],"mappings":"2cAGA,IAAMA,EAAgB,SAACC,EAAWC,GAAiB,IACzCC,EAAYD,EAAZC,QACR,OAAKC,MAAMC,QAAQF,IAAaC,MAAMC,QAAQJ,GAGvCK,OAAOC,OAAPC,MAAAF,OAAMG,EAAWR,IAFfA,MAKoBS,YAAkBV,GACnBU,YAAkBV,WCPnCW,EAAa,SAAAC,GAAS,OAAI,SAAAC,GAAS,IAAAC,EACuBD,EAA7DZ,UADsCc,GAAAD,OAAA,IAAAA,EACgB,GADhBA,GACzBE,kBADyB,IAAAD,KAAAE,EAAAH,EACLI,UACzC,OAAKF,SAFyC,IAAAC,MAGrCE,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAEFH,EAAAC,EAAAC,cAACT,EAAcC,cCHTU,EAAA,WAAAC,GAAsB,OAAI,SAAAC,GAAmB,OAH5C,mBAAAC,EAAAC,UAAAC,OAAIC,EAAJ,IAAAzB,MAAAsB,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAID,EAAJC,GAAAH,UAAAG,GAAA,OAAmB,SAAAC,GAAG,OACpCF,EAAWG,YAAY,SAACC,EAAUC,GAAX,OAAoBA,EAAKD,IAAWF,IAG3DI,CACEC,YAAQZ,GAERb,EAHFwB,CAIEV,k8BCNEY,gaAAaC,IAAMC,+DASL,IAAAC,EAGZC,KAAK5B,MADP6B,OAAUC,EAFIH,EAEJG,QAASC,EAFLJ,EAEKI,KAAMC,EAFXL,EAEWK,OAG3B,aAAAC,OAAcD,EAAd,OAAAC,OAA0BC,IAAOH,EAAM,cAAe,CACpDI,OAAQC,MADV,UAAAH,OAEWH,oCAIX,OACExB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAesB,OAAQD,KAAKU,4DAtB9Bd,kBACe,CACjBK,OAAQU,IAAUC,MAAM,CACtBT,KAAMQ,IAAUE,OAAOC,WACvBZ,QAASS,IAAUE,OAAOC,WAC1BC,GAAIJ,IAAUK,OAAOF,aACpBA,yGAsBQlB,+yBC9Bf,IAAMqB,EAAiB,SAAAC,EAAAC,GAAsC,IAA7BC,EAA6BF,EAAnCf,KAAuBkB,EAAYF,EAAlBhB,KACzC,OAAIiB,EAAQC,GACF,EAEND,EAAQC,EACH,EAEF,GAGHC,gaAAczB,IAAMC,sDAWf,IACCG,EAAWD,KAAK5B,MAAhB6B,OAER,OACEvB,EAAAC,EAAAC,cAAA,eACGqB,EAAOsB,KAAKN,GAAgBO,IAAI,SAAAC,GAAO,OACtC/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAMC,IAAG,UAAAtB,OAAYoB,EAAQV,IAAMd,OAAQwB,2JAjB/CH,cACe,CACjBrB,OAAQU,IAAUiB,QAChBjB,IAAUC,MAAM,CACdT,KAAMQ,IAAUE,OAAOC,WACvBZ,QAASS,IAAUE,OAAOC,WAC1BC,GAAIJ,IAAUK,OAAOF,cAEvBA,aAgBSQ,+yBCjCf,IAAMO,EAAmB,CACvB1B,KAAMQ,IAAUE,OAAOC,WACvBZ,QAASS,IAAUE,OAAOC,WAC1BC,GAAIJ,IAAUK,OAAOF,YAGjBgB,EAAoB,CACxBC,SAAUpB,IAAUiB,QAAQjB,IAAUC,MAAMiB,KAGxCG,gaAAanC,IAAMC,sDAKd,IAAAmC,EACgDjC,KAAK5B,MAApD2D,SADDG,GAAAD,OAAA,IAAAA,EACyC,GADzCA,GACaE,KAAMC,OADnB,IAAAF,EACkC,GADlCA,EAGP,OAAOxD,EAAAC,EAAAC,cAACyD,EAAD,CAAOpC,OAAQmC,wJARpBJ,cACe,CACjBxE,UAAWmD,IAAUC,MAAMkB,GAAmBhB,aAiBnCwB,sBAPgB,iBAAO,CACpC5E,QAAS,CAAEqE,SAAU,CAAEQ,UAAW,aAClCC,KAAM,CACJC,OAAQ,UAIGH,CAAsCN","file":"literature-Blog-a994919fcbeb1f365921.js","sourcesContent":["import React from 'react';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\n\nconst mergeIfNeeded = (provision, requirements) => {\n  const { require } = requirements;\n  if (!Array.isArray(require) || !Array.isArray(provision)) {\n    return provision;\n  }\n  return Object.assign(...provision);\n};\n\nconst mergeProvisionIfNeeded = memoizeByLastArgs(mergeIfNeeded);\nconst mergeFallbackIfNeeded = memoizeByLastArgs(mergeIfNeeded);\n\nexport default WrappedComponent => ({\n  provision,\n  fallback,\n  requirements,\n  ...forwarderProps\n}) => (\n  <WrappedComponent\n    provision={mergeProvisionIfNeeded(provision, requirements)}\n    fallback={mergeFallbackIfNeeded(fallback, requirements)}\n    requirements={requirements}\n    {...forwarderProps}\n  />\n);\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isComplete = false, isPending = true } = {} } = props;\n  if (!isComplete || isPending) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import flattenIfNeeded from 'modules/utilities/request-kit/hocs/flattenIfNeeded';\nimport { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default mapStateToRequirements => ExtendableComponent =>\n  compose(\n    provide(mapStateToRequirements),\n    // flattenIfNeeded,\n    withLoader,\n  )(ExtendableComponent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport format from 'date-fns/format';\nimport ru from 'date-fns/locale/ru';\n\nclass Post extends React.PureComponent {\n  static propTypes = {\n    source: PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  };\n\n  assembleContent() {\n    const {\n      source: { content, date, header },\n    } = this.props;\n\n    return `### ${header} (*${format(date, 'D MMMM YYYY', {\n      locale: ru,\n    })}*)\\n\\n${content}`;\n  }\n\n  render() {\n    return (\n      <article>\n        <ReactMarkdown source={this.assembleContent()} />\n      </article>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst sortByDateDesc = ({ date: dateA }, { date: dateB }) => {\n  if (dateA > dateB) {\n    return -1;\n  }\n  if (dateA < dateB) {\n    return 1;\n  }\n  return 0;\n};\n\nclass Posts extends React.PureComponent {\n  static propTypes = {\n    source: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n      }),\n    ).isRequired,\n  };\n\n  render() {\n    const { source } = this.props;\n\n    return (\n      <section>\n        {source.sort(sortByDateDesc).map(article => (\n          <Post key={`article${article.id}`} source={article} />\n        ))}\n      </section>\n    );\n  }\n}\n\nexport default Posts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withProvision from 'core/connection/withProvision';\nimport Posts from './blocks/Posts';\n\nconst articlePropTypes = {\n  date: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nconst contentsPropTypes = {\n  articles: PropTypes.arrayOf(PropTypes.shape(articlePropTypes)),\n};\n\nclass Blog extends React.PureComponent {\n  static propTypes = {\n    provision: PropTypes.shape(contentsPropTypes).isRequired,\n  };\n\n  render() {\n    const { articles: { data: articlesList = [] } = {} } = this.props;\n\n    return <Posts source={articlesList} />;\n  }\n}\n\nconst mapStateToRequirements = () => ({\n  require: { articles: { modelName: 'articles' } },\n  meta: {\n    domain: 'blog',\n  },\n});\n\nexport default withProvision(mapStateToRequirements)(Blog);\n"],"sourceRoot":""}