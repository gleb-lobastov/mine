{"version":3,"sources":["webpack:///./src/packages/travel/pages/VisitsPage/consts.js","webpack:///./src/packages/travel/pages/VisitsPage/useVisitsPageStyles.js","webpack:///./src/packages/travel/pages/VisitsPage/useVisitsGroupingSidebar.js","webpack:///./src/packages/travel/pages/VisitsPage/utils.js","webpack:///./src/packages/travel/pages/VisitsPage/calcCounters.js","webpack:///./src/packages/travel/pages/VisitsPage/switchSortingFn.js","webpack:///./src/packages/travel/components/models/countries/CountryInfo/CountryInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderCountry.js","webpack:///./src/packages/travel/components/models/rides/RideInfo/RideInfo.jsx","webpack:///./src/packages/travel/components/models/locations/LocationInfo/LocationInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderOriginLocation.js","webpack:///./src/packages/travel/components/models/trips/TripInfo/TripInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderTrip.js","webpack:///./src/packages/travel/components/common/YearInfo/YearInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderYear.js","webpack:///./src/packages/travel/pages/VisitsPage/calcCountriesRating.js","webpack:///./src/packages/travel/pages/VisitsPage/VisitsPage.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderNodesInOrder.js","webpack:///./src/packages/travel/pages/LocationsPage/blocks/LocationRating.jsx","webpack:///./src/packages/travel/pages/LocationsPage/useMarkers.js","webpack:///./src/packages/travel/pages/LocationsPage/LocationsPage.jsx","webpack:///./src/packages/travel/pages/LocationsPage/useUserLocations.js","webpack:///./src/packages/travel/pages/TripStoryPage/TripStoryPage.jsx","webpack:///./src/modules/utilities/types/numbers.js","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack:///./src/packages/travel/models/trips/utils/index.js"],"names":["GROUP_VISITS_BY","SORT_VISITS_BY","COMPARATORS","VISIT","ARRIVAL_YEAR","TRIP","DEPARTURE_TIME","ID","COUNTRY","VISITS","RATING","NAME_ID","LOCATION","makeStyles","theme","group","backgroundColor","top","marginTop","spacing","subgroup","detail","color","fontSize","formControl","width","ratingBlock","display","alignItems","ratingIcon","halfDown","position","resolveTripCountryId","tripId","countryId","resolveYearCountryId","year","lastCacheKey","cachedResult","inc","ref","refKey","counterName","counterKey","countersRef","counterRef","currentCount","getLocationVisitsCount","counters","locationId","locations","visits","Object","keys","length","getCountryVisitsCount","countries","getLocationVisitsByYearCount","years","COMPARATOR_FUNCTIONS_MAPPING","visitA","visitB","arrivalDateTimeA","arrivalDateTime","arrivalDateTimeB","getFullYear","countriesDict","countryIdA","countryIdB","countryNameA","countryName","countryNameB","countriesRating","_","locationIdA","locationNameA","locationName","locationIdB","locationNameB","locationsRating","tripsDict","tripIdA","tripIdB","departureDateTimeA","departureDateTime","departureDateTimeB","resolveComparatorBySortFn","sortFn","ENTITY_COMPARATORS","createComparator","dicts","comparatorsKeys","comparatorFuncs","map","comparatorKey","comparatorFnCreator","warning","filter","Boolean","fnIdx","comparisonResult","memoizeOne","locationsDict","memoize","ratings","values","countryIdToCompare","rating","sum","CountryInfo","country","isSubgroup","isDetail","className","children","classes","useVisitsPageStyles","Typography","variant","renderCountry","visit","visitId","changes","isTripChanged","isCountryChanged","provision","groupBy","isGroupedByTrip","isGroupedByYearCountries","locationsCounter","yearsCountries","tripsCountries","key","useStyles","icon","height","absoluteIcon","RideInfo","ride","rideId","vehicleType","rideType","Icon","VEHICLE_TYPES","CAR","CarIcon","TRAIN","TrainIcon","AIRCRAFT","FlightIcon","BUS","TROLLEY","CITY_BUS","BusIcon","MOTORHOME","JITNEY","VanIcon","LOCAL_TRAIN","FERRY","BoatIcon","BIKE","BikeIcon","BY_FEET","WalkIcon","MOTORBIKE","MotorcycleIcon","TRUCK","TruckIcon","ALL_TERRAIN_VEHICLE","TerrainIcon","TRAM","TramIcon","TAXI","LocalTaxiIcon","SUBWAY","SubwayIcon","PUBLIC_TRANSPORT","SeatIcon","ROPEWAY","FUNICULAR","CustomTransportIcon","resolveRideIconComponent","UnknownRideIcon","RIDE_TYPES","HITCH_HIKING","autoMargin","marginLeft","LocationInfo","shouldJustifyContent","location","childrenArray","React","Children","toArray","lastChildren","slice","restChildren","Grid","container","justify","item","GROUPS_TO_RENDER_COUNTRY","GROUPS_TO_RENDER_YEARS_OF_VISIT","renderLocation","departureRideId","isYearChanged","isLocationChanged","visitsDict","ridesDict","sortBy","isGroupedByTripsOnly","countryDetailNode","includes","visitsCount","resolveVisitsCounter","visitsDetailNode","yearsOfVisitDetailNode","getYearsOfVisits","join","childrenNodes","nodes","reduce","nodesMemo","node","index","push","joinNodes","locationRating","LOCATION_RATING","PLACE_TO_LIVE","FEW_PER_YEAR","ONCE_PER_YEAR","ONCE_PER_TWO_YEARS","ONCE_PER_FIVE_YEARS","ONCE_PER_DECADE","TWICE_PER_LIVE","ONCE_PER_LIVE","NEVER","renderRatingNode","renderAlignedRatingNode","visitDateTimePeriodToString","renderOriginLocation","arrivalRideId","willTripChange","shouldRenderRide","trip","originLocationId","originLocation","TripInfo","tripName","paragraph","renderTrip","YearInfo","renderYear","isGroupedByCountriesYear","calcCountriesRating","locationsIds","ratingsGroupedByCountries","memo","mapValues","ratingsByCountry","Infinity","avg","a","b","best","max","lengthRatio","Math","log","averageRating","VisitsPage","userAlias","match","params","useQueryFilter","queryFilter","setQueryFilter","useSidebar","closeSidebar","List","ListItem","FormControl","InputLabel","shrink","id","Select","labelId","autoWidth","value","onChange","event","target","MenuItem","useVisitsGroupingSidebar","useTripsStats","isPending","isError","updatesCounter","visitsIds","locationsPath","usePaths","travel","unsortedVisitsList","visitsList","cacheKey","totalVisits","trips","forEach","calcCounters","sortingFn","NAME","switchSortingFn","sort","prevVisit","prevCountryId","prevLocationId","prevTripId","nextTripId","prevYear","resolveArrivalYear","checkIsGroupedByTrip","renderProps","renderNodesInOrder","checkIsGroupedByYear","checkIsGroupedByCountry","nodeToPush","titleNode","to","toUrl","component","Link","RATING_LOCALIZATION","LocationRating","isEditable","onSubmitLocationRating","propTypes","PropTypes","number","isRequired","bool","func","defaultProps","createControlledPromise","resolver","rejector","promise","Promise","resolve","reject","lineHeight","visitContainer","margin","fontWeight","googleMapContainer","maxWidth","maxHeight","LocationsPage","strLocationId","useAuthContext","isAuthenticated","authenticatedUserAlias","domain","submitLocationRating","useLocationRatingRequest","useUserLocations","parseInt","actualLocationsIds","handleSubmitLocationRating","useCallback","locationIdToSubmit","query","String","condition","handleGoogleApiLoaded","markersCoords","useMemo","apiPromise","previousCoords","useRef","changesCount","useEffect","isEqual","current","markers","then","api","maps","bounds","LatLngBounds","lat","lon","marker","Marker","lng","extend","fitBounds","getZoom","setZoom","setMap","useMarkers","locationIdToShowMarker","bootstrapURLKeys","__GOOGLE_MAP_API_KEY__","center","zoom","onGoogleApiLoaded","locationsIdToRender","Fragment","shape","string","memoizedSortVisitsByTrips","memoizeByLastArgs","sortVisitsByTrips","TripStoryPage","data","noDataNode","lastVisitIndex","storiesNodes","visitIndex","departureRideComment","visitComment","arrivalRideComment","rideComment","storyPart","contentNode","some","objectOf","arrayOf","tripPropTypes","visitPropTypes","ridesPropTypes","compose","withRouter","withStyles","withProvision","state","input","strTripId","Number","isNaN","NaN","parseFloat","identity","request","rides","modelName","trip_id","comparator","navigation","isDisabled","selectDict","tripsProvision","useProvision","isProvision","observe","useTrips","useUser","user","userProvision","selectResult","tripsIds","useSelector","Array","from","Set","flatMap","tripsId","ridesIds","countriesIds","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","selectUpdatesCounter","isReady","every","selectIsReady","selectIsPending","isValid","selectIsValid","error","find","selectIsError","errors","selectError","mergeProvisionsState","ridesStats","calcRidesStats","earliestDeparture","Date","min","getTime","latestArrival","isLoading","withLoader","Component","props","hasFallback","PlainLoader","funcsArray","arg","reduceRight","composed","provisionParams","ExtendableComponent","provide","selectItem","applicableSchemaName","requiredLocationIds","missingLocationsIds","useRequest","method","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","periodEndString","dateFormat","locale","ru","isSameDay","periodStartString","isSameMonth","isSameYear","rideDateTimePeriodToString","array","maxLength","separator","uniqArray","uniq","result","tripVisitsList","originCountryId","fallback","visitsByCountries","visitType","VISIT_TYPES","TRANSIT","uniqTrimAndJoin","orderInTrip"],"mappings":"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","file":"travel-TripStory-f8cc23fe62eed38cf5f5.js","sourcesContent":["export const KEY_GROUP_VISITS_BY = 'group';\nexport const GROUP_VISITS_BY = {\n  LOCATIONS: 'loc',\n  COUNTRIES: 'c',\n  YEARS: 'yr',\n  YEARS_COUNTRIES: 'yr_c',\n  COUNTRIES_YEARS: 'c_yr',\n  TRIPS: 't',\n  TRIPS_COUNTRIES: 't_с',\n};\n\nexport const KEY_SORT_VISITS_BY = 'sort';\nexport const SORT_VISITS_BY = {\n  RATING_ALPHABET: 'r_a',\n  VISITS_ALPHABET: 'v_a',\n  ALPHABET: 'a',\n};\n\nexport const COMPARATORS = {\n  VISIT: { ARRIVAL_YEAR: 'ARRIVAL_YEAR' },\n  TRIP: { DEPARTURE_TIME: 'TRIP_DEPARTURE_DATE', ID: 'TRIP_ID' },\n  COUNTRY: {\n    VISITS: 'COUNTRY_VISITS',\n    RATING: 'COUNTRY_RATING',\n    NAME_ID: 'COUNTRY_NAME_ID',\n  },\n  LOCATION: {\n    VISITS: 'LOCATION_VISITS',\n    RATING: 'LOCATION_RATING',\n    NAME_ID: 'LOCATION_NAME_ID',\n  },\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n  group: {\n    backgroundColor: 'white',\n    top: 0,\n    '&:not(:first-of-type)': {\n      marginTop: theme.spacing(5),\n    },\n\n    '& ~ $subgroup': {\n      marginTop: theme.spacing(2),\n    },\n\n    '& + $subgroup ': {\n      marginTop: 0,\n    },\n  },\n  subgroup: {\n    backgroundColor: 'white',\n    top: 38,\n  },\n  detail: {\n    color: 'gray',\n    fontSize: 12,\n  },\n  formControl: {\n    width: '100%',\n  },\n  ratingBlock: { display: 'inline-flex', alignItems: 'center' },\n  ratingIcon: { color: 'gray', fontSize: 12 },\n  halfDown: { position: 'relative', top: 12 },\n}));\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useSidebar } from 'core/context/SidebarContext';\nimport {\n  GROUP_VISITS_BY,\n  KEY_GROUP_VISITS_BY,\n  SORT_VISITS_BY,\n  KEY_SORT_VISITS_BY,\n} from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\n\nexport default function(setQueryFilter, { groupBy, sortBy }) {\n  const classes = useVisitsPageStyles();\n  useSidebar(\n    ({ closeSidebar }) => (\n      <List>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <InputLabel shrink={true} id=\"select-groupBy-filter-label\">\n              Сгруппировать\n            </InputLabel>\n            <Select\n              labelId=\"select-groupBy-filter-label\"\n              autoWidth={true}\n              id=\"select-groupBy-filter\"\n              value={groupBy}\n              onChange={event => {\n                closeSidebar();\n                setQueryFilter({\n                  [KEY_GROUP_VISITS_BY]: event.target.value,\n                });\n              }}\n            >\n              <MenuItem value={GROUP_VISITS_BY.LOCATIONS}>По городам</MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.COUNTRIES}>По странам</MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.YEARS}>По годам</MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.YEARS_COUNTRIES}>\n                По годам и странам\n              </MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.COUNTRIES_YEARS}>\n                По странам и годам\n              </MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.TRIPS}>По поездкам</MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.TRIPS_COUNTRIES}>\n                По поездкам и странам\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </ListItem>\n        {groupBy !== GROUP_VISITS_BY.TRIPS && (\n          <ListItem>\n            <FormControl className={classes.formControl}>\n              <InputLabel shrink={true} id=\"select-sortBy-filter-label\">\n                Сортировать\n              </InputLabel>\n              <Select\n                labelId=\"select-sortBy-filter-label\"\n                autoWidth={true}\n                id=\"select-sortBy-filter\"\n                value={sortBy}\n                onChange={event => {\n                  closeSidebar();\n                  setQueryFilter({\n                    [KEY_SORT_VISITS_BY]: event.target.value,\n                  });\n                }}\n              >\n                <MenuItem value={SORT_VISITS_BY.ALPHABET}>По алфавиту</MenuItem>\n                <MenuItem value={SORT_VISITS_BY.VISITS_ALPHABET}>\n                  По числу посещений\n                </MenuItem>\n                <MenuItem value={SORT_VISITS_BY.RATING_ALPHABET}>\n                  По рейтингу\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </ListItem>\n        )}\n      </List>\n    ),\n    [groupBy, sortBy],\n  );\n}\n","export function resolveTripCountryId(tripId, countryId) {\n  return `t${tripId}_c${countryId}`;\n}\nexport function resolveYearCountryId(year, countryId) {\n  return `y${year}_c${countryId}`;\n}\n\nexport function resolveArrivalYear({ arrivalDateTime }) {\n  if (!arrivalDateTime) {\n    return null;\n  }\n  return arrivalDateTime.getFullYear(arrivalDateTime);\n}\n","import {\n  resolveTripCountryId,\n  resolveYearCountryId,\n  resolveArrivalYear,\n} from './utils';\n\nlet lastCacheKey = null;\nlet cachedResult = null;\nexport default function calcCounters(visitsList, cacheKey) {\n  if (cacheKey && cacheKey === lastCacheKey) {\n    return cachedResult;\n  }\n\n  const counters = {\n    totalVisits: {},\n    countries: {},\n    years: {},\n    trips: {},\n    tripsCountries: {},\n    yearsCountries: {},\n    locations: {},\n  };\n\n  visitsList.forEach(visit => {\n    const { locationId, countryId, tripId, visitId } = visit;\n    const year = resolveArrivalYear(visit);\n\n    inc(counters.countries, countryId, 'visits', visitId);\n    inc(counters.countries, countryId, 'locations', locationId);\n    inc(counters.countries, countryId, 'years', year);\n    inc(counters.countries, countryId, 'trips', tripId);\n\n    inc(counters.years, year, 'locations', locationId);\n    inc(counters.years, year, 'countries', countryId);\n    inc(counters.years, year, 'trips', tripId);\n\n    inc(counters.trips, tripId, 'visits', visitId);\n    inc(counters.trips, tripId, 'locations', locationId);\n    inc(counters.trips, tripId, 'countries', countryId);\n\n    inc(counters.locations, locationId, 'visits', visitId);\n    inc(counters.locations, locationId, 'years', year);\n    inc(counters.locations, locationId, 'trips', tripId);\n\n    inc(\n      counters.tripsCountries,\n      resolveTripCountryId(tripId, countryId),\n      'locations',\n      locationId,\n    );\n    inc(\n      counters.yearsCountries,\n      resolveYearCountryId(year, countryId),\n      'locations',\n      locationId,\n    );\n  }, {});\n\n  lastCacheKey = cacheKey;\n  cachedResult = counters;\n\n  return counters;\n}\n\nfunction inc(ref, refKey, counterName, counterKey) {\n  /* eslint-disable no-multi-assign, no-param-reassign */\n  let countersRef = ref[refKey];\n  if (!countersRef) {\n    countersRef = ref[refKey] = {};\n  }\n\n  let counterRef = countersRef[counterName];\n  if (!counterRef) {\n    counterRef = countersRef[counterName] = {};\n  }\n  /* eslint-enable no-multi-assign, no-param-reassign */\n\n  const currentCount = counterRef[counterKey] || 0;\n  counterRef[counterKey] = currentCount + 1;\n}\n\nexport function getLocationVisitsCount(counters = {}, locationId) {\n  const { locations: { [locationId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getCountryVisitsCount(counters = {}, countryId) {\n  const { countries: { [countryId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getLocationVisitsByYearCount(counters, locationId, year) {\n  const {\n    years: {\n      [year]: {\n        locations: { [locationId]: locationVisitsByYearCount } = {},\n      } = {},\n    } = {},\n  } = counters;\n  return locationVisitsByYearCount;\n}\n\nexport function getYearsOfVisits(counters, locationId) {\n  const { locations: { [locationId]: { years = {} } = {} } = {} } = counters;\n  return Object.keys(years);\n}\n","import warning from 'warning';\nimport memoize from 'lodash/memoize';\nimport sum from 'lodash/sum';\nimport memoizeOne from 'memoize-one';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY, COMPARATORS } from './consts';\nimport { getLocationVisitsCount, getCountryVisitsCount } from './calcCounters';\n\nconst COMPARATOR_FUNCTIONS_MAPPING = {\n  [COMPARATORS.VISIT.ARRIVAL_YEAR]: createArrivalYearComparator,\n  [COMPARATORS.COUNTRY.NAME_ID]: createCountryNameIdComparator,\n  [COMPARATORS.COUNTRY.RATING]: createCountryRatingComparator,\n  [COMPARATORS.COUNTRY.VISITS]: createCountryVisitsComparator,\n  [COMPARATORS.LOCATION.NAME_ID]: createLocationNameIdComparator,\n  [COMPARATORS.LOCATION.RATING]: createLocationRatingComparator,\n  [COMPARATORS.LOCATION.VISITS]: createLocationVisitsComparator,\n  [COMPARATORS.TRIP.DEPARTURE_TIME]: createTripDepartureTimeComparator,\n  [COMPARATORS.TRIP.ID]: createTripIdComparator,\n};\n\nexport default function switchSortingFn(queryFilter, dicts, counters) {\n  const { groupBy, sortBy } = queryFilter;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      // sorting is not applicable, as locations ordered chronologically\n      return createComparator(dicts, counters, [\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        COMPARATORS.LOCATION.NAME,\n      ]);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return createComparator(dicts, counters, [\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return createComparator(dicts, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS:\n      return createComparator(dicts, counters, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return createComparator(dicts, counters, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return createComparator(dicts, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      return createComparator(dicts, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n  }\n}\n\nfunction resolveComparatorBySortFn(sortFn, ENTITY_COMPARATORS) {\n  switch (sortFn) {\n    case SORT_VISITS_BY.VISITS_ALPHABET:\n      return [ENTITY_COMPARATORS?.VISITS];\n    case SORT_VISITS_BY.RATING_ALPHABET:\n      return [ENTITY_COMPARATORS?.RATING, ENTITY_COMPARATORS?.VISITS];\n    default:\n      return [];\n  }\n}\n\nfunction createComparator(dicts, counters, comparatorsKeys) {\n  const comparatorFuncs = comparatorsKeys\n    .map(comparatorKey => {\n      const comparatorFnCreator = COMPARATOR_FUNCTIONS_MAPPING[comparatorKey];\n      warning(comparatorFnCreator, 'missing comparatorKey: %s', comparatorKey);\n      if (!comparatorFnCreator) {\n        return null;\n      }\n      return comparatorFnCreator(dicts, counters);\n    })\n    .filter(Boolean);\n\n  return (visitA, visitB) => {\n    for (let fnIdx = 0; fnIdx < comparatorFuncs.length; fnIdx += 1) {\n      const comparisonResult = comparatorFuncs[fnIdx](visitA, visitB);\n      if (comparisonResult) {\n        return comparisonResult;\n      }\n    }\n    return 0;\n  };\n}\n\nfunction createLocationNameIdComparator() {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA, locationName: locationNameA } = visitA;\n    const { locationId: locationIdB, locationName: locationNameB } = visitB;\n    if (locationNameA > locationNameB) {\n      return 1;\n    }\n    if (locationNameB > locationNameA) {\n      return -1;\n    }\n    return locationIdA - locationIdB;\n  };\n}\n\nfunction createLocationRatingComparator({ locationsRating }) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    const ratingA = locationsRating[locationIdA] || 10;\n    const ratingB = locationsRating[locationIdB] || 10;\n    return ratingA - ratingB;\n  };\n}\n\nfunction createLocationVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    return (\n      getLocationVisitsCount(counters, locationIdB) -\n      getLocationVisitsCount(counters, locationIdA)\n    );\n  };\n}\n\nfunction createCountryNameIdComparator({ countriesDict }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const { countryName: countryNameA } = countriesDict[countryIdA] || {};\n    const { countryName: countryNameB } = countriesDict[countryIdB] || {};\n\n    if (countryNameA > countryNameB) {\n      return 1;\n    }\n    if (countryNameB > countryNameA) {\n      return -1;\n    }\n    return countryIdA - countryIdB;\n  };\n}\n\nconst resolveCountryRating = memoizeOne(locationsDict =>\n  memoize(countryId => {\n    const ratings = Object.values(locationsDict)\n      .filter(\n        ({ countryId: countryIdToCompare }) => countryId === countryIdToCompare,\n      )\n      .map(({ rating }) => rating);\n    if (!ratings.length) {\n      return 0;\n    }\n    return sum(ratings) / ratings.length;\n  }),\n);\n\nfunction createCountryRatingComparator({ countriesRating }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const ratingA = countriesRating[countryIdA] || 10;\n    const ratingB = countriesRating[countryIdB] || 10;\n    return ratingA - ratingB;\n  };\n}\n\nfunction createCountryVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    return (\n      getCountryVisitsCount(counters, countryIdB) -\n      getCountryVisitsCount(counters, countryIdA)\n    );\n  };\n}\n\nfunction createTripDepartureTimeComparator({ tripsDict }) {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n    const { departureDateTime: departureDateTimeA } = tripsDict[tripIdA] || {};\n    const { departureDateTime: departureDateTimeB } = tripsDict[tripIdB] || {};\n\n    if (!departureDateTimeA && !departureDateTimeB) {\n      return 0;\n    }\n    if (!departureDateTimeA || !departureDateTimeB) {\n      // here also considered previous check: !arrivalDateTimeA && !arrivalDateTimeB\n      return departureDateTimeA ? -1 : 1;\n    }\n    return departureDateTimeB.getFullYear() - departureDateTimeA.getFullYear();\n  };\n}\n\nfunction createTripIdComparator() {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n\n    return tripIdA - tripIdB;\n  };\n}\n\nfunction createArrivalYearComparator() {\n  return (visitA, visitB) => {\n    const { arrivalDateTime: arrivalDateTimeA } = visitA;\n    const { arrivalDateTime: arrivalDateTimeB } = visitB;\n\n    if (!arrivalDateTimeA && !arrivalDateTimeB) {\n      return 0;\n    }\n    if (!arrivalDateTimeA || !arrivalDateTimeB) {\n      // here also considered previous check: !arrivalDateTimeA && !arrivalDateTimeB\n      return arrivalDateTimeA ? -1 : 1;\n    }\n    return arrivalDateTimeB.getFullYear() - arrivalDateTimeA.getFullYear();\n  };\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function CountryInfo({\n  country: { countryName } = {},\n  isSubgroup,\n  isDetail,\n  className,\n  children,\n}) {\n  const classes = useVisitsPageStyles();\n  if (isDetail) {\n    return <span className={className}>{countryName}</span>;\n  }\n  return (\n    <Typography\n      variant={isSubgroup ? 'h5' : 'h4'}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {countryName} {children}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { GROUP_VISITS_BY } from '../consts';\nimport { resolveTripCountryId, resolveYearCountryId } from '../utils';\n\nexport default function renderCountry({\n  visit: { tripId, visitId, countryId },\n  changes: { isTripChanged, isCountryChanged },\n  provision: { countriesDict },\n  groupBy,\n  year,\n  counters,\n  classes,\n}) {\n  const isGroupedByTrip = groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES;\n  const isGroupedByYearCountries = groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES;\n  const shouldRender = isCountryChanged || (isGroupedByTrip && isTripChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  let locationsCounter = 0;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.countries?.[countryId]?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.yearsCountries?.[resolveYearCountryId(year, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.tripsCountries?.[resolveTripCountryId(tripId, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    default:\n      break;\n  }\n  return (\n    <CountryInfo\n      key={`c${countryId}_v${visitId}`}\n      country={countriesDict[countryId]}\n      isSubgroup={isGroupedByTrip || isGroupedByYearCountries}\n    >\n      {locationsCounter > 2 && (\n        <span className={classes.detail}>{`${locationsCounter} мест`}</span>\n      )}\n    </CountryInfo>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { VEHICLE_TYPES, RIDE_TYPES } from 'travel/models/rides/consts';\n\nconst useStyles = makeStyles({\n  icon: { color: 'gray', fontSize: 16, height: 16 },\n  absoluteIcon: { // todo fast decision, need refactor\n    color: 'gray',\n    fontSize: 16,\n    height: 16,\n    position: 'absolute',\n  },\n  detail: { color: 'gray', fontSize: 12 },\n});\n\nexport default function RideInfo({\n  ride: { rideId, vehicleType, rideType } = {},\n  className,\n}) {\n  const classes = useStyles();\n  const Icon = rideId ? resolveRideIconComponent(vehicleType) : UnknownRideIcon;\n\n  return (\n    <div className={className}>\n      <Icon className={classes.icon} />\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.absoluteIcon} />\n      )}\n    </div>\n  );\n}\n\nfunction resolveRideIconComponent(vehicleType) {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n    default:\n      return CustomTransportIcon;\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  autoMargin: { marginLeft: 'auto' },\n});\n\nexport default function LocationInfo({\n  children,\n  shouldJustifyContent,\n  location: { locationName } = {},\n}) {\n  const classes = useStyles();\n  const childrenArray = React.Children.toArray(children);\n  if (!shouldJustifyContent || childrenArray.length <= 1) {\n    return (\n      <Typography>\n        {locationName} {children}\n      </Typography>\n    );\n  }\n\n  const lastChildren = childrenArray.slice(-1);\n  const restChildren = childrenArray.slice(0, -1);\n  return (\n    <Grid container={true} justify=\"space-between\" alignItems=\"center\">\n      <Grid item={true}>\n        <Typography>\n          {locationName} {restChildren}\n        </Typography>\n      </Grid>\n      <Grid item={true} classes={{ item: classes.autoMargin }}>\n        {lastChildren}\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport IconStar from '@material-ui/icons/StarBorder';\nimport IconThumbDown from '@material-ui/icons/ThumbDownOutlined';\nimport IconThumbsUpDown from '@material-ui/icons/ThumbsUpDownOutlined';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY } from '../consts';\nimport {\n  getYearsOfVisits,\n  getLocationVisitsByYearCount,\n  getLocationVisitsCount,\n} from '../calcCounters';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\nconst GROUPS_TO_RENDER_YEARS_OF_VISIT = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.COUNTRIES,\n];\n\nexport default function renderLocation({\n  visit,\n  visit: { visitId, locationId, countryId, departureRideId },\n  classes,\n  changes: {\n    isYearChanged,\n    isCountryChanged,\n    isTripChanged,\n    isLocationChanged,\n  },\n  year,\n  provision: {\n    locationsDict,\n    locationsRating,\n    countriesDict,\n    visitsDict,\n    ridesDict,\n  },\n  groupBy,\n  sortBy,\n  counters,\n}) {\n  const isGroupedByTripsOnly = groupBy === GROUP_VISITS_BY.TRIPS;\n  const shouldRender =\n    isGroupedByTripsOnly || // every visit in trip should be shown\n    isTripChanged || // in other grouping show only unique locations\n    isYearChanged ||\n    isCountryChanged ||\n    isLocationChanged;\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  const visitsCount = resolveVisitsCounter(visit, counters, year, groupBy);\n  const visitsDetailNode =\n    sortBy !== SORT_VISITS_BY.RATING_ALPHABET && visitsCount > 1 ? (\n      <span className={classes.detail}>{`${visitsCount} визитов`}</span>\n    ) : null;\n\n  const shouldRenderYearOfVisit =\n    sortBy !== SORT_VISITS_BY.RATING_ALPHABET &&\n    GROUPS_TO_RENDER_YEARS_OF_VISIT.includes(groupBy);\n  const yearsOfVisitDetailNode = shouldRenderYearOfVisit ? (\n    <span className={classes.detail}>\n      {`в ${getYearsOfVisits(counters, locationId).join(', ')}`}\n    </span>\n  ) : null;\n\n  const ratingNode =\n    sortBy === SORT_VISITS_BY.RATING_ALPHABET\n      ? renderAlignedRatingNode({\n          classes,\n          locationRating: locationsRating?.[locationId],\n        })\n      : null;\n\n  const childrenNodes = joinNodes(\n    countryDetailNode,\n    ratingNode,\n    visitsDetailNode,\n    yearsOfVisitDetailNode,\n  );\n\n  return (\n    <LocationInfo\n      key={`l${locationId}_v${visitId}`}\n      location={locationsDict[locationId]}\n      country={countriesDict[countryId]}\n      shouldJustifyContent={isGroupedByTripsOnly}\n    >\n      {childrenNodes}\n      {isGroupedByTripsOnly && (\n        <Grid container={true}>\n          <Grid item={true}>\n            <Typography className={classes.detail}>\n              {visitDateTimePeriodToString(visitsDict[visitId])}\n            </Typography>\n          </Grid>\n          <Grid item={true}>\n            <RideInfo ride={ridesDict[departureRideId]} className={classes.halfDown}/>\n          </Grid>\n        </Grid>\n      )}\n    </LocationInfo>\n  );\n}\n\nfunction renderAlignedRatingNode({ locationRating, classes }) {\n  return (\n    <div className={classes.ratingBlock}>\n      {renderRatingNode({ locationRating, classes })}\n    </div>\n  );\n}\n\nfunction renderRatingNode({ locationRating, classes }) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return <IconStar className={classes.ratingIcon} />;\n    case LOCATION_RATING.NEVER:\n      return <IconThumbDown className={classes.ratingIcon} />;\n    default:\n      return <IconThumbsUpDown className={classes.ratingIcon} />;\n  }\n}\n\nfunction joinNodes(...nodes) {\n  return nodes.filter(Boolean).reduce((nodesMemo, node, index) => {\n    if (index > 0) {\n      nodesMemo.push(<span> </span>);\n    }\n    nodesMemo.push(node);\n    return nodesMemo;\n  }, []);\n}\n\nfunction resolveVisitsCounter(visit, counters = {}, year, groupBy) {\n  const { locationId } = visit;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.LOCATIONS:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.YEARS:\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return getLocationVisitsByYearCount(counters, locationId, year);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n    default:\n      break;\n  }\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport IconStar from '@material-ui/icons/StarBorder';\nimport IconThumbDown from '@material-ui/icons/ThumbDownOutlined';\nimport IconThumbsUpDown from '@material-ui/icons/ThumbsUpDownOutlined';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY } from '../consts';\nimport {\n  getYearsOfVisits,\n  getLocationVisitsByYearCount,\n  getLocationVisitsCount,\n} from '../calcCounters';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\n\nexport default function renderOriginLocation({\n  visit: { tripId, arrivalRideId },\n  classes,\n  changes: { isTripChanged, willTripChange },\n  provision: { tripsDict, locationsDict, countriesDict, ridesDict },\n  groupBy,\n  shouldRenderRide,\n}) {\n  if (!isTripChanged && !willTripChange) {\n    return null;\n  }\n  const trip = tripsDict[tripId];\n  if (!trip) {\n    return null;\n  }\n  const { originLocationId } = trip;\n\n  const originLocation = locationsDict[originLocationId];\n  if (!originLocation) {\n    return null;\n  }\n\n  const { countryId } = originLocation;\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  const childrenNodes = countryDetailNode;\n\n  return (\n    <LocationInfo\n      key={`t${tripId}_ol${originLocationId}`}\n      location={locationsDict[originLocationId]}\n      country={countriesDict[countryId]}\n      shouldJustifyContent={shouldRenderRide}\n    >\n      {childrenNodes}\n      {shouldRenderRide && (\n        <RideInfo\n          ride={ridesDict[arrivalRideId]}\n          className={classes.halfDown}\n        />\n      )}\n    </LocationInfo>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function TripInfo({ trip: { tripName } = {} }) {\n  const classes = useVisitsPageStyles();\n  return (\n    <Typography variant=\"h4\" className={classes.group} paragraph={true}>\n      {tripName}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport TripInfo from 'travel/components/models/trips/TripInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nexport default function renderTrip({\n  visit: { visitId, tripId },\n  changes: { isTripChanged },\n  provision: { tripsDict },\n}) {\n  if (!isTripChanged) {\n    return null;\n  }\n  return <TripInfo key={`t${tripId}_v${visitId}`} trip={tripsDict[tripId]} />;\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function YearInfo({ year, isSubgroup }) {\n  const classes = useVisitsPageStyles();\n  return (\n    <Typography\n      variant={isSubgroup ? 'h5' : 'h4'}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {year}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport YearInfo from 'travel/components/common/YearInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nexport default function renderYear({\n  visit: { visitId },\n  changes: { isYearChanged, isCountryChanged },\n  groupBy,\n  year,\n}) {\n  const isGroupedByCountriesYear = groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS;\n  const shouldRender =\n    isYearChanged || (isGroupedByCountriesYear && isCountryChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  return (\n    <YearInfo\n      key={`y${year}_v${visitId}`}\n      year={year}\n      isSubgroup={isGroupedByCountriesYear}\n    />\n  );\n}\n","import mapValues from 'lodash/mapValues';\nimport max from 'lodash/max';\n\nexport default function calcCountriesRating(\n  locationsIds,\n  locationsDict,\n  locationsRating,\n) {\n  const ratingsGroupedByCountries = locationsIds.reduce((memo, locationId) => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return memo;\n    }\n    const locationRating = locationsRating[locationId];\n    const { countryId } = location;\n    if (!memo[countryId]) {\n      memo[countryId] = [];\n    }\n    memo[countryId].push(locationRating);\n    return memo;\n  }, {});\n\n  return mapValues(ratingsGroupedByCountries, ratingsByCountry =>\n    averageRating(ratingsByCountry),\n  );\n}\n\nfunction averageRating(ratings) {\n  if (!ratings.length) {\n    return Infinity;\n  }\n  const avg =\n    ratings.length / ratings.map(rating => 1 / rating).reduce((a, b) => a + b);\n\n  const best = max(ratings);\n\n  const lengthRatio = Math.log(ratings.length);\n\n  return 1 / (1 / avg + lengthRatio / best);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport MUILink from '@material-ui/core/Link';\nimport { usePaths } from 'modules/packages';\nimport { useTripsStats } from 'travel/dataSource';\nimport { useQueryFilter } from 'core/context/QueryFilterContext';\nimport {\n  KEY_GROUP_VISITS_BY,\n  GROUP_VISITS_BY,\n  KEY_SORT_VISITS_BY,\n  SORT_VISITS_BY,\n} from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\nimport useVisitsGroupingSidebar from './useVisitsGroupingSidebar';\nimport switchSortingFn from './switchSortingFn';\nimport renderNodesInOrder from './blocks/renderNodesInOrder';\nimport calcCounters from './calcCounters';\nimport calcCountriesRating from './calcCountriesRating';\n\nexport default function VisitsPage({\n  match: {\n    params: { userAlias },\n  },\n}) {\n  const classes = useVisitsPageStyles();\n  const {\n    queryFilter: {\n      [KEY_GROUP_VISITS_BY]: groupBy = GROUP_VISITS_BY.LOCATIONS,\n      [KEY_SORT_VISITS_BY]: sortBy = SORT_VISITS_BY.ALPHABET,\n    } = {},\n    setQueryFilter,\n  } = useQueryFilter();\n  useVisitsGroupingSidebar(setQueryFilter, { groupBy, sortBy });\n\n  const provision = useTripsStats({ userAlias });\n  const {\n    isPending,\n    isError,\n    updatesCounter,\n    visitsIds,\n    visitsDict,\n    tripsDict,\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesDict,\n  } = provision;\n\n  const {\n    travel: { locations: locationsPath },\n  } = usePaths();\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  const unsortedVisitsList = visitsIds\n    .map(visitId => visitsDict[visitId])\n    .filter(Boolean);\n\n  const counters = calcCounters(unsortedVisitsList, updatesCounter);\n  const countriesRating = calcCountriesRating(\n    locationsIds,\n    locationsDict,\n    locationsRating,\n  );\n  const sortingFn = switchSortingFn(\n    { groupBy, sortBy },\n    {\n      locationsDict,\n      tripsDict,\n      countriesDict,\n      locationsRating,\n      countriesRating,\n    },\n    counters,\n  );\n  const visitsList = unsortedVisitsList.sort(sortingFn);\n\n  const nodes = visitsList.reduce((nodesMemo, visit, index) => {\n    const prevVisit = index > 0 ? visitsList[index - 1] : {};\n    const {\n      countryId: prevCountryId,\n      locationId: prevLocationId,\n      tripId: prevTripId,\n    } = prevVisit;\n    const nextVisit =\n      index < visitsList.length - 1 ? visitsList[index + 1] : {};\n    const { tripId: nextTripId } = nextVisit;\n    const { countryId, locationId, tripId } = visit;\n\n    const prevYear = resolveArrivalYear(prevVisit);\n    const year = resolveArrivalYear(visit);\n\n    const isGroupedByTrip = checkIsGroupedByTrip(groupBy);\n    const isGroupedByYear = checkIsGroupedByYear(groupBy);\n    const isGroupedByCountry = checkIsGroupedByCountry(groupBy);\n\n    const changes = {\n      isTripChanged: isGroupedByTrip && prevTripId !== tripId,\n      willTripChange: isGroupedByTrip && nextTripId !== tripId,\n      isYearChanged: isGroupedByYear && prevYear !== year,\n      isCountryChanged: isGroupedByCountry && prevCountryId !== countryId,\n      isLocationChanged: prevLocationId !== locationId,\n    };\n\n    const nodesToPush = renderNodesInOrder({\n      changes,\n      classes,\n      counters,\n      groupBy,\n      sortBy,\n      provision,\n      visit,\n      year,\n    }).filter(Boolean);\n\n    nodesToPush.forEach(nodeToPush => {\n      nodesMemo.push(nodeToPush);\n    });\n    return nodesMemo;\n  }, []);\n\n  const titleNode = (\n    <Typography variant=\"h6\" paragraph={true}>\n      <span>Всего </span>\n      <MUILink to={locationsPath.toUrl({ userAlias })} component={Link}>\n        {`${Object.keys(counters?.locations || {}).length} городов `}\n      </MUILink>\n      <span>из </span>\n      <span>{`${Object.keys(counters?.countries || {}).length} стран `}</span>\n    </Typography>\n  );\n\n  return (\n    <div>\n      {titleNode}\n      {nodes}\n    </div>\n  );\n}\n\nfunction resolveArrivalYear({ arrivalDateTime }) {\n  if (!arrivalDateTime) {\n    return null;\n  }\n  return arrivalDateTime.getFullYear(arrivalDateTime);\n}\n\nfunction checkIsGroupedByTrip(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS ||\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES\n  );\n}\n\nfunction checkIsGroupedByYear(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.YEARS ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n\nfunction checkIsGroupedByCountry(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n\n/*\n// byCities -> groupBy(visits, cities) '123': []\nЧелябинск, Россия, 3 визита в 2011 и 2012\n-> 20 августа 2011\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountries -> groupBy(visits, countries & cities) '1-123': []\n[Россия](/travel/:userAlias/countries/1)\n[Челябинск](/travel/:userAlias/cities/123), 3 визита в [2011](/travel/:userAlias/year/2011) и [2012](/travel/:userAlias/year/2012) [заметки](/travel/:userAlias/cities/123/story)\n-> 20 августа 2011 [заметки](/travel/:userAlias/visits/111/story)\n   до 5 фоток\n-> 20-21 июня 2012 [заметки](/travel/:userAlias/visits/222/story)\n   до 5 фоток\n-> 31 июля-1 августа 2012 [заметки](/travel/:userAlias/visits/333/story)\n   до 5 фоток\n\n// byYears -> groupBy(visits, years & cities) '2011-123': []\n2011\nЧелябинск, Россия\n-> 20 августа 2011\n\n2012\nЧелябинск, Россия, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byYearsAndCountries -> groupBy(visits, years & countries & cities)  '2011-1-123': []\n2011\nРоссия\nЧелябинск\n-> 20 августа 2011\n\n2012\nРоссия\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountriesAndYears -> groupBy(visits, countries & years & cities) 'c1-y2011-l123': []\nРоссия\n\n2011\nЧелябинск\n-> 20 августа 2011\n\n2012\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n*/\n","import renderCountry from './renderCountry';\nimport renderLocation from './renderLocation';\nimport renderOriginLocation from './renderOriginLocation';\nimport renderTrip from './renderTrip';\nimport renderYear from './renderYear';\nimport { GROUP_VISITS_BY } from '../consts';\n\nexport default function renderNodesInOrder(renderProps) {\n  const {\n    groupBy,\n    changes: { isTripChanged, willTripChange },\n  } = renderProps;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      return [\n        renderTrip(renderProps),\n        isTripChanged &&\n          renderOriginLocation({ ...renderProps, shouldRenderRide: true }),\n        renderLocation(renderProps),\n        willTripChange &&\n          renderOriginLocation({ ...renderProps, shouldRenderRide: false }),\n      ];\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return [\n        renderTrip(renderProps),\n        renderCountry(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.COUNTRIES:\n      return [renderCountry(renderProps), renderLocation(renderProps)];\n    case GROUP_VISITS_BY.YEARS:\n      return [renderYear(renderProps), renderLocation(renderProps)];\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return [\n        renderYear(renderProps),\n        renderCountry(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return [\n        renderCountry(renderProps),\n        renderYear(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      // return {push:[locationNode], keep: [countryNode, yearNode]};\n      return [renderLocation(renderProps)];\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\n\nconst RATING_LOCALIZATION = {\n  [LOCATION_RATING.PLACE_TO_LIVE]: 'Жил бы здесь',\n  [LOCATION_RATING.FEW_PER_YEAR]: 'Несколько раз в год',\n  [LOCATION_RATING.ONCE_PER_YEAR]: 'Раз в год',\n  [LOCATION_RATING.ONCE_PER_TWO_YEARS]: 'Раз в пару лет',\n  [LOCATION_RATING.ONCE_PER_FIVE_YEARS]: 'Раз в пять лет',\n  [LOCATION_RATING.ONCE_PER_DECADE]: 'Раз в десятилетие',\n  [LOCATION_RATING.TWICE_PER_LIVE]: 'Пару раз в жизни',\n  [LOCATION_RATING.ONCE_PER_LIVE]: 'Раз в жизни',\n  [LOCATION_RATING.NEVER]: 'Никогда',\n};\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%',\n  },\n});\n\nexport default function LocationRating({\n  locationId,\n  locationRating,\n  isEditable,\n  onSubmitLocationRating,\n}) {\n  const classes = useStyles();\n  if (!isEditable) {\n    return <div>{RATING_LOCALIZATION[locationRating]}</div>;\n  }\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink={true} id=\"select-location-rating-label\">\n        Я бы ездил сюда\n      </InputLabel>\n      <Select\n        labelId=\"select-location-rating-label\"\n        id=\"select-location-rating\"\n        value={locationRating}\n        onChange={event => {\n          onSubmitLocationRating(event, locationId, event.target.value);\n        }}\n      >\n        <MenuItem value={LOCATION_RATING.PLACE_TO_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.PLACE_TO_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.FEW_PER_YEAR}>\n          {RATING_LOCALIZATION[LOCATION_RATING.FEW_PER_YEAR]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_YEAR}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_YEAR]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_TWO_YEARS}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_TWO_YEARS]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_FIVE_YEARS}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_FIVE_YEARS]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_DECADE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_DECADE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.TWICE_PER_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.TWICE_PER_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.NEVER}>\n          {RATING_LOCALIZATION[LOCATION_RATING.NEVER]}\n        </MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nLocationRating.propTypes = {\n  locationRating: PropTypes.number,\n  locationId: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  onSubmitLocationRating: PropTypes.func.isRequired,\n};\n\nLocationRating.defaultProps = { locationRating: null };\n","import { useMemo, useEffect, useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nconst createControlledPromise = () => {\n  // This fields will be initialized synchronously in promise constructor\n  let resolver = null;\n  let rejector = null;\n\n  const promise = new Promise((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  return { promise, resolver, rejector };\n};\n\nexport default markersCoords => {\n  const { promise: apiPromise, resolver: handleGoogleApiLoaded } = useMemo(\n    createControlledPromise,\n    [],\n  );\n\n  const previousCoords = useRef(null);\n  const changesCount = useRef(0);\n\n  useEffect(() => {\n    if (!isEqual(previousCoords, markersCoords)) {\n      changesCount.current += 1;\n    }\n  });\n\n  useEffect(\n    () => {\n      let markers = [];\n      apiPromise.then(api => {\n        const { map, maps } = api;\n        const bounds = new maps.LatLngBounds();\n        markers = markersCoords.map(({ lat, lon }) => {\n          const marker = new maps.Marker({ position: { lat, lng: lon }, map });\n          bounds.extend(marker.position);\n          return marker;\n        });\n        map.fitBounds(bounds);\n        const zoom = map.getZoom();\n        if (zoom > 11) {\n          map.setZoom(11);\n        }\n      });\n      return () => markers.forEach(marker => marker.setMap(null));\n    },\n    [changesCount.current],\n  );\n  return { handleGoogleApiLoaded };\n};\n","/* globals __GOOGLE_MAP_API_KEY__ */\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport GoogleMapReact from 'google-map-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport LocationRating from './blocks/LocationRating';\nimport useMarkers from './useMarkers';\nimport useUserLocations from './useUserLocations';\n\nconst useStyles = makeStyles({\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  googleMapContainer: {\n    margin: '12px 0',\n    width: '800px',\n    maxWidth: '100%',\n    height: '400px',\n    maxHeight: '100%',\n  },\n});\n\nconst domain = 'travel.LocationsPage';\nexport default function LocationsPage({\n  match: {\n    params: { userAlias, strLocationId },\n  },\n}) {\n  const classes = useStyles();\n\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds,\n    locationsRating,\n    submitLocationRating,\n  } = useUserLocations({ domain, userAlias });\n\n  const locationId = parseInt(strLocationId, 10);\n  const actualLocationsIds = locationId ? [locationId] : locationsIds;\n\n  const handleSubmitLocationRating = useCallback(\n    (event, locationIdToSubmit, value) => {\n      submitLocationRating({\n        query: { rating: value, id: String(locationIdToSubmit) },\n        condition: Boolean(locationIdToSubmit),\n      });\n    },\n  );\n\n  const { handleGoogleApiLoaded } = useMarkers(\n    actualLocationsIds.map(\n      locationIdToShowMarker => locationsDict[locationIdToShowMarker],\n    ),\n  );\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n  if (locationId && !locationsIds.includes(locationId)) {\n    return (\n      <div>{`Путешественик ${userAlias} еще не посетил данную локацию`}</div>\n    );\n  }\n\n  const isEditable = isAuthenticated && authenticatedUserAlias === userAlias;\n  return (\n    <div className={classes.container}>\n      <div className={classes.googleMapContainer}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: __GOOGLE_MAP_API_KEY__ }}\n          center={{ lat: 0, lng: 0 }}\n          zoom={11}\n          onGoogleApiLoaded={handleGoogleApiLoaded}\n        />\n      </div>\n      {actualLocationsIds.map(locationsIdToRender => {\n        const location = locationsDict[locationsIdToRender];\n        if (!location) {\n          return null;\n        }\n        const { locationName } = location;\n        return (\n          <React.Fragment key={locationsIdToRender}>\n            <h1 className={classes.location}>{locationName}</h1>\n            <LocationRating\n              locationId={locationsIdToRender}\n              locationRating={locationsRating[locationsIdToRender]}\n              isEditable={isEditable}\n              onSubmitLocationRating={handleSubmitLocationRating}\n            />\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\n\nLocationsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n      strLocationId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n","import useUser from 'travel/dataSource/useUser';\nimport { useTripsStats } from 'travel/dataSource/useTrips';\nimport { useLocationRatingRequest } from 'travel/dataSource/useLocations';\n\nexport default function useUserLocations({ domain, userAlias }) {\n  const {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds = [],\n    locationsRating,\n  } = useTripsStats({\n    userAlias,\n  });\n  const { submitLocationRating } = useLocationRatingRequest({ domain });\n\n  return {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds,\n    locationsRating,\n    submitLocationRating,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport compose from 'lodash/fp/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { toNumber } from 'modules/utilities/types/numbers';\nimport { selectDict } from 'core/connection';\nimport withProvision from 'core/connection/withProvision';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { sortVisitsByTrips } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst memoizedSortVisitsByTrips = memoizeByLastArgs(sortVisitsByTrips);\n\nconst styles = {\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  storyPart: { margin: '12px 0' },\n};\n\nconst TripStoryPage = ({\n  classes,\n  visits: { data: visitsList = [] } = {},\n  ridesDict,\n}) => {\n  if (!ridesDict || !visitsList) {\n    return <div>None</div>;\n  }\n\n  const noDataNode = <div>Заметки о поездке не найдены</div>;\n  if (!visitsList.length) {\n    return noDataNode;\n  }\n\n  const lastVisitIndex = visitsList.length - 1;\n  const storiesNodes = memoizedSortVisitsByTrips(visitsList).map(\n    (\n      { visitId, arrivalRideId, departureRideId, visitComment, locationName },\n      visitIndex,\n    ) => {\n      const { rideComment: arrivalRideComment } =\n        ridesDict[arrivalRideId] || {};\n\n      let departureRideComment;\n      if (lastVisitIndex === visitIndex) {\n        const { rideComment } = ridesDict[departureRideId] || {};\n        departureRideComment = rideComment;\n      }\n\n      if (!arrivalRideComment && !departureRideComment && !visitComment) {\n        return null;\n      }\n      return (\n        <article key={`id${visitId}`} className={classes.visitContainer}>\n          <h1 className={classes.location}>{locationName}</h1>\n          {Boolean(arrivalRideComment) && (\n            <section className={classes.storyPart}>\n              {arrivalRideComment}\n            </section>\n          )}\n          {Boolean(visitComment) && (\n            <section className={classes.storyPart}>{visitComment}</section>\n          )}\n          {Boolean(departureRideComment) && (\n            <section className={classes.storyPart}>\n              {departureRideComment}\n            </section>\n          )}\n        </article>\n      );\n    },\n  );\n\n  const contentNode = storiesNodes.some(Boolean) ? storiesNodes : noDataNode;\n  return <div className={classes.container}>{contentNode}</div>;\n};\n\nTripStoryPage.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n};\n\nconst mapStateToRequirements = (\n  state,\n  {\n    match: {\n      params: { strTripId },\n    },\n  },\n) => {\n  const tripId = toNumber(strTripId);\n  return {\n    identity: {\n      strTripId,\n    },\n    request: {\n      rides: {\n        modelName: 'rides',\n        query: {\n          filter: { trip_id: { comparator: '=', value: tripId } },\n          navigation: { isDisabled: true },\n        },\n      },\n      visits: {\n        modelName: 'visits',\n        query: {\n          filter: { trip_id: { comparator: '=', value: tripId } },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n    domain: 'tripStoryPage',\n  };\n};\n\nconst mapStateToProps = state => ({\n  ridesDict: selectDict(state, 'rides'),\n});\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  withProvision(mapStateToRequirements, mapStateToProps),\n)(TripStoryPage);\n","export const toNumber = input => {\n  const number = Number(input);\n  return Number.isNaN(number) ? NaN : parseFloat(input);\n};\n\nexport const toInteger = input => {\n  const number = Number(input);\n  return Number.isNaN(number) ? NaN : parseInt(input, 10);\n};\n","import { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias }) {\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: { userAlias, navigation: { isDisabled: true } },\n  });\n}\n\nexport function useTripsStats({ userAlias }) {\n  const tripsProvision = useTrips({ userAlias });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n  );\n\n  const ridesIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n  );\n\n  const countriesIds = Array.from(\n    new Set(visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || [])),\n  );\n\n  const locationsIds = Array.from(\n    new Set(\n      visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n    ),\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  const provision = useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n\n  const { data: countriesIds = [] } = selectResult(provision) || {};\n\n  return {\n    countriesIds,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isPending = true, hasFallback } = {} } = props;\n  if (isPending && !hasFallback) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport {\n  useProvision,\n  useRequest,\n  selectDict,\n} from 'core/connection';\nimport {\n  selectIsPending,\n  selectIsError,\n  selectIsReady,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  const provision = useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n\n  return {\n    locationsDict,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport dateFormat from 'date-fns/format';\nimport ru from 'date-fns/locale/ru';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nfunction dateTimePeriodToString(periodStart, periodEnd) {\n  const periodEndString = dateFormat(periodEnd, DATE_FORMATS.FULL, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n      locale: ru,\n    });\n  } else if (isSameYear(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_MONTH, {\n      locale: ru,\n    });\n  } else {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.FULL, {\n      locale: ru,\n    });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime);\n}\n\nexport function visitDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime);\n}\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default (tripVisitsList, countriesDict, originCountryId, fallback) => {\n  if (!tripVisitsList.length) {\n    return fallback;\n  }\n  const visitsByCountries = Object.keys(\n    groupBy(\n      tripVisitsList.filter(\n        ({ visitType }) => visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n  if (visitsByCountries.length === 1) {\n    return (\n      uniqTrimAndJoin(tripVisitsList.map(({ locationName }) => locationName), {\n        maxLength: 4,\n      }) || fallback\n    );\n  }\n  return (\n    uniqTrimAndJoin(\n      visitsByCountries\n        .map(\n          countryId =>\n            Number(countryId) !== originCountryId &&\n            countriesDict[countryId] &&\n            countriesDict[countryId].countryName,\n        )\n        .filter(Boolean),\n      { maxLength: 4 },\n    ) || fallback\n  );\n};\n","export { default as resolveTripCaption } from './resolveTripCaption';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n"],"sourceRoot":""}