"use strict";(self.webpackChunkmine=self.webpackChunkmine||[]).push([[24],{68024:(t,a,h)=>{h.r(a),h.d(a,{ValidationError:()=>l.p,decode:()=>e.Z,encode:()=>s,isBlurhashValid:()=>e.x});var e=h(19634),o=h(41557),r=h(53222),l=h(26126);const n=(t,a,h,e)=>{let o=0,l=0,n=0;const s=4*a;for(let M=0;M<a;M++)for(let a=0;a<h;a++){const h=e(M,a);o+=h*(0,r.WA)(t[4*M+0+a*s]),l+=h*(0,r.WA)(t[4*M+1+a*s]),n+=h*(0,r.WA)(t[4*M+2+a*s])}let M=1/(a*h);return[o*M,l*M,n*M]},s=(t,a,h,e,s)=>{if(e<1||e>9||s<1||s>9)throw new l.p("BlurHash must have between 1 and 9 components");if(a*h*4!==t.length)throw new l.p("Width and height must match the pixels array");let M=[];for(let o=0;o<s;o++)for(let r=0;r<e;r++){const e=0==r&&0==o?1:2,l=n(t,a,h,((t,l)=>e*Math.cos(Math.PI*r*t/a)*Math.cos(Math.PI*o*l/h)));M.push(l)}const i=M[0],f=M.slice(1);let m,c="",u=e-1+9*(s-1);if(c+=(0,o.E)(u,1),f.length>0){let t=Math.max(...f.map((t=>Math.max(...t)))),a=Math.floor(Math.max(0,Math.min(82,Math.floor(166*t-.5))));m=(a+1)/166,c+=(0,o.E)(a,1)}else m=1,c+=(0,o.E)(0,1);var x;return c+=(0,o.E)((x=i,((0,r.ix)(x[0])<<16)+((0,r.ix)(x[1])<<8)+(0,r.ix)(x[2])),4),f.forEach((t=>{c+=(0,o.E)(((t,a)=>19*Math.floor(Math.max(0,Math.min(18,Math.floor(9*(0,r.wu)(t[0]/a,.5)+9.5))))*19+19*Math.floor(Math.max(0,Math.min(18,Math.floor(9*(0,r.wu)(t[1]/a,.5)+9.5))))+Math.floor(Math.max(0,Math.min(18,Math.floor(9*(0,r.wu)(t[2]/a,.5)+9.5)))))(t,m),2)})),c}}}]);
//# sourceMappingURL=24-424de698804f5f95c0d2.js.map