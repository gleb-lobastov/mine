{"version":3,"sources":["webpack:///./src/packages/literature/pages/Article/Article.jsx","webpack:///./src/packages/literature/pages/Articles/blocks/Article/Article.jsx","webpack:///./src/packages/literature/pages/Articles/Articles.jsx","webpack:///./src/packages/literature/pages/ArticleEditor/blocks/ArticleEditorForm/transliteration.js","webpack:///./src/packages/literature/pages/ArticleEditor/blocks/ArticleEditorForm/ArticleEditorForm.jsx","webpack:///./src/packages/literature/pages/ArticleEditor/ArticleEditor.jsx","webpack:///./src/modules/components/muiExtended/ConnectedLink/ConnectedLink.jsx","webpack:///./src/packages/literature/dataSource/articles.js","webpack:///./src/modules/MineEditor/useEditorState.js","webpack:///./src/modules/MineEditor/createStateFromContent.js","webpack:///./src/modules/MineEditor/RenderContent.jsx","webpack:///./src/modules/MineEditor/exportContentFromState.js","webpack:///./src/modules/MineEditor/MineEditor.jsx"],"names":["Article","slug","useAuthContext","isAuthenticated","authenticatedUserId","userId","article","useArticle","domain","usePaths","literaturePaths","literature","codePaths","code","selfPaths","Typography","variant","body","title","isDraft","isEditable","ConnectedLink","to","editArticle","toUrl","data","convertFromRaw","withRouter","ArticleComponent","React","lazy","DBArticle","selectArticle","useStyles","makeStyles","container","display","iconHome","padding","slugList","flex","loader","margin","Articles","classes","useParams","tag","authenticatedUserAlias","userAlias","useArticles","articlesList","isReady","hasSummaryTag","hasCodeTag","entry","className","List","component","aria-label","root","ListItem","button","articles","ListItemText","primary","map","currentSlug","caption","createArticle","mapping","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ь","ы","Ъ","э","ю","я","articleBody","marginTop","ArticleEditorForm","initialArticle","onSubmit","isSubmitting","useState","isInViewMode","setIsInViewMode","handleToggleViewMode","useCallback","prevIsInViewMode","isCreation","initialTitle","initialIsDraft","initialContent","hasSlug","setSlug","setTitle","setIsDraft","useEditorState","editorState","setEditorState","Grid","spacing","alignItems","item","xs","FormControl","InputLabel","htmlFor","Input","id","value","onChange","event","currentTarget","toSlug","fullWidth","shrink","Boolean","FormControlLabel","control","Checkbox","checked","target","label","Button","disabled","onClick","exportContentFromState","undefined","toggleContainer","Switch","name","getCurrentContent","MineEditor","text","Array","from","char","join","transliteration","toLowerCase","replace","ArticleEditor","match","params","history","useHistory","useSubmitArticle","submitArticle","query","push","props","RouterLink","articlesProvision","useProvision","isProvision","modelName","observe","navigation","isDisabled","selectResult","articlesIds","useSelector","state","selectList","selectIsReady","condition","selectItem","useRequest","method","provision","includes","readyState","rawContent","EditorState","createWithContent","createEmpty","RenderContent","html","useMemo","stateToHTML","dangerouslySetInnerHTML","__html","toString","draftJSState","convertToRaw","handleChange","nextState","handleKeyCommand","command","newState","RichUtils"],"mappings":"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","file":"literature-Articles-ff9b4902ee5ced46e396.js","sourcesContent":["import React from 'react';\nimport { convertFromRaw } from 'draft-js';\nimport Typography from '@material-ui/core/Typography';\nimport { usePaths } from 'modules/packages';\nimport ConnectedLink from 'modules/components/muiExtended/ConnectedLink';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { useArticle } from '../../dataSource/articles';\nimport { RenderContent } from 'modules/MineEditor';\n\nconst domain = 'ArticleEditor';\n\nexport default function Article({ slug }) {\n  const { isAuthenticated, userId: authenticatedUserId } = useAuthContext();\n  const { article } = useArticle({ slug, domain });\n  const { literature: literaturePaths, code: codePaths } = usePaths();\n  const selfPaths = literaturePaths || codePaths;\n  if (slug && !article) {\n    return (\n      <Typography variant=\"body\">\n        Статья еще не опубликована или недоступна для чтения\n      </Typography>\n    );\n  }\n  const { body, title, userId, isDraft } = article;\n  const isEditable = isAuthenticated && authenticatedUserId === userId;\n  if ((!isEditable && isDraft) || !body) {\n    return (\n      <Typography variant=\"body\">\n        Статья еще не опубликована или недоступна для чтения\n      </Typography>\n    );\n  }\n  return (\n    <>\n      <Typography variant=\"h6\">{title}</Typography>\n      {isEditable && (\n        <ConnectedLink to={selfPaths.editArticle.toUrl({ slug })}>\n          Редактировать\n        </ConnectedLink>\n      )}\n      <RenderContent data={convertFromRaw(body)} />\n    </>\n  );\n}\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport DBArticle from '../../../Article';\n\nconst selectArticle = slug => {\n  switch (slug) {\n    case 'chaldini':\n      return React.lazy(() =>\n        import(/* webpackChunkName: 'literature-Chaldini' */ './designed/Chaldini'),\n      );\n    case 'blackSwan':\n      return React.lazy(() =>\n        import(/* webpackChunkName: 'literature-BlackSwan' */ './designed/BlackSwan'),\n      );\n    case 'importThis':\n      return React.lazy(() =>\n        import(/* webpackChunkName: 'literature-ImportThis' */ './designed/ImportThis'),\n      );\n    default:\n      return DBArticle;\n  }\n};\n\nconst Article = ({ slug }) => {\n  const ArticleComponent = selectArticle(slug);\n  if (!ArticleComponent) {\n    return <div>Статья не найдена</div>;\n  }\n  return <ArticleComponent slug={slug} />;\n};\n\nexport default withRouter(Article);\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconHome from '@material-ui/icons/Home';\nimport { usePaths } from 'modules/packages';\nimport ConnectedLink from 'modules/components/muiExtended/ConnectedLink';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport useArticles from '../../dataSource/articles';\nimport Article from './blocks/Article';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n  },\n  iconHome: {\n    padding: '0 16px',\n  },\n  slugList: {\n    flex: '0 1 350px',\n  },\n  loader: {\n    margin: '12px',\n  },\n});\n\nfunction Articles() {\n  const classes = useStyles();\n  const { slug, tag } = useParams();\n\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n    userId: authenticatedUserId,\n  } = useAuthContext();\n\n  const { articlesList, isReady } = useArticles({\n    userAlias: authenticatedUserAlias,\n  });\n\n  const { literature: literaturePaths, code: codePaths } = usePaths();\n  const hasSummaryTag = !tag || tag === 'summary';\n  const hasCodeTag = !tag || tag === 'code';\n  const selfPaths = literaturePaths || codePaths;\n  return (\n    <>\n      {!literaturePaths && (\n        <ConnectedLink\n          to={selfPaths.entry.toUrl()}\n          className={classes.iconHome}\n        >\n          <IconHome />\n        </ConnectedLink>\n      )}\n      <div className={classes.container}>\n        {!isReady ? (\n          <div className={classes.loader}>...Loading</div>\n        ) : (\n          <List\n            component=\"nav\"\n            aria-label=\"articles\"\n            classes={{ root: classes.slugList }}\n          >\n            {hasSummaryTag && (\n              <ListItem\n                button={true}\n                component={ConnectedLink}\n                to={selfPaths.articles.toUrl({ slug: 'chaldini' })}\n              >\n                <ListItemText primary=\"&laquo;Психология убеждения&raquo; Чалдини\" />\n              </ListItem>\n            )}\n            {hasSummaryTag && (\n              <ListItem\n                button={true}\n                component={ConnectedLink}\n                to={selfPaths.articles.toUrl({ slug: 'blackSwan' })}\n              >\n                <ListItemText primary=\"&laquo;Черный лебедь&raquo; Талеба\" />\n              </ListItem>\n            )}\n            {hasCodeTag && (\n              <ListItem\n                button={true}\n                component={ConnectedLink}\n                to={selfPaths.articles.toUrl({ slug: 'importThis' })}\n              >\n                <ListItemText primary=\"19 принципов достижения дзена при написании компьютерных программ\" />\n              </ListItem>\n            )}\n            {articlesList.map(article => {\n              const { userId, isDraft, title, slug: currentSlug } = article;\n              if (\n                isDraft &&\n                (!isAuthenticated || authenticatedUserId !== userId)\n              ) {\n                return null;\n              }\n              const caption = isDraft ? `Черновик: ${title}` : title;\n              return (\n                <ListItem\n                  button={true}\n                  component={ConnectedLink}\n                  to={selfPaths.articles.toUrl({ slug: currentSlug })}\n                >\n                  <ListItemText primary={caption} />\n                </ListItem>\n              );\n            })}\n            {isAuthenticated && (\n              <ListItem\n                button={true}\n                component={ConnectedLink}\n                to={selfPaths.createArticle.toUrl({\n                  userAlias: authenticatedUserAlias,\n                })}\n              >\n                <ListItemText primary=\"Добавить статью\" />\n              </ListItem>\n            )}\n          </List>\n        )}\n        {slug && (\n          <div>\n            <Article slug={slug} />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Articles;\n","const mapping = {\n  а: 'a',\n  б: 'b',\n  в: 'v',\n  г: 'g',\n  д: 'd',\n  е: 'e',\n  ё: 'e',\n  ж: 'j',\n  з: 'z',\n  и: 'i',\n  й: 'y',\n  к: 'k',\n  л: 'l',\n  м: 'm',\n  н: 'n',\n  о: 'o',\n  п: 'p',\n  р: 'r',\n  с: 's',\n  т: 't',\n  у: 'u',\n  ф: 'f',\n  х: 'h',\n  ц: 'c',\n  ч: 'ch',\n  ш: 'sh',\n  щ: 'shch',\n  ь: '',\n  ы: 'y',\n  Ъ: '',\n  э: 'e',\n  ю: 'u',\n  я: 'ya',\n};\n\nexport default function transliteration(text) {\n  return Array.from(text)\n    .map(char => mapping[char] ?? char)\n    .join('');\n}\n","import React, { useState, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport MineEditor, {\n  useEditorState,\n  exportContentFromState,\n  RenderContent,\n} from 'modules/MineEditor';\nimport transliteration from './transliteration';\n\nconst useStyles = makeStyles({\n  articleBody: {\n    marginTop: '12px',\n  },\n});\n\nexport default function ArticleEditorForm({\n  initialArticle,\n  onSubmit,\n  isSubmitting,\n}) {\n  const classes = useStyles();\n  const [isInViewMode, setIsInViewMode] = useState(false);\n  const handleToggleViewMode = useCallback(\n    () => setIsInViewMode(prevIsInViewMode => !prevIsInViewMode),\n    [],\n  );\n\n  const isCreation = !initialArticle;\n\n  const {\n    title: initialTitle = 'Новая статья',\n    isDraft: initialIsDraft = true,\n    body: initialContent,\n  } = initialArticle || {};\n\n  const [{ slug, hasSlug }, setSlug] = useState({});\n  const [title, setTitle] = useState(initialTitle);\n  const [isDraft, setIsDraft] = useState(initialIsDraft);\n  const { editorState, setEditorState } = useEditorState(initialContent);\n\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={4}>\n        <FormControl>\n          <InputLabel htmlFor=\"component-simple\">Название статьи</InputLabel>\n          <Input\n            id=\"component-simple\"\n            value={title}\n            onChange={event => {\n              setTitle(event.currentTarget.value);\n              if (!hasSlug) {\n                setSlug({\n                  slug: toSlug(event.currentTarget.value),\n                  hasSlug: false,\n                });\n              }\n            }}\n          />\n        </FormControl>\n      </Grid>\n      {isCreation && (\n        <Grid item={true} xs={4}>\n          <FormControl fullWidth={true}>\n            <InputLabel htmlFor=\"component-simple\" shrink={Boolean(slug)}>\n              Slug\n            </InputLabel>\n            <Input\n              id=\"component-simple\"\n              value={slug}\n              onChange={event =>\n                setSlug({\n                  slug: toSlug(event.currentTarget.value),\n                  hasSlug: true,\n                })\n              }\n            />\n          </FormControl>\n        </Grid>\n      )}\n      <Grid item={true} xs={4}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={isDraft}\n              onChange={event => setIsDraft(event.target.checked)}\n            />\n          }\n          label=\"Черновик\"\n        />\n      </Grid>\n      <Grid item={true} xs={4}>\n        {isSubmitting ? (\n          <Typography variant=\"caption\">Идет сохранение...</Typography>\n        ) : (\n          <Button\n            disabled={isCreation && !slug}\n            onClick={() =>\n              onSubmit({\n                title,\n                isDraft,\n                body: exportContentFromState(editorState),\n                slug: isCreation ? slug : undefined,\n              })\n            }\n          >\n            Сохранить\n          </Button>\n        )}\n      </Grid>\n      <Grid item={true} xs={12}>\n        <FormControlLabel\n          className={classes.toggleContainer}\n          control={\n            <Switch\n              name=\"viewMode\"\n              checked={isInViewMode}\n              onChange={handleToggleViewMode}\n            />\n          }\n          label=\"Режим просмотра\"\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <div className={classes.articleBody}>\n          <Typography variant=\"caption\">Текст статьи</Typography>\n          {isInViewMode ? (\n            <RenderContent data={editorState.getCurrentContent()} />\n          ) : (\n            <MineEditor\n              editorState={editorState}\n              setEditorState={setEditorState}\n            />\n          )}\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction toSlug(text) {\n  return transliteration(\n    text\n      .toLowerCase()\n      .replace(/\\s/g, '_')\n      .replace(/[^a-zа-я0-9]/g, ''),\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { usePaths } from 'modules/packages';\nimport { useArticle, useSubmitArticle } from '../../dataSource/articles';\nimport ArticleEditorForm from './blocks/ArticleEditorForm';\n\nconst domain = 'ArticleEditor';\n\nexport default function ArticleEditor({\n  match: {\n    params: { slug },\n  },\n}) {\n  const history = useHistory();\n  const { literature: literaturePaths, code: codePaths } = usePaths();\n  const selfPaths = literaturePaths || codePaths;\n  const { article } = useArticle({ slug, domain });\n  const { submitArticle, isSubmitting } = useSubmitArticle({ domain });\n\n  if (slug && !article) {\n    return null;\n  }\n\n  const isCreation = !article;\n  return (\n    <ArticleEditorForm\n      initialArticle={article}\n      isSubmitting={isSubmitting}\n      onSubmit={async data => {\n        await submitArticle({\n          query: {\n            id: article?.id,\n            body: { ...article, ...data },\n          },\n        });\n        if (isCreation) {\n          history.push(selfPaths.articles.toUrl({ slug: data?.slug }));\n        }\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MUILink from '@material-ui/core/Link';\n\nexport default function ConnectedLink(props) {\n  return <MUILink {...props} component={RouterLink} />;\n}\n","import { useSelector } from 'react-redux';\nimport {\n  useProvision,\n  useRequest,\n  selectItem,\n  selectList,\n} from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useArticles() {\n  const articlesProvision = useProvision({\n    domain: 'articles',\n    isProvision: true,\n    modelName: 'articles',\n    observe: false,\n    query: {\n      navigation: { isDisabled: true },\n    },\n  });\n  const { data: articlesIds = [] } = selectResult(articlesProvision) || {};\n  const articlesList = useSelector(state =>\n    selectList(state, 'articles', articlesIds),\n  );\n  return {\n    ...articlesProvision,\n    articlesList,\n    isReady: selectIsReady(articlesProvision),\n  };\n}\n\nexport function useArticle({ slug, domain }) {\n  const articlesProvision = useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'articles',\n    observe: slug,\n    condition: Boolean(slug),\n    query: {\n      id: slug,\n    },\n  });\n  const article = useSelector(state => selectItem(state, 'articles', slug));\n  return { ...articlesProvision, article };\n}\n\nexport function useSubmitArticle({ domain }) {\n  const [submitArticle, provision] = useRequest({\n    domain,\n    modelName: 'articles',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    isSubmitting: ![0, 4].includes(provision.readyState),\n    submitArticle,\n  };\n}\n","import { useState } from 'react';\nimport createStateFromContent from './createStateFromContent';\n\nexport default function useEditorState(initialContent) {\n  const [editorState, setEditorState] = useState(() =>\n    createStateFromContent(initialContent),\n  );\n\n  return { editorState, setEditorState };\n}\n","import { EditorState, convertFromRaw } from 'draft-js';\n\nexport default function createStateFromContent(rawContent) {\n  return rawContent\n    ? EditorState.createWithContent(convertFromRaw(rawContent))\n    : EditorState.createEmpty();\n}\n","import React, { useMemo } from 'react';\nimport { stateToHTML } from 'draft-js-export-html';\n\nexport default function RenderContent({ data: rawContent }) {\n  const html = useMemo(() => stateToHTML(rawContent), [rawContent]);\n  return <div dangerouslySetInnerHTML={{ __html: html }} />;\n}\n","import { convertToRaw } from 'draft-js';\n\nexport default function toString(draftJSState) {\n  return convertToRaw(draftJSState.getCurrentContent());\n}\n","import React, { useCallback } from 'react';\nimport { Editor, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nexport { default as useEditorState } from './useEditorState';\nexport { default as RenderContent } from './RenderContent';\nexport { default as exportContentFromState } from './exportContentFromState';\nexport { default as createStateFromContent } from './createStateFromContent';\n\nexport default function MineEditor({ editorState, setEditorState }) {\n  const handleChange = useCallback(nextState => {\n    setEditorState(nextState);\n  });\n\n  const handleKeyCommand = useCallback(\n    (command, nextState) => {\n      const newState = RichUtils.handleKeyCommand(nextState, command);\n\n      if (newState) {\n        handleChange(newState);\n        return 'handled';\n      }\n\n      return 'not-handled';\n    },\n    [handleChange],\n  );\n\n  return (\n    <Editor\n      editorState={editorState}\n      onChange={handleChange}\n      handleKeyCommand={handleKeyCommand}\n    />\n  );\n}\n"],"sourceRoot":""}