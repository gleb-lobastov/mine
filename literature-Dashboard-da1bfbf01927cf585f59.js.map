{"version":3,"sources":["webpack:///./src/packages/literature/pages/Dashboard/LiteratureDashboard.jsx","webpack:///./src/modules/components/Markdown/Markdown.jsx"],"names":["LiteratureDashboard","usePaths","literature","booksPath","books","articlesPath","articles","blogPath","blog","source","toUrl","renderers","link","href","children","startsWith","to","propTypes","PropTypes","string","isRequired","oneOfType","node","forwardedProps"],"mappings":"4FAAA,oFAIe,SAASA,IAAsB,MAGxCC,cADFC,WAAqBC,EAFqB,EAE5BC,MAA4BC,EAFA,EAEVC,SAA8BC,EAFpB,EAEcC,KAG1D,OACE,kBAAC,IAAD,CACEC,OAAM,8CACwBN,EAAUO,QADlC,gIAG8BL,EAAaK,QAH3C,kDAIyBH,EAASG,QAJlC,c,8SCNZ,IAAMC,EAAY,CAChBC,KAAM,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACJD,EAAKE,YAAcF,EAAKE,WAAW,KACjC,kBAAC,IAAD,CAAMC,GAAIH,GAAOC,GAEjB,uBAAGD,KAAMA,GAAOC,KAGtBH,EAAUC,KAAKK,UAAY,CACzBJ,KAAMK,IAAUC,OAAOC,WACvBN,SAAUI,IAAUG,UAAU,CAACH,IAAUI,KAAMJ,IAAUC,SAASC,YAGrD,aAAAG,GAAc,OAC3B,kBAAC,IAAD,KAAmBA,EAAnB,CAAmCZ,UAAWA","file":"literature-Dashboard-da1bfbf01927cf585f59.js","sourcesContent":["import React from 'react';\nimport Markdown from 'modules/components/Markdown';\nimport { usePaths } from 'modules/packages';\n\nexport default function LiteratureDashboard() {\n  const {\n    literature: { books: booksPath, articles: articlesPath, blog: blogPath },\n  } = usePaths();\n\n  return (\n    <Markdown\n      source={`\nРазвлекаюсь написанием [рецензий](${booksPath.toUrl()})\nна прочитанные книги при помощи [твиттера](http://twitter.com/lobastov).\nЧто-то побольше могу оформить [статьей](${articlesPath.toUrl()}),\nчто-то поменьше отправить в [блог](${blogPath.toUrl()})\n  `}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\n\nconst renderers = {\n  link: ({ href, children }) =>\n    href.startsWith && href.startsWith('/') ? (\n      <Link to={href}>{children}</Link>\n    ) : (\n      <a href={href}>{children}</a>\n    ),\n};\nrenderers.link.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n};\n\nexport default forwardedProps => (\n  <ReactMarkdown {...forwardedProps} renderers={renderers} />\n);\n"],"sourceRoot":""}