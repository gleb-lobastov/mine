{"version":3,"sources":["webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/packages/travel/models/trips/utils.js","webpack:///./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionsResolver.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultInputRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack:///./src/modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/localization.js","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/blocks/TripEditCard.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/TripEditDialog.jsx","webpack:///./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack:///./src/modules/utilities/types/array.js","webpack:///./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack:///./src/packages/travel/components/models/locations/Location.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/localization.js","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/blocks/VisitEditCard.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/VisitEditDialog.jsx","webpack:///./src/packages/travel/components/models/visits/Visit.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/localization.js","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/blocks/RideEditCard.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/RideEditDialog.jsx","webpack:///./src/packages/travel/pages/Trips/blocks/Ride.jsx","webpack:///./src/modules/utilities/dateTime/arrivalDepartureDateTimeToString.js","webpack:///./src/packages/travel/pages/Trips/blocks/DragHandler.jsx","webpack:///./src/packages/travel/pages/Trips/blocks/VisitWithRides.jsx","webpack:///./src/packages/travel/pages/Trips/blocks/VisitCreator.jsx","webpack:///./src/packages/travel/models/visits/initialize.js","webpack:///./src/packages/travel/pages/Trips/blocks/Trip.jsx","webpack:///./src/packages/travel/pages/Trips/actionCreators.js","webpack:///./src/modules/utilities/algorithms/createOrderCalculator.js","webpack:///./src/packages/travel/pages/Trips/Trips.jsx","webpack:///./src/packages/travel/models/trips/initialize.js"],"names":["withLoader","Component","props","_props$provision","provision","_props$provision$isCo","isComplete","_props$provision$isPe","isPending","react_default","a","createElement","PlainLoader","__webpack_exports__","_len2","arguments","length","provisionParams","Array","_key2","ExtendableComponent","_len","funcsArray","_key","arg","reduceRight","composed","func","compose","provide","apply","__webpack_require__","d","sortVisitsByTrips","groupAndSortVisitsByTrips","lodash_groupBy__WEBPACK_IMPORTED_MODULE_0__","lodash_groupBy__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_mapValues__WEBPACK_IMPORTED_MODULE_1__","lodash_mapValues__WEBPACK_IMPORTED_MODULE_1___default","visitsList","sort","_ref","_ref2","orderInTrip","mapValues","groupBy","OptionsSelect","caption","classes","hasNullOption","inputId","handleChange","onChange","optionRender","options","value","className","container","InputLabel","component","shrink","htmlFor","Select","displayEmpty","input","Input","id","selectRoot","MenuItem","key","option","index","map","valuePropTypes","PropTypes","oneOfType","number","string","propTypes","isRequired","arrayOf","bool","defaultProps","undefined","withStyles","display","flexGrow","flexBasis","DefaultSuggestionResolver","inputValue","_ref$sourceProps","sourceProps","_ref$sourceProps$sugg","suggestions","renderProp","children","lowerCaseInputValue","toLowerCase","Fragment","filter","label","includes","shape","array","DefaultInputRender","inputProps","ref","other","_objectWithoutProperties","TextField","_extends","InputProps","_objectSpread","inputRef","root","inputRoot","inputInput","DefaultSuggestionRender","itemProps","isHighlighted","isSelected","DefaultSuggestionRender_extends","selected","style","fontWeight","object","useStyles","makeStyles","theme","paper","position","zIndex","marginTop","spacing","left","right","defaultItemToString","item","createSuggestComponent","_ref2$SuggestionsReso","SuggestionsResolver","DefaultSuggestionsResolver","_ref2$SuggestionItemC","SuggestionItemComponent","_ref2$InputComponent","InputComponent","_ref3","inputFieldProps","downshiftProps","Suggest_objectWithoutProperties","downshift_esm","Suggest_extends","itemToString","_ref4","getInputProps","getItemProps","getMenuProps","highlightedIndex","isOpen","selectedItem","fullWidth","Paper","square","resolvedSuggestions","suggestion","Boolean","withProvision","state","_ref2$sourceProps","modelName","domain","filterField","numberOfItemsToRequest","identity","require","entities","query","ProvisionedSuggest_defineProperty","comparator","concat","navigation","pageSize","meta","debounceRequest","_ref$sourceProps$conv","convertEntityToSuggestion","entity","ProvisionedSuggest_objectSpread","_ref$entities","_ref$entities$data","data","entitiesList","TRIP_TYPE_NAMES","localization_defineProperty","_TRIP_TYPE_NAMES","TRIP_TYPES","LEISURE","BUSINESS","MIXED","OTHER","renderTripType","tripType","useTripState","initialTripName","tripName","initialTripType","initialOriginLocationId","originLocationId","_useState2","_slicedToArray","useState","tripState","setTripState","tripStateUpdate","TripEditCard_objectSpread","TripEditCard","locationsDict","_ref3$tripState","setTripName","useCallback","nextTripName","target","setTripType","_ref5","nextTripType","setOriginLocation","_ref6","nextOriginLocationId","locationId","locationName","optionGroup","ProvisionedSuggest","textFieldProps","initialInputValue","placeholder","muiExtended_OptionsSelect_OptionsSelect","Object","values","connect","selectDict","TripEditDialog","initialState","handleSubmit","onSubmit","_useTripState","_React$useState2","TripEditDialog_slicedToArray","React","setOpen","handleClose","IconButton","data-sort-handler","size","variant","color","onClick","Dialog","transitionDuration","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","blocks_TripEditCard","DialogActions","Button","ridePropTypes","node","checkIsNodeNotSortable","event","element","dataset","sortHandler","parentNode","checkIsVisitsConnectedByRide","prevVisit","nextVisit","departureRideId","arrivalRideId","Location","_ref$location$locatio","location","Icon","icon","objectOf","locationPropTypes","reactComponentPropType","marginRight","verticalAlign","VISIT_TYPE_NAMES","VisitEditDialog_localization_defineProperty","_VISIT_TYPE_NAMES","VISIT_TYPES","TRANSIT","REGULAR","BASE_CAMP","RELOCATION","renderVisitType","visitType","useVisitState","initialVisitType","initialVisitComment","visitComment","initialLocationId","VisitEditCard_slicedToArray","visitState","setVisitState","visitStateUpdate","VisitEditCard_objectSpread","VisitEditCard","_ref3$visitState","setVisitType","nextVisitType","setLocation","nextLocationId","setVisitComment","nextVisitComment","multiline","rows","rowsMax","VisitEditDialog","_useVisitState","VisitEditDialog_slicedToArray","blocks_VisitEditCard","Visit","visit","handleVisitUpdate","onVisitUpdate","TransferWithinAStationIcon","DomainIcon","LocalShippingIcon","LocationCityIcon","resolveVisitIconComponent","visits_VisitEditDialog_VisitEditDialog","updatedVisit","Visit_objectSpread","Edit_default","editIcon","visitPropTypes","RIDE_CLASSES_NAMES","RideEditDialog_localization_defineProperty","_RIDE_CLASSES_NAMES","RIDE_CLASSES","ECONOMY","COMFORT","FIRST","PRIVATE","RIDE_OCCUPATION_NAMES","_RIDE_OCCUPATION_NAME","RIDE_OCCUPATION","PASSENGER","STUFF","DRIVER","RIDE_TYPES_NAMES","_RIDE_TYPES_NAMES","RIDE_TYPES","SELF_DRIVE","SCHEDULED","CHARTER","TOUR","CARPOOL","HITCH_HIKING","DROP_OFF","VEHICLE_NAMES","_VEHICLE_NAMES","VEHICLE_TYPES","CAR","TRAIN","AIRCRAFT","BUS","MOTORHOME","LOCAL_TRAIN","FERRY","BIKE","BY_FEET","ROPEWAY","FUNICULAR","MOTORBIKE","TRUCK","ALL_TERRAIN_VEHICLE","TRAM","TROLLEY","TAXI","CITY_BUS","JITNEY","SUBWAY","PUBLIC_TRANSPORT","ORIGIN_OF_TRIP","renderVehicleType","vehicleType","renderRideType","rideType","renderRideClass","rideClass","renderRideOccupation","rideOccupation","useRideState","initialArrivalVisitId","departureVisitId","initialDepartureVisitId","arrivalVisitId","initialVehicleType","initialRideType","initialRideComment","rideComment","initialRideClass","initialRideOccupation","initialDepartureDateTime","departureDateTime","initialArrivalDateTime","arrivalDateTime","RideEditCard_slicedToArray","rideState","setRideState","rideStateUpdate","RideEditCard_objectSpread","RideEditCard","availableVisits","originLocation","_ref6$rideState","setDepartureVisitId","_ref7","nextDepartureVisitId","setArrivalVisitId","_ref8","nextArrivalVisitId","setVehicleType","_ref9","nextVehicleType","setRideType","_ref10","nextRideType","setRideClass","_ref11","nextRideClass","setRideOccupation","_ref12","nextRideOccupation","setArrivalDateTime","nextArrivalDateTime","setDepartureDateTime","nextDepartureDateTime","setRideComment","_ref13","nextRideComment","availableVisitsIds","_ref14","visitId","visitsDict","fromEntries","renderVisit","_ref15","RideEditCard_toConsumableArray","material_ui_pickers_esm","autoOk","ampm","RideEditDialog","_useRideState","RideEditDialog_slicedToArray","blocks_RideEditCard","locationsPropTypes","Ride","defaultArrivalVisitId","defaultDepartureVisitId","isEditable","handleRideUpdate","onRideUpdate","ride","_ref$ride","rideId","showDetails","rideInitialState","initializeRide","CarIcon","TrainIcon","FlightIcon","BusIcon","VanIcon","BoatIcon","BikeIcon","WalkIcon","MotorcycleIcon","TruckIcon","TerrainIcon","TramIcon","LocalTaxiIcon","SubwayIcon","SeatIcon","CustomTransportIcon","resolveRideIconComponent","UnknownRideIcon","iconNode","rideNode","rides_RideEditDialog_RideEditDialog","editDialogTrigger","updatedRide","Ride_objectSpread","cls","ThumbUp_default","details","arrivalDateTimeString","toLocaleDateString","departureDateTimeString","arrivalDepartureDateTimeToString","DragHandler","DragHandle_default","dragHandler","cursor","marginLeft","top","transform","VisitWithRides","_cls","_cls2","_ref$visit","ridesDict","prevVisitId","nextVisitId","tripVisitsList","isSorting","isArrivalRideMatch","isDepartureRideMatch","shouldWarnForArrivalRide","shouldWarnForDepartureRide","blocks_Ride","VisitWithRides_defineProperty","alwaysVisible","warning","visits_Visit","visibleOnlyOnHover","blocks_DragHandler","&:hover $editDialogTrigger","visibility","&:hover $visibleOnlyOnHover","VisitCreator","draggableContainer","SortableTrip","SortableContainer","SortableVisitWithRides","SortableElement","replaceWithNode","Trip_objectWithoutProperties","blocks_VisitWithRides","Trip_extends","Trip","handleVisitsOrderUpdate","onVisitsOrderUpdate","trip","_ref3$trip","tripId","tripIndex","handleTripUpdate","onTripUpdate","storyUrl","isSortable","Trip_slicedToArray","setIsSorting","_useState4","addVisitControlIndex","setAddVisitControlIndex","VisitWithRidesComponent","visitsNodes","_toConsumableArray","slice","withItem","isItVisitCreatorControl","indexOfVisit","blocks_VisitCreator","newVisit","indexInCollection","collection","_resolveVisitsWindow2","overstepIndex","prevVisitIndex","nextVisitIndex","resolveVisitsWindow","wrappedVisitsNodes","onSortEnd","oldIndex","newIndex","shouldCancelStart","updateBeforeSortStart","lockAxis","lockToContainerEdges","originLocationNode","locations_Location","IconHome","tripEditControlsNode","trips_TripEditDialog_TripEditDialog","updatedTrip","Trip_objectSpread","lastVisit","lastButOneVisit","rideToOriginId","recentVisitId","rideToOriginNode","hasStory","some","departureRideComment","react_router_dom","to","tripPropTypes","resolveOrder","calcOrder","orderResolver","prevOrder","nextOrder","Math","random","memoizedGroupAndSortVisitsByTrips","memoizeByLastArgs","Trips","_ref$trips","trips","_ref$trips$data","tripsList","_ref$visits","visits","_ref$visits$data","namedPaths","request","useAuthContext","isAuthenticated","body","submitOrderInTrip","submitRide","submitTrip","actionCreators_objectSpread","submitVisit","visitsGroupedByTrips","blocks_Trip","travel","tripStory","toUrl","strTripId","String","pathsPropTypes","authContextPropTypes","ridesPropTypes","withRouter","withPaths","userAlias","match","params","prevUserAlias","_ref6$fallback","selectProvisionStatus","fallback","_ref7$data","userTripsIds","locations","isMissingIf","isDisabled","rides","trip_id"],"mappings":"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","file":"travel-Trips-0d2ab20b700294e9ec98.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isComplete = false, isPending = true } = {} } = props;\n  if (!isComplete || isPending) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import groupBy from 'lodash/groupBy';\nimport mapValues from 'lodash/mapValues';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n\nexport const groupAndSortVisitsByTrips = visitsList =>\n  mapValues(groupBy(visitsList, 'tripId'), sortVisitsByTrips);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    flexGrow: '1',\n    flexBasis: '0',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n    >\n      {hasNullOption && (\n        <MenuItem key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nconst valuePropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\nOptionsSelect.propTypes = {\n  caption: PropTypes.string.isRequired,\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  hasNullOption: PropTypes.bool,\n  inputId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionRender: PropTypes.func,\n  options: PropTypes.arrayOf(valuePropTypes),\n  value: valuePropTypes,\n};\n\nOptionsSelect.defaultProps = {\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DefaultSuggestionResolver = ({\n  inputValue,\n  sourceProps: { suggestions = [] } = {},\n  children: renderProp,\n}) => {\n  const lowerCaseInputValue = inputValue.toLowerCase();\n  return (\n    <React.Fragment>\n      {renderProp(\n        suggestions.filter(({ label }) =>\n          label.toLowerCase().includes(lowerCaseInputValue),\n        ),\n      )}\n    </React.Fragment>\n  );\n};\n\nDefaultSuggestionResolver.propTypes = {\n  inputValue: PropTypes.string.isRequired,\n  sourceProps: PropTypes.shape({\n    // eslint-disable-next-line react/forbid-prop-types\n    suggestions: PropTypes.array,\n  }).isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default DefaultSuggestionResolver;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default ({ inputProps, classes, ref, ...other }) => (\n  <TextField\n    InputProps={{\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput,\n      },\n      ...inputProps,\n    }}\n    {...other}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst DefaultSuggestionRender = ({\n  itemProps,\n  isHighlighted,\n  isSelected,\n  children,\n}) => (\n  <MenuItem\n    {...itemProps}\n    selected={isHighlighted}\n    component=\"div\"\n    style={{\n      fontWeight: isSelected ? 500 : 400,\n    }}\n  >\n    {children}\n  </MenuItem>\n);\n\nDefaultSuggestionRender.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  itemProps: PropTypes.object,\n  isHighlighted: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n};\n\nDefaultSuggestionRender.defaultProps = {\n  itemProps: undefined,\n  isHighlighted: false,\n  isSelected: false,\n};\n\nexport default DefaultSuggestionRender;\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport DefaultSuggestionsResolver from './components/DefaultSuggestionsResolver';\nimport DefaultInputRender from './components/DefaultInputRender';\nimport DefaultSuggestionRender from './components/DefaultSuggestionRender';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\nexport const createSuggestComponent = ({\n  SuggestionsResolver = DefaultSuggestionsResolver,\n  SuggestionItemComponent = DefaultSuggestionRender,\n  InputComponent = DefaultInputRender,\n} = {}) => ({\n  sourceProps,\n  inputProps,\n  inputFieldProps,\n  ...downshiftProps\n}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <InputComponent\n              fullWidth={true}\n              classes={classes}\n              inputProps={getInputProps(inputProps)}\n              {...inputFieldProps}\n            />\n            <div {...getMenuProps()}>\n              {isOpen && (\n                <Paper className={classes.paper} square={true}>\n                  <SuggestionsResolver\n                    inputValue={inputValue}\n                    sourceProps={sourceProps}\n                  >\n                    {resolvedSuggestions =>\n                      resolvedSuggestions.map((suggestion, index) => (\n                        <SuggestionItemComponent\n                          key={suggestion.label}\n                          itemProps={getItemProps({\n                            item: suggestion,\n                          })}\n                          isHighlighted={highlightedIndex === index}\n                          isSelected={\n                            Boolean(selectedItem) &&\n                            selectedItem.label === suggestion.label\n                          }\n                        >\n                          {suggestion.label}\n                        </SuggestionItemComponent>\n                      ))\n                    }\n                  </SuggestionsResolver>\n                </Paper>\n              )}\n            </div>\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n};\n\nexport default createSuggestComponent();\n/*\nconst x = (\n  <FetchContacts\n    searchValue={inputValue}\n    omitContacts={selectedContacts}\n    onLoaded={({ contacts }) => {\n      clearItems();\n      if (contacts) {\n        setHighlightedIndex(contacts.length ? 0 : null);\n        setItemCount(contacts.length);\n      }\n    }}\n  >\n    {({ loading, contacts, error }) => (\n      <div\n        {...css({\n          position: 'absolute',\n          backgroundColor: 'white',\n          width: 300,\n          maxHeight: 280,\n          overflow: 'scroll',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n          border: '1px solid rgba(0,0,0,.2)',\n        })}\n      >\n        {loading ? (\n          <div {...css({ padding: 10 })}>loading...</div>\n        ) : error ? (\n          <div {...css({ padding: 10 })}>error...</div>\n        ) : contacts.length ? (\n          <ContactList\n            highlightedIndex={highlightedIndex}\n            getItemProps={getItemProps}\n            contacts={contacts}\n          />\n        ) : (\n          <div {...css({ padding: 10 })}>no results...</div>\n        )}\n      </div>\n    )}\n  </FetchContacts>\n);\n\nclass FetchContacts extends React.Component {\n  static initialState = { loading: false, error: null, contacts: [] };\n  requestId = 0;\n  state = FetchContacts.initialState;\n  mounted = false;\n  reset(overrides) {\n    this.setState({ ...FetchContacts.initialState, ...overrides });\n  }\n  fetch = debounce(\n    () => {\n      if (!this.mounted) {\n        return;\n      }\n      const { omitContacts, limit } = this.props;\n      this.requestId++;\n      fetchContacts(this.props.searchValue, {\n        omitContacts,\n        limit,\n        requestId: this.requestId,\n      }).then(\n        ({ response: { data: contacts, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ contacts });\n            this.setState({ loading: false, contacts });\n          }\n        },\n        ({ response: { error, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ error });\n            this.setState({ loading: false, error });\n          }\n        },\n      );\n    },\n    { wait: 300 },\n  );\n  prepareFetch() {\n    this.reset({ loading: true });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    this.prepareFetch();\n    this.fetch();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.searchValue !== this.props.searchValue ||\n      prevProps.omitContacts !== this.props.omitContacts\n    ) {\n      this.prepareFetch();\n      this.fetch();\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\n*/\n","import withProvision from 'core/connection/withProvision';\nimport { createSuggestComponent } from '../Suggest';\n\nconst Resolver = ({\n  sourceProps: {\n    filterField,\n    convertEntityToSuggestion = entity => ({\n      ...entity,\n      label: entity[filterField],\n    }),\n  } = {},\n  entities: { data: entitiesList = [] } = {},\n  children: renderProp,\n}) => renderProp((entitiesList || []).map(convertEntityToSuggestion));\n\nexport default createSuggestComponent({\n  SuggestionsResolver: withProvision(\n    (\n      state,\n      {\n        inputValue,\n        sourceProps: { modelName, domain, filterField, numberOfItemsToRequest },\n      },\n    ) => ({\n      identity: inputValue,\n      require: {\n        entities: {\n          modelName,\n          query: {\n            filter: {\n              [filterField]: { comparator: '~', value: `%${inputValue}%` },\n            },\n            navigation: { pageSize: numberOfItemsToRequest },\n          },\n        },\n      },\n      meta: {\n        domain,\n      },\n      debounceRequest: 500,\n    }),\n  )(Resolver),\n});\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport compose from 'lodash/fp/compose';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { selectDict } from 'core/connection';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from '../localization';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'block',\n  },\n};\n\nconst TripEditCard = ({\n  classes,\n  locationsDict,\n  tripState: { tripType, tripName, originLocationId },\n  setTripState,\n}) => {\n  const setTripName = useCallback(\n    ({ target: { value: nextTripName } }) =>\n      setTripState({ tripName: nextTripName }),\n    [setTripState],\n  );\n  const setTripType = useCallback(\n    ({ target: { value: nextTripType } }) =>\n      setTripState({ tripType: nextTripType }),\n    [setTripState],\n  );\n  const setOriginLocation = useCallback(\n    ({ locationId: nextOriginLocationId }) =>\n      setTripState({ originLocationId: nextOriginLocationId }),\n    [setTripState],\n  );\n\n  const originLocation = locationsDict[originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <TextField\n          label=\"Название поездки\"\n          value={tripName}\n          onChange={setTripName}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          textFieldProps={{\n            label: 'Старт из',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Населенный пункт...' }}\n          onChange={setOriginLocation}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'locations',\n            domain: 'tripEditCard.location',\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип поездки\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={setTripType}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripType}\n        />\n      </div>\n    </>\n  );\n};\n\nTripEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nTripEditCard.defaultProps = {\n  className: undefined,\n};\n\nconst mapStateToProps = state => ({\n  locationsDict: selectDict(state, 'locations'),\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles),\n)(TripEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport TripEditCard, { useTripState } from './blocks/TripEditCard';\n\nconst TripEditDialog = ({ initialState, children, onSubmit: handleSubmit }) => {\n  const { tripState, setTripState } = useTripState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(tripState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        {children}\n      </IconButton>\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Поездка</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование поездки</DialogContentText>\n            <TripEditCard tripState={tripState} setTripState={setTripState} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nTripEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nTripEditDialog.defaultProps = {};\n\nexport default TripEditDialog;\n","// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    if (element.dataset && element.dataset.sortHandler === 'enabled') {\n      return false;\n    }\n    element = element.parentNode;\n  }\n  return true;\n};\n","export const withItem = (array, item, index = array.length) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index),\n];\n\nexport const withoutItem = (array, index) => [\n  ...array.slice(0, index),\n  ...array.slice(index + 1),\n];\n\nexport const replaceItem = (array, index, item) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index + 1),\n];\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport reactComponentPropType from 'modules/customPropTypes/reactComponentPropType';\nimport locationPropTypes from 'travel/models/locations/propTypes';\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n};\n\nconst Location = ({\n  location: { locationName = 'unknown' },\n  Icon,\n  classes,\n}) => (\n  <div className={classes.container}>\n    {Icon && <Icon className={classes.icon} />}\n    {locationName}\n  </div>\n);\n\nLocation.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  location: PropTypes.shape(locationPropTypes),\n  Icon: reactComponentPropType,\n};\n\nLocation.defaultProps = {\n  location: {},\n  Icon: undefined,\n};\n\nexport default withStyles(styles)(Location);\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport compose from 'lodash/fp/compose';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { selectDict } from 'core/connection';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { VISIT_TYPE_NAMES } from '../localization';\n\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nexport const useVisitState = ({\n  visitType: initialVisitType,\n  visitComment: initialVisitComment,\n  locationId: initialLocationId,\n}) => {\n  const [visitState, setVisitState] = useState({\n    visitComment: initialVisitComment,\n    visitType: initialVisitType,\n    locationId: initialLocationId,\n  });\n\n  return {\n    visitState,\n    setVisitState: visitStateUpdate =>\n      setVisitState({ ...visitState, ...visitStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'block',\n  },\n};\n\nconst VisitEditCard = ({\n  classes,\n  locationsDict,\n  visitState: { visitType, visitComment, locationId },\n  setVisitState,\n}) => {\n  const setVisitType = useCallback(\n    ({ target: { value: nextVisitType } }) =>\n      setVisitState({ visitType: nextVisitType }),\n    [setVisitState],\n  );\n  const setLocation = useCallback(\n    ({ locationId: nextLocationId }) =>\n      setVisitState({ locationId: nextLocationId }),\n    [setVisitState],\n  );\n  const setVisitComment = useCallback(\n    ({ target: { value: nextVisitComment } }) =>\n      setVisitState({ visitComment: nextVisitComment }),\n    [setVisitState],\n  );\n\n  const location = locationsDict[locationId];\n  const { locationName } = location || {};\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          textFieldProps={{\n            label: 'Место посещения',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Населенный пункт...' }}\n          onChange={setLocation}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'locations',\n            domain: 'visitEditCard.location',\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          onChange={setVisitType}\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n          value={visitType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          label=\"Комментарий\"\n          value={visitComment}\n          onChange={setVisitComment}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </div>\n    </>\n  );\n};\n\nVisitEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nVisitEditCard.defaultProps = {\n  className: undefined,\n};\n\nconst mapStateToProps = state => ({\n  locationsDict: selectDict(state, 'locations'),\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles),\n)(VisitEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport VisitEditCard, { useVisitState } from './blocks/VisitEditCard';\n\nconst VisitEditDialog = ({ initialState, children, onSubmit: handleSubmit }) => {\n  const { visitState, setVisitState } = useVisitState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(visitState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        {children}\n      </IconButton>\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Посещение</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование посещения</DialogContentText>\n            <VisitEditCard visitState={visitState} setVisitState={setVisitState} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nVisitEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nVisitEditDialog.defaultProps = {};\n\nexport default VisitEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisitEditDialog from 'travel/components/models/visits/VisitEditDialog';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst resolveVisitIconComponent = visitType => {\n  switch (visitType) {\n    case 'Transit':\n      return TransferWithinAStationIcon;\n    case 'BaseCamp':\n      return DomainIcon;\n    case 'Relocation':\n      return LocalShippingIcon;\n    case 'Regular':\n    default:\n      return LocationCityIcon;\n  }\n};\n\nconst Visit = ({ visit, onVisitUpdate: handleVisitUpdate, classes }) => {\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName, visitType } = visit;\n  const Icon = resolveVisitIconComponent(visitType);\n  return (\n    <div className={classes.container}>\n      {Icon && <Icon className={classes.icon} />}\n      {locationName}\n      <VisitEditDialog\n        initialState={visit}\n        onSubmit={updatedVisit =>\n          handleVisitUpdate({ ...visit, ...updatedVisit })\n        }\n      >\n        <EditIcon className={classes.editIcon} />\n      </VisitEditDialog>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  editIcon: {},\n};\n\nVisit.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  visit: PropTypes.shape(visitPropTypes),\n  onVisitUpdate: PropTypes.func.isRequired,\n};\n\nVisit.defaultProps = {\n  visit: {},\n};\n\nexport default withStyles(styles)(Visit);\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, TimePicker } from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect/OptionsSelect';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from '../localization';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nexport const useRideState = ({\n  departureVisitId: initialArrivalVisitId,\n  arrivalVisitId: initialDepartureVisitId,\n  vehicleType: initialVehicleType,\n  rideType: initialRideType,\n  rideComment: initialRideComment,\n  rideClass: initialRideClass,\n  rideOccupation: initialRideOccupation,\n  departureDateTime: initialDepartureDateTime,\n  arrivalDateTime: initialArrivalDateTime,\n}) => {\n  const [rideState, setRideState] = useState({\n    departureVisitId: initialArrivalVisitId,\n    arrivalVisitId: initialDepartureVisitId,\n    vehicleType: initialVehicleType,\n    rideType: initialRideType,\n    rideComment: initialRideComment,\n    rideClass: initialRideClass,\n    rideOccupation: initialRideOccupation,\n    departureDateTime: initialDepartureDateTime,\n    arrivalDateTime: initialArrivalDateTime,\n  });\n\n  return {\n    rideState,\n    setRideState: rideStateUpdate =>\n      setRideState({ ...rideState, ...rideStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n  },\n  option: {\n    flexGrow: '1',\n  },\n};\n\nconst RideEditCard = ({\n  classes,\n  availableVisits,\n  originLocation,\n  rideState: {\n    departureVisitId,\n    arrivalVisitId,\n    vehicleType,\n    rideType,\n    rideComment,\n    rideClass,\n    rideOccupation,\n    departureDateTime,\n    arrivalDateTime,\n  },\n  setRideState,\n}) => {\n  const setDepartureVisitId = useCallback(\n    ({ target: { value: nextDepartureVisitId } }) =>\n      setRideState({ departureVisitId: nextDepartureVisitId }),\n    [setRideState],\n  );\n  const setArrivalVisitId = useCallback(\n    ({ target: { value: nextArrivalVisitId } }) =>\n      setRideState({ arrivalVisitId: nextArrivalVisitId }),\n    [setRideState],\n  );\n  const setVehicleType = useCallback(\n    ({ target: { value: nextVehicleType } }) =>\n      setRideState({ vehicleType: nextVehicleType }),\n    [setRideState],\n  );\n  const setRideType = useCallback(\n    ({ target: { value: nextRideType } }) =>\n      setRideState({ rideType: nextRideType }),\n    [setRideState],\n  );\n  const setRideClass = useCallback(\n    ({ target: { value: nextRideClass } }) =>\n      setRideState({ rideClass: nextRideClass }),\n    [setRideState],\n  );\n  const setRideOccupation = useCallback(\n    ({ target: { value: nextRideOccupation } }) =>\n      setRideState({ rideOccupation: nextRideOccupation }),\n    [setRideState],\n  );\n  const setArrivalDateTime = useCallback(\n    nextArrivalDateTime =>\n      setRideState({ arrivalDateTime: nextArrivalDateTime }),\n    [setRideState],\n  );\n  const setDepartureDateTime = useCallback(\n    nextDepartureDateTime =>\n      setRideState({ departureDateTime: nextDepartureDateTime }),\n    [setRideState],\n  );\n  const setRideComment = useCallback(\n    ({ target: { value: nextRideComment } }) =>\n      setRideState({ rideComment: nextRideComment }),\n    [setRideState],\n  );\n  const availableVisitsIds = availableVisits.map(({ visitId }) => visitId);\n  const visitsDict = Object.fromEntries(\n    availableVisits.map(visit => {\n      const { visitId } = visit;\n      return [visitId, visit];\n    }),\n  );\n  const renderVisit = useCallback(\n    ({ option: visitId }) => {\n      if (visitId === ORIGIN_OF_TRIP) {\n        const { locationName } = originLocation;\n        return locationName;\n      }\n      const visit = visitsDict[visitId];\n      if (!visit) {\n        return 'Не указано';\n      }\n      const { locationName } = visit;\n      return locationName;\n    },\n    [visitsDict],\n  );\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Отправление из\"\n          inputId=\"RideEditCard-departureVisitId\"\n          onChange={setDepartureVisitId}\n          optionRender={renderVisit}\n          hasNullOption={false}\n          options={[ORIGIN_OF_TRIP, ...availableVisitsIds]}\n          value={departureVisitId}\n        />\n        <OptionsSelect\n          caption=\"Прибытие в\"\n          inputId=\"RideEditCard-arrivalVisitId\"\n          onChange={setArrivalVisitId}\n          hasNullOption={false}\n          optionRender={renderVisit}\n          options={[...availableVisitsIds, ORIGIN_OF_TRIP]}\n          value={arrivalVisitId}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          onChange={setVehicleType}\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          value={vehicleType}\n        />\n        <OptionsSelect\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          onChange={setRideType}\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          value={rideType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          onChange={setRideClass}\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          value={rideClass}\n        />\n        <OptionsSelect\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          onChange={setRideOccupation}\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          value={rideOccupation}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <DatePicker\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          onChange={setDepartureDateTime}\n          value={departureDateTime}\n        />\n        <TimePicker\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          onChange={setDepartureDateTime}\n          value={departureDateTime}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <DatePicker\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата прибытия\"\n          onChange={setArrivalDateTime}\n          value={arrivalDateTime}\n        />\n        <TimePicker\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          onChange={setArrivalDateTime}\n          value={arrivalDateTime}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={setRideComment}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </div>\n    </>\n  );\n};\n\nRideEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nRideEditCard.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(RideEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport RideEditCard, { useRideState } from './blocks/RideEditCard';\n\nconst RideEditDialog = ({\n  availableVisits,\n  initialState,\n  children,\n  className,\n  onSubmit: handleSubmit,\n  originLocation,\n}) => {\n  const { rideState, setRideState } = useRideState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(rideState);\n    handleClose(false);\n  };\n\n  return (\n    <div className={className}>\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        {children}\n      </IconButton>\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={true}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Транспорт</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Как вы добрались в место назначения и как уехали из него?\n            </DialogContentText>\n            <RideEditCard\n              availableVisits={availableVisits}\n              rideState={rideState}\n              setRideState={setRideState}\n              originLocation={originLocation}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </div>\n  );\n};\n\nRideEditDialog.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n};\nRideEditDialog.defaultProps = {\n  className: undefined,\n  availableVisits: [],\n};\n\nexport default RideEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport arrivalDepartureDateTimeToString from 'modules/utilities/dateTime/arrivalDepartureDateTimeToString';\nimport { VEHICLE_TYPES, RIDE_TYPES } from 'travel/models/rides/consts';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport initializeRide from 'travel/models/rides/initialize';\nimport RideEditDialog from 'travel/components/models/rides/RideEditDialog';\n\nconst resolveRideIconComponent = vehicleType => {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n    default:\n      return CustomTransportIcon;\n  }\n};\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  editDialogTrigger: {\n    display: 'inline-block',\n  },\n};\n\nconst Ride = ({\n  availableVisits,\n  originLocation,\n  classes,\n  className,\n  defaultArrivalVisitId,\n  defaultDepartureVisitId,\n  isEditable,\n  onRideUpdate: handleRideUpdate,\n  ride,\n  ride: { rideId, vehicleType, rideType, arrivalDateTime, departureDateTime },\n  showDetails,\n}) => {\n  const rideInitialState = rideId\n    ? ride\n    : initializeRide({\n        defaultDepartureVisitId,\n        defaultArrivalVisitId,\n      });\n\n  const Icon = rideId ? resolveRideIconComponent(vehicleType) : UnknownRideIcon;\n\n  const iconNode = <Icon className={classes.icon} />;\n  const rideNode = isEditable ? (\n    <RideEditDialog\n      className={classes.editDialogTrigger}\n      initialState={rideInitialState}\n      availableVisits={availableVisits}\n      onSubmit={updatedRide => handleRideUpdate({ ...ride, ...updatedRide })}\n      originLocation={originLocation}\n    >\n      {iconNode}\n    </RideEditDialog>\n  ) : (\n    iconNode\n  );\n\n  return (\n    <div className={cls(className, classes.container)}>\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.icon} />\n      )}\n      {rideNode}\n      {Boolean(rideId && showDetails) && (\n        <span className={classes.details}>\n          {arrivalDepartureDateTimeToString(departureDateTime, arrivalDateTime)}\n        </span>\n      )}\n    </div>\n  );\n};\n\nRide.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  className: PropTypes.string,\n  defaultArrivalVisitId: PropTypes.number,\n  defaultDepartureVisitId: PropTypes.number,\n  isEditable: PropTypes.bool,\n  onRideUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  ride: PropTypes.shape(ridePropTypes),\n  showDetails: PropTypes.bool,\n};\n\nRide.defaultProps = {\n  availableVisits: [],\n  className: undefined,\n  defaultArrivalVisitId: undefined,\n  defaultDepartureVisitId: undefined,\n  isEditable: true,\n  ride: {},\n  showDetails: false,\n};\n\nexport default withStyles(styles)(Ride);\n","export default (departureDateTime, arrivalDateTime) => {\n  const arrivalDateTimeString =\n    Boolean(arrivalDateTime) && arrivalDateTime.toLocaleDateString();\n  const departureDateTimeString =\n    Boolean(departureDateTime) && departureDateTime.toLocaleDateString();\n  if (arrivalDateTimeString === departureDateTimeString) {\n    return arrivalDateTimeString;\n  }\n  return `${departureDateTimeString}—${arrivalDateTimeString}`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst styles = {\n  dragHandler: {\n    cursor: 'grab',\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n  },\n};\n\nconst DragHandler = ({ className, classes }) => (\n  <IconDragHandle\n    className={cls(className, classes.dragHandler)}\n    data-sort-handler=\"enabled\"\n  />\n);\n\nDragHandler.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nDragHandler.defaultProps = { className: undefined };\n\nexport default withStyles(styles)(DragHandler);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Visit from 'travel/components/models/visits/Visit';\nimport Ride from './Ride';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  alwaysVisible: {},\n  container: {\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n    // '&:hover $ride, $alwaysVisible': {\n    //   display: 'inline-block',\n    // },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n};\n\nconst VisitWithRides = ({\n  visit,\n  visit: { visitId, arrivalRideId, departureRideId } = {},\n  ridesDict,\n  classes,\n  prevVisitId,\n  nextVisitId,\n  tripVisitsList,\n  isEditable,\n  isSorting,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  onRideUpdate: handleRideUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  originLocation,\n}) => {\n  const shouldWarnForArrivalRide = isEditable && !isArrivalRideMatch;\n  const shouldWarnForDepartureRide = isEditable && !isDepartureRideMatch;\n\n  return (\n    <div className={classes.container}>\n      <Ride\n        availableVisits={tripVisitsList}\n        defaultDepartureVisitId={prevVisitId}\n        defaultArrivalVisitId={visitId}\n        visitId={visitId}\n        isEditable={isEditable}\n        className={cls(classes.ride, {\n          [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n          [classes.warning]: shouldWarnForArrivalRide,\n        })}\n        ride={ridesDict[arrivalRideId]}\n        showDetails={isSorting || shouldWarnForArrivalRide}\n        onRideUpdate={handleRideUpdate}\n        originLocation={originLocation}\n      />\n      <Visit\n        visit={visit}\n        onVisitUpdate={handleVisitUpdate}\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n      />\n      {(!isDepartureRideMatch || isSorting) && (\n        <Ride\n          className={cls(classes.ride, {\n            [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n            [classes.warning]: shouldWarnForDepartureRide,\n          })}\n          ride={ridesDict[departureRideId]}\n          availableVisits={tripVisitsList}\n          defaultDepartureVisitId={visitId}\n          defaultArrivalVisitId={nextVisitId}\n          isEditable={isEditable && !isDepartureRideMatch}\n          showDetails={isSorting || shouldWarnForDepartureRide}\n          onRideUpdate={handleRideUpdate}\n          originLocation={originLocation}\n        />\n      )}\n      <DragHandler className={classes.visibleOnlyOnHover} />\n    </div>\n  );\n};\n\nVisitWithRides.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isArrivalRideMatch: PropTypes.bool,\n  isDepartureRideMatch: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  isSorting: PropTypes.bool,\n  nextVisitId: PropTypes.number,\n  onRideUpdate: PropTypes.func.isRequired,\n  onVisitUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  prevVisitId: PropTypes.number,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  visit: PropTypes.shape(visitPropTypes).isRequired,\n};\n\nVisitWithRides.defaultProps = {\n  isArrivalRideMatch: true,\n  isDepartureRideMatch: true,\n  isEditable: false,\n  isSorting: false,\n  nextVisitId: null,\n  prevVisitId: null,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(VisitWithRides);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport initializeVisit from 'travel/models/visits/initialize';\nimport VisitEditDialog from 'travel/components/models/visits/VisitEditDialog';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  draggableContainer: {\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n};\n\nconst VisitCreator = ({\n  classes,\n  isSorting,\n  onVisitUpdate: handleVisitUpdate,\n}) => (\n  <div className={cls({ [classes.draggableContainer]: !isSorting })}>\n    <span>Добавить поездку</span>\n    <VisitEditDialog\n      initialState={initializeVisit()}\n      onSubmit={handleVisitUpdate}\n    >\n      <EditIcon className={classes.visibleOnlyOnHover} />\n    </VisitEditDialog>\n    <DragHandler className={classes.visibleOnlyOnHover} />\n  </div>\n);\n\nVisitCreator.propTypes = {\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isSorting: PropTypes.bool,\n  onVisitUpdate: PropTypes.func.isRequired,\n};\n\nVisitCreator.defaultProps = {\n  isSorting: false,\n};\n\nexport default withStyles(styles)(VisitCreator);\n","export default () => ({\n  visitType: null,\n  visitComment: '',\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport IconHome from '@material-ui/icons/Home';\nimport EditIcon from '@material-ui/icons/Edit';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\nimport { withItem } from 'modules/utilities/types/array';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Location from 'travel/components/models/locations/Location';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport VisitWithRides from './VisitWithRides';\nimport Ride from './Ride';\nimport VisitCreator from './VisitCreator';\n\nconst SortableTrip = SortableContainer(({ children }) => <div>{children}</div>);\nconst SortableVisitWithRides = SortableElement(\n  ({ replaceWithNode, onVisitUpdate: handleVisitUpdate, ...props }) =>\n    replaceWithNode || (\n      <VisitWithRides onVisitUpdate={handleVisitUpdate} {...props} />\n    ),\n);\n\nconst resolveVisitsWindow = (tripVisitsList, indexOfVisit, overstepIndex) => {\n  const prevVisitIndex =\n    indexOfVisit - 1 - (indexOfVisit > overstepIndex ? 1 : 0);\n  const nextVisitIndex =\n    indexOfVisit + 1 - (indexOfVisit + 1 > overstepIndex ? 1 : 0);\n  const prevVisit = prevVisitIndex >= 0 ? tripVisitsList[prevVisitIndex] : null;\n  const nextVisit =\n    nextVisitIndex < tripVisitsList.length\n      ? tripVisitsList[nextVisitIndex]\n      : null;\n  return [prevVisit, nextVisit];\n};\n\nconst Trip = ({\n  isEditable,\n  locationsDict,\n  onRideUpdate: handleRideUpdate,\n  onVisitsOrderUpdate: handleVisitsOrderUpdate,\n  ridesDict,\n  trip,\n  trip: { tripId, originLocationId, tripName },\n  tripIndex,\n  tripVisitsList,\n  onTripUpdate: handleTripUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  storyUrl,\n}) => {\n  const isSortable = isEditable;\n  const [isSorting, setIsSorting] = useState(false);\n  const [addVisitControlIndex, setAddVisitControlIndex] = useState(\n    tripVisitsList.length,\n  );\n  const handleSortEnd = (data, event) => {\n    setIsSorting(false);\n    const { oldIndex, newIndex } = data;\n    if (oldIndex === addVisitControlIndex) {\n      setAddVisitControlIndex(newIndex);\n    } else {\n      handleVisitsOrderUpdate(event, {\n        oldIndex: oldIndex > addVisitControlIndex ? oldIndex - 1 : oldIndex,\n        newIndex: newIndex > addVisitControlIndex ? newIndex - 1 : newIndex,\n        collection: tripVisitsList,\n      });\n    }\n  };\n\n  const VisitWithRidesComponent = isSortable\n    ? SortableVisitWithRides\n    : VisitWithRides;\n\n  const actualTripVisitsList = !isEditable\n    ? tripVisitsList\n    : withItem(\n        tripVisitsList,\n        { isItVisitCreatorControl: true },\n        addVisitControlIndex,\n      );\n  const visitsNodes = actualTripVisitsList.map((visit, indexOfVisit) => {\n    const { isItVisitCreatorControl, visitId } = visit;\n    if (isItVisitCreatorControl) {\n      return (\n        <SortableVisitWithRides\n          key=\"visitCreator\"\n          index={indexOfVisit}\n          replaceWithNode={\n            <VisitCreator\n              isSorting={isSorting}\n              onVisitUpdate={newVisit =>\n                handleVisitUpdate(newVisit, {\n                  indexInCollection: addVisitControlIndex,\n                  collection: tripVisitsList,\n                  tripId,\n                })\n              }\n            />\n          }\n        />\n      );\n    }\n    const [prevVisit, nextVisit] = resolveVisitsWindow(\n      tripVisitsList,\n      indexOfVisit,\n      addVisitControlIndex,\n    );\n    const { visitId: prevVisitId } = prevVisit || {};\n    const { visitId: nextVisitId } = nextVisit || {};\n    return (\n      <VisitWithRidesComponent\n        index={indexOfVisit /* for SortableVisitWithRides */}\n        isArrivalRideMatch={checkIsVisitsConnectedByRide(prevVisit, visit)}\n        isDepartureRideMatch={checkIsVisitsConnectedByRide(visit, nextVisit)}\n        isEditable={isEditable}\n        isSorting={isSorting}\n        key={visitId}\n        nextVisitId={nextVisitId}\n        onRideUpdate={handleRideUpdate}\n        onVisitUpdate={handleVisitUpdate}\n        originLocation={locationsDict[originLocationId]}\n        prevVisitId={prevVisitId}\n        ridesDict={ridesDict}\n        tripVisitsList={tripVisitsList}\n        visit={visit}\n      />\n    );\n  });\n\n  const wrappedVisitsNodes = isSortable ? (\n    <SortableTrip\n      onSortEnd={handleSortEnd}\n      shouldCancelStart={checkIsNodeNotSortable}\n      updateBeforeSortStart={() => setIsSorting(true)}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n    >\n      {visitsNodes}\n    </SortableTrip>\n  ) : (\n    <div>{visitsNodes}</div>\n  );\n\n  const originLocationNode = (\n    <Location location={locationsDict[originLocationId]} Icon={IconHome} />\n  );\n\n  const tripEditControlsNode = (\n    <TripEditDialog\n      initialState={trip}\n      onSubmit={updatedTrip => handleTripUpdate({ ...trip, ...updatedTrip })}\n    >\n      <EditIcon />\n    </TripEditDialog>\n  );\n\n  const lastVisit = tripVisitsList[tripVisitsList.length - 1];\n  const lastButOneVisit = tripVisitsList[tripVisitsList.length - 2];\n  const { departureRideId: rideToOriginId, visitId: recentVisitId } =\n    lastVisit || {};\n  const rideToOriginNode = (\n    <Ride\n      availableVisits={tripVisitsList}\n      defaultDepartureVisitId={recentVisitId}\n      isEditable={isEditable}\n      onRideUpdate={handleRideUpdate}\n      originLocation={locationsDict[originLocationId]}\n      ride={ridesDict[rideToOriginId]}\n      showDetails={\n        isSorting || checkIsVisitsConnectedByRide(lastButOneVisit, lastVisit)\n      }\n    />\n  );\n\n  const hasStory = tripVisitsList.some(\n    ({ visitComment, arrivalRideId, departureRideId }) => {\n      if (visitComment) {\n        return true;\n      }\n      const { rideComment: arrivalRideComment } =\n        ridesDict[arrivalRideId] || {};\n      if (arrivalRideComment) {\n        return true;\n      }\n      const { rideComment: departureRideComment } =\n        ridesDict[departureRideId] || {};\n      return Boolean(departureRideComment);\n    },\n  );\n  return (\n    <>\n      <h1>\n        {`${tripIndex + 1}. ${tripName}`}\n        {isEditable && tripEditControlsNode}\n      </h1>\n      {originLocationNode}\n      {wrappedVisitsNodes}\n\n      {rideToOriginNode}\n      {originLocationNode}\n      {hasStory && (\n        <div>\n          <Link to={storyUrl}>Заметки</Link>\n        </div>\n      )}\n    </>\n  );\n};\nTrip.propTypes = {\n  tripIndex: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  onRideUpdate: PropTypes.func.isRequired,\n  onTripUpdate: PropTypes.func.isRequired,\n  onVisitsOrderUpdate: PropTypes.func.isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  trip: PropTypes.shape(tripPropTypes).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n};\n\nTrip.defaultProps = {\n  isSortable: false,\n  tripVisitsList: [],\n};\n\nexport default Trip;\n","import createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nexport const submitOrderInTrip = ({ oldIndex, newIndex, collection }) => ({\n  modelName: 'visits',\n  query: {\n    id: collection[oldIndex].visitId,\n    body: {\n      orderInTrip: calcOrder({ index: newIndex, collection }),\n    },\n  },\n  meta: {\n    domain: 'trips.visits.sort',\n  },\n});\n\nexport const submitRide = ({ ride, ride: { rideId } }) => ({\n  modelName: 'rides',\n  query: {\n    id: rideId,\n    body: ride,\n  },\n  meta: {\n    domain: 'trips.visits.rides',\n  },\n});\n\nexport const submitTrip = ({ trip, trip: { tripId } }) => ({\n  modelName: 'trips',\n  query: {\n    id: tripId,\n    body: trip,\n  },\n  meta: {\n    domain: 'trips.visits.trips',\n  },\n});\n\nexport const submitVisit = ({\n  visit,\n  visit: { visitId },\n  tripId,\n  indexInCollection,\n  collection,\n}) => ({\n  modelName: 'visits',\n  query: {\n    id: visitId,\n    body: {\n      ...visit,\n      tripId,\n      orderInTrip:\n        indexInCollection || indexInCollection === 0\n          ? calcOrder({ index: indexInCollection, collection })\n          : undefined,\n    },\n  },\n  meta: {\n    domain: 'trips.visits.visit',\n  },\n});\n","const INITIAL_ORDER = 100;\nexport default ({ orderResolver: resolveOrder }) => ({ index, collection }) => {\n  if (!collection.length) {\n    return INITIAL_ORDER;\n  }\n  if (index <= 0) {\n    return resolveOrder(collection[0]) - 1;\n  }\n  if (index >= collection.length - 1) {\n    return resolveOrder(collection[collection.length - 1]) + 1;\n  }\n  const prevOrder = resolveOrder(collection[index - 1]);\n  const nextOrder = resolveOrder(collection[index]);\n  const randomness = ((Math.random() - 0.5) * (nextOrder - prevOrder)) / 2;\n  return (prevOrder + nextOrder) / 2 + randomness;\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport compose from 'lodash/fp/compose';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { selectDict, selectProvisionStatus } from 'core/connection';\nimport withProvision from 'core/connection/withProvision';\nimport { withPaths, pathsPropTypes } from 'core/context/AppContext';\nimport { authContextPropTypes, useAuthContext } from 'core/context/AuthContext';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport initializeTrip from 'travel/models/trips/initialize';\nimport { groupAndSortVisitsByTrips } from 'travel/models/trips/utils';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Trip from './blocks/Trip';\nimport {\n  submitRide,\n  submitOrderInTrip,\n  submitTrip,\n  submitVisit,\n} from './actionCreators';\n\nconst memoizedGroupAndSortVisitsByTrips = memoizeByLastArgs(\n  groupAndSortVisitsByTrips,\n);\n\nconst Trips = ({\n  trips: { data: tripsList = [] } = {},\n  visits: { data: visitsList = [] } = {},\n  locationsDict,\n  namedPaths,\n  ridesDict,\n  request,\n}) => {\n  const { isAuthenticated: isEditable } = useAuthContext();\n  if (!ridesDict || !visitsList) {\n    return <div>None</div>;\n  }\n\n  const handleVisitsOrderUpdate = useCallback(\n    (event, { oldIndex, newIndex, collection }) => {\n      if (oldIndex !== newIndex) {\n        request(submitOrderInTrip({ oldIndex, newIndex, collection }));\n      }\n    },\n    [request],\n  );\n\n  const handleRideUpdate = useCallback(\n    ride =>\n      request(\n        submitRide({\n          ride,\n        }),\n      ),\n    [request],\n  );\n\n  const handleTripUpdate = useCallback(\n    trip =>\n      request(\n        submitTrip({\n          trip,\n        }),\n      ),\n    [request],\n  );\n\n  const handleVisitUpdate = useCallback(\n    (visit, { indexInCollection, collection, tripId } = {}) =>\n      request(\n        submitVisit({\n          visit,\n          tripId,\n          indexInCollection,\n          collection,\n        }),\n      ),\n    [request],\n  );\n\n  const visitsGroupedByTrips = memoizedGroupAndSortVisitsByTrips(visitsList);\n  return (\n    <>\n      {isEditable && (\n        <TripEditDialog\n          initialState={initializeTrip()}\n          onSubmit={handleTripUpdate}\n        >\n          <EditIcon />\n        </TripEditDialog>\n      )}\n      {tripsList.map((trip, tripIndex) => {\n        const { tripId } = trip;\n        return (\n          <div key={tripId}>\n            <Trip\n              locationsDict={locationsDict}\n              onRideUpdate={handleRideUpdate}\n              onTripUpdate={handleTripUpdate}\n              onVisitUpdate={handleVisitUpdate}\n              onVisitsOrderUpdate={handleVisitsOrderUpdate}\n              ridesDict={ridesDict}\n              trip={trip}\n              tripIndex={tripIndex}\n              tripVisitsList={visitsGroupedByTrips[tripId]}\n              isEditable={isEditable}\n              storyUrl={namedPaths.travel.tripStory.toUrl({\n                strTripId: String(tripId),\n              })}\n            />\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nTrips.propTypes = {\n  namedPaths: pathsPropTypes.namedPaths.isRequired,\n  isAuthenticated: authContextPropTypes.isAuthenticated.isRequired,\n  request: PropTypes.func.isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationsPropTypes))\n    .isRequired,\n};\n\nconst mapStateToRequirements = (\n  state,\n  {\n    match: {\n      params: { userAlias },\n    },\n  },\n  { userAlias: prevUserAlias } = {},\n) => {\n  const { fallback = {} } = selectProvisionStatus(state, 'trips.trips') || {};\n  const { data: userTripsIds = [] } = fallback[0] || {};\n  const isUserChanged = prevUserAlias !== userAlias;\n  return {\n    identity: {\n      userAlias,\n      userTripsIds,\n    },\n    require: {\n      locations: {\n        modelName: 'locations',\n        isMissingIf: !prevUserAlias,\n        query: { navigation: { isDisabled: true } },\n      },\n      trips: {\n        modelName: 'trips',\n        isMissingIf: isUserChanged,\n        query: { userAlias, navigation: { isDisabled: true } },\n      },\n      rides: {\n        modelName: 'rides',\n        isMissingIf: !userTripsIds.length,\n        query: {\n          filter: { trip_id: { comparator: 'in', value: userTripsIds } },\n          navigation: { isDisabled: true },\n        },\n      },\n      visits: {\n        modelName: 'visits',\n        isMissingIf: !userTripsIds.length,\n        query: {\n          filter: { trip_id: { comparator: 'in', value: userTripsIds } },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n    meta: { domain: 'trips' },\n  };\n};\n\nconst mapStateToProps = state => ({\n  locationsDict: selectDict(state, 'locations'),\n  ridesDict: selectDict(state, 'rides'),\n});\n\nexport default compose(\n  withRouter,\n  withPaths,\n  withProvision(mapStateToRequirements, mapStateToProps),\n)(Trips);\n","export default () => ({\n  tripType: null,\n});\n"],"sourceRoot":""}