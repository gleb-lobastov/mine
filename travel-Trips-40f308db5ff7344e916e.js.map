{"version":3,"sources":["webpack:///./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack:///./src/modules/utilities/types/array.js","webpack:///./src/modules/components/muiExtended/DialogWithForm/DialogWithForm.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/tieDateTimeFields.js","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/blocks/RideEditForm.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/RideEditDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/Ride.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/DragHandler.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/VisitWithRides.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/localization.js","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/blocks/VisitEditCard.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/VisitEditDialog.jsx","webpack:///./src/packages/travel/pages/TripEditPage/blocks/VisitCreator.jsx","webpack:///./src/packages/travel/models/visits/initialize.js","webpack:///./src/packages/travel/pages/TripEditPage/blocks/Trip.jsx","webpack:///./src/packages/travel/pages/TripEditPage/actionCreators.js","webpack:///./src/modules/utilities/algorithms/createOrderCalculator.js","webpack:///./src/packages/travel/pages/TripEditPage/TripEditPage.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/Ride.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/VisitWithRides.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/Trip.jsx","webpack:///./src/packages/travel/pages/TripsPage/utils.js","webpack:///./src/packages/travel/pages/TripsPage/actionCreators.js","webpack:///./src/packages/travel/pages/TripsPage/TripsPage.jsx","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack:///./src/packages/travel/models/trips/utils/index.js","webpack:///./src/packages/travel/components/common/WelcomeScreen/WelcomeScreen.jsx","webpack:///./src/packages/travel/components/common/withTripsData/withTripsData.jsx","webpack:///./src/packages/travel/components/common/withTripsData/selectors.js","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/localization.js","webpack:///./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/localization.js","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/blocks/TripEditCard.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/TripEditDialog.jsx","webpack:///./src/packages/travel/models/trips/initialize.js","webpack:///./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack:///./src/packages/travel/components/models/visits/Visit.jsx","webpack:///./src/modules/utilities/dateTime/arrivalDepartureDateTimeToString.js","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionsResolver.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultInputRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack:///./src/modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest.jsx","webpack:///./src/packages/travel/components/models/locations/Location.jsx","webpack:///./src/modules/customPropTypes/reactComponentPropType.js"],"names":["checkIsNodeNotSortable","event","element","target","dataset","sortHandler","parentNode","DialogWithForm","_ref","children","description","handleReject","onReject","handleSubmit","onSubmit","title","forwardedProps","_objectWithoutProperties","react_default","a","createElement","formik_esm","_extends","_ref2","handleSubmitInternal","formikProps","Dialog","transitionDuration","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","React","cloneElement","DialogActions","Button","onClick","color","propTypes","PropTypes","node","isRequired","func","defaultProps","undefined","mixDateTime","dateFrom","timeFrom","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","tieDateTimeFields","_ref2$values","values","rideDeparture","rideArrival","handleChange","isSameDay","checkIsSameDay","setDatesAndTimes","nextRideDeparture","nextRideArrival","beforeDateTime","afterDateTime","isInverted","checkIsAfter","actualNextRideDeparture","actualNextRideArrival","checkIsDatesEqual","setRideDeparture","setRideArrival","isSameDateField","value","onChange","nextIsSameDay","Boolean","addDays","rideDepartureField","rideArrivalField","ORIGIN_OF_TRIP","renderVehicleType","vehicleType","option","VEHICLE_NAMES","renderRideType","rideType","RIDE_TYPES_NAMES","renderRideClass","_ref3","rideClass","RIDE_CLASSES_NAMES","renderRideOccupation","_ref4","rideOccupation","RIDE_OCCUPATION_NAMES","RideEditForm","_ref5","classes","availableVisits","originLocation","_ref5$values","departureVisitId","arrivalVisitId","rideComment","departureDateTime","arrivalDateTime","availableVisitsIds","map","_ref6","visitId","visitsDict","Object","fromEntries","visit","_tieDateTimeFields","renderVisit","useCallback","_ref7","locationName","Fragment","className","optionGroup","OptionsSelect","name","caption","inputId","optionRender","hasNullOption","options","concat","RideEditForm_toConsumableArray","VEHICLE_TYPES","RIDE_TYPES","RIDE_CLASSES","RIDE_OCCUPATION","DatePicker","autoOk","label","format","FormControlLabel","control","Checkbox","checked","TimePicker","ampm","TextField","multiline","rows","rowsMax","string","objectOf","withStyles","display","flexGrow","RideEditDialog","initialState","_React$useState2","_slicedToArray","useState","isOpen","setOpen","handleClose","IconButton","data-sort-handler","size","variant","muiExtended_DialogWithForm_DialogWithForm","initialValues","enableReinitialize","blocks_RideEditForm","arrayOf","shape","visitPropTypes","ridePropTypes","locationsPropTypes","Ride","defaultArrivalVisitId","defaultDepartureVisitId","isEditable","handleRideUpdate","onRideUpdate","ride","_ref$ride","rideId","showDetails","rideInitialState","initializeRide","Icon","CAR","CarIcon","TRAIN","TrainIcon","AIRCRAFT","FlightIcon","BUS","TROLLEY","CITY_BUS","BusIcon","MOTORHOME","JITNEY","VanIcon","LOCAL_TRAIN","FERRY","BoatIcon","BIKE","BikeIcon","BY_FEET","WalkIcon","MOTORBIKE","MotorcycleIcon","TRUCK","TruckIcon","ALL_TERRAIN_VEHICLE","TerrainIcon","TRAM","TramIcon","TAXI","LocalTaxiIcon","SUBWAY","SubwayIcon","PUBLIC_TRANSPORT","SeatIcon","ROPEWAY","FUNICULAR","CustomTransportIcon","resolveRideIconComponent","UnknownRideIcon","iconNode","icon","rideNode","rides_RideEditDialog_RideEditDialog","editDialogTrigger","updatedRide","_objectSpread","cls","container","HITCH_HIKING","ThumbUp_default","details","arrivalDepartureDateTimeToString","number","bool","marginRight","verticalAlign","DragHandler","DragHandle_default","dragHandler","cursor","marginLeft","position","top","transform","VisitWithRides","_cls","_cls2","_ref$visit","arrivalRideId","departureRideId","ridesDict","prevVisitId","nextVisitId","tripVisitsList","isSortable","isSorting","isArrivalRideMatch","isDepartureRideMatch","handleVisitUpdate","onVisitUpdate","locationsPath","shouldWarnForArrivalRide","shouldWarnForDepartureRide","blocks_Ride","VisitWithRides_defineProperty","alwaysVisible","warning","Visit","editIcon","visibleOnlyOnHover","blocks_DragHandler","instanceOf","Path","&:hover $editDialogTrigger","visibility","&:hover $visibleOnlyOnHover","VISIT_TYPE_NAMES","localization_defineProperty","_VISIT_TYPE_NAMES","VISIT_TYPES","TRANSIT","REGULAR","BASE_CAMP","RELOCATION","renderVisitType","visitType","useVisitState","initialVisitType","initialVisitComment","visitComment","initialLocationId","locationId","initialLocationName","initialGeonameId","geonameId","_useState2","VisitEditCard_slicedToArray","visitState","setVisitState","visitStateUpdate","VisitEditCard_objectSpread","VisitEditCard","_ref3$visitState","setVisitType","nextVisitType","setGeoname","nextGeonameId","setVisitComment","nextVisitComment","ProvisionedSuggest","root","suggest","textFieldProps","initialInputValue","inputProps","placeholder","sourceProps","filterField","modelName","domain","queryFormat","QUERY_FORMATS","SEARCH","resolveDetails","countryName","regionName","filter","join","fullWidth","minWidth","VisitEditDialog","_useVisitState","VisitEditDialog_slicedToArray","blocks_VisitEditCard","VisitCreator","draggableContainer","visits_VisitEditDialog_VisitEditDialog","SortableTrip","SortableContainer","SortableVisitWithRides","SortableElement","replaceWithNode","props","Trip_objectWithoutProperties","blocks_VisitWithRides","Trip_extends","Trip","countriesDict","locationsDict","handleVisitsOrderUpdate","onVisitsOrderUpdate","trip","_ref3$trip","tripId","originLocationId","tripName","tripType","handleTripUpdate","onTripUpdate","Trip_slicedToArray","setIsSorting","_useState4","length","addVisitControlIndex","setAddVisitControlIndex","visitsNodes","array","item","index","arguments","_toConsumableArray","slice","withItem","isItVisitCreatorControl","indexOfVisit","key","blocks_VisitCreator","newVisit","indexInCollection","collection","_resolveVisitsWindow2","overstepIndex","prevVisitIndex","nextVisitIndex","resolveVisitsWindow","prevVisit","nextVisit","checkIsVisitsConnectedByRide","wrappedVisitsNodes","onSortEnd","data","oldIndex","newIndex","shouldCancelStart","updateBeforeSortStart","lockAxis","lockToContainerEdges","originLocationNode","Location","location","IconHome","tripEditControlsNode","TripEditDialog","updatedTrip","Trip_objectSpread","Edit_default","lastVisit","lastButOneVisit","rideToOriginId","recentVisitId","isRelocation","TRIP_TYPES","rideToOriginNode","resolveTripCaption","countryId","tripIndex","locationPropTypes","tripPropTypes","tripStoryPath","resolveOrder","calcOrder","orderResolver","orderInTrip","prevOrder","nextOrder","Math","random","submitOrderInTrip","query","body","submitRide","submitTrip","submitVisit","actionCreators_objectSpread","memoizedGroupAndSortVisitsByTrips","memoizeByLastArgs","groupAndSortVisitsByTrips","TripEditPage","_ref$match$params","match","params","visitedUserAlias","userAlias","strTripId","isTripsComplete","_ref$userTrips","userTrips","_ref$userTrips$data","tripsList","_ref$userVisits","userVisits","_ref$userVisits$data","visitsList","request","invalidateRequest","_useAuthContext","useAuthContext","isAuthenticated","authenticatedUserAlias","_usePaths$travel","usePaths","travel","tripStory","locations","then","specifiedTripId","parseInt","tripToEdit","find","visitsGroupedByTrips","blocks_Trip","trips","visits","ridesPropTypes","compose","withTripsData","mapStateToProps","state","selectDict","selectProvisionStatus","isComplete","requirementsConfig","_requirementsConfig","TripEditPage_defineProperty","DATA_CHUNKS","COMMON","COUNTRIES","USER","TRIPS","LOCATIONS","VISITS","RIDES","_defineProperty","_ref$trip","tripEditUrl","tripStoryUrl","component","Link","to","hasStory","some","departureRideComment","checkTripHasStory","react_router_dom","TripsPage","tripEditPath","tripEdit","actualTripsList","addTripNode","useMemo","initializeTrip","WelcomeScreen","shouldShowLinkToTrips","toUrl","String","TripsPage_defineProperty","withLoader","Component","_props$provision","provision","_props$provision$isPe","isPending","hasFallback","PlainLoader","__webpack_exports__","_len2","provisionParams","Array","_key2","ExtendableComponent","_len","funcsArray","_key","arg","reduceRight","composed","provide","apply","uniqTrimAndJoin","maxLength","_ref$separator","separator","uniqArray","uniq","result","originCountryId","fallback","visitsByCountries","keys","groupBy","Number","__webpack_require__","d","sortVisitsByTrips","utils_groupAndSortVisitsByTrips","sort","mapValues","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","modules_packages__WEBPACK_IMPORTED_MODULE_4__","core_context_AuthContext__WEBPACK_IMPORTED_MODULE_5__","tripsPath","Message","path","withRouter","mapStateToRequirementsConfig","ProvisionedComponent","withProvision","userTripsIds","selectPlaceholder","selectUserTripsIds","isFunction","countries","condition","navigation","isDisabled","observe","_selectLocationsIds","tripsDict","requiredLocationsIds","reduce","memo","push","missingLocationsIds","requiredLocationId","selectLocationsIds","userLocations","comparator","year","actualYear","test","trip_id","departure_date_time","arrival_date_time","userRides","_RIDE_CLASSES_NAMES","ECONOMY","COMFORT","BUSINESS","FIRST","PRIVATE","_RIDE_OCCUPATION_NAME","PASSENGER","STUFF","DRIVER","_RIDE_TYPES_NAMES","SELF_DRIVE","SCHEDULED","CHARTER","TOUR","CARPOOL","DROP_OFF","_VEHICLE_NAMES","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_6__","shrink","htmlFor","displayEmpty","input","selectRoot","valuePropTypes","oneOfType","flexBasis","TRIP_TYPE_NAMES","_TRIP_TYPE_NAMES","LEISURE","MIXED","OTHER","renderTripType","useTripState","initialTripName","initialTripType","initialOriginLocationId","initialOriginGeonameId","originGeonameId","tripState","setTripState","tripStateUpdate","TripEditCard","_ref3$tripState","setTripName","nextTripName","setTripType","nextTripType","setOriginGeoname","nextOriginGeonameId","_ref8","connect","_useTripState","TripEditDialog_slicedToArray","blocks_TripEditCard","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_LocationCity__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_LocationCity__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_icons_TransferWithinAStation__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_TransferWithinAStation__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_LocalShipping__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_LocalShipping__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Domain__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Domain__WEBPACK_IMPORTED_MODULE_7___default","modules_utilities_routing_Path__WEBPACK_IMPORTED_MODULE_8__","travel_models_visits_propTypes__WEBPACK_IMPORTED_MODULE_9__","TransferWithinAStationIcon","DomainIcon","LocalShippingIcon","LocationCityIcon","resolveVisitIconComponent","strLocationId","arrivalDateTimeString","toLocaleDateString","departureDateTimeString","DefaultSuggestionResolver","inputValue","_ref$sourceProps","_ref$sourceProps$sugg","suggestions","renderProp","lowerCaseInputValue","toLowerCase","includes","DefaultInputRender","ref","other","InputProps","inputRef","inputRoot","inputInput","DefaultSuggestionRender","itemProps","isHighlighted","isSelected","_ref$children","MenuItem","DefaultSuggestionRender_extends","selected","style","fontWeight","ListItemText","primary","secondary","object","useStyles","makeStyles","theme","paper","zIndex","marginTop","spacing","left","right","defaultItemToString","createSuggestComponent","_ref2$SuggestionsReso","SuggestionsResolver","DefaultSuggestionsResolver","_ref2$SuggestionItemC","SuggestionItemComponent","_ref2$InputComponent","InputComponent","customClasses","inputFieldProps","downshiftProps","Suggest_objectWithoutProperties","Suggest_objectSpread","downshift_esm","Suggest_extends","itemToString","getInputProps","getItemProps","getMenuProps","highlightedIndex","selectedItem","Paper","square","resolvedSuggestions","suggestion","FILTER","resolveQueryByFormat","searchString","pageSize","numberOfItemsToRequest","search","ProvisionedSuggest_defineProperty","_ref3$sourceProps","identity","entities","debounceRequest","_ref2$sourceProps","_ref2$sourceProps$con","convertEntityToSuggestion","entity","ProvisionedSuggest_objectSpread","_ref2$entities","_ref2$entities$data","entitiesList","_ref$location","_ref$location$locatio","locationNode","propName","componentName","isValidElementType","Error"],"mappings":"2UACeA,EAAA,SAAAC,GAEb,IADA,IAAIC,EAAUD,EAAME,OACbD,GAAS,CACd,GAAIA,EAAQE,SAA2C,YAAhCF,EAAQE,QAAQC,YACrC,OAAO,EAETH,EAAUA,EAAQI,WAEpB,OAAO,wVCTF,klCCUP,IAAMC,GAAiB,SAAAC,GAAA,IACrBC,EADqBD,EACrBC,SACAC,EAFqBF,EAErBE,YACUC,EAHWH,EAGrBI,SACUC,EAJWL,EAIrBM,SACAC,EALqBP,EAKrBO,MACGC,EANkBC,GAAAT,EAAA,iEAQrBU,EAAAC,EAAAC,cAACC,GAAA,EAADC,GAAA,GAAYN,EAAZ,CAA4BF,SAAUD,IACnC,SAAAU,GAAA,IAAiBC,EAAjBD,EAAGV,aAAuCY,EAA1CR,GAAAM,EAAA,yBACCL,EAAAC,EAAAC,cAACM,GAAA,EAAD,CACEC,mBAAoB,IACpBC,MAAM,EACNC,QAASlB,EACTmB,kBAAgB,qBAEhBZ,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAaC,GAAG,qBAAqBjB,GACrCG,EAAAC,EAAAC,cAACa,GAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,GAAA,EAAD,KAAoBxB,GACnByB,IAAMC,aAAa3B,EAAUgB,IAEhCP,EAAAC,EAAAC,cAACiB,GAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,GAAA,EAAD,CAAQC,QAAS5B,EAAc6B,MAAM,aAArC,UAGAtB,EAAAC,EAAAC,cAACkB,GAAA,EAAD,CAAQC,QAASf,EAAsBgB,MAAM,WAA7C,kBASVjC,GAAekC,UAAY,CACzBhC,SAAUiC,IAAUC,KAAKC,WACzBlC,YAAagC,IAAUC,KACvB/B,SAAU8B,IAAUG,KAAKD,WACzB9B,SAAU4B,IAAUG,KAAKD,WACzB7B,MAAO2B,IAAUC,MAEnBpC,GAAeuC,aAAe,CAC5BpC,iBAAaqC,EACbhC,WAAOgC,GAGMxC,6HChDTyC,GAAc,SAAAxC,GAAA,IAAGyC,EAAHzC,EAAGyC,SAAUC,EAAb1C,EAAa0C,SAAb,OAClB,IAAIC,KACFF,EAASG,cACTH,EAASI,WACTJ,EAASK,UACTJ,EAASK,WACTL,EAASM,aACTN,EAASO,eAGEC,GAAA,SAAAnC,GAA8D,IAAAoC,EAAApC,EAA3DqC,OAAUC,EAAiDF,EAAjDE,cAAeC,EAAkCH,EAAlCG,YAAeC,EAAmBxC,EAAnBwC,aAMlDC,EAAYC,aAAeJ,EAAeC,GAE1CI,EAAmB,SAACC,EAAmBC,GAC3C,IAtB2BC,EAAgBC,EAsBrCC,GAtBqBF,EAuBzBF,EAvByCG,EAwBzCF,EAvBJI,aAAaH,EAAgBC,IAyBrBG,EAA0BF,EAC5BH,EACAD,EAEEO,EAAwBH,EAC1BJ,EACAC,EAECO,aAAkBd,EAAeY,IApBf,SAAAN,GACvBJ,EAAa,oBAAbA,CAAkCI,GAoBhCS,CAAiBH,GAEdE,aAAkBb,EAAaY,IArBf,SAAAN,GACrBL,EAAa,kBAAbA,CAAgCK,GAqB9BS,CAAeH,IAoCnB,MAAO,CACLI,gBAAiB,CACfC,MAAOf,EACPgB,SAnC8B,SAAAC,GAC5BC,QAAQlB,KAAekB,QAAQD,IACjCf,EACEL,EACAb,GAAY,CACVC,SAAUgC,EAAgBpB,EAAgBsB,aAAQtB,EAAe,GACjEX,SAAUY,OA+BhBsB,mBAAoB,CAClBL,MAAOlB,EACPmB,SA3B8B,SAAAb,GAChC,IAAMC,EAAkBJ,EACpBhB,GAAY,CACVE,SAAUY,EACVb,SAAUkB,IAEZL,EACJI,EAAiBC,EAAmBC,KAsBpCiB,iBAAkB,CAChBN,MAAOjB,EACPkB,SArB4B,SAAAZ,GAC9B,IAAMD,EAAoBH,EACtBhB,GAAY,CACVE,SAAUW,EACVZ,SAAUmB,IAEZP,EACJK,EAAiBC,EAAmBC,6VChDxC,IAAMkB,GAAiB,KAEjBC,GAAoB,SAAA/E,GAAA,IAAWgF,EAAXhF,EAAGiF,OAAH,OACxBD,EAAcE,KAAcF,GAAe,aACvCG,GAAiB,SAAApE,GAAA,IAAWqE,EAAXrE,EAAGkE,OAAH,OACrBG,EAAWC,KAAiBD,GAAY,aACpCE,GAAkB,SAAAC,GAAA,IAAWC,EAAXD,EAAGN,OAAH,OACtBO,EAAYC,KAAmBD,GAAa,aACxCE,GAAuB,SAAAC,GAAA,IAAWC,EAAXD,EAAGV,OAAH,OAC3BW,EAAiBC,KAAsBD,GAAkB,aAWrDE,GAAe,SAAAC,GAgBf,IAfJC,EAeID,EAfJC,QACAC,EAcIF,EAdJE,gBACAC,EAaIH,EAbJG,eAaIC,EAAAJ,EAZJ3C,OACEgD,EAWED,EAXFC,iBACAC,EAUEF,EAVFE,eACArB,EASEmB,EATFnB,YACAI,EAQEe,EARFf,SACAkB,EAOEH,EAPFG,YACAd,EAMEW,EANFX,UACAI,EAKEO,EALFP,eACAW,EAIEJ,EAJFI,kBACAC,EAGEL,EAHFK,gBAEFjD,EACIwC,EADJxC,aAEMkD,EAAqBR,EAAgBS,IAAI,SAAAC,GAAA,OAAAA,EAAGC,UAC5CC,EAAaC,OAAOC,YACxBd,EAAgBS,IAAI,SAAAM,GAElB,MAAO,CADaA,EAAZJ,QACSI,MALjBC,EAaA/D,GAAkB,CACpBE,OAAQ,CACNC,cAAekD,EACfjD,YAAakD,GAEfjD,iBARAsB,EAVEoC,EAUFpC,iBACAD,EAXEqC,EAWFrC,mBACAN,EAZE2C,EAYF3C,gBASI4C,EAAcC,sBAClB,SAAAC,GAAyB,IAAdR,EAAcQ,EAAtBnC,OACD,GAAI2B,IAAY9B,GAEd,OADyBoB,EAAjBmB,aAGV,IAAML,EAAQH,EAAWD,GACzB,OAAKI,EAGoBA,EAAjBK,aAFC,cAKX,CAACR,IAEH,OACEnG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACE5G,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CACEC,KAAK,mBACLC,QAAQ,iBACRC,QAAQ,gCACRC,aAAcX,EACdY,eAAe,EACfC,QAAO,CAAGjD,IAAHkD,OAAAC,GAAsBxB,IAC7BlC,MAAO6B,EACP5B,SAAUjB,IAEZ7C,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CACEC,KAAK,iBACLC,QAAQ,aACRC,QAAQ,8BACRE,eAAe,EACfD,aAAcX,EACda,QAAO,GAAAC,OAAAC,GAAMxB,GAAN,CAA0B3B,KACjCN,SAAUjB,EACVgB,MAAO8B,KAGX3F,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CACEC,KAAK,cACLC,QAAQ,YACRC,QAAQ,kCACRC,aAAc9C,GACdgD,QAASjB,OAAO1D,OAAO8E,kBACvB1D,SAAUjB,EACVgB,MAAOS,IAETtE,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CACEC,KAAK,WACLC,QAAQ,cACRC,QAAQ,+BACRC,aAAc1C,GACd4C,QAASjB,OAAO1D,OAAO+E,eACvB3D,SAAUjB,EACVgB,MAAOa,KAGX1E,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CACEC,KAAK,YACLC,QAAQ,gBACRC,QAAQ,gCACRC,aAAcvC,GACdyC,QAASjB,OAAO1D,OAAOgF,iBACvB5D,SAAUjB,EACVgB,MAAOiB,IAET9E,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CACEC,KAAK,iBACLC,QAAQ,OACRC,QAAQ,qCACRC,aAAcnC,GACdqC,QAASjB,OAAO1D,OAAOiF,oBACvB7D,SAAUjB,EACVgB,MAAOqB,KAGXlF,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAAC0H,GAAA,EAAD,CACEZ,KAAK,oBACLa,QAAQ,EACRhB,UAAWvB,EAAQf,OACnBuD,MAAM,mBACNjE,MAAOK,EAAmBL,MAC1BC,SAAUI,EAAmBJ,SAC7BiE,OAAO,eAERnE,EAAgBC,MACf7D,EAAAC,EAAAC,cAAC8H,GAAA,EAAD,CACEC,QACEjI,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CACEC,QAASvE,EAAgBC,MACzBC,SAAU,SAAA/E,GAAK,OACb6E,EAAgBE,SAAS/E,EAAME,OAAOkJ,YAI5CL,MAAM,2BAGR9H,EAAAC,EAAAC,cAAC0H,GAAA,EAAD,CACEZ,KAAK,kBACLa,QAAQ,EACRhB,UAAWvB,EAAQf,OACnBuD,MAAM,gBACNjE,MAAOM,EAAiBN,MACxBC,SAAUK,EAAiBL,SAC3BiE,OAAO,gBAIb/H,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAACkI,GAAA,EAAD,CACEpB,KAAK,oBACLqB,MAAM,EACNR,QAAQ,EACRhB,UAAWvB,EAAQf,OACnBuD,MAAM,oBACNjE,MAAOK,EAAmBL,MAC1BC,SAAUI,EAAmBJ,WAE/B9D,EAAAC,EAAAC,cAACkI,GAAA,EAAD,CACEpB,KAAK,kBACLqB,MAAM,EACNR,QAAQ,EACRhB,UAAWvB,EAAQf,OACnBuD,MAAM,iBACNjE,MAAOM,EAAiBN,MACxBC,SAAUK,EAAiBL,YAG/B9D,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CACEtB,KAAK,cACLH,UAAWvB,EAAQf,OACnBuD,MAAM,cACNS,WAAW,EACXzE,SAAUjB,EACV2F,KAAM,EACNC,QAAS,GACT5E,MAAO+B,OAOjBR,GAAa7D,UAAY,CACvBsF,UAAWrF,IAAUkH,OACrBpD,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,YAEhD0D,GAAaxD,aAAe,CAC1BiF,eAAWhF,GAGE+G,mBA3MA,CACb9B,YAAa,CACX+B,QAAS,QAEXtE,OAAQ,CACNuE,SAAU,MAsMCF,CAAmBxD,uZCzOlC,IAAM2D,GAAiB,SAAAzJ,GAOjB,IANJiG,EAMIjG,EANJiG,gBACAyD,EAKI1J,EALJ0J,aACAzJ,EAIID,EAJJC,SACAsH,EAGIvH,EAHJuH,UACUlH,EAENL,EAFJM,SACA4F,EACIlG,EADJkG,eACIyD,EAAAC,GACsBjI,IAAMkI,UAAS,GADrC,GACGC,EADHH,EAAA,GACWI,EADXJ,EAAA,GAGEK,EAAc,kBAAMD,GAAQ,IAMlC,OACErJ,EAAAC,EAAAC,cAAA,OAAK2G,UAAWA,GACd7G,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,oBAAkB,WAClBC,KAAK,QACLC,QAAQ,WACRpI,MAAM,UACND,QAdkB,kBAAMgI,GAAQ,KAgB/B9J,GAEF6J,GACCpJ,EAAAC,EAAAC,cAACyJ,GAAD,CACEC,cAAeZ,EACfa,oBAAoB,EACpBjK,SApBqB,SAAA8C,GAC3B/C,EAAa+C,GACb4G,KAmBM5J,SAAU4J,EACVzJ,MAAM,YACNL,YAAY,6DAEZQ,EAAAC,EAAAC,cAAC4J,GAAD,CACEvE,gBAAiBA,EACjBC,eAAgBA,OAQ5BuD,GAAexH,UAAY,CACzBgE,gBAAiB/D,IAAUuI,QAAQvI,IAAUwI,MAAMC,YACnDjB,aAAcxH,IAAUwI,MAAME,WAAexI,WAC7CnC,SAAUiC,IAAUC,KAAKC,WACzBmF,UAAWrF,IAAUkH,OACrB9I,SAAU4B,IAAUG,KAAKD,WACzB8D,eAAgBhE,IAAUwI,MAAMG,WAAoBzI,YAEtDqH,GAAenH,aAAe,CAC5BiF,eAAWhF,EACX0D,gBAAiB,IAGJwD,mICtCf,IA6DMqB,GAAO,SAAA9K,GAYP,IAXJiG,EAWIjG,EAXJiG,gBACAC,EAUIlG,EAVJkG,eACAF,EASIhG,EATJgG,QACAuB,EAQIvH,EARJuH,UACAwD,EAOI/K,EAPJ+K,sBACAC,EAMIhL,EANJgL,wBACAC,EAKIjL,EALJiL,WACcC,EAIVlL,EAJJmL,aACAC,EAGIpL,EAHJoL,KAGIC,EAAArL,EAFJoL,KAAQE,EAEJD,EAFIC,OAAQtG,EAEZqG,EAFYrG,YAAaI,EAEzBiG,EAFyBjG,SAAUoB,EAEnC6E,EAFmC7E,gBAAiBD,EAEpD8E,EAFoD9E,kBACxDgF,EACIvL,EADJuL,YAEMC,EAAmBF,EACrBF,EACAK,aAAe,CACbT,0BACAD,0BAGAW,EAAOJ,EAjFkB,SAAAtG,GAC/B,OAAQA,GACN,KAAKkD,iBAAcyD,IACjB,OAAOC,IACT,KAAK1D,iBAAc2D,MACjB,OAAOC,IACT,KAAK5D,iBAAc6D,SACjB,OAAOC,IACT,KAAK9D,iBAAc+D,IACnB,KAAK/D,iBAAcgE,QACnB,KAAKhE,iBAAciE,SACjB,OAAOC,IACT,KAAKlE,iBAAcmE,UACnB,KAAKnE,iBAAcoE,OACjB,OAAOC,KACT,KAAKrE,iBAAcsE,YACjB,OAAOV,IACT,KAAK5D,iBAAcuE,MACjB,OAAOC,IACT,KAAKxE,iBAAcyE,KACjB,OAAOC,IACT,KAAK1E,iBAAc2E,QACjB,OAAOC,KACT,KAAK5E,iBAAc6E,UACjB,OAAOC,IACT,KAAK9E,iBAAc+E,MACjB,OAAOC,KACT,KAAKhF,iBAAciF,oBACjB,OAAOC,IACT,KAAKlF,iBAAcmF,KACjB,OAAOC,KACT,KAAKpF,iBAAcqF,KACjB,OAAOC,KACT,KAAKtF,iBAAcuF,OACjB,OAAOC,KACT,KAAKxF,iBAAcyF,iBACjB,OAAOC,KACT,KAAK1F,iBAAc2F,QACnB,KAAK3F,iBAAc4F,UACnB,QACE,OAAOC,KAyCWC,CAAyBhJ,GAAeiJ,KAExDC,EAAWxN,EAAAC,EAAAC,cAAC8K,EAAD,CAAMnE,UAAWvB,EAAQmI,OACpCC,EAAWnD,EACfvK,EAAAC,EAAAC,cAACyN,GAAD,CACE9G,UAAWvB,EAAQsI,kBACnB5E,aAAc8B,EACdvF,gBAAiBA,EACjB3F,SAAU,SAAAiO,GAAW,OAAIrD,qUAAgBsD,CAAA,GAAMpD,EAASmD,KACxDrI,eAAgBA,GAEfgI,GAGHA,EAGF,OACExN,EAAAC,EAAAC,cAAA,OAAK2G,UAAWkH,IAAIlH,EAAWvB,EAAQ0I,YACpCtJ,IAAa+C,cAAWwG,cACvBjO,EAAAC,EAAAC,cAACgO,GAAAjO,EAAD,CAAgB4G,UAAWvB,EAAQmI,OAEpCC,EACA1J,QAAQ4G,GAAUC,IACjB7K,EAAAC,EAAAC,cAAA,QAAM2G,UAAWvB,EAAQ6I,SACtBC,aAAiCvI,EAAmBC,MAO/DsE,GAAK7I,UAAY,CACfgE,gBAAiB/D,IAAUuI,QAAQvI,IAAUwI,MAAMC,YACnD3E,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9CmF,UAAWrF,IAAUkH,OACrB2B,sBAAuB7I,IAAU6M,OACjC/D,wBAAyB9I,IAAU6M,OACnC9D,WAAY/I,IAAU8M,KACtB7D,aAAcjJ,IAAUG,KAAKD,WAC7B8D,eAAgBhE,IAAUwI,MAAMG,WAAoBzI,WACpDgJ,KAAMlJ,IAAUwI,MAAME,WACtBW,YAAarJ,IAAU8M,MAGzBlE,GAAKxI,aAAe,CAClB2D,gBAAiB,GACjBsB,eAAWhF,EACXwI,2BAAuBxI,EACvByI,6BAAyBzI,EACzB0I,YAAY,EACZG,KAAM,GACNG,aAAa,GAGAjC,mBA5FO,CACpBoF,UAAW,CACTnF,QAAS,gBAEX4E,KAAM,CACJc,YAAa,MACb1F,QAAS,eACT2F,cAAe,eAEjBL,QAAS,CACPI,YAAa,OAEfX,kBAAmB,CACjB/E,QAAS,iBA+EED,CAAmBwB,0BCrJ5BqE,GAAc,SAAAnP,GAAA,IAAGuH,EAAHvH,EAAGuH,UAAWvB,EAAdhG,EAAcgG,QAAd,OAClBtF,EAAAC,EAAAC,cAACwO,GAAAzO,EAAD,CACE4G,UAAWkH,IAAIlH,EAAWvB,EAAQqJ,aAClCnF,oBAAkB,aAItBiF,GAAYlN,UAAY,CACtBsF,UAAWrF,IAAUkH,OACrBpD,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,YAGhD+M,GAAY7M,aAAe,CAAEiF,eAAWhF,GAEzB+G,mBAzBA,CACb+F,YAAa,CACXC,OAAQ,OACRC,WAAY,MACZC,SAAU,WACVC,IAAK,MACLC,UAAW,mBACXnG,QAAS,iBAkBED,CAAmB6F,6HCnBlC,IA8BMQ,GAAiB,SAAA3P,GAiBjB,IAAA4P,EAAAC,EAhBJ7I,EAgBIhH,EAhBJgH,MAgBI8I,EAAA9P,EAfJgH,MAASJ,GAeLkJ,OAAA,IAAAA,EAfiD,GAejDA,GAfKlJ,QAASmJ,EAedD,EAfcC,cAAeC,EAe7BF,EAf6BE,gBACjCC,EAcIjQ,EAdJiQ,UACAjK,EAaIhG,EAbJgG,QACAkK,EAYIlQ,EAZJkQ,YACAC,EAWInQ,EAXJmQ,YACAC,EAUIpQ,EAVJoQ,eACAnF,EASIjL,EATJiL,WACAoF,EAQIrQ,EARJqQ,WACAC,EAOItQ,EAPJsQ,UACAC,EAMIvQ,EANJuQ,mBACAC,EAKIxQ,EALJwQ,qBACctF,EAIVlL,EAJJmL,aACesF,EAGXzQ,EAHJ0Q,cACAxK,EAEIlG,EAFJkG,eACAyK,EACI3Q,EADJ2Q,cAEMC,EAA2B3F,IAAesF,EAC1CM,EAA6B5F,IAAeuF,EAElD,OACE9P,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQ0I,WACtBhO,EAAAC,EAAAC,cAACkQ,GAAD,CACE7K,gBAAiBmK,EACjBpF,wBAAyBkF,EACzBnF,sBAAuBnE,EACvBA,QAASA,EACTqE,WAAYA,EACZ1D,UAAWkH,IAAIzI,EAAQoF,MAATwE,EAAA,GAAAmB,GAAAnB,EACX5J,EAAQgL,cAAgBV,IAAcE,GAD3BO,GAAAnB,EAEX5J,EAAQiL,QAAUL,GAFPhB,IAIdxE,KAAM6E,EAAUF,GAChBxE,YAAa+E,GAAaM,EAC1BzF,aAAcD,EACdhF,eAAgBA,IAElBxF,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CACElL,QAAS,CAAEmL,SAAUnL,EAAQoL,oBAC7BnG,WAAYA,EACZyF,cAAeD,EACfzJ,MAAOA,EACP2J,cAAeA,MAEdH,GAAwBF,IACzB5P,EAAAC,EAAAC,cAACkQ,GAAD,CACEvJ,UAAWkH,IAAIzI,EAAQoF,MAATyE,EAAA,GAAAkB,GAAAlB,EACX7J,EAAQgL,cAAgBV,IAAcE,GAD3BO,GAAAlB,EAEX7J,EAAQiL,QAAUJ,GAFPhB,IAIdzE,KAAM6E,EAAUD,GAChB/J,gBAAiBmK,EACjBpF,wBAAyBpE,EACzBmE,sBAAuBoF,EACvBlF,WAAYA,IAAeuF,EAC3BjF,YAAa+E,GAAaO,EAC1B1F,aAAcD,EACdhF,eAAgBA,IAGnBmK,IACEC,GAAa5P,EAAAC,EAAAC,cAACyQ,GAAD,CAAa9J,UAAWvB,EAAQoL,uBAKtDzB,GAAe1N,UAAY,CACzB+D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9CmO,mBAAoBrO,IAAU8M,KAC9BwB,qBAAsBtO,IAAU8M,KAChC/D,WAAY/I,IAAU8M,KACtBqB,WAAYnO,IAAU8M,KACtBsB,UAAWpO,IAAU8M,KACrBmB,YAAajO,IAAU6M,OACvB5D,aAAcjJ,IAAUG,KAAKD,WAC7BsO,cAAexO,IAAUG,KAAKD,WAC9B8D,eAAgBhE,IAAUwI,MAAMG,WAAoBzI,WACpD8N,YAAahO,IAAU6M,OACvBkB,UAAW/N,IAAUmH,SAASnH,IAAUwI,MAAME,YAAgBxI,WAC9DgO,eAAgBlO,IAAUuI,QAAQvI,IAAUwI,MAAMC,YAClD3D,MAAO9E,IAAUwI,MAAMC,WAAgBvI,WACvCuO,cAAezO,IAAUoP,WAAWC,KAAMnP,YAG5CuN,GAAerN,aAAe,CAC5BiO,oBAAoB,EACpBC,sBAAsB,EACtBvF,YAAY,EACZoF,YAAY,EACZC,WAAW,EACXH,YAAa,KACbD,YAAa,KACbE,eAAgB,IAGH9G,sBA9HA,CACb0H,cAAe,GACftC,UAAW,CACTc,SAAU,WACVgC,6BAA8B,CAC5BC,WAAY,WAEdC,8BAA+B,CAC7BD,WAAY,YAGhBnD,kBAAmB,CACjBiB,WAAY,MACZC,SAAU,WACVC,IAAK,MACLC,UAAW,mBACXnG,QAAS,eACTkI,WAAY,UAEdL,mBAAoB,CAClBK,WAAY,UAEdrG,KAAM,GAGN6F,QAAS,CACPjP,MAAO,QAoGIsH,CAAmBqG,iJCtI3B,IAAMgC,IAAgBC,GAAAC,GAAA,GAC1BC,eAAYC,QAAU,WADIH,GAAAC,GAE1BC,eAAYE,QAAU,aAFIJ,GAAAC,GAG1BC,eAAYG,UAAY,kBAHEL,GAAAC,GAI1BC,eAAYI,WAAa,WAJCL,ghBCO7B,IAAMM,GAAkB,SAAAnS,GAAA,IAAWoS,EAAXpS,EAAGiF,OAAH,OACtBmN,EAAYT,GAAiBS,GAAa,aAE/BC,GAAgB,SAAAtR,GAMvB,IALOuR,EAKPvR,EALJqR,UACcG,EAIVxR,EAJJyR,aACYC,EAGR1R,EAHJ2R,WACcC,EAEV5R,EAFJsG,aACWuL,EACP7R,EADJ8R,UACIC,EAAAC,GACgClJ,mBAAS,CAC3C2I,aAAcD,EACdH,UAAWE,EACXI,WAAYD,EACZpL,aAAcsL,EACdE,UAAWD,IANT,GACGI,EADHF,EAAA,GACeG,EADfH,EAAA,GASJ,MAAO,CACLE,aACAC,cAAe,SAAAC,GAAgB,OAC7BD,qUAAcE,CAAA,GAAKH,EAAeE,OAclCE,GAAgB,SAAA7N,GAIhB,IAHJS,EAGIT,EAHJS,QAGIqN,EAAA9N,EAFJyN,WAAcZ,EAEViB,EAFUjB,UAAWI,EAErBa,EAFqBb,aAAcnL,EAEnCgM,EAFmChM,aACvC4L,EACI1N,EADJ0N,cAEMK,EAAenM,sBACnB,SAAAxB,GAAA,IAAoB4N,EAApB5N,EAAGhG,OAAU4E,MAAb,OACE0O,EAAc,CAAEb,UAAWmB,KAC7B,CAACN,IAEGO,EAAarM,sBACjB,SAAApB,GAAA,IAAc0N,EAAd1N,EAAG8M,UAAH,OACEI,EAAc,CAAEJ,UAAWY,KAC7B,CAACR,IAEGS,EAAkBvM,sBACtB,SAAAR,GAAA,IAAoBgN,EAApBhN,EAAGhH,OAAU4E,MAAb,OACE0O,EAAc,CAAET,aAAcmB,KAChC,CAACV,IAGH,OACEvS,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACE5G,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAACgT,GAAA,EAAD,CACE5N,QAAS,CAAE6N,KAAM7N,EAAQ8N,SACzBC,eAAgB,CACdvL,MAAO,mBAETwL,kBAAmB3M,EACnB4M,WAAY,CAAEC,YAAa,uBAC3B1P,SAAUgP,EACVW,YAAa,CACXC,YAAa,eACbC,UAAW,WACXC,OAAQ,wBACRC,YAAaC,KAAcC,OAC3BC,eAAgB,SAAAtN,GAAA,MACd,CADcA,EAAGuN,YAAHvN,EAAgBwN,YACJC,OAAOnQ,SAASoQ,KAAK,WAIvDpU,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CACEE,QAAQ,gBACRC,QAAQ,iCACRpD,SAAU8O,EACVzL,aAAcsK,GACdpK,QAASjB,OAAO1D,OAAO0O,gBACvBhK,eAAe,EACfvD,MAAO6N,KAGX1R,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CACER,MAAM,cACNuM,WAAW,EACXxQ,MAAOiO,EACPhO,SAAUkP,EACVzK,WAAW,EACXC,KAAM,EACNC,QAAS,QAOnBiK,GAAcnR,UAAY,CACxBsF,UAAWrF,IAAUkH,OACrBpD,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,YAGhDgR,GAAc9Q,aAAe,CAC3BiF,eAAWhF,GAGE+G,mBAvFA,CACb9B,YAAa,CACX+B,QAAS,OACTyL,SAAU,SAEZlB,QAAS,CACPtK,SAAU,IAiFCF,CAAmB8J,uZChHlC,IAAM6B,GAAkB,SAAAjV,GAIlB,IAHJ0J,EAGI1J,EAHJ0J,aACAzJ,EAEID,EAFJC,SACUI,EACNL,EADJM,SACI4U,EACkC7C,GAAc3I,GAA5CsJ,EADJkC,EACIlC,WAAYC,EADhBiC,EACgBjC,cADhBtJ,EAAAwL,GAEsBxT,IAAMkI,UAAS,GAFrC,GAEGC,EAFHH,EAAA,GAEWI,EAFXJ,EAAA,GAIEK,EAAc,kBAAMD,GAAQ,IAMlC,OACErJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACG3F,IAAMC,aAAa3B,EAAU,CAAE8B,QATZ,kBAAMgI,GAAQ,MAUjCD,GACCpJ,EAAAC,EAAAC,cAACM,GAAA,EAAD,CACEC,mBAAoB,IACpBC,KAAM0I,EACNzI,QAAS2I,EACT1I,kBAAgB,qBAEhBZ,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAaC,GAAG,qBAAhB,aACAd,EAAAC,EAAAC,cAACa,GAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,GAAA,EAAD,iCACAhB,EAAAC,EAAAC,cAACwU,GAAD,CACEpC,WAAYA,EACZC,cAAeA,KAGnBvS,EAAAC,EAAAC,cAACiB,GAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,GAAA,EAAD,CAAQC,QAASiI,EAAahI,MAAM,aAApC,UAGAtB,EAAAC,EAAAC,cAACkB,GAAA,EAAD,CAAQC,QA3BW,WAC3B1B,EAAa2S,GACbhJ,KAyB+ChI,MAAM,WAA7C,iBAUZiT,GAAgBhT,UAAY,CAC1ByH,aAAcxH,IAAUwI,MAAME,WAAexI,WAC7CnC,SAAUiC,IAAUC,KAAKC,WACzB9B,SAAU4B,IAAUG,KAAKD,YAE3B6S,GAAgB3S,aAAe,GAEhB2S,UCvDf,IAYMI,GAAe,SAAArV,GAAA,UACnBgG,EADmBhG,EACnBgG,QACAsK,EAFmBtQ,EAEnBsQ,UACeG,EAHIzQ,EAGnB0Q,cAHmB,OAKnBhQ,EAAAC,EAAAC,cAAA,OAAK2G,UAAWkH,OAAI,KAAGzI,EAAQsP,sBAAsBhF,oGACnD5P,EAAAC,EAAAC,cAAC2U,GAAD,CACE7L,aC5BgB,CACpB0I,UAAW,KACXI,aAAc,ID2BVlS,SAAUmQ,GAEV/P,EAAAC,EAAAC,cAACkB,GAAA,EAAD,CACEoI,oBAAkB,WAClBC,KAAK,QACLC,QAAQ,WACRpI,MAAM,WAENtB,EAAAC,EAAAC,cAAA,oCAGJF,EAAAC,EAAAC,cAACyQ,GAAD,CAAa9J,UAAWvB,EAAQoL,uBAIpCiE,GAAapT,UAAY,CACvB+D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9CkO,UAAWpO,IAAU8M,KACrB0B,cAAexO,IAAUG,KAAKD,YAGhCiT,GAAa/S,aAAe,CAC1BgO,WAAW,GAGEhH,mBA7CA,CACb8H,mBAAoB,CAClBK,WAAY,UAEd6D,mBAAoB,CAClB9F,SAAU,WACVkC,8BAA+B,CAC7BD,WAAY,aAsCHnI,CAAmB+L,slCE/BlC,IAAMG,GAAeC,4BAAkB,SAAAzV,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkBS,EAAAC,EAAAC,cAAA,WAAMX,KACzDyV,GAAyBC,0BAC7B,SAAA5U,GAAA,IAAG6U,EAAH7U,EAAG6U,gBAAgCnF,EAAnC1P,EAAoB2P,cAAqCmF,EAAzDC,GAAA/U,EAAA,4CACE6U,GACElV,EAAAC,EAAAC,cAACmV,GAADC,GAAA,CAAgBtF,cAAeD,GAAuBoF,MA4BtDI,GAAO,SAAA1Q,GAaP,IAZJS,EAYIT,EAZJS,QACAkQ,EAWI3Q,EAXJ2Q,cACAC,EAUI5Q,EAVJ4Q,cACcjL,EASV3F,EATJ4F,aACqBiL,EAQjB7Q,EARJ8Q,oBACApG,EAOI1K,EAPJ0K,UACAqG,EAMI/Q,EANJ+Q,KAMIC,EAAAhR,EALJ+Q,KAAQE,EAKJD,EALIC,OAAQC,EAKZF,EALYE,iBAAkBC,EAK9BH,EAL8BG,SAAUC,EAKxCJ,EALwCI,SAC5CvG,EAII7K,EAJJ6K,eACcwG,EAGVrR,EAHJsR,aACepG,EAEXlL,EAFJmL,cACAC,EACIpL,EADJoL,cACImC,EAAAgE,GAC8BjN,oBAAS,GADvC,GACGyG,EADHwC,EAAA,GACciE,EADdjE,EAAA,GAAAkE,EAAAF,GAEoDjN,mBACtDuG,EAAe6G,QAHb,GAEGC,EAFHF,EAAA,GAEyBG,EAFzBH,EAAA,GAyBEI,Eb7FgB,SAACC,EAAOC,GAAR,IAAcC,EAAdC,UAAAP,OAAA,QAAA1U,IAAAiV,UAAA,GAAAA,UAAA,GAAsBH,EAAMJ,OAA5B,SAAAjP,OAAAyP,EACnBJ,EAAMK,MAAM,EAAGH,IADI,CAEtBD,GAFsBG,EAGnBJ,EAAMK,MAAMH,KaoFcI,CAC3BvH,EACA,CAAEwH,yBAAyB,GAC3BV,GAGuCxQ,IAAI,SAACM,EAAO6Q,GAAiB,IAC5DD,EAAqC5Q,EAArC4Q,wBAAyBhR,EAAYI,EAAZJ,QACjC,GAAIgR,EACF,OACElX,EAAAC,EAAAC,cAAC8U,GAAD,CACEoC,IAAI,eACJP,MAAOM,EACPjC,gBACElV,EAAAC,EAAAC,cAACmX,GAAD,CACEzH,UAAWA,EACXI,cAAe,SAAAsH,GAAQ,OACrBvH,EAAkBuH,EAAU,CAC1BC,kBAAmBf,EACnBgB,WAAY9H,EACZoG,gBAdsD,IAAA2B,EAAArB,GAnD5C,SAAC1G,EAAgByH,EAAcO,GACzD,IAAMC,EACJR,EAAe,GAAKA,EAAeO,EAAgB,EAAI,GACnDE,EACJT,EAAe,GAAKA,EAAe,EAAIO,EAAgB,EAAI,GAM7D,MAAO,CALWC,GAAkB,EAAIjI,EAAeiI,GAAkB,KAEvEC,EAAiBlI,EAAe6G,OAC5B7G,EAAekI,GACf,MAgE2BC,CAC7BnI,EACAyH,EACAX,GAzBkE,GAsB7DsB,EAtB6DL,EAAA,GAsBlDM,EAtBkDN,EAAA,GA2BnDjI,GAAgBsI,GAAa,IAAtC5R,QACSuJ,GAAgBsI,GAAa,IAAtC7R,QACR,OACElG,EAAAC,EAAAC,cAAC8U,GAAD,CACE6B,MAAOM,EACPtH,mBAAoBmI,YAA6BF,EAAWxR,GAC5DwJ,qBAAsBkI,YAA6B1R,EAAOyR,GAC1DxN,YAAY,EACZoF,YAAY,EACZC,UAAWA,EACXwH,IAAKlR,EACLuJ,YAAaA,EACbhF,aAAcD,EACdwF,cAAeD,EACfvK,eAAgBiQ,EAAcM,GAC9BvG,YAAaA,EACbD,UAAWA,EACXG,eAAgBA,EAChBpJ,MAAOA,EACP2J,cAAeA,MAKfgI,EACJjY,EAAAC,EAAAC,cAAC4U,GAAD,CACEoD,UAzEkB,SAACC,EAAMpZ,GAC3BsX,GAAa,GADwB,IAE7B+B,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SACdD,IAAa5B,EACfC,EAAwB4B,GAExB3C,EAAwB3W,EAAO,CAC7BqZ,SAAUA,EAAW5B,EAAuB4B,EAAW,EAAIA,EAC3DC,SAAUA,EAAW7B,EAAuB6B,EAAW,EAAIA,EAC3Db,WAAY9H,KAiEd4I,kBAAmBxZ,EACnByZ,sBAAuB,kBAAMlC,GAAa,IAC1CmC,SAAS,IACTC,sBAAsB,GAErB/B,GAICgC,EACJ1Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,SAAUnD,EAAcM,GACxB/K,KAAM6N,IACN5I,cAAeA,IAIb6I,EACJ9Y,EAAAC,EAAAC,cAAC6Y,EAAA,EAAD,CACE/P,aAAc4M,EACdhW,SAAU,SAAAoZ,GAAW,OAAI9C,qUAAiB+C,CAAA,GAAKrD,EAASoD,MAExDhZ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,oBAAkB,WAClBC,KAAK,QACLC,QAAQ,WACRpI,MAAM,WAENtB,EAAAC,EAAAC,cAACgZ,EAAAjZ,EAAD,CAAU4G,UAAWvB,EAAQoL,uBAK7ByI,EAAYzJ,EAAeA,EAAe6G,OAAS,GACnD6C,EAAkB1J,EAAeA,EAAe6G,OAAS,GAjH3DtQ,EAmHFkT,GAAa,GADUE,EAlHrBpT,EAkHIqJ,gBAA0CgK,EAlH9CrT,EAkHqCC,QAGnCqT,EAAetD,IAAauD,aAAWhI,WACvCiI,EAAmBF,EAAe,KACtCvZ,EAAAC,EAAAC,cAACkQ,GAAD,CACE7K,gBAAiBmK,EACjBpF,wBAAyBgP,EACzB/O,YAAY,EACZE,aAAcD,EACdhF,eAAgBiQ,EAAcM,GAC9BrL,KAAM6E,EAAU8J,GAChBxO,YACE+E,GAAaoI,YAA6BoB,EAAiBD,KAKjE,OACEnZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACE5G,EAAAC,EAAAC,cAAA,MAAI2G,UAAWvB,EAAQ0I,WACpB0L,YACChK,EACA8F,EACAC,EAAcM,IACZN,EAAcM,GAAkB4D,UAClC3D,GAED8C,GAEFJ,EACAT,GACCsB,GACAvZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACG6S,EACAf,KAMXnD,GAAKhU,UAAY,CACf+D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9CkY,UAAWpY,IAAU6M,OAAO3M,WAC5B+T,cAAejU,IAAUmH,SAASnH,IAAUwI,MAAM6P,YAC/CnY,WACH+I,aAAcjJ,IAAUG,KAAKD,WAC7ByU,aAAc3U,IAAUG,KAAKD,WAC7BiU,oBAAqBnU,IAAUG,KAAKD,WACpC6N,UAAW/N,IAAUmH,SAASnH,IAAUwI,MAAME,YAAgBxI,WAC9DkU,KAAMpU,IAAUwI,MAAM8P,WAAepY,WACrCgO,eAAgBlO,IAAUuI,QAAQvI,IAAUwI,MAAMC,YAClD8P,cAAevY,IAAUoP,WAAWC,KAAMnP,WAC1CuO,cAAezO,IAAUoP,WAAWC,KAAMnP,YAG5C6T,GAAK3T,aAAe,CAClB8N,eAAgB,IAGH9G,mBAnNA,CACboF,UAAW,CACTgD,8BAA+B,CAC7BD,WAAY,YAGhBL,mBAAoB,CAClBK,WAAY,WA4MDnI,CAAmB2M,mcChPlC,ICDiCyE,MDC3BC,ICD2BD,GDCO,CACtCE,cAAe,SAAA5a,GAAA,OAAAA,EAAG6a,cCFFD,cAAkC,SAAA7Z,GAA2B,IAAxBwW,EAAwBxW,EAAxBwW,MAAOW,EAAiBnX,EAAjBmX,WAC5D,IAAKA,EAAWjB,OACd,OAHkB,IAKpB,GAAIM,GAAS,EACX,OAAOmD,GAAaxC,EAAW,IAAM,EAEvC,GAAIX,GAASW,EAAWjB,OAAS,EAC/B,OAAOyD,GAAaxC,EAAWA,EAAWjB,OAAS,IAAM,EAE3D,IAAM6D,EAAYJ,GAAaxC,EAAWX,EAAQ,IAC5CwD,EAAYL,GAAaxC,EAAWX,IAE1C,OAAQuD,EAAYC,GAAa,GADZC,KAAKC,SAAW,KAAQF,EAAYD,GAAc,IDP5DI,GAAoB,SAAAna,GAAA,IAAG+X,EAAH/X,EAAG+X,SAAUC,EAAbhY,EAAagY,SAAUb,EAAvBnX,EAAuBmX,WAAvB,MAAyC,CACxE5D,OAAQ,wBACRD,UAAW,SACX8G,MAAO,CACL3Z,GAAI0W,EAAWY,GAAUlS,QACzBwU,KAAM,CACJP,YAAaF,GAAU,CAAEpD,MAAOwB,EAAUb,mBAKnCmD,GAAa,SAAA9V,GAAA,IAAG6F,EAAH7F,EAAG6F,KAAH,MAAiC,CACzDkJ,OAAQ,yBACRD,UAAW,QACX8G,MAAO,CACL3Z,GAJsB+D,EAAS6F,KAAQE,OAKvC8P,KAAMhQ,KAIGkQ,GAAa,SAAA3V,GAAA,IAAG2Q,EAAH3Q,EAAG2Q,KAAH,MAAiC,CACzDhC,OAAQ,yBACRD,UAAW,QACX8G,MAAO,CACL3Z,GAJsBmE,EAAS2Q,KAAQE,OAKvC4E,KAAM9E,KAIGiF,GAAc,SAAAxV,GAAA,IACzBiB,EADyBjB,EACzBiB,MACSJ,EAFgBb,EAEzBiB,MAASJ,QACT4P,EAHyBzQ,EAGzByQ,OACAyB,EAJyBlS,EAIzBkS,kBACAC,EALyBnS,EAKzBmS,WALyB,MAMpB,CACL5D,OAAQ,yBACRD,UAAW,SACX8G,MAAO,CACL3Z,GAAIoF,EACJwU,KAAMI,GAAA,GACDxU,EADD,CAEFwP,SACAqE,YACE5C,GAA2C,IAAtBA,EACjB0C,GAAU,CAAEpD,MAAOU,EAAmBC,oBACtC3V,gIEzBZ,IAAMkZ,GAAoCC,YACxCC,KAGF,SAASC,GAAT5b,GAYG,IAAA6b,EAAA7b,EAXD8b,MACEC,OAAqBC,EAUtBH,EAVWI,UAA6BC,EAUxCL,EAVwCK,UAEzCC,EAQCnc,EARDmc,gBAQCC,EAAApc,EAPDqc,UAOCC,GAAAF,OAAA,IAAAA,EAPqC,GAOrCA,GAPYvD,KAAM0D,OAOlB,IAAAD,EAP8B,GAO9BA,EAAAE,EAAAxc,EANDyc,WAMCC,GAAAF,OAAA,IAAAA,EANuC,GAMvCA,GANa3D,KAAM8D,OAMnB,IAAAD,EANgC,GAMhCA,EALDxG,EAKClW,EALDkW,cACAC,EAICnW,EAJDmW,cACAlG,EAGCjQ,EAHDiQ,UACA2M,EAEC5c,EAFD4c,QACAC,EACC7c,EADD6c,kBACCC,EAIGC,cAFFC,EAFDF,EAECE,gBACWC,EAHZH,EAGCb,UAHDiB,EAQGC,cADFC,OAAqB3C,EAPtByC,EAOWG,UAAqC1M,EAPhDuM,EAOqCI,UAGhClH,EAA0BjP,sBAC9B,SAAC1H,EAADsB,GAA+C,IAArC+X,EAAqC/X,EAArC+X,SAAUC,EAA2BhY,EAA3BgY,SAAUb,EAAiBnX,EAAjBmX,WACxBY,IAAaC,GACf6D,EAAQ1B,GAAkB,CAAEpC,WAAUC,WAAUb,iBAGpD,CAAC0E,IAGG1R,EAAmB/D,sBACvB,SAAAiE,GAAI,OACFwR,EACEvB,GAAW,CACTjQ,WAGN,CAACwR,IAGGhG,EAAmBzP,sBACvB,SAAAmP,GAAI,OACFsG,EACEtB,GAAW,CACThF,UAEFiH,KAAK,kBAAMV,EAAkB,CAAEvI,OAAQ,uBAC3C,CAACsI,IAGGnM,EAAoBtJ,sBACxB,SAACH,GAAD,IAAAzB,EAAAiS,UAAAP,OAAA,QAAA1U,IAAAiV,UAAA,GAAAA,UAAA,GAAoD,GAA1CS,EAAV1S,EAAU0S,kBAAmBC,EAA7B3S,EAA6B2S,WAAY1B,EAAzCjR,EAAyCiR,OAAzC,OACEoG,EACErB,GAAY,CACVvU,QACAwP,SACAyB,oBACAC,gBAEFqF,KAAK,kBAAMV,EAAkB,CAAEvI,OAAQ,wBAC3C,CAACsI,IAGGY,EAAkBC,SAASvB,EAAW,IACtCwB,EACJF,GACAjB,EAAUoB,KAAK,SAAAhY,GAAA,OAAAA,EAAG6Q,SAAwBgH,IAK5C,IAAKrB,IAAoBuB,KAFvBV,GAAmBC,IAA2BjB,GAG9C,OAAO,KAGT,IAAM4B,EAAuBnC,GAAkCkB,GACvDnG,EAAWkH,EAAXlH,OACR,OACE9V,EAAAC,EAAAC,cAACid,GAAD,CACE1H,cAAeA,EACfD,cAAeA,EACf/K,aAAcD,EACd2L,aAAcD,EACdlG,cAAeD,EACf4F,oBAAqBD,EACrBnG,UAAWA,EACXqG,KAAMoH,EACNtN,eAAgBwN,EAAqBpH,GACrCiE,cAAeA,EACf9J,cAAeA,IAKrBiL,GAAa3Z,UAAY,CACvB6Z,MAAO5Z,IAAUwI,MAAM,CACrBqR,OAAQ7Z,IAAUwI,MAAM,CACtBuR,UAAW/Z,IAAUkH,OAAOhH,aAC3BA,aACFA,WACHwa,QAAS1a,IAAUG,KAAKD,WACxB+Z,gBAAiBja,IAAU8M,KAAK5M,WAChC0b,MAAO5b,IAAUwI,MAAM,CACrBmO,KAAM3W,IAAUuI,QAAQvI,IAAUwI,MAAM8P,cACvCpY,WACH2b,OAAQ7b,IAAUwI,MAAM,CACtBmO,KAAM3W,IAAUuI,QAAQvI,IAAUwI,MAAMC,cACvCvI,WACH6N,UAAW/N,IAAUmH,SAASnH,IAAUwI,MAAMsT,YAAiB5b,WAC/D+T,cAAejU,IAAUmH,SAASnH,IAAUwI,MAAMG,YAC/CzI,YAWU6b,cACbC,YAAc,CACZ5J,OAAQ,YACR6J,gBAXoB,SAAAC,GAAK,MAAK,CAChClI,cAAemI,YAAWD,EAAO,aACjCjI,cAAekI,YAAWD,EAAO,aACjCnO,UAAWoO,YAAWD,EAAO,SAC7BjC,gBAAiBmC,YAAsBF,EAAO,uBAC3CG,aAODC,oBAAkBC,GAAA,GAAAC,GAAAD,GACfE,IAAYC,OAAOC,WAAY,GADhBH,GAAAD,GAEfE,IAAYG,KAAKC,OAAQ,GAFVL,GAAAD,GAGfE,IAAYG,KAAKE,WAAY,GAHdN,GAAAD,GAIfE,IAAYG,KAAKG,QAAS,GAJXP,GAAAD,GAKfE,IAAYG,KAAKI,OAAQ,GALVT,MAJPR,CAYbrC,otBC7EI9Q,GAAO,SAAA9K,GAKP,IAJJgG,EAIIhG,EAJJgG,QACAuB,EAGIvH,EAHJuH,UAGI8D,EAAArL,EAFJoL,KAAQE,EAEJD,EAFIC,OAAQtG,EAEZqG,EAFYrG,YAAaI,EAEzBiG,EAFyBjG,SAAUoB,EAEnC6E,EAFmC7E,gBAAiBD,EAEpD8E,EAFoD9E,kBACxDgF,EACIvL,EADJuL,YAEMG,EAAOJ,EAnEkB,SAAAtG,GAC/B,OAAQA,GACN,KAAKkD,iBAAcyD,IACjB,OAAOC,IACT,KAAK1D,iBAAc2D,MACjB,OAAOC,KACT,KAAK5D,iBAAc6D,SACjB,OAAOC,IACT,KAAK9D,iBAAc+D,IACnB,KAAK/D,iBAAcgE,QACnB,KAAKhE,iBAAciE,SACjB,OAAOC,IACT,KAAKlE,iBAAcmE,UACnB,KAAKnE,iBAAcoE,OACjB,OAAOC,KACT,KAAKrE,iBAAcsE,YACjB,OAAOV,KACT,KAAK5D,iBAAcuE,MACjB,OAAOC,IACT,KAAKxE,iBAAcyE,KACjB,OAAOC,IACT,KAAK1E,iBAAc2E,QACjB,OAAOC,KACT,KAAK5E,iBAAc6E,UACjB,OAAOC,IACT,KAAK9E,iBAAc+E,MACjB,OAAOC,KACT,KAAKhF,iBAAciF,oBACjB,OAAOC,IACT,KAAKlF,iBAAcmF,KACjB,OAAOC,KACT,KAAKpF,iBAAcqF,KACjB,OAAOC,KACT,KAAKtF,iBAAcuF,OACjB,OAAOC,KACT,KAAKxF,iBAAcyF,iBACjB,OAAOC,KACT,KAAK1F,iBAAc2F,QACnB,KAAK3F,iBAAc4F,UACnB,QACE,OAAOC,KA2BWC,CAAyBhJ,GAAeiJ,KAE9D,OACEvN,EAAAC,EAAAC,cAAA,OAAK2G,UAAWkH,IAAIlH,EAAWvB,EAAQ0I,YACpCtJ,IAAa+C,cAAWwG,cACvBjO,EAAAC,EAAAC,cAACgO,GAAAjO,EAAD,CAAgB4G,UAAWvB,EAAQmI,OAErCzN,EAAAC,EAAAC,cAAC8K,EAAD,CAAMnE,UAAWvB,EAAQmI,OACxBzJ,QAAQ4G,GAAUC,IACjB7K,EAAAC,EAAAC,cAAA,QAAM2G,UAAWvB,EAAQ6I,SACtBC,aAAiCvI,EAAmBC,MAO/DsE,GAAK7I,UAAY,CACf+D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9CmF,UAAWrF,IAAUkH,OACrBgC,KAAMlJ,IAAUwI,MAAME,WACtBW,YAAarJ,IAAU8M,MAGzBlE,GAAKxI,aAAe,CAClBiF,eAAWhF,EACX6I,KAAM,GACNG,aAAa,GAGAjC,mBArDO,CACpBoF,UAAW,CACTnF,QAAS,gBAEX4E,KAAM,CACJc,YAAa,MACb1F,QAAS,eACT2F,cAAe,eAEjBL,QAAS,CACPI,YAAa,OAEfX,kBAAmB,CACjB/E,QAAS,iBAwCED,CAAmBwB,6HClHlC,IA8BM6E,GAAiB,SAAA3P,GASjB,IAAA4P,EAAAC,EARJ7I,EAQIhH,EARJgH,MAQI8I,EAAA9P,EAPJgH,MAASJ,GAOLkJ,OAAA,IAAAA,EAPiD,GAOjDA,GAPKlJ,QAASmJ,EAOdD,EAPcC,cAAeC,EAO7BF,EAP6BE,gBACjCC,EAMIjQ,EANJiQ,UACAjK,EAKIhG,EALJgG,QACAiF,EAIIjL,EAJJiL,WACAsF,EAGIvQ,EAHJuQ,mBACAC,EAEIxQ,EAFJwQ,qBACAG,EACI3Q,EADJ2Q,cAEMC,EAA2B3F,IAAesF,EAC1CM,EAA6B5F,IAAeuF,EAElD,OACE9P,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQ0I,WACtBhO,EAAAC,EAAAC,cAACkQ,GAAD,CACElK,QAASA,EACTW,UAAWkH,IAAIzI,EAAQoF,MAATwE,EAAA,GAAAuP,GAAAvP,EACX5J,EAAQgL,eAAiBR,GADd2O,GAAAvP,EAEX5J,EAAQiL,QAAUL,GAFPhB,IAIdxE,KAAM6E,EAAUF,GAChBxE,YAAaqF,IAEflQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CACElL,QAAS,CAAEmL,SAAUnL,EAAQoL,oBAC7BpK,MAAOA,EACP2J,cAAeA,KAEfH,GACA9P,EAAAC,EAAAC,cAACkQ,GAAD,CACEvJ,UAAWkH,IAAIzI,EAAQoF,MAATyE,EAAA,GAAAsP,GAAAtP,EACX7J,EAAQgL,eAAiBR,GADd2O,GAAAtP,EAEX7J,EAAQiL,QAAUJ,GAFPhB,IAIdzE,KAAM6E,EAAUD,GAChBzE,YAAasF,MAOvBlB,GAAe1N,UAAY,CACzB+D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9CmO,mBAAoBrO,IAAU8M,KAC9BwB,qBAAsBtO,IAAU8M,KAChC/D,WAAY/I,IAAU8M,KACtBiB,UAAW/N,IAAUmH,SAASnH,IAAUwI,MAAME,YAAgBxI,WAC9D4E,MAAO9E,IAAUwI,MAAMC,WAAgBvI,WACvCuO,cAAezO,IAAUoP,WAAWC,KAAMnP,YAG5CuN,GAAerN,aAAe,CAC5BiO,oBAAoB,EACpBC,sBAAsB,EACtBvF,YAAY,EACZmF,eAAgB,IAGH9G,mBA1FA,CACb0H,cAAe,GACftC,UAAW,CACTc,SAAU,WACVgC,6BAA8B,CAC5BC,WAAY,WAEdC,8BAA+B,CAC7BD,WAAY,YAGhBnD,kBAAmB,CACjBiB,WAAY,MACZC,SAAU,WACVC,IAAK,MACLC,UAAW,mBACXnG,QAAS,eACTkI,WAAY,UAEdL,mBAAoB,CAClBK,WAAY,UAEdrG,KAAM,GAGN6F,QAAS,CACPjP,MAAO,QAgEIsH,CAAmBqG,uZChFlC,IAwBMsG,GAAO,SAAAjW,GAYP,IAXJgG,EAWIhG,EAXJgG,QACAkQ,EAUIlW,EAVJkW,cACAjL,EASIjL,EATJiL,WACAkL,EAQInW,EARJmW,cACAlG,EAOIjQ,EAPJiQ,UAOImP,EAAApf,EANJsW,KAAQG,EAMJ2I,EANI3I,iBAAkBC,EAMtB0I,EANsB1I,SAAUC,EAMhCyI,EANgCzI,SACpC2D,EAKIta,EALJsa,UACAlK,EAIIpQ,EAJJoQ,eACAiP,EAGIrf,EAHJqf,YACAC,EAEItf,EAFJsf,aACA3O,EACI3Q,EADJ2Q,cAEMuG,EAAuB9G,EAAe6G,OAEtCG,EAAchH,EAAe1J,IAAI,SAACM,EAAO6Q,GAAiB,IACtDjR,EAAYI,EAAZJ,QADsDuR,EAAAvO,GA5BtC,SAACwG,EAAgByH,EAAcO,GACzD,IAAMC,EACJR,EAAe,GAAKA,EAAeO,EAAgB,EAAI,GACnDE,EACJT,EAAe,GAAKA,EAAe,EAAIO,EAAgB,EAAI,GAM7D,MAAO,CALWC,GAAkB,EAAIjI,EAAeiI,GAAkB,KAEvEC,EAAiBlI,EAAe6G,OAC5B7G,EAAekI,GACf,MAqB2BC,CAC7BnI,EACAyH,EACAX,GAL4D,GAEvDsB,EAFuDL,EAAA,GAE5CM,EAF4CN,EAAA,GAQ9D,OACEzX,EAAAC,EAAAC,cAACmV,GAAD,CACExF,mBAAoBmI,YAA6BF,EAAWxR,GAC5DwJ,qBAAsBkI,YAA6B1R,EAAOyR,GAC1DX,IAAKlR,EACLqJ,UAAWA,EACXhF,WAAYA,EACZjE,MAAOA,EACP2J,cAAeA,MAKfyI,EACJ1Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,SAAUnD,EAAcM,GACxB/K,KAAM6N,IACN5I,cAAeA,IAIb6I,EACJ9Y,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACEC,oBAAkB,WAClBC,KAAK,QACLC,QAAQ,WACRpI,MAAM,UACNud,UAAWC,IACXC,GAAIJ,GAEJ3e,EAAAC,EAAAC,cAACgZ,EAAAjZ,EAAD,CAAU4G,UAAWvB,EAAQoL,sBAKR2I,GADP3J,EAAeA,EAAe6G,OAAS,IACA,IAAjDjH,gBAEFiK,EAAetD,IAAauD,aAAWhI,WACvCiI,EAAmBF,EAAe,KACtCvZ,EAAAC,EAAAC,cAACkQ,GAAD,CAAM1F,KAAM6E,EAAU8J,GAAiBxO,aAAa,IAGhDmU,EC3GD,SAA2BtP,EAAgBH,GAChDG,EAAeuP,KAAK,SAAA3f,GAAsD,IAAnDwS,EAAmDxS,EAAnDwS,aAAczC,EAAqC/P,EAArC+P,cAAeC,EAAsBhQ,EAAtBgQ,gBAClD,GAAIwC,EACF,OAAO,EAGT,IAD4CvC,EAAUF,IAAkB,IAAhEzJ,YAEN,OAAO,EAN+D,IAQnDsZ,GACnB3P,EAAUD,IAAoB,IADxB1J,YAER,OAAO5B,QAAQkb,KDgGAC,CAAkBzP,EAAgBH,GACnD,OACEvP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACE5G,EAAAC,EAAAC,cAAA,MAAI2G,UAAWvB,EAAQ0I,WAAvB,GAAA1G,OACMsS,EAAY,EADlB,MAAAtS,OACwBoS,YACpBhK,EACA8F,EACAC,EAAcM,IACZN,EAAcM,GAAkB4D,UAClC3D,IAEDzL,GAAcuO,GAEhBJ,EACA1Y,EAAAC,EAAAC,cAAA,WAAMwW,IACL6C,GACAvZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACG6S,EACAf,GAGJsG,GACChf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkf,EAAA,EAAD,CAAML,GAAIH,GAAV,cAMVrJ,GAAKhU,UAAY,CACf+D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9CkY,UAAWpY,IAAU6M,OAAO3M,WAC5B6I,WAAY/I,IAAU8M,KACtBmH,cAAejU,IAAUmH,SAASnH,IAAUwI,MAAM6P,YAC/CnY,WACHyU,aAAc3U,IAAUG,KAAKD,WAC7B6N,UAAW/N,IAAUmH,SAASnH,IAAUwI,MAAME,YAAgBxI,WAC9DkU,KAAMpU,IAAUwI,MAAM8P,WAAepY,WACrCgO,eAAgBlO,IAAUuI,QAAQvI,IAAUwI,MAAMC,YAClDgG,cAAezO,IAAUoP,WAAWC,KAAMnP,WAC1Cid,YAAand,IAAUkH,OAAOhH,WAC9Bkd,aAAcpd,IAAUkH,OAAOhH,YAGjC6T,GAAK3T,aAAe,CAClB8N,eAAgB,IAGH9G,sBAzIA,CACboF,UAAW,CACTgD,8BAA+B,CAC7BD,WAAY,YAGhBL,mBAAoB,CAClBK,WAAY,WAkIDnI,CAAmB2M,IE3JrBqF,GAAa,SAAAtb,GAAA,IAAGsW,EAAHtW,EAAGsW,KAAH,MAAiC,CACzDhC,OAAQ,yBACRD,UAAW,QACX8G,MAAO,CACL3Z,GAJsBxB,EAASsW,KAAQE,OAKvC4E,KAAM9E,8HCeV,IAAMmF,GAAoCC,YACxCC,KAGF,SAASoE,GAAT/f,GAYG,IAAA6b,EAAA7b,EAXD8b,MACEC,OAAqBC,EAUtBH,EAVWI,UAA6BC,EAUxCL,EAVwCK,UAEzCC,EAQCnc,EARDmc,gBAQCC,EAAApc,EAPDqc,UAOCC,GAAAF,OAAA,IAAAA,EAPqC,GAOrCA,GAPYvD,KAAM0D,OAOlB,IAAAD,EAP8B,GAO9BA,EAAAE,EAAAxc,EANDyc,WAMCC,GAAAF,OAAA,IAAAA,EANuC,GAMvCA,GANa3D,KAAM8D,OAMnB,IAAAD,EANgC,GAMhCA,EALDxG,EAKClW,EALDkW,cACAC,EAICnW,EAJDmW,cACAlG,EAGCjQ,EAHDiQ,UACA2M,EAEC5c,EAFD4c,QACAC,EACC7c,EADD6c,kBACCC,EAIGC,cAFFC,EAFDF,EAECE,gBACWC,EAHZH,EAGCb,UAHDiB,EAYGC,cALFC,OACa3C,EARdyC,EAQGG,UACW1M,EATduM,EASGI,UACU0C,EAVb9C,EAUG+C,SAIEzC,EAAkBC,SAASvB,EAAW,IACtCgE,EAAkB1C,EACpBjB,EAAU1H,OAAO,SAAA9T,GAAA,OAAAA,EAAGyV,SAAwBgH,IAC5CjB,EAEEtR,EACJ+R,GAAmBC,IAA2BjB,EAE1CpF,EAAmBzP,sBACvB,SAAAmP,GAAI,OACFsG,EACEtB,GAAW,CACThF,UAEFiH,KAAK,kBAAMV,EAAkB,CAAEvI,OAAQ,uBAC3C,CAACsI,IAMGuD,EAAcC,kBAClB,kBACE1f,EAAAC,EAAAC,cAAC6Y,EAAA,EAAD,CACE/P,aAAc2W,cACd/f,SAAUsW,GAEVlW,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQqI,KAAK,QAAQC,QAAQ,WAAWpI,MAAM,WAA9C,sBAKJ,CAAC4U,IAEH,GAAIuF,IAAoB+D,EAAgBjJ,OACtC,OACEvW,EAAAC,EAAAC,cAAC0f,EAAA,EAAD,CAAeC,uBAAuB,GAAQJ,GAIlD,IAAMvC,EAAuBnC,GAAkCkB,GAC/D,OACEjc,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACG2D,GAAckV,EACdD,EAAgBxZ,IAAI,SAAC4P,EAAMgE,GAAc,IAChC9D,EAAWF,EAAXE,OACR,OACE9V,EAAAC,EAAAC,cAAA,OAAKkX,IAAKtB,GACR9V,EAAAC,EAAAC,cAACid,GAAD,CACE1H,cAAeA,EACfD,cAAeA,EACfW,aAAcD,EACd3G,UAAWA,EACXqG,KAAMA,EACNgE,UAAWA,EACXlK,eAAgBwN,EAAqBpH,GACrCvL,WAAYA,EACZqU,aAAc7E,EAAc+F,MAAM,CAChCtE,UAAWuE,OAAOjK,GAClByF,UAAWD,IAEbrL,cAAeA,EACf0O,YAAaW,EAAaQ,MAAM,CAC9BtE,UAAWuE,OAAOjK,GAClByF,UAAWD,UAU3B+D,GAAU9d,UAAY,CACpB6Z,MAAO5Z,IAAUwI,MAAM,CACrBqR,OAAQ7Z,IAAUwI,MAAM,CACtBuR,UAAW/Z,IAAUkH,OAAOhH,aAC3BA,aACFA,WACHwa,QAAS1a,IAAUG,KAAKD,WACxB+Z,gBAAiBja,IAAU8M,KAAK5M,WAChC0b,MAAO5b,IAAUwI,MAAM,CACrBmO,KAAM3W,IAAUuI,QAAQvI,IAAUwI,MAAM8P,cACvCpY,WACH2b,OAAQ7b,IAAUwI,MAAM,CACtBmO,KAAM3W,IAAUuI,QAAQvI,IAAUwI,MAAMC,cACvCvI,WACH6N,UAAW/N,IAAUmH,SAASnH,IAAUwI,MAAMsT,YAAiB5b,WAC/D+T,cAAejU,IAAUmH,SAASnH,IAAUwI,MAAMG,YAC/CzI,YAWU6b,cACbC,YAAc,CACZ5J,OAAQ,YACR6J,gBAXoB,SAAAC,GAAK,MAAK,CAChClI,cAAemI,YAAWD,EAAO,aACjCjI,cAAekI,YAAWD,EAAO,aACjCnO,UAAWoO,YAAWD,EAAO,SAC7BjC,gBAAiBmC,YAAsBF,EAAO,uBAC3CG,aAODC,oBAAkBC,GAAA,GAAAiC,GAAAjC,GACfE,IAAYC,OAAOC,WAAY,GADhB6B,GAAAjC,GAEfE,IAAYG,KAAKC,OAAQ,GAFV2B,GAAAjC,GAGfE,IAAYG,KAAKE,WAAY,GAHd0B,GAAAjC,GAIfE,IAAYG,KAAKG,QAAS,GAJXyB,GAAAjC,GAKfE,IAAYG,KAAKI,OAAQ,GALVT,MAJPR,CAYb8B,mEChKWY,EAAa,SAAAC,GAAS,OAAI,SAAA/K,GAAS,IAAAgL,EACgBhL,EAAtDiL,UADsCC,GAAAF,OAAA,IAAAA,EACS,GADTA,GACzBG,iBADyB,IAAAD,KACPE,EADOJ,EACPI,YACvC,OAAID,IAAcC,EACTvgB,EAAAC,EAAAC,cAACsgB,EAAA,EAAD,MAEFxgB,EAAAC,EAAAC,cAACggB,EAAc/K,cCJTsL,EAAA,qBAAAC,EAAA5J,UAAAP,OAAIoK,EAAJ,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAIF,EAAJE,GAAA/J,UAAA+J,GAAA,OAAwB,SAAAC,GAAmB,OAH1C,mBAAAC,EAAAjK,UAAAP,OAAIyK,EAAJ,IAAAJ,MAAAG,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAID,EAAJC,GAAAnK,UAAAmK,GAAA,OAAmB,SAAAC,GAAG,OACpCF,EAAWG,YAAY,SAACC,EAAUzf,GAAX,OAAoBA,EAAKyf,IAAWF,IAG3D3D,CACE8D,IAAOC,WAAP,EAAWX,GACXV,EAFF1C,CAGEuD,iGCRWS,EAAA,SAAC5K,EAADrX,GAA4C,IAAlCkiB,EAAkCliB,EAAlCkiB,UAAkCC,EAAAniB,EAAvBoiB,iBAAuB,IAAAD,EAAX,KAAWA,EACnDE,EAAYC,IAAKjL,GACjBkL,EAASF,EAAU3K,MAAM,EAAGwK,GAAWpN,KAAKsN,GAClD,OAAIC,EAAUpL,OAASiL,EACrB,GAAAla,OAAUua,EAAV,OAEKA,YCJMnI,EAAA,SAAChK,EAAgB8F,EAAesM,EAAiBC,GAC9D,IAAKrS,EAAe6G,OAClB,OAAOwL,EAET,IAAMC,EAAoB5b,OAAO6b,KAC/BC,IACExS,EAAeyE,OACb,SAAA7U,GAAA,OAAAA,EAAGoS,YAA8BN,cAAYC,UAE/C,cAGJ,OAAiC,IAA7B2Q,EAAkBzL,OAElBgL,EAAgB7R,EAAe1J,IAAI,SAAA3F,GAAA,OAAAA,EAAGsG,eAAkC,CACtE6a,UAAW,KACPO,EAIRR,EACES,EACGhc,IACC,SAAA2T,GAAS,OACPwI,OAAOxI,KAAemI,GACtBtM,EAAcmE,IACdnE,EAAcmE,GAAW1F,cAE5BE,OAAOnQ,SACV,CAAEwd,UAAW,KACVO,GClCTK,EAAAC,EAAA5B,EAAA,sBAAA6B,IAAAF,EAAAC,EAAA5B,EAAA,sBAAA8B,IAAAH,EAAAC,EAAA5B,EAAA,sBAAA/G,IAKO,IAAM4I,EAAoB,SAAArG,GAAU,OACzCA,EAAWuG,KACT,SAAAljB,EAAAe,GAAA,OAAAf,EAAG6a,YAAH9Z,EAAkC8Z,eAIzBc,EAA4B,SAAAgB,GAAU,OACjDwG,IAAUP,IAAQjG,EAAY,UAAWqG,sCCZ3C,IAAAI,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,GAAAU,EAAAV,EAAAQ,EAAAC,GAAAE,EAAAX,EAAA,IAAAY,GAAAZ,EAAA,KAAAA,EAAA,KAAAa,EAAAb,EAAA,KAOMxC,EAAgB,SAAAtgB,GAKhB,IAJJC,EAIID,EAJJC,SAEuB+b,EAEnBhc,EAHJ8b,MACEC,OAAUE,UAIO2H,EACfzG,cADFC,OAAUU,MAGOb,EAA2BF,cAAtCd,UACR,GAAID,IAAqBiB,EACvB,OACEoG,EAAA1iB,EAAAC,cAAA,yEAGJ,IAAMijB,EAAU1c,sBACd,kBACEkc,EAAA1iB,EAAAC,cAAA,WACEyiB,EAAA1iB,EAAAC,cAAA,uJAICX,IAGL,CAACA,IAEH,OACEojB,EAAA1iB,EAAAC,cAAC6iB,EAAA,EAAD,KACEJ,EAAA1iB,EAAAC,cAAC6iB,EAAA,EAAD,CACEK,KAAMF,EAAUpD,MAAM,CAAEvE,UAAWgB,IACnCsC,UAAWsE,IAEbR,EAAA1iB,EAAAC,cAAC6iB,EAAA,EAAD,CAAUhE,GAAImE,EAAUpD,MAAM,CAAEvE,UAAWgB,QAKjDqD,EAAcre,UAAY,CACxBhC,SAAUiC,IAAUC,KACpB2Z,MAAO5Z,IAAUwI,MAAM,CACrBqR,OAAQ7Z,IAAUwI,MAAM,CAAEuR,UAAW/Z,IAAUkH,WAC9ChH,YAGLke,EAAche,aAAe,CAC3BrC,SAAU,MAGG8jB,gBAAWzD,yICzD1BwC,EAAAC,EAAA5B,EAAA,sBAAAxC,IAOO,IAAMA,EAAc,CACzBC,OAAQ,CACNC,UAAW,oBAEbC,KAAM,CACJC,MAAO,aACPC,UAAW,iBACXC,OAAQ,cACRC,MAAO,eAIIiC,EAAA,WAAAnhB,GAAA,IACbsU,EADatU,EACbsU,OACA6J,EAFane,EAEbme,gBACoB6F,EAHPhkB,EAGbwe,mBAHa,OAIT,SAAAoC,GACJ,IAsFMqD,EAAuBhG,IAC3B8F,IACAG,YAxF6B,SAAC9F,EAAOvI,GAAU,IAE7CK,EAIEL,EAJFK,cAEY+F,EAEVpG,EAHFiG,MACEC,OAAUE,UAGRkI,EC5BwB,SAAC/F,EAAO9J,GAGxC,OADE8P,YAAkBhG,EAAD,GAAApW,OAAWsM,EAAX,gBAAkC,IAD7CuE,KD2BewL,CAAmBjG,EAAO9J,GAEzCkK,EAAqB8F,IAAWN,GAClCA,EAA6B5F,EAAOvI,GACpCmO,EAEEpH,EAAU,GAehB,GAdI4B,EAAmBG,EAAYC,OAAOC,aACxCjC,EAAQ2H,UAAY,CAClBlQ,UAAW,YACXmQ,WAAYtO,IAAkBpP,OAAO6b,KAAKzM,GAAee,OACzDkE,MAAO,CAAEsJ,WAAY,CAAEC,YAAY,MAGnClG,EAAmBG,EAAYG,KAAKC,SACtCnC,EAAQP,UAAY,CAClBhI,UAAW,QACXsQ,QAAS1I,EACTd,MAAO,CAAEc,YAAWwI,WAAY,CAAEC,YAAY,MAG9ClG,EAAmBG,EAAYG,KAAKE,WAAY,KAAA4F,EC3CtB,SAACxG,EAAO+F,GACxC,IAAMU,EAAYxG,YAAWD,EAAO,SAC9BjI,EAAgBkI,YAAWD,EAAO,aAElC0G,EAAuBX,EACzB7B,IACE6B,EAAaY,OAAO,SAACC,EAAMxO,GACzB,IAAMF,EAAOuO,EAAUrO,GACvB,GAAIF,EAAM,KACAG,EAAqBH,EAArBG,iBACJA,GACFuO,EAAKC,KAAKxO,GAGd,OAAOuO,GACN,KAEL,GACEE,EAAsBJ,EAAqBjQ,OAC/C,SAAAsQ,GAAkB,OAAKhP,EAAcgP,KAEvC,MAAO,CAAEL,uBAAsBI,uBDuB2BE,CACpDhH,EACA+F,GAFMW,EAD0CF,EAC1CE,qBAAsBI,EADoBN,EACpBM,oBAK9BtI,EAAQyI,cAAgB,CACtBhR,UAAW,YACXsQ,QAASG,EACTN,UAAWU,EAAoBjO,OAC/BkE,MAAO,CACLtG,OAAQ,CAAErT,GAAI,CAAE8jB,WAAY,KAAM/gB,MAAO2gB,IACzCT,WAAY,CAAEC,YAAY,KAIhC,GAAIlG,EAAmBG,EAAYG,KAAKG,QAAS,KACvCsG,EAAS/G,EAAmBG,EAAYG,KAAKG,QAA7CsG,KACFC,EAAa/H,SACjB,UAAUgI,KAAKhF,OAAO8E,IAASA,OAAOhjB,EACtC,IAEFqa,EAAQH,WAAa,CACnBpI,UAAW,SACXsQ,QAAS,CAAER,eAAcoB,QACzBf,UAAWL,GAAgBA,EAAalN,OACxCkE,MAAO,CACLtG,OAAQ,CACN6Q,QAAS,CAAEJ,WAAY,KAAM/gB,MAAO4f,GACpCwB,oBAAqBH,EACjB,CAAEF,WAAY,KAAM/gB,MAAK,GAAAyD,OAAKwd,EAAL,gBACzBjjB,EACJqjB,kBAAmBJ,EACf,CAAEF,WAAY,IAAK/gB,MAAK,GAAAyD,OAAKwd,EAAa,EAAlB,gBACxBjjB,GAENkiB,WAAY,CAAEC,YAAY,KAgBhC,OAZIlG,EAAmBG,EAAYG,KAAKI,SACtCtC,EAAQiJ,UAAY,CAClBxR,UAAW,QACXsQ,QAASR,EACTK,UAAWL,GAAgBA,EAAalN,OACxCkE,MAAO,CACLtG,OAAQ,CAAE6Q,QAAS,CAAEJ,WAAY,KAAM/gB,MAAO4f,IAC9CM,WAAY,CAAEC,YAAY,MAKzB,CACLpQ,SACAsI,YAMoCuB,GAFXF,CAG3B2C,GAEF,OAAO,SAAA/K,GAAK,OAAInV,EAAAC,EAAAC,cAACqjB,EAAyBpO,oTE3GrC,IAAMpQ,GAAkB0Z,EAAA2G,EAAA,GAC5B1d,eAAa2d,QAAU,UADK5G,EAAA2G,EAE5B1d,eAAa4d,QAAU,WAFK7G,EAAA2G,EAG5B1d,eAAa6d,SAAW,UAHI9G,EAAA2G,EAI5B1d,eAAa8d,MAAQ,UAJO/G,EAAA2G,EAK5B1d,eAAa+d,QAAU,WALKL,GAQlBjgB,GAAqBsZ,EAAAiH,EAAA,GAC/B/d,kBAAgBge,UAAY,YADGlH,EAAAiH,EAE/B/d,kBAAgBie,MAAQ,YAFOnH,EAAAiH,EAG/B/d,kBAAgBke,OAAS,YAHMH,GAMrB/gB,GAAgB8Z,EAAAqH,EAAA,GAC1Bre,aAAWse,WAAa,2BADEtH,EAAAqH,EAE1Bre,aAAWue,UAAY,mBAFGvH,EAAAqH,EAG1Bre,aAAWwe,QAAU,kBAHKxH,EAAAqH,EAI1Bre,aAAWye,KAAO,OAJQzH,EAAAqH,EAK1Bre,aAAW0e,QAAU,uBALK1H,EAAAqH,EAM1Bre,aAAWwG,aAAe,YANAwQ,EAAAqH,EAO1Bre,aAAW2e,SAAW,uBAPIN,GAUhBthB,GAAaia,EAAA4H,EAAA,GACvB7e,gBAAcyD,IAAM,cADGwT,EAAA4H,EAEvB7e,gBAAc2D,MAAQ,SAFCsT,EAAA4H,EAGvB7e,gBAAc6D,SAAW,WAHFoT,EAAA4H,EAIvB7e,gBAAc+D,IAAM,WAJGkT,EAAA4H,EAKvB7e,gBAAcmE,UAAY,kBALH8S,EAAA4H,EAMvB7e,gBAAcsE,YAAc,cANL2S,EAAA4H,EAOvB7e,gBAAcuE,MAAQ,SAPC0S,EAAA4H,EAQvB7e,gBAAcyE,KAAO,aAREwS,EAAA4H,EASvB7e,gBAAc2E,QAAU,UATDsS,EAAA4H,EAUvB7e,gBAAc2F,QAAU,mBAVDsR,EAAA4H,EAWvB7e,gBAAc4F,UAAY,aAXHqR,EAAA4H,EAYvB7e,gBAAc6E,UAAY,YAZHoS,EAAA4H,EAavB7e,gBAAc+E,MAAQ,YAbCkS,EAAA4H,EAcvB7e,gBAAciF,oBAAsB,YAdbgS,EAAA4H,EAevB7e,gBAAcmF,KAAO,WAfE8R,EAAA4H,EAgBvB7e,gBAAcgE,QAAU,cAhBDiT,EAAA4H,EAiBvB7e,gBAAcqF,KAAO,SAjBE4R,EAAA4H,EAkBvB7e,gBAAciE,SAAW,yBAlBFgT,EAAA4H,EAmBvB7e,gBAAcoE,OAAS,oBAnBA6S,EAAA4H,EAoBvB7e,gBAAcuF,OAAS,SApBA0R,EAAA4H,EAqBvB7e,gBAAcyF,iBAAmB,0BArBVoZ,qCChC1B,IAAA3D,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,GAAAU,EAAAV,EAAAQ,EAAAC,GAAAyD,EAAAlE,EAAA,GAAAmE,EAAAnE,EAAA,MAAAoE,EAAApE,EAAA,MAAAqE,EAAArE,EAAA,MAAAsE,EAAAtE,EAAA,MAmBMrb,EAAgB,SAAAzH,GAAA,IACpB2H,EADoB3H,EACpB2H,QACA3B,EAFoBhG,EAEpBgG,QACA8B,EAHoB9H,EAGpB8H,cACAF,EAJoB5H,EAIpB4H,QACAF,EALoB1H,EAKpB0H,KACUnE,EANUvD,EAMpBwE,SACAqD,EAPoB7H,EAOpB6H,aACAE,EARoB/H,EAQpB+H,QACAxD,EAToBvE,EASpBuE,MAToB,OAWpB8e,EAAA1iB,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQ0I,WACtB2U,EAAA1iB,EAAAC,cAACqmB,EAAA,EAAD,CAAY1H,UAAU,QAAQ8H,QAAQ,EAAMC,QAAS1f,GAClDD,GAEH0b,EAAA1iB,EAAAC,cAACwmB,EAAA,EAAD,CACE1f,KAAMA,EACNnD,MAAOA,EACPgjB,cAAc,EACd/iB,SAAUjB,EACVikB,MAAOnE,EAAA1iB,EAAAC,cAACsmB,EAAA,EAAD,CAAO1lB,GAAIoG,IAClBL,UAAWvB,EAAQyhB,YAElB3f,GACCub,EAAA1iB,EAAAC,cAACumB,EAAA,EAAD,CAAUrP,IAAK,KAAMvT,MAAO,MACzBsD,EAAa,CAAE5C,OAAQ,KAAMsS,OAAQ,EAAGxP,aAG5CA,EAAQrB,IAAI,SAACzB,EAAQsS,GAAT,OACX8L,EAAA1iB,EAAAC,cAACumB,EAAA,EAAD,CAAUrP,IAAK7S,EAAQV,MAAOU,GAC3B4C,EAAa,CAAE5C,SAAQsS,QAAOxP,kBAOnC2f,EAAiBxlB,IAAUylB,UAAU,CACzCzlB,IAAU6M,OACV7M,IAAUkH,SAEZ3B,EAAcxF,UAAY,CACxByF,KAAMxF,IAAUkH,OAChBzB,QAASzF,IAAUkH,OAAOhH,WAC1B4D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9C0F,cAAe5F,IAAU8M,KACzBpH,QAAS1F,IAAUkH,OAAOhH,WAC1BoC,SAAUtC,IAAUG,KAAKD,WACzByF,aAAc3F,IAAUG,KACxB0F,QAAS7F,IAAUuI,QAAQid,GAC3BnjB,MAAOmjB,GAGTjgB,EAAcnF,aAAe,CAC3BoF,UAAMnF,EACNuF,eAAe,EACfD,aAAc,SAAA9G,GAAA,OAAAA,EAAGkE,QAAuB,IACxC8C,QAAS,GACTxD,WAAOhC,GAGM+G,gBAxEA,CACboF,UAAW,CACTnF,QAAS,eACTC,SAAU,IACVoe,UAAW,KAEbH,WAAY,CACVle,QAAS,UAiEED,CAAmB7B,uVC5E3B,IAAMogB,GAAe1I,EAAA2I,EAAA,GACzB5N,aAAW6N,QAAU,SADI5I,EAAA2I,EAEzB5N,aAAW+L,SAAW,UAFG9G,EAAA2I,EAGzB5N,aAAW8N,MAAQ,aAHM7I,EAAA2I,EAIzB5N,aAAWhI,WAAa,WAJCiN,EAAA2I,EAKzB5N,aAAW+N,MAAQ,UALMH,6gBCU5B,IAAMI,EAAiB,SAAAloB,GAAA,IAAW2W,EAAX3W,EAAGiF,OAAH,OACrB0R,EAAWkR,EAAgBlR,GAAY,aAE5BwR,EAAe,SAAApnB,GAKtB,IAJMqnB,EAINrnB,EAJJ2V,SACU2R,EAGNtnB,EAHJ4V,SACkB2R,EAEdvnB,EAFJ0V,iBACiB8R,EACbxnB,EADJynB,gBACI1V,EAAAlJ,EAC8BC,mBAAS,CACzC6M,SAAU0R,EACVzR,SAAU0R,EACV5R,iBAAkB6R,EAClBE,gBAAiBD,IALf,GACGE,EADH3V,EAAA,GACc4V,EADd5V,EAAA,GAQJ,MAAO,CACL2V,YACAC,aAAc,SAAAC,GAAe,OAC3BD,oUAAYla,CAAA,GAAMia,EAAcE,OAchCC,EAAe,SAAArjB,GAKf,IAJJS,EAIIT,EAJJS,QACAmQ,EAGI5Q,EAHJ4Q,cAGI0S,EAAAtjB,EAFJkjB,UAAa9R,EAETkS,EAFSlS,SAAUD,EAEnBmS,EAFmBnS,SAAUD,EAE7BoS,EAF6BpS,iBACjCiS,EACInjB,EADJmjB,aAEMI,EAAc3hB,sBAClB,SAAAxB,GAAA,IAAoBojB,EAApBpjB,EAAGhG,OAAU4E,MAAb,OACEmkB,EAAa,CAAEhS,SAAUqS,KAC3B,CAACL,IAEGM,EAAc7hB,sBAClB,SAAApB,GAAA,IAAoBkjB,EAApBljB,EAAGpG,OAAU4E,MAAb,OACEmkB,EAAa,CAAE/R,SAAUsS,KAC3B,CAACP,IAEGQ,EAAmB/hB,sBACvB,SAAAR,GAAA,IAAcwiB,EAAdxiB,EAAGkM,UAAH,OACE6V,EAAa,CAAEF,gBAAiBW,KAClC,CAACT,IAKKrhB,GADe8O,EAAcM,IACM,IAAnCpP,aACR,OACE3G,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACE5G,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CACE+L,WAAW,EACXvM,MAAM,mBACNjE,MAAOmS,EACPlS,SAAUskB,KAGdpoB,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAACgT,EAAA,EAAD,CACE5N,QAAS,CAAE6N,KAAM7N,EAAQ8N,SACzBC,eAAgB,CACdvL,MAAO,YAETwL,kBAAmB3M,EACnB4M,WAAY,CAAEC,YAAa,wBAC3B1P,SAAU0kB,EACV/U,YAAa,CACXC,YAAa,eACbC,UAAW,WACXC,OAAQ,uBACRC,YAAaC,IAAcC,OAC3BC,eAAgB,SAAA0U,GAAA,MACd,CADcA,EAAGzU,YAAHyU,EAAgBxU,YACJC,OAAOnQ,SAASoQ,KAAK,WAIvDpU,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQwB,aACtB9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CACEE,QAAQ,cACRC,QAAQ,+BACRpD,SAAUwkB,EACVnhB,aAAcqgB,EACdngB,QAASjB,OAAO1D,OAAO8W,cACvBpS,eAAe,EACfvD,MAAOoS,OAOjBiS,EAAa3mB,UAAY,CACvBsF,UAAWrF,IAAUkH,OACrBpD,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,YAEhDwmB,EAAatmB,aAAe,CAC1BiF,eAAWhF,GAGb,IAIe0b,MACboL,YALsB,SAAAjL,GAAK,MAAK,CAChCjI,cAAekI,YAAWD,EAAO,gBAKjC9U,YA7Fa,CACb9B,YAAa,CACX+B,QAAS,OACTyL,SAAU,SAEZlB,QAAS,CACPtK,SAAU,KAqFCyU,CAGb2K,qZCxHF,IAAMnP,EAAiB,SAAAzZ,GAAwD,IAArD0J,EAAqD1J,EAArD0J,aAAczJ,EAAuCD,EAAvCC,SAAoBI,EAAmBL,EAA7BM,SAA6BgpB,EACzCnB,EAAaze,GAAzC+e,EADqEa,EACrEb,UAAWC,EAD0DY,EAC1DZ,aAD0D/e,EAAA4f,EAEnD5nB,IAAMkI,UAAS,GAFoC,GAEtEC,EAFsEH,EAAA,GAE9DI,EAF8DJ,EAAA,GAIvEK,EAAc,kBAAMD,GAAQ,IAMlC,OACErJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACG3F,IAAMC,aAAa3B,EAAU,CAAE8B,QATZ,kBAAMgI,GAAQ,MAUjCD,GACCpJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,mBAAoB,IACpBC,KAAM0I,EACNzI,QAAS2I,EACT1I,kBAAgB,qBAEhBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAaC,GAAG,qBAAhB,WACAd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,+BACAhB,EAAAC,EAAAC,cAAC4oB,EAAD,CAAcf,UAAWA,EAAWC,aAAcA,KAEpDhoB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,QAASiI,EAAahI,MAAM,aAApC,UAGAtB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,QAxBW,WAC3B1B,EAAaooB,GACbze,KAsB+ChI,MAAM,WAA7C,iBAUZyX,EAAexX,UAAY,CACzByH,aAAcxH,IAAUwI,MAAME,WAAexI,WAC7CnC,SAAUiC,IAAUC,KAAKC,WACzB9B,SAAU4B,IAAUG,KAAKD,YAE3BqX,EAAenX,aAAe,GAEfmX,wCCzDA0H,EAAA,mBAAO,CACpBxK,SAAU,yCCDGwK,EAAA,WAAC3I,EAAWC,GACzB,OAAKD,IAAcC,GAGmCD,EAA9CxI,kBAC0CyI,EAA1C1I,iDCLV,IAAAqT,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,GAAAU,EAAAV,EAAAQ,EAAAC,GAAAE,EAAAX,EAAA,IAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,MAAA6G,EAAA7G,EAAAQ,EAAAoG,GAAAE,EAAA9G,EAAA,MAAA+G,EAAA/G,EAAAQ,EAAAsG,GAAAE,EAAAhH,EAAA,KAAAiH,EAAAjH,EAAAQ,EAAAwG,GAAAE,EAAAlH,EAAA,MAAAmH,EAAAnH,EAAAQ,EAAA0G,GAAAE,EAAApH,EAAA,KAAAqH,EAAArH,EAAA,KAyBM5R,EAAQ,SAAAlR,GAAuC,IAApCgH,EAAoChH,EAApCgH,MAAOhB,EAA6BhG,EAA7BgG,QAAS2K,EAAoB3Q,EAApB2Q,cAC/B,IAAK3J,EACH,MAAO,aAF0C,IAI3CK,EAAwCL,EAAxCK,aAAc+K,EAA0BpL,EAA1BoL,UAAWM,EAAe1L,EAAf0L,WAC3BhH,EAnB0B,SAAA0G,GAChC,OAAQA,GACN,IAAK,UACH,OAAOgY,IACT,IAAK,WACH,OAAOC,IACT,IAAK,aACH,OAAOC,IACT,IAAK,UACL,QACE,OAAOC,KASEC,CAA0BpY,GACvC,OACEiR,EAAA1iB,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQ0I,WACrBhD,GAAQ2X,EAAA1iB,EAAAC,cAAC8K,EAAD,CAAMnE,UAAWvB,EAAQmI,OAClCkV,EAAA1iB,EAAAC,cAAC6iB,EAAA,EAAD,CAAMhE,GAAI9O,EAAc6P,MAAM,CAAEiK,cAAehK,OAAO/N,MACnDrL,KAmBT6J,EAAMjP,UAAY,CAChB+D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9C4E,MAAO9E,IAAUwI,MAAMC,WACvBgG,cAAezO,IAAUoP,WAAWC,KAAMnP,YAG5C8O,EAAM5O,aAAe,CACnB0E,MAAO,IAGMsC,gBAvBA,CACboF,UAAW,CACTnF,QAAS,eACT0F,YAAa,OAEfd,KAAM,CACJc,YAAa,MACb1F,QAAS,eACT2F,cAAe,eAEjBiC,SAAU,IAaG7H,CAAmB4H,qCChEnBiQ,EAAA,WAAC5a,EAAmBC,GACjC,IAAMkkB,EACJhmB,QAAQ8B,IAAoBA,EAAgBmkB,qBACxCC,EACJlmB,QAAQ6B,IAAsBA,EAAkBokB,qBAClD,OAAID,IAA0BE,EACrBF,EAET,GAAA1iB,OAAU4iB,EAAV,KAAA5iB,OAAqC0iB,+GCLjCG,EAA4B,SAAA7qB,GAI5B,IAHJ8qB,EAGI9qB,EAHJ8qB,WAGIC,EAAA/qB,EAFJmU,YAEI6W,GAAAD,OAAA,IAAAA,EAFgC,GAEhCA,GAFWE,mBAEX,IAAAD,EAFyB,GAEzBA,EADME,EACNlrB,EADJC,SAEMkrB,EAAsBL,EAAWM,cACvC,OACE1qB,EAAAC,EAAAC,cAACF,EAAAC,EAAM2G,SAAP,KACG4jB,EACCD,EAAYpW,OAAO,SAAA9T,GAAA,OAAAA,EAAGyH,MACd4iB,cAAcC,SAASF,QAOvCN,EAA0B5oB,UAAY,CACpC6oB,WAAY5oB,IAAUkH,OAAOhH,WAC7B+R,YAAajS,IAAUwI,MAAM,CAE3BugB,YAAa/oB,IAAUmV,QACtBjV,WACHnC,SAAUiC,IAAUG,KAAKD,YAGZyoB,ihCC1BA,IAAAS,EAAA,SAAAtrB,GAAA,IAAGiU,EAAHjU,EAAGiU,WAAYjO,EAAfhG,EAAegG,QAASulB,EAAxBvrB,EAAwBurB,IAAQC,EAAhC/qB,EAAAT,EAAA,uCACbU,EAAAC,EAAAC,cAACoI,EAAA,EAADlI,EAAA,CACE2qB,WAAUjd,EAAA,CACRkd,SAAUH,EACVvlB,QAAS,CACP6N,KAAM7N,EAAQ2lB,UACdnE,MAAOxhB,EAAQ4lB,aAEd3X,IAEDuX,uOCRR,IAAMK,EAA0B,SAAA7rB,GAAA,IAC9B8rB,EAD8B9rB,EAC9B8rB,UACAC,EAF8B/rB,EAE9B+rB,cACAC,EAH8BhsB,EAG9BgsB,WAH8BC,EAAAjsB,EAI9BC,SAAYuI,EAJkByjB,EAIlBzjB,MAAOqG,EAJWod,EAIXpd,QAJW,OAM9BnO,EAAAC,EAAAC,cAACsrB,EAAA,EAADC,EAAA,GACML,EADN,CAEEM,SAAUL,EACVxM,UAAU,MACV8M,MAAO,CACLC,WAAYN,EAAa,IAAM,OAGjCtrB,EAAAC,EAAAC,cAAC2rB,EAAA,EAAD,CAAcC,QAAShkB,EAAOikB,UAAW5d,MAI7Cgd,EAAwB5pB,UAAY,CAElC6pB,UAAW5pB,IAAUwqB,OACrBX,cAAe7pB,IAAU8M,KACzBgd,WAAY9pB,IAAU8M,KACtB/O,SAAUiC,IAAUG,KAAKD,YAG3BypB,EAAwBvpB,aAAe,CACrCwpB,eAAWvpB,EACXwpB,eAAe,EACfC,YAAY,GAGCH,msBC7Bf,IAAMc,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrChZ,KAAM,GACNnF,UAAW,GACXoe,MAAO,CACLtd,SAAU,WACVud,OAAQ,EACRC,UAAWH,EAAMI,QAAQ,GACzBC,KAAM,EACNC,MAAO,GAETxB,UAAW,GACXC,WAAY,MAGRwB,EAAsB,SAAA9V,GAE1B,OADkBA,GAAQ,IAAlB9O,OAIG6kB,EAAyB,eAAAtsB,EAAAyW,UAAAP,OAAA,QAAA1U,IAAAiV,UAAA,GAAAA,UAAA,GAIlC,GAJkC8V,EAAAvsB,EACpCwsB,2BADoC,IAAAD,EACdE,EADcF,EAAAG,EAAA1sB,EAEpC2sB,+BAFoC,IAAAD,EAEV5B,EAFU4B,EAAAE,EAAA5sB,EAGpC6sB,sBAHoC,IAAAD,EAGnBrC,EAHmBqC,EAAA,OAI3B,SAAApoB,GAML,IALKsoB,EAKLtoB,EALJS,QACAmO,EAII5O,EAJJ4O,YACAF,EAGI1O,EAHJ0O,WACA6Z,EAEIvoB,EAFJuoB,gBACGC,EACCC,EAAAzoB,EAAA,0DACES,oUAAUioB,CAAA,GAAKtB,IAAgBkB,GACrC,OACEntB,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQ6N,MACtBnT,EAAAC,EAAAC,cAACstB,EAAA,EAADC,EAAA,CAAWC,aAAchB,GAAyBW,GAC/C,SAAApoB,GAAA,IACC0oB,EADD1oB,EACC0oB,cACAC,EAFD3oB,EAEC2oB,aACAC,EAHD5oB,EAGC4oB,aACAC,EAJD7oB,EAIC6oB,iBACA1D,EALDnlB,EAKCmlB,WACAhhB,EANDnE,EAMCmE,OACA2kB,EAPD9oB,EAOC8oB,aAPD,OASC/tB,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQ0I,WACtBhO,EAAAC,EAAAC,cAACgtB,EAADO,EAAA,CACEpZ,WAAW,EACX/O,QAASA,EACTiO,WAAYoa,EAAcpa,IACtB6Z,IAENptB,EAAAC,EAAAC,cAAA,MAAS2tB,IACNzkB,GACCpJ,EAAAC,EAAAC,cAAC8tB,EAAA,EAAD,CAAOnnB,UAAWvB,EAAQ8mB,MAAO6B,QAAQ,GACvCjuB,EAAAC,EAAAC,cAAC2sB,EAAD,CACEzC,WAAYA,EACZ3W,YAAaA,GAEZ,SAAAya,GAAmB,OAClBA,EAAoBloB,IAAI,SAACmoB,EAAYtX,GAAb,OACtB7W,EAAAC,EAAAC,cAAC8sB,EAAD,CACE5V,IAAK+W,EAAWrmB,MAChBsjB,UAAWwC,EAAa,CACtBhX,KAAMuX,IAER9C,cAAeyC,IAAqBjX,EACpCyU,WACEtnB,QAAQ+pB,IACRA,EAAajmB,QAAUqmB,EAAWrmB,OAGnCqmB,eAeZxB,4JC1FR,IAAM7Y,EAAgB,CAC3Bsa,OAAQ,SACRra,OAAQ,UAGJsa,EAAuB,SAAA/uB,GAKvB,IAJJuU,EAIIvU,EAJJuU,YACAH,EAGIpU,EAHJoU,YACY4a,EAERhvB,EAFJ8qB,WAGMrG,EAAa,CAAEwK,SADjBjvB,EADJkvB,wBAGA,OAAQ3a,GACN,KAAKC,EAAcC,OACjB,MAAO,CAAEgQ,aAAY0K,OAAQH,GAC/B,KAAKxa,EAAcsa,OACnB,QACE,MAAO,CACLrK,aACA5P,OAAQua,EAAA,GACLhb,EAAc,CAAEkR,WAAY,IAAK/gB,MAAK,IAAAyD,OAAMgnB,EAAN,UAoBlC3B,MAAuB,CACpCE,oBAAqBrJ,YACnB,SACE9F,EADF7Y,GAAA,IAGIulB,EAHJvlB,EAGIulB,WAHJuE,EAAA9pB,EAII4O,YACEE,EALNgb,EAKMhb,UACAC,EANN+a,EAMM/a,OACAF,EAPNib,EAOMjb,YACA8a,EARNG,EAQMH,uBACA3a,EATN8a,EASM9a,YATN,MAYM,CACJD,SACAgb,SAAUxE,EACVlO,QAAS,CACP2S,SAAU,CACRlb,YACAsQ,QAASmG,EACT3P,MAAO4T,EAAqB,CAC1Bxa,cACAH,cACA0W,aACAoE,6BAINM,gBAAiB,MA5BAtL,CAfN,SAAAnjB,GAAA,IAAA0uB,EAAA1uB,EACfoT,YACEC,GAFaqb,OAAA,IAAAA,EASX,GATWA,GAEbrb,YACAM,EAHa+a,EAGb/a,eAHagb,EAAAD,EAIbE,iCAJa,IAAAD,EAIe,SAAAE,GAAM,yUAAAC,CAAA,GAC7BD,EAD6B,CAEhCpnB,MAAOonB,EAAOxb,GACdvF,QAAS6F,EAAiBA,EAAekb,QAAUrtB,KAPxCmtB,EAAAI,EAAA/uB,EAUfwuB,SAVeQ,GAAAD,OAAA,IAAAA,EAUyB,GAVzBA,GAUHjX,KAAMmX,OAVH,IAAAD,EAUkB,GAVlBA,EAAA,OAYX7E,EAZWnqB,EAWfd,WACgB+vB,GAAgB,IAAItpB,IAAIipB,wHCrBpCtW,EAAW,SAAArZ,GAKX,IAAAiwB,EAAAjwB,EAJJsZ,SAAY5G,EAIRud,EAJQvd,WAIRwd,EAAAD,EAJoB5oB,oBAIpB,IAAA6oB,EAJmC,UAInCA,EAHJvf,EAGI3Q,EAHJ2Q,cACAjF,EAEI1L,EAFJ0L,KACA1F,EACIhG,EADJgG,QAEMmqB,EAAexf,EACnBjQ,EAAAC,EAAAC,cAACkf,EAAA,EAAD,CAAML,GAAI9O,EAAc6P,MAAM,CAAEiK,cAAehK,OAAO/N,MACnDrL,GAGHA,EAEF,OACE3G,EAAAC,EAAAC,cAAA,OAAK2G,UAAWvB,EAAQ0I,WACrBhD,GAAQhL,EAAAC,EAAAC,cAAC8K,EAAD,CAAMnE,UAAWvB,EAAQmI,OACjCgiB,IAKP9W,EAASpX,UAAY,CACnB+D,QAAS9D,IAAUmH,SAASnH,IAAUkH,QAAQhH,WAC9CkX,SAAUpX,IAAUwI,MAAM6P,WAC1B7O,KC1Ca,SAACmK,EAAOua,EAAUC,GAC/B,GAAIxa,EAAMua,KAAcE,6BAAmBza,EAAMua,IAC/C,OAAO,IAAIG,MAAJ,iBAAAvoB,OACYooB,EADZ,mBAAApoB,OACsCqoB,EADtC,gDDyCT1f,cAAezO,IAAUoP,WAAWC,MAGtC8H,EAAS/W,aAAe,CACtBgX,SAAU,GACV5N,UAAMnJ,EACNoO,mBAAepO,GAGF+G,gBA9CO,CACpBoF,UAAW,CACTnF,QAAS,eACT0F,YAAa,OAEfd,KAAM,CACJc,YAAa,MACb1F,QAAS,eACT2F,cAAe,gBAsCJ5F,CAAmB+P","file":"travel-Trips-40f308db5ff7344e916e.js","sourcesContent":["// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    if (element.dataset && element.dataset.sortHandler === 'enabled') {\n      return false;\n    }\n    element = element.parentNode;\n  }\n  return true;\n};\n","export const withItem = (array, item, index = array.length) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index),\n];\n\nexport const withoutItem = (array, index) => [\n  ...array.slice(0, index),\n  ...array.slice(index + 1),\n];\n\nexport const replaceItem = (array, index, item) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index + 1),\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst DialogWithForm = ({\n  children,\n  description,\n  onReject: handleReject,\n  onSubmit: handleSubmit,\n  title,\n  ...forwardedProps\n}) => (\n  <Formik {...forwardedProps} onSubmit={handleSubmit}>\n    {({ handleSubmit: handleSubmitInternal, ...formikProps }) => (\n      <Dialog\n        transitionDuration={500}\n        open={true}\n        onClose={handleReject}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{description}</DialogContentText>\n          {React.cloneElement(children, formikProps)}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleReject} color=\"secondary\">\n            Отмена\n          </Button>\n          <Button onClick={handleSubmitInternal} color=\"primary\">\n            Сохранить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )}\n  </Formik>\n);\n\nDialogWithForm.propTypes = {\n  children: PropTypes.node.isRequired,\n  description: PropTypes.node,\n  onReject: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.node,\n};\nDialogWithForm.defaultProps = {\n  description: undefined,\n  title: undefined,\n};\n\nexport default DialogWithForm;\n","import checkIsSameDay from 'date-fns/isSameDay';\nimport checkIsDatesEqual from 'date-fns/isEqual';\nimport addDays from 'date-fns/addDays';\nimport checkIsAfter from 'date-fns/isAfter';\n\nconst checkIsPeriodInverted = (beforeDateTime, afterDateTime) =>\n  checkIsAfter(beforeDateTime, afterDateTime);\n\nconst mixDateTime = ({ dateFrom, timeFrom }) =>\n  new Date(\n    dateFrom.getFullYear(),\n    dateFrom.getMonth(),\n    dateFrom.getDate(),\n    timeFrom.getHours(),\n    timeFrom.getMinutes(),\n    timeFrom.getSeconds(),\n  );\n\nexport default ({ values: { rideDeparture, rideArrival }, handleChange }) => {\n  const setRideDeparture = nextRideDeparture =>\n    handleChange('departureDateTime')(nextRideDeparture);\n  const setRideArrival = nextRideArrival =>\n    handleChange('arrivalDateTime')(nextRideArrival);\n\n  const isSameDay = checkIsSameDay(rideDeparture, rideArrival);\n\n  const setDatesAndTimes = (nextRideDeparture, nextRideArrival) => {\n    const isInverted = checkIsPeriodInverted(\n      nextRideDeparture,\n      nextRideArrival,\n    );\n    const actualNextRideDeparture = isInverted\n      ? nextRideArrival\n      : nextRideDeparture;\n\n    const actualNextRideArrival = isInverted\n      ? nextRideDeparture\n      : nextRideArrival;\n\n    if (!checkIsDatesEqual(rideDeparture, actualNextRideDeparture)) {\n      setRideDeparture(actualNextRideDeparture);\n    }\n    if (!checkIsDatesEqual(rideArrival, actualNextRideArrival)) {\n      setRideArrival(actualNextRideArrival);\n    }\n  };\n\n  const handleIsSameDayFlagChange = nextIsSameDay => {\n    if (Boolean(isSameDay) !== Boolean(nextIsSameDay)) {\n      setDatesAndTimes(\n        rideDeparture,\n        mixDateTime({\n          dateFrom: nextIsSameDay ? rideDeparture : addDays(rideDeparture, 1),\n          timeFrom: rideArrival,\n        }),\n      );\n    }\n  };\n\n  const handleRideDepartureChange = nextRideDeparture => {\n    const nextRideArrival = isSameDay\n      ? mixDateTime({\n          timeFrom: rideArrival,\n          dateFrom: nextRideDeparture,\n        })\n      : rideArrival;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  const handleRideArrivalChange = nextRideArrival => {\n    const nextRideDeparture = isSameDay\n      ? mixDateTime({\n          timeFrom: rideDeparture,\n          dateFrom: nextRideArrival,\n        })\n      : rideDeparture;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  return {\n    isSameDateField: {\n      value: isSameDay,\n      onChange: handleIsSameDayFlagChange,\n    },\n    rideDepartureField: {\n      value: rideDeparture,\n      onChange: handleRideDepartureChange,\n    },\n    rideArrivalField: {\n      value: rideArrival,\n      onChange: handleRideArrivalChange,\n    },\n  };\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n  DatePicker,\n  KeyboardDatePicker,\n  TimePicker,\n} from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from '../localization';\nimport tieDateTimeFields from '../tieDateTimeFields';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n  },\n  option: {\n    flexGrow: '1',\n  },\n};\n\nconst RideEditForm = ({\n  classes,\n  availableVisits,\n  originLocation,\n  values: {\n    departureVisitId,\n    arrivalVisitId,\n    vehicleType,\n    rideType,\n    rideComment,\n    rideClass,\n    rideOccupation,\n    departureDateTime,\n    arrivalDateTime,\n  },\n  handleChange,\n}) => {\n  const availableVisitsIds = availableVisits.map(({ visitId }) => visitId);\n  const visitsDict = Object.fromEntries(\n    availableVisits.map(visit => {\n      const { visitId } = visit;\n      return [visitId, visit];\n    }),\n  );\n\n  const {\n    rideArrivalField,\n    rideDepartureField,\n    isSameDateField,\n  } = tieDateTimeFields({\n    values: {\n      rideDeparture: departureDateTime,\n      rideArrival: arrivalDateTime,\n    },\n    handleChange,\n  });\n\n  const renderVisit = useCallback(\n    ({ option: visitId }) => {\n      if (visitId === ORIGIN_OF_TRIP) {\n        const { locationName } = originLocation;\n        return locationName;\n      }\n      const visit = visitsDict[visitId];\n      if (!visit) {\n        return 'Не указано';\n      }\n      const { locationName } = visit;\n      return locationName;\n    },\n    [visitsDict],\n  );\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"departureVisitId\"\n          caption=\"Отправление из\"\n          inputId=\"RideEditCard-departureVisitId\"\n          optionRender={renderVisit}\n          hasNullOption={false}\n          options={[ORIGIN_OF_TRIP, ...availableVisitsIds]}\n          value={departureVisitId}\n          onChange={handleChange}\n        />\n        <OptionsSelect\n          name=\"arrivalVisitId\"\n          caption=\"Прибытие в\"\n          inputId=\"RideEditCard-arrivalVisitId\"\n          hasNullOption={false}\n          optionRender={renderVisit}\n          options={[...availableVisitsIds, ORIGIN_OF_TRIP]}\n          onChange={handleChange}\n          value={arrivalVisitId}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"vehicleType\"\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          onChange={handleChange}\n          value={vehicleType}\n        />\n        <OptionsSelect\n          name=\"rideType\"\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          onChange={handleChange}\n          value={rideType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"rideClass\"\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          onChange={handleChange}\n          value={rideClass}\n        />\n        <OptionsSelect\n          name=\"rideOccupation\"\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          onChange={handleChange}\n          value={rideOccupation}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <KeyboardDatePicker\n          name=\"departureDateTime\"\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n          format=\"dd/MM/yyyy\"\n        />\n        {isSameDateField.value ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSameDateField.value}\n                onChange={event =>\n                  isSameDateField.onChange(event.target.checked)\n                }\n              />\n            }\n            label=\"Прибытие в тот же день\"\n          />\n        ) : (\n          <KeyboardDatePicker\n            name=\"arrivalDateTime\"\n            autoOk={true}\n            className={classes.option}\n            label=\"Дата прибытия\"\n            value={rideArrivalField.value}\n            onChange={rideArrivalField.onChange}\n            format=\"dd/MM/yyyy\"\n          />\n        )}\n      </div>\n      <div className={classes.optionGroup}>\n        <TimePicker\n          name=\"departureDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n        />\n        <TimePicker\n          name=\"arrivalDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          value={rideArrivalField.value}\n          onChange={rideArrivalField.onChange}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          name=\"rideComment\"\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={handleChange}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </div>\n    </>\n  );\n};\n\nRideEditForm.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nRideEditForm.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(RideEditForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogWithForm from 'modules/components/muiExtended/DialogWithForm';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport RideEditForm from './blocks/RideEditForm';\n\nconst RideEditDialog = ({\n  availableVisits,\n  initialState,\n  children,\n  className,\n  onSubmit: handleSubmit,\n  originLocation,\n}) => {\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = values => {\n    handleSubmit(values);\n    handleClose(false);\n  };\n\n  return (\n    <div className={className}>\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        {children}\n      </IconButton>\n      {isOpen && (\n        <DialogWithForm\n          initialValues={initialState}\n          enableReinitialize={true}\n          onSubmit={handleSubmitInternal}\n          onReject={handleClose}\n          title=\"Транспорт\"\n          description=\"Как вы добрались в место назначения и как уехали из него?\"\n        >\n          <RideEditForm\n            availableVisits={availableVisits}\n            originLocation={originLocation}\n          />\n        </DialogWithForm>\n      )}\n    </div>\n  );\n};\n\nRideEditDialog.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n};\nRideEditDialog.defaultProps = {\n  className: undefined,\n  availableVisits: [],\n};\n\nexport default RideEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport arrivalDepartureDateTimeToString from 'modules/utilities/dateTime/arrivalDepartureDateTimeToString';\nimport { VEHICLE_TYPES, RIDE_TYPES } from 'travel/models/rides/consts';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport initializeRide from 'travel/models/rides/initialize';\nimport RideEditDialog from 'travel/components/models/rides/RideEditDialog';\n\nconst resolveRideIconComponent = vehicleType => {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n    default:\n      return CustomTransportIcon;\n  }\n};\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  editDialogTrigger: {\n    display: 'inline-block',\n  },\n};\n\nconst Ride = ({\n  availableVisits,\n  originLocation,\n  classes,\n  className,\n  defaultArrivalVisitId,\n  defaultDepartureVisitId,\n  isEditable,\n  onRideUpdate: handleRideUpdate,\n  ride,\n  ride: { rideId, vehicleType, rideType, arrivalDateTime, departureDateTime },\n  showDetails,\n}) => {\n  const rideInitialState = rideId\n    ? ride\n    : initializeRide({\n        defaultDepartureVisitId,\n        defaultArrivalVisitId,\n      });\n\n  const Icon = rideId ? resolveRideIconComponent(vehicleType) : UnknownRideIcon;\n\n  const iconNode = <Icon className={classes.icon} />;\n  const rideNode = isEditable ? (\n    <RideEditDialog\n      className={classes.editDialogTrigger}\n      initialState={rideInitialState}\n      availableVisits={availableVisits}\n      onSubmit={updatedRide => handleRideUpdate({ ...ride, ...updatedRide })}\n      originLocation={originLocation}\n    >\n      {iconNode}\n    </RideEditDialog>\n  ) : (\n    iconNode\n  );\n\n  return (\n    <div className={cls(className, classes.container)}>\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.icon} />\n      )}\n      {rideNode}\n      {Boolean(rideId && showDetails) && (\n        <span className={classes.details}>\n          {arrivalDepartureDateTimeToString(departureDateTime, arrivalDateTime)}\n        </span>\n      )}\n    </div>\n  );\n};\n\nRide.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  className: PropTypes.string,\n  defaultArrivalVisitId: PropTypes.number,\n  defaultDepartureVisitId: PropTypes.number,\n  isEditable: PropTypes.bool,\n  onRideUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  ride: PropTypes.shape(ridePropTypes),\n  showDetails: PropTypes.bool,\n};\n\nRide.defaultProps = {\n  availableVisits: [],\n  className: undefined,\n  defaultArrivalVisitId: undefined,\n  defaultDepartureVisitId: undefined,\n  isEditable: false,\n  ride: {},\n  showDetails: false,\n};\n\nexport default withStyles(styles)(Ride);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst styles = {\n  dragHandler: {\n    cursor: 'grab',\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n  },\n};\n\nconst DragHandler = ({ className, classes }) => (\n  <IconDragHandle\n    className={cls(className, classes.dragHandler)}\n    data-sort-handler=\"enabled\"\n  />\n);\n\nDragHandler.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nDragHandler.defaultProps = { className: undefined };\n\nexport default withStyles(styles)(DragHandler);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Path from 'modules/utilities/routing/Path';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Visit from 'travel/components/models/visits/Visit';\nimport Ride from './Ride';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  alwaysVisible: {},\n  container: {\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n};\n\nconst VisitWithRides = ({\n  visit,\n  visit: { visitId, arrivalRideId, departureRideId } = {},\n  ridesDict,\n  classes,\n  prevVisitId,\n  nextVisitId,\n  tripVisitsList,\n  isEditable,\n  isSortable,\n  isSorting,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  onRideUpdate: handleRideUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  originLocation,\n  locationsPath,\n}) => {\n  const shouldWarnForArrivalRide = isEditable && !isArrivalRideMatch;\n  const shouldWarnForDepartureRide = isEditable && !isDepartureRideMatch;\n\n  return (\n    <div className={classes.container}>\n      <Ride\n        availableVisits={tripVisitsList}\n        defaultDepartureVisitId={prevVisitId}\n        defaultArrivalVisitId={visitId}\n        visitId={visitId}\n        isEditable={isEditable}\n        className={cls(classes.ride, {\n          [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n          [classes.warning]: shouldWarnForArrivalRide,\n        })}\n        ride={ridesDict[arrivalRideId]}\n        showDetails={isSorting || shouldWarnForArrivalRide}\n        onRideUpdate={handleRideUpdate}\n        originLocation={originLocation}\n      />\n      <Visit\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        isEditable={isEditable}\n        onVisitUpdate={handleVisitUpdate}\n        visit={visit}\n        locationsPath={locationsPath}\n      />\n      {(!isDepartureRideMatch || isSorting) && (\n        <Ride\n          className={cls(classes.ride, {\n            [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n            [classes.warning]: shouldWarnForDepartureRide,\n          })}\n          ride={ridesDict[departureRideId]}\n          availableVisits={tripVisitsList}\n          defaultDepartureVisitId={visitId}\n          defaultArrivalVisitId={nextVisitId}\n          isEditable={isEditable && !isDepartureRideMatch}\n          showDetails={isSorting || shouldWarnForDepartureRide}\n          onRideUpdate={handleRideUpdate}\n          originLocation={originLocation}\n        />\n      )}\n      {isSortable &&\n        !isSorting && <DragHandler className={classes.visibleOnlyOnHover} />}\n    </div>\n  );\n};\n\nVisitWithRides.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isArrivalRideMatch: PropTypes.bool,\n  isDepartureRideMatch: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  isSortable: PropTypes.bool,\n  isSorting: PropTypes.bool,\n  nextVisitId: PropTypes.number,\n  onRideUpdate: PropTypes.func.isRequired,\n  onVisitUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  prevVisitId: PropTypes.number,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  visit: PropTypes.shape(visitPropTypes).isRequired,\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n};\n\nVisitWithRides.defaultProps = {\n  isArrivalRideMatch: true,\n  isDepartureRideMatch: true,\n  isEditable: false,\n  isSortable: false,\n  isSorting: false,\n  nextVisitId: null,\n  prevVisitId: null,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(VisitWithRides);\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest, {\n  QUERY_FORMATS,\n} from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { VISIT_TYPE_NAMES } from '../localization';\n\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nexport const useVisitState = ({\n  visitType: initialVisitType,\n  visitComment: initialVisitComment,\n  locationId: initialLocationId,\n  locationName: initialLocationName,\n  geonameId: initialGeonameId,\n}) => {\n  const [visitState, setVisitState] = useState({\n    visitComment: initialVisitComment,\n    visitType: initialVisitType,\n    locationId: initialLocationId,\n    locationName: initialLocationName,\n    geonameId: initialGeonameId,\n  });\n\n  return {\n    visitState,\n    setVisitState: visitStateUpdate =>\n      setVisitState({ ...visitState, ...visitStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n};\n\nconst VisitEditCard = ({\n  classes,\n  visitState: { visitType, visitComment, locationName },\n  setVisitState,\n}) => {\n  const setVisitType = useCallback(\n    ({ target: { value: nextVisitType } }) =>\n      setVisitState({ visitType: nextVisitType }),\n    [setVisitState],\n  );\n  const setGeoname = useCallback(\n    ({ geonameId: nextGeonameId }) =>\n      setVisitState({ geonameId: nextGeonameId }),\n    [setVisitState],\n  );\n  const setVisitComment = useCallback(\n    ({ target: { value: nextVisitComment } }) =>\n      setVisitState({ visitComment: nextVisitComment }),\n    [setVisitState],\n  );\n\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          classes={{ root: classes.suggest }}\n          textFieldProps={{\n            label: 'Место посещения',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Населенный пункт...' }}\n          onChange={setGeoname}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'geonames',\n            domain: 'visitEditCard.geoname',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          onChange={setVisitType}\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n          value={visitType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          label=\"Комментарий\"\n          fullWidth={true}\n          value={visitComment}\n          onChange={setVisitComment}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </div>\n    </>\n  );\n};\n\nVisitEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nVisitEditCard.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(VisitEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport VisitEditCard, { useVisitState } from './blocks/VisitEditCard';\n\nconst VisitEditDialog = ({\n  initialState,\n  children,\n  onSubmit: handleSubmit,\n}) => {\n  const { visitState, setVisitState } = useVisitState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(visitState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      {React.cloneElement(children, { onClick: handleClickOpen })}\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Посещение</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование посещения</DialogContentText>\n            <VisitEditCard\n              visitState={visitState}\n              setVisitState={setVisitState}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nVisitEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nVisitEditDialog.defaultProps = {};\n\nexport default VisitEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport initializeVisit from 'travel/models/visits/initialize';\nimport VisitEditDialog from 'travel/components/models/visits/VisitEditDialog';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  draggableContainer: {\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n};\n\nconst VisitCreator = ({\n  classes,\n  isSorting,\n  onVisitUpdate: handleVisitUpdate,\n}) => (\n  <div className={cls({ [classes.draggableContainer]: !isSorting })}>\n    <VisitEditDialog\n      initialState={initializeVisit()}\n      onSubmit={handleVisitUpdate}\n    >\n      <Button\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <span>Добавить посещение</span>\n      </Button>\n    </VisitEditDialog>\n    <DragHandler className={classes.visibleOnlyOnHover} />\n  </div>\n);\n\nVisitCreator.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isSorting: PropTypes.bool,\n  onVisitUpdate: PropTypes.func.isRequired,\n};\n\nVisitCreator.defaultProps = {\n  isSorting: false,\n};\n\nexport default withStyles(styles)(VisitCreator);\n","export default () => ({\n  visitType: null,\n  visitComment: '',\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconHome from '@material-ui/icons/Home';\nimport EditIcon from '@material-ui/icons/Edit';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\nimport { withItem } from 'modules/utilities/types/array';\nimport Path from 'modules/utilities/routing/Path';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Location from 'travel/components/models/locations/Location';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport VisitWithRides from './VisitWithRides';\nimport Ride from './Ride';\nimport VisitCreator from './VisitCreator';\n\nconst SortableTrip = SortableContainer(({ children }) => <div>{children}</div>);\nconst SortableVisitWithRides = SortableElement(\n  ({ replaceWithNode, onVisitUpdate: handleVisitUpdate, ...props }) =>\n    replaceWithNode || (\n      <VisitWithRides onVisitUpdate={handleVisitUpdate} {...props} />\n    ),\n);\n\nconst styles = {\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n};\n\nconst resolveVisitsWindow = (tripVisitsList, indexOfVisit, overstepIndex) => {\n  const prevVisitIndex =\n    indexOfVisit - 1 - (indexOfVisit > overstepIndex ? 1 : 0);\n  const nextVisitIndex =\n    indexOfVisit + 1 - (indexOfVisit + 1 > overstepIndex ? 1 : 0);\n  const prevVisit = prevVisitIndex >= 0 ? tripVisitsList[prevVisitIndex] : null;\n  const nextVisit =\n    nextVisitIndex < tripVisitsList.length\n      ? tripVisitsList[nextVisitIndex]\n      : null;\n  return [prevVisit, nextVisit];\n};\n\nconst Trip = ({\n  classes,\n  countriesDict,\n  locationsDict,\n  onRideUpdate: handleRideUpdate,\n  onVisitsOrderUpdate: handleVisitsOrderUpdate,\n  ridesDict,\n  trip,\n  trip: { tripId, originLocationId, tripName, tripType },\n  tripVisitsList,\n  onTripUpdate: handleTripUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  locationsPath,\n}) => {\n  const [isSorting, setIsSorting] = useState(false);\n  const [addVisitControlIndex, setAddVisitControlIndex] = useState(\n    tripVisitsList.length,\n  );\n  const handleSortEnd = (data, event) => {\n    setIsSorting(false);\n    const { oldIndex, newIndex } = data;\n    if (oldIndex === addVisitControlIndex) {\n      setAddVisitControlIndex(newIndex);\n    } else {\n      handleVisitsOrderUpdate(event, {\n        oldIndex: oldIndex > addVisitControlIndex ? oldIndex - 1 : oldIndex,\n        newIndex: newIndex > addVisitControlIndex ? newIndex - 1 : newIndex,\n        collection: tripVisitsList,\n      });\n    }\n  };\n\n  const actualTripVisitsList = withItem(\n    tripVisitsList,\n    { isItVisitCreatorControl: true },\n    addVisitControlIndex,\n  );\n\n  const visitsNodes = actualTripVisitsList.map((visit, indexOfVisit) => {\n    const { isItVisitCreatorControl, visitId } = visit;\n    if (isItVisitCreatorControl) {\n      return (\n        <SortableVisitWithRides\n          key=\"visitCreator\"\n          index={indexOfVisit}\n          replaceWithNode={\n            <VisitCreator\n              isSorting={isSorting}\n              onVisitUpdate={newVisit =>\n                handleVisitUpdate(newVisit, {\n                  indexInCollection: addVisitControlIndex,\n                  collection: tripVisitsList,\n                  tripId,\n                })\n              }\n            />\n          }\n        />\n      );\n    }\n    const [prevVisit, nextVisit] = resolveVisitsWindow(\n      tripVisitsList,\n      indexOfVisit,\n      addVisitControlIndex,\n    );\n    const { visitId: prevVisitId } = prevVisit || {};\n    const { visitId: nextVisitId } = nextVisit || {};\n    return (\n      <SortableVisitWithRides\n        index={indexOfVisit /* for SortableVisitWithRides */}\n        isArrivalRideMatch={checkIsVisitsConnectedByRide(prevVisit, visit)}\n        isDepartureRideMatch={checkIsVisitsConnectedByRide(visit, nextVisit)}\n        isEditable={true}\n        isSortable={true}\n        isSorting={isSorting}\n        key={visitId}\n        nextVisitId={nextVisitId}\n        onRideUpdate={handleRideUpdate}\n        onVisitUpdate={handleVisitUpdate}\n        originLocation={locationsDict[originLocationId]}\n        prevVisitId={prevVisitId}\n        ridesDict={ridesDict}\n        tripVisitsList={tripVisitsList}\n        visit={visit}\n        locationsPath={locationsPath}\n      />\n    );\n  });\n\n  const wrappedVisitsNodes = (\n    <SortableTrip\n      onSortEnd={handleSortEnd}\n      shouldCancelStart={checkIsNodeNotSortable}\n      updateBeforeSortStart={() => setIsSorting(true)}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n    >\n      {visitsNodes}\n    </SortableTrip>\n  );\n\n  const originLocationNode = (\n    <Location\n      location={locationsDict[originLocationId]}\n      Icon={IconHome}\n      locationsPath={locationsPath}\n    />\n  );\n\n  const tripEditControlsNode = (\n    <TripEditDialog\n      initialState={trip}\n      onSubmit={updatedTrip => handleTripUpdate({ ...trip, ...updatedTrip })}\n    >\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <EditIcon className={classes.visibleOnlyOnHover} />\n      </IconButton>\n    </TripEditDialog>\n  );\n\n  const lastVisit = tripVisitsList[tripVisitsList.length - 1];\n  const lastButOneVisit = tripVisitsList[tripVisitsList.length - 2];\n  const { departureRideId: rideToOriginId, visitId: recentVisitId } =\n    lastVisit || {};\n\n  const isRelocation = tripType === TRIP_TYPES.RELOCATION;\n  const rideToOriginNode = isRelocation ? null : (\n    <Ride\n      availableVisits={tripVisitsList}\n      defaultDepartureVisitId={recentVisitId}\n      isEditable={true}\n      onRideUpdate={handleRideUpdate}\n      originLocation={locationsDict[originLocationId]}\n      ride={ridesDict[rideToOriginId]}\n      showDetails={\n        isSorting || checkIsVisitsConnectedByRide(lastButOneVisit, lastVisit)\n      }\n    />\n  );\n\n  return (\n    <>\n      <h1 className={classes.container}>\n        {resolveTripCaption(\n          tripVisitsList,\n          countriesDict,\n          locationsDict[originLocationId] &&\n            locationsDict[originLocationId].countryId,\n          tripName,\n        )}\n        {tripEditControlsNode}\n      </h1>\n      {originLocationNode}\n      {wrappedVisitsNodes}\n      {!isRelocation && (\n        <>\n          {rideToOriginNode}\n          {originLocationNode}\n        </>\n      )}\n    </>\n  );\n};\nTrip.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  tripIndex: PropTypes.number.isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  onRideUpdate: PropTypes.func.isRequired,\n  onTripUpdate: PropTypes.func.isRequired,\n  onVisitsOrderUpdate: PropTypes.func.isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  trip: PropTypes.shape(tripPropTypes).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  tripStoryPath: PropTypes.instanceOf(Path).isRequired,\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n};\n\nTrip.defaultProps = {\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(Trip);\n","import createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nexport const submitOrderInTrip = ({ oldIndex, newIndex, collection }) => ({\n  domain: 'tripsPage.visits.sort',\n  modelName: 'visits',\n  query: {\n    id: collection[oldIndex].visitId,\n    body: {\n      orderInTrip: calcOrder({ index: newIndex, collection }),\n    },\n  },\n});\n\nexport const submitRide = ({ ride, ride: { rideId } }) => ({\n  domain: 'tripsPage.visits.rides',\n  modelName: 'rides',\n  query: {\n    id: rideId,\n    body: ride,\n  },\n});\n\nexport const submitTrip = ({ trip, trip: { tripId } }) => ({\n  domain: 'tripsPage.visits.trips',\n  modelName: 'trips',\n  query: {\n    id: tripId,\n    body: trip,\n  },\n});\n\nexport const submitVisit = ({\n  visit,\n  visit: { visitId },\n  tripId,\n  indexInCollection,\n  collection,\n}) => ({\n  domain: 'tripsPage.visits.visit',\n  modelName: 'visits',\n  query: {\n    id: visitId,\n    body: {\n      ...visit,\n      tripId,\n      orderInTrip:\n        indexInCollection || indexInCollection === 0\n          ? calcOrder({ index: indexInCollection, collection })\n          : undefined,\n    },\n  },\n});\n","const INITIAL_ORDER = 100;\nexport default ({ orderResolver: resolveOrder }) => ({ index, collection }) => {\n  if (!collection.length) {\n    return INITIAL_ORDER;\n  }\n  if (index <= 0) {\n    return resolveOrder(collection[0]) - 1;\n  }\n  if (index >= collection.length - 1) {\n    return resolveOrder(collection[collection.length - 1]) + 1;\n  }\n  const prevOrder = resolveOrder(collection[index - 1]);\n  const nextOrder = resolveOrder(collection[index]);\n  const randomness = ((Math.random() - 0.5) * (nextOrder - prevOrder)) / 2;\n  return (prevOrder + nextOrder) / 2 + randomness;\n};\n","import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'lodash/fp/compose';\nimport Button from '@material-ui/core/Button';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { usePaths } from 'modules/packages';\nimport { selectDict, selectProvisionStatus } from 'core/connection';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport withTripsData, {\n  DATA_CHUNKS,\n} from 'travel/components/common/withTripsData/withTripsData';\nimport WelcomeScreen from 'travel/components/common/WelcomeScreen';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport initializeTrip from 'travel/models/trips/initialize';\nimport { groupAndSortVisitsByTrips } from 'travel/models/trips/utils';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Trip from './blocks/Trip';\nimport {\n  submitRide,\n  submitOrderInTrip,\n  submitTrip,\n  submitVisit,\n} from './actionCreators';\n\nconst memoizedGroupAndSortVisitsByTrips = memoizeByLastArgs(\n  groupAndSortVisitsByTrips,\n);\n\nfunction TripEditPage({\n  match: {\n    params: { userAlias: visitedUserAlias, strTripId },\n  },\n  isTripsComplete,\n  userTrips: { data: tripsList = [] } = {},\n  userVisits: { data: visitsList = [] } = {},\n  countriesDict,\n  locationsDict,\n  ridesDict,\n  request,\n  invalidateRequest,\n}) {\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const {\n    travel: { tripStory: tripStoryPath, locations: locationsPath },\n  } = usePaths();\n\n  const handleVisitsOrderUpdate = useCallback(\n    (event, { oldIndex, newIndex, collection }) => {\n      if (oldIndex !== newIndex) {\n        request(submitOrderInTrip({ oldIndex, newIndex, collection }));\n      }\n    },\n    [request],\n  );\n\n  const handleRideUpdate = useCallback(\n    ride =>\n      request(\n        submitRide({\n          ride,\n        }),\n      ),\n    [request],\n  );\n\n  const handleTripUpdate = useCallback(\n    trip =>\n      request(\n        submitTrip({\n          trip,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.trips' })),\n    [request],\n  );\n\n  const handleVisitUpdate = useCallback(\n    (visit, { indexInCollection, collection, tripId } = {}) =>\n      request(\n        submitVisit({\n          visit,\n          tripId,\n          indexInCollection,\n          collection,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.visits' })),\n    [request],\n  );\n\n  const specifiedTripId = parseInt(strTripId, 10);\n  const tripToEdit =\n    specifiedTripId &&\n    tripsList.find(({ tripId }) => tripId === specifiedTripId);\n\n  const isEditable =\n    isAuthenticated && authenticatedUserAlias === visitedUserAlias;\n\n  if (!isTripsComplete || !tripToEdit || !isEditable) {\n    return null;\n  }\n\n  const visitsGroupedByTrips = memoizedGroupAndSortVisitsByTrips(visitsList);\n  const { tripId } = tripToEdit;\n  return (\n    <Trip\n      locationsDict={locationsDict}\n      countriesDict={countriesDict}\n      onRideUpdate={handleRideUpdate}\n      onTripUpdate={handleTripUpdate}\n      onVisitUpdate={handleVisitUpdate}\n      onVisitsOrderUpdate={handleVisitsOrderUpdate}\n      ridesDict={ridesDict}\n      trip={tripToEdit}\n      tripVisitsList={visitsGroupedByTrips[tripId]}\n      tripStoryPath={tripStoryPath}\n      locationsPath={locationsPath}\n    />\n  );\n}\n\nTripEditPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  request: PropTypes.func.isRequired,\n  isTripsComplete: PropTypes.bool.isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationsPropTypes))\n    .isRequired,\n};\n\nconst mapStateToProps = state => ({\n  countriesDict: selectDict(state, 'countries'),\n  locationsDict: selectDict(state, 'locations'),\n  ridesDict: selectDict(state, 'rides'),\n  isTripsComplete: selectProvisionStatus(state, 'tripsPage.userTrips')\n    .isComplete,\n});\n\nexport default compose(\n  withTripsData({\n    domain: 'tripsPage',\n    mapStateToProps,\n    requirementsConfig: {\n      [DATA_CHUNKS.COMMON.COUNTRIES]: true,\n      [DATA_CHUNKS.USER.TRIPS]: true,\n      [DATA_CHUNKS.USER.LOCATIONS]: true,\n      [DATA_CHUNKS.USER.VISITS]: true,\n      [DATA_CHUNKS.USER.RIDES]: true,\n    },\n  }),\n)(TripEditPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport arrivalDepartureDateTimeToString from 'modules/utilities/dateTime/arrivalDepartureDateTimeToString';\nimport { VEHICLE_TYPES, RIDE_TYPES } from 'travel/models/rides/consts';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\n\nconst resolveRideIconComponent = vehicleType => {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n    default:\n      return CustomTransportIcon;\n  }\n};\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  editDialogTrigger: {\n    display: 'inline-block',\n  },\n};\n\nconst Ride = ({\n  classes,\n  className,\n  ride: { rideId, vehicleType, rideType, arrivalDateTime, departureDateTime },\n  showDetails,\n}) => {\n  const Icon = rideId ? resolveRideIconComponent(vehicleType) : UnknownRideIcon;\n\n  return (\n    <div className={cls(className, classes.container)}>\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.icon} />\n      )}\n      <Icon className={classes.icon} />\n      {Boolean(rideId && showDetails) && (\n        <span className={classes.details}>\n          {arrivalDepartureDateTimeToString(departureDateTime, arrivalDateTime)}\n        </span>\n      )}\n    </div>\n  );\n};\n\nRide.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  className: PropTypes.string,\n  ride: PropTypes.shape(ridePropTypes),\n  showDetails: PropTypes.bool,\n};\n\nRide.defaultProps = {\n  className: undefined,\n  ride: {},\n  showDetails: false,\n};\n\nexport default withStyles(styles)(Ride);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Path from 'modules/utilities/routing/Path';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Visit from 'travel/components/models/visits/Visit';\nimport Ride from './Ride';\n\nconst styles = {\n  alwaysVisible: {},\n  container: {\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n};\n\nconst VisitWithRides = ({\n  visit,\n  visit: { visitId, arrivalRideId, departureRideId } = {},\n  ridesDict,\n  classes,\n  isEditable,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  locationsPath,\n}) => {\n  const shouldWarnForArrivalRide = isEditable && !isArrivalRideMatch;\n  const shouldWarnForDepartureRide = isEditable && !isDepartureRideMatch;\n\n  return (\n    <div className={classes.container}>\n      <Ride\n        visitId={visitId}\n        className={cls(classes.ride, {\n          [classes.alwaysVisible]: !isDepartureRideMatch,\n          [classes.warning]: shouldWarnForArrivalRide,\n        })}\n        ride={ridesDict[arrivalRideId]}\n        showDetails={shouldWarnForArrivalRide}\n      />\n      <Visit\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        visit={visit}\n        locationsPath={locationsPath}\n      />\n      {!isDepartureRideMatch && (\n        <Ride\n          className={cls(classes.ride, {\n            [classes.alwaysVisible]: !isDepartureRideMatch,\n            [classes.warning]: shouldWarnForDepartureRide,\n          })}\n          ride={ridesDict[departureRideId]}\n          showDetails={shouldWarnForDepartureRide}\n        />\n      )}\n    </div>\n  );\n};\n\nVisitWithRides.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isArrivalRideMatch: PropTypes.bool,\n  isDepartureRideMatch: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  visit: PropTypes.shape(visitPropTypes).isRequired,\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n};\n\nVisitWithRides.defaultProps = {\n  isArrivalRideMatch: true,\n  isDepartureRideMatch: true,\n  isEditable: false,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(VisitWithRides);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconHome from '@material-ui/icons/Home';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Path from 'modules/utilities/routing/Path';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Location from 'travel/components/models/locations/Location';\nimport { checkTripHasStory } from '../utils';\nimport VisitWithRides from './VisitWithRides';\nimport Ride from './Ride';\n\nconst styles = {\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n};\n\nconst resolveVisitsWindow = (tripVisitsList, indexOfVisit, overstepIndex) => {\n  const prevVisitIndex =\n    indexOfVisit - 1 - (indexOfVisit > overstepIndex ? 1 : 0);\n  const nextVisitIndex =\n    indexOfVisit + 1 - (indexOfVisit + 1 > overstepIndex ? 1 : 0);\n  const prevVisit = prevVisitIndex >= 0 ? tripVisitsList[prevVisitIndex] : null;\n  const nextVisit =\n    nextVisitIndex < tripVisitsList.length\n      ? tripVisitsList[nextVisitIndex]\n      : null;\n  return [prevVisit, nextVisit];\n};\n\nconst Trip = ({\n  classes,\n  countriesDict,\n  isEditable,\n  locationsDict,\n  ridesDict,\n  trip: { originLocationId, tripName, tripType },\n  tripIndex,\n  tripVisitsList,\n  tripEditUrl,\n  tripStoryUrl,\n  locationsPath,\n}) => {\n  const addVisitControlIndex = tripVisitsList.length;\n\n  const visitsNodes = tripVisitsList.map((visit, indexOfVisit) => {\n    const { visitId } = visit;\n    const [prevVisit, nextVisit] = resolveVisitsWindow(\n      tripVisitsList,\n      indexOfVisit,\n      addVisitControlIndex,\n    );\n\n    return (\n      <VisitWithRides\n        isArrivalRideMatch={checkIsVisitsConnectedByRide(prevVisit, visit)}\n        isDepartureRideMatch={checkIsVisitsConnectedByRide(visit, nextVisit)}\n        key={visitId}\n        ridesDict={ridesDict}\n        isEditable={isEditable}\n        visit={visit}\n        locationsPath={locationsPath}\n      />\n    );\n  });\n\n  const originLocationNode = (\n    <Location\n      location={locationsDict[originLocationId]}\n      Icon={IconHome}\n      locationsPath={locationsPath}\n    />\n  );\n\n  const tripEditControlsNode = (\n    <IconButton\n      data-sort-handler=\"disabled\"\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component={Link}\n      to={tripEditUrl}\n    >\n      <EditIcon className={classes.visibleOnlyOnHover} />\n    </IconButton>\n  );\n\n  const lastVisit = tripVisitsList[tripVisitsList.length - 1];\n  const { departureRideId: rideToOriginId } = lastVisit || {};\n\n  const isRelocation = tripType === TRIP_TYPES.RELOCATION;\n  const rideToOriginNode = isRelocation ? null : (\n    <Ride ride={ridesDict[rideToOriginId]} showDetails={false} />\n  );\n\n  const hasStory = checkTripHasStory(tripVisitsList, ridesDict);\n  return (\n    <>\n      <h1 className={classes.container}>\n        {`${tripIndex + 1}. ${resolveTripCaption(\n          tripVisitsList,\n          countriesDict,\n          locationsDict[originLocationId] &&\n            locationsDict[originLocationId].countryId,\n          tripName,\n        )}`}\n        {isEditable && tripEditControlsNode}\n      </h1>\n      {originLocationNode}\n      {<div>{visitsNodes}</div>}\n      {!isRelocation && (\n        <>\n          {rideToOriginNode}\n          {originLocationNode}\n        </>\n      )}\n      {hasStory && (\n        <div>\n          <Link to={tripStoryUrl}>Заметки</Link>\n        </div>\n      )}\n    </>\n  );\n};\nTrip.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  tripIndex: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  onTripUpdate: PropTypes.func.isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  trip: PropTypes.shape(tripPropTypes).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n  tripEditUrl: PropTypes.string.isRequired,\n  tripStoryUrl: PropTypes.string.isRequired,\n};\n\nTrip.defaultProps = {\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(Trip);\n","/* eslint-disable import/prefer-default-export */\n\nexport function checkTripHasStory(tripVisitsList, ridesDict) {\n  tripVisitsList.some(({ visitComment, arrivalRideId, departureRideId }) => {\n    if (visitComment) {\n      return true;\n    }\n    const { rideComment: arrivalRideComment } = ridesDict[arrivalRideId] || {};\n    if (arrivalRideComment) {\n      return true;\n    }\n    const { rideComment: departureRideComment } =\n      ridesDict[departureRideId] || {};\n    return Boolean(departureRideComment);\n  });\n}\n","/* eslint-disable import/prefer-default-export */\n\nexport const submitTrip = ({ trip, trip: { tripId } }) => ({\n  domain: 'tripsPage.visits.trips',\n  modelName: 'trips',\n  query: {\n    id: tripId,\n    body: trip,\n  },\n});\n","import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'lodash/fp/compose';\nimport Button from '@material-ui/core/Button';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { usePaths } from 'modules/packages';\nimport { selectDict, selectProvisionStatus } from 'core/connection';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport withTripsData, {\n  DATA_CHUNKS,\n} from 'travel/components/common/withTripsData/withTripsData';\nimport WelcomeScreen from 'travel/components/common/WelcomeScreen';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport initializeTrip from 'travel/models/trips/initialize';\nimport { groupAndSortVisitsByTrips } from 'travel/models/trips/utils';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Trip from './blocks/Trip';\nimport { submitTrip } from './actionCreators';\n\nconst memoizedGroupAndSortVisitsByTrips = memoizeByLastArgs(\n  groupAndSortVisitsByTrips,\n);\n\nfunction TripsPage({\n  match: {\n    params: { userAlias: visitedUserAlias, strTripId },\n  },\n  isTripsComplete,\n  userTrips: { data: tripsList = [] } = {},\n  userVisits: { data: visitsList = [] } = {},\n  countriesDict,\n  locationsDict,\n  ridesDict,\n  request,\n  invalidateRequest,\n}) {\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const {\n    travel: {\n      tripStory: tripStoryPath,\n      locations: locationsPath,\n      tripEdit: tripEditPath,\n    },\n  } = usePaths();\n\n  const specifiedTripId = parseInt(strTripId, 10);\n  const actualTripsList = specifiedTripId\n    ? tripsList.filter(({ tripId }) => tripId === specifiedTripId)\n    : tripsList;\n\n  const isEditable =\n    isAuthenticated && authenticatedUserAlias === visitedUserAlias;\n\n  const handleTripUpdate = useCallback(\n    trip =>\n      request(\n        submitTrip({\n          trip,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.trips' })),\n    [request],\n  );\n\n  // changes of node, when used in WelcomeScreen lead to recreation of\n  // Message Component, so loosing all internal state of TripEditDialog\n  // actually it became hidden, after isOpen flag reset\n  const addTripNode = useMemo(\n    () => (\n      <TripEditDialog\n        initialState={initializeTrip()}\n        onSubmit={handleTripUpdate}\n      >\n        <Button size=\"small\" variant=\"outlined\" color=\"primary\">\n          Добавить поездку\n        </Button>\n      </TripEditDialog>\n    ),\n    [handleTripUpdate],\n  );\n  if (isTripsComplete && !actualTripsList.length) {\n    return (\n      <WelcomeScreen shouldShowLinkToTrips={false}>{addTripNode}</WelcomeScreen>\n    );\n  }\n\n  const visitsGroupedByTrips = memoizedGroupAndSortVisitsByTrips(visitsList);\n  return (\n    <>\n      {isEditable && addTripNode}\n      {actualTripsList.map((trip, tripIndex) => {\n        const { tripId } = trip;\n        return (\n          <div key={tripId}>\n            <Trip\n              locationsDict={locationsDict}\n              countriesDict={countriesDict}\n              onTripUpdate={handleTripUpdate}\n              ridesDict={ridesDict}\n              trip={trip}\n              tripIndex={tripIndex}\n              tripVisitsList={visitsGroupedByTrips[tripId]}\n              isEditable={isEditable}\n              tripStoryUrl={tripStoryPath.toUrl({\n                strTripId: String(tripId),\n                userAlias: visitedUserAlias,\n              })}\n              locationsPath={locationsPath}\n              tripEditUrl={tripEditPath.toUrl({\n                strTripId: String(tripId),\n                userAlias: visitedUserAlias,\n              })}\n            />\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nTripsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  request: PropTypes.func.isRequired,\n  isTripsComplete: PropTypes.bool.isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationsPropTypes))\n    .isRequired,\n};\n\nconst mapStateToProps = state => ({\n  countriesDict: selectDict(state, 'countries'),\n  locationsDict: selectDict(state, 'locations'),\n  ridesDict: selectDict(state, 'rides'),\n  isTripsComplete: selectProvisionStatus(state, 'tripsPage.userTrips')\n    .isComplete,\n});\n\nexport default compose(\n  withTripsData({\n    domain: 'tripsPage',\n    mapStateToProps,\n    requirementsConfig: {\n      [DATA_CHUNKS.COMMON.COUNTRIES]: true,\n      [DATA_CHUNKS.USER.TRIPS]: true,\n      [DATA_CHUNKS.USER.LOCATIONS]: true,\n      [DATA_CHUNKS.USER.VISITS]: true,\n      [DATA_CHUNKS.USER.RIDES]: true,\n    },\n  }),\n)(TripsPage);\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isPending = true, hasFallback } = {} } = props;\n  if (isPending && !hasFallback) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default (tripVisitsList, countriesDict, originCountryId, fallback) => {\n  if (!tripVisitsList.length) {\n    return fallback;\n  }\n  const visitsByCountries = Object.keys(\n    groupBy(\n      tripVisitsList.filter(\n        ({ visitType }) => visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n  if (visitsByCountries.length === 1) {\n    return (\n      uniqTrimAndJoin(tripVisitsList.map(({ locationName }) => locationName), {\n        maxLength: 4,\n      }) || fallback\n    );\n  }\n  return (\n    uniqTrimAndJoin(\n      visitsByCountries\n        .map(\n          countryId =>\n            Number(countryId) !== originCountryId &&\n            countriesDict[countryId] &&\n            countriesDict[countryId].countryName,\n        )\n        .filter(Boolean),\n      { maxLength: 4 },\n    ) || fallback\n  );\n};\n","import groupBy from 'lodash/groupBy';\nimport mapValues from 'lodash/mapValues';\n\nexport { default as resolveTripCaption } from './resolveTripCaption';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n\nexport const groupAndSortVisitsByTrips = visitsList =>\n  mapValues(groupBy(visitsList, 'tripId'), sortVisitsByTrips);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Path from 'modules/utilities/routing/Path';\nimport { usePaths } from 'modules/packages';\nimport { useAuthContext } from 'core/context/AuthContext';\n\nconst WelcomeScreen = ({\n  children,\n  match: {\n    params: { userAlias: visitedUserAlias },\n  },\n}) => {\n  const {\n    travel: { trips: tripsPath },\n  } = usePaths();\n\n  const { userAlias: authenticatedUserAlias } = useAuthContext();\n  if (visitedUserAlias !== authenticatedUserAlias) {\n    return (\n      <span>Пользователь пока еще не внес информацию о своих поездках</span>\n    );\n  }\n  const Message = useCallback(\n    () => (\n      <div>\n        <span>\n          Нам пока ничего не известно о ваших путешествиях. Но очень интересно\n          узнать. Создайте вашу первую поездку, а мы подготовим по ней отчет\n        </span>\n        {children}\n      </div>\n    ),\n    [children],\n  );\n  return (\n    <Switch>\n      <Route\n        path={tripsPath.toUrl({ userAlias: authenticatedUserAlias })}\n        component={Message}\n      />\n      <Redirect to={tripsPath.toUrl({ userAlias: authenticatedUserAlias })} />\n    </Switch>\n  );\n};\n\nWelcomeScreen.propTypes = {\n  children: PropTypes.node,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ userAlias: PropTypes.string }),\n  }).isRequired,\n};\n\nWelcomeScreen.defaultProps = {\n  children: null,\n};\n\nexport default withRouter(WelcomeScreen);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport isFunction from 'lodash/isFunction';\nimport compose from 'lodash/fp/compose';\nimport withProvision from 'core/connection/withProvision';\nimport { selectUserTripsIds, selectLocationsIds } from './selectors';\n\nexport const DATA_CHUNKS = {\n  COMMON: {\n    COUNTRIES: 'COMMON.COUNTRIES',\n  },\n  USER: {\n    TRIPS: 'USER.TRIPS',\n    LOCATIONS: 'USER.LOCATIONS',\n    VISITS: 'USER.VISITS',\n    RIDES: 'USER.RIDES',\n  },\n};\n\nexport default ({\n  domain,\n  mapStateToProps,\n  requirementsConfig: mapStateToRequirementsConfig,\n}) => Component => {\n  const mapStateToRequirements = (state, props) => {\n    const {\n      countriesDict,\n      match: {\n        params: { userAlias },\n      },\n    } = props;\n    const userTripsIds = selectUserTripsIds(state, domain);\n\n    const requirementsConfig = isFunction(mapStateToRequirementsConfig)\n      ? mapStateToRequirementsConfig(state, props)\n      : mapStateToRequirementsConfig;\n\n    const request = {};\n    if (requirementsConfig[DATA_CHUNKS.COMMON.COUNTRIES]) {\n      request.countries = {\n        modelName: 'countries',\n        condition: !countriesDict || !Object.keys(countriesDict).length,\n        query: { navigation: { isDisabled: true } },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.TRIPS]) {\n      request.userTrips = {\n        modelName: 'trips',\n        observe: userAlias,\n        query: { userAlias, navigation: { isDisabled: true } },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.LOCATIONS]) {\n      const { requiredLocationsIds, missingLocationsIds } = selectLocationsIds(\n        state,\n        userTripsIds,\n      );\n\n      request.userLocations = {\n        modelName: 'locations',\n        observe: requiredLocationsIds,\n        condition: missingLocationsIds.length,\n        query: {\n          filter: { id: { comparator: 'in', value: missingLocationsIds } },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.VISITS]) {\n      const { year } = requirementsConfig[DATA_CHUNKS.USER.VISITS];\n      const actualYear = parseInt(\n        /^\\d{4}$/.test(String(year)) ? year : undefined,\n        10,\n      );\n      request.userVisits = {\n        modelName: 'visits',\n        observe: { userTripsIds, year },\n        condition: userTripsIds && userTripsIds.length,\n        query: {\n          filter: {\n            trip_id: { comparator: 'in', value: userTripsIds },\n            departure_date_time: actualYear\n              ? { comparator: '>=', value: `${actualYear}-01-01` }\n              : undefined,\n            arrival_date_time: actualYear\n              ? { comparator: '<', value: `${actualYear + 1}-01-01` }\n              : undefined,\n          },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n    if (requirementsConfig[DATA_CHUNKS.USER.RIDES]) {\n      request.userRides = {\n        modelName: 'rides',\n        observe: userTripsIds,\n        condition: userTripsIds && userTripsIds.length,\n        query: {\n          filter: { trip_id: { comparator: 'in', value: userTripsIds } },\n          navigation: { isDisabled: true },\n        },\n      };\n    }\n\n    return {\n      domain,\n      request,\n    };\n  };\n\n  const ProvisionedComponent = compose(\n    withRouter,\n    withProvision(mapStateToRequirements, mapStateToProps),\n  )(Component);\n\n  return props => <ProvisionedComponent {...props} />;\n};\n","import uniq from 'lodash/uniq';\nimport { selectDict, selectPlaceholder } from 'core/connection';\n\nexport const selectUserTripsIds = (state, domain) => {\n  const { data: userTripsIds } =\n    selectPlaceholder(state, `${domain}.userTrips`) || {};\n  return userTripsIds;\n};\n\nexport const selectLocationsIds = (state, userTripsIds) => {\n  const tripsDict = selectDict(state, 'trips');\n  const locationsDict = selectDict(state, 'locations');\n\n  const requiredLocationsIds = userTripsIds\n    ? uniq(\n        userTripsIds.reduce((memo, tripId) => {\n          const trip = tripsDict[tripId];\n          if (trip) {\n            const { originLocationId } = trip;\n            if (originLocationId) {\n              memo.push(originLocationId);\n            }\n          }\n          return memo;\n        }, []),\n      )\n    : [];\n  const missingLocationsIds = requiredLocationsIds.filter(\n    requiredLocationId => !locationsDict[requiredLocationId],\n  );\n  return { requiredLocationsIds, missingLocationsIds };\n};\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    flexGrow: '1',\n    flexBasis: '0',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  name,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      name={name}\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n    >\n      {hasNullOption && (\n        <MenuItem key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nconst valuePropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\nOptionsSelect.propTypes = {\n  name: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  hasNullOption: PropTypes.bool,\n  inputId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionRender: PropTypes.func,\n  options: PropTypes.arrayOf(valuePropTypes),\n  value: valuePropTypes,\n};\n\nOptionsSelect.defaultProps = {\n  name: undefined,\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.RELOCATION]: 'Переезд',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport compose from 'lodash/fp/compose';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest, {\n  QUERY_FORMATS,\n} from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { selectDict } from 'core/connection';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from '../localization';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n  originGeonameId: initialOriginGeonameId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n    originGeonameId: initialOriginGeonameId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n};\n\nconst TripEditCard = ({\n  classes,\n  locationsDict,\n  tripState: { tripType, tripName, originLocationId },\n  setTripState,\n}) => {\n  const setTripName = useCallback(\n    ({ target: { value: nextTripName } }) =>\n      setTripState({ tripName: nextTripName }),\n    [setTripState],\n  );\n  const setTripType = useCallback(\n    ({ target: { value: nextTripType } }) =>\n      setTripState({ tripType: nextTripType }),\n    [setTripState],\n  );\n  const setOriginGeoname = useCallback(\n    ({ geonameId: nextOriginGeonameId }) =>\n      setTripState({ originGeonameId: nextOriginGeonameId }),\n    [setTripState],\n  );\n\n  // origin locations is fetched, so name available through locations dict\n  const originLocation = locationsDict[originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <TextField\n          fullWidth={true}\n          label=\"Название поездки\"\n          value={tripName}\n          onChange={setTripName}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          classes={{ root: classes.suggest }}\n          textFieldProps={{\n            label: 'Старт из',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Пункт отправления...' }}\n          onChange={setOriginGeoname}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'geonames',\n            domain: 'tripEditCard.geoname',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип поездки\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={setTripType}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripType}\n        />\n      </div>\n    </>\n  );\n};\n\nTripEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nTripEditCard.defaultProps = {\n  className: undefined,\n};\n\nconst mapStateToProps = state => ({\n  locationsDict: selectDict(state, 'locations'),\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles),\n)(TripEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport TripEditCard, { useTripState } from './blocks/TripEditCard';\n\nconst TripEditDialog = ({ initialState, children, onSubmit: handleSubmit }) => {\n  const { tripState, setTripState } = useTripState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(tripState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      {React.cloneElement(children, { onClick: handleClickOpen })}\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Поездка</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование поездки</DialogContentText>\n            <TripEditCard tripState={tripState} setTripState={setTripState} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nTripEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nTripEditDialog.defaultProps = {};\n\nexport default TripEditDialog;\n","export default () => ({\n  tripType: null,\n});\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport Path from 'modules/utilities/routing/Path';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst resolveVisitIconComponent = visitType => {\n  switch (visitType) {\n    case 'Transit':\n      return TransferWithinAStationIcon;\n    case 'BaseCamp':\n      return DomainIcon;\n    case 'Relocation':\n      return LocalShippingIcon;\n    case 'Regular':\n    default:\n      return LocationCityIcon;\n  }\n};\n\nconst Visit = ({ visit, classes, locationsPath }) => {\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName, visitType, locationId } = visit;\n  const Icon = resolveVisitIconComponent(visitType);\n  return (\n    <div className={classes.container}>\n      {Icon && <Icon className={classes.icon} />}\n      <Link to={locationsPath.toUrl({ strLocationId: String(locationId) })}>\n        {locationName}\n      </Link>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  editIcon: {},\n};\n\nVisit.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  visit: PropTypes.shape(visitPropTypes),\n  locationsPath: PropTypes.instanceOf(Path).isRequired,\n};\n\nVisit.defaultProps = {\n  visit: {},\n};\n\nexport default withStyles(styles)(Visit);\n","export default (departureDateTime, arrivalDateTime) => {\n  const arrivalDateTimeString =\n    Boolean(arrivalDateTime) && arrivalDateTime.toLocaleDateString();\n  const departureDateTimeString =\n    Boolean(departureDateTime) && departureDateTime.toLocaleDateString();\n  if (arrivalDateTimeString === departureDateTimeString) {\n    return arrivalDateTimeString;\n  }\n  return `${departureDateTimeString}—${arrivalDateTimeString}`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DefaultSuggestionResolver = ({\n  inputValue,\n  sourceProps: { suggestions = [] } = {},\n  children: renderProp,\n}) => {\n  const lowerCaseInputValue = inputValue.toLowerCase();\n  return (\n    <React.Fragment>\n      {renderProp(\n        suggestions.filter(({ label }) =>\n          label.toLowerCase().includes(lowerCaseInputValue),\n        ),\n      )}\n    </React.Fragment>\n  );\n};\n\nDefaultSuggestionResolver.propTypes = {\n  inputValue: PropTypes.string.isRequired,\n  sourceProps: PropTypes.shape({\n    // eslint-disable-next-line react/forbid-prop-types\n    suggestions: PropTypes.array,\n  }).isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default DefaultSuggestionResolver;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default ({ inputProps, classes, ref, ...other }) => (\n  <TextField\n    InputProps={{\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput,\n      },\n      ...inputProps,\n    }}\n    {...other}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst DefaultSuggestionRender = ({\n  itemProps,\n  isHighlighted,\n  isSelected,\n  children: { label, details },\n}) => (\n  <MenuItem\n    {...itemProps}\n    selected={isHighlighted}\n    component=\"div\"\n    style={{\n      fontWeight: isSelected ? 500 : 400,\n    }}\n  >\n    <ListItemText primary={label} secondary={details} />\n  </MenuItem>\n);\n\nDefaultSuggestionRender.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  itemProps: PropTypes.object,\n  isHighlighted: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n};\n\nDefaultSuggestionRender.defaultProps = {\n  itemProps: undefined,\n  isHighlighted: false,\n  isSelected: false,\n};\n\nexport default DefaultSuggestionRender;\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport DefaultSuggestionsResolver from './components/DefaultSuggestionsResolver';\nimport DefaultInputRender from './components/DefaultInputRender';\nimport DefaultSuggestionRender from './components/DefaultSuggestionRender';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\nexport const createSuggestComponent = ({\n  SuggestionsResolver = DefaultSuggestionsResolver,\n  SuggestionItemComponent = DefaultSuggestionRender,\n  InputComponent = DefaultInputRender,\n} = {}) => ({\n  classes: customClasses,\n  sourceProps,\n  inputProps,\n  inputFieldProps,\n  ...downshiftProps\n}) => {\n  const classes = { ...useStyles(), ...customClasses };\n  return (\n    <div className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <InputComponent\n              fullWidth={true}\n              classes={classes}\n              inputProps={getInputProps(inputProps)}\n              {...inputFieldProps}\n            />\n            <div {...getMenuProps()}>\n              {isOpen && (\n                <Paper className={classes.paper} square={true}>\n                  <SuggestionsResolver\n                    inputValue={inputValue}\n                    sourceProps={sourceProps}\n                  >\n                    {resolvedSuggestions =>\n                      resolvedSuggestions.map((suggestion, index) => (\n                        <SuggestionItemComponent\n                          key={suggestion.label}\n                          itemProps={getItemProps({\n                            item: suggestion,\n                          })}\n                          isHighlighted={highlightedIndex === index}\n                          isSelected={\n                            Boolean(selectedItem) &&\n                            selectedItem.label === suggestion.label\n                          }\n                        >\n                          {suggestion}\n                        </SuggestionItemComponent>\n                      ))\n                    }\n                  </SuggestionsResolver>\n                </Paper>\n              )}\n            </div>\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n};\n\nexport default createSuggestComponent();\n/*\nconst x = (\n  <FetchContacts\n    searchValue={inputValue}\n    omitContacts={selectedContacts}\n    onLoaded={({ contacts }) => {\n      clearItems();\n      if (contacts) {\n        setHighlightedIndex(contacts.length ? 0 : null);\n        setItemCount(contacts.length);\n      }\n    }}\n  >\n    {({ loading, contacts, error }) => (\n      <div\n        {...css({\n          position: 'absolute',\n          backgroundColor: 'white',\n          width: 300,\n          maxHeight: 280,\n          overflow: 'scroll',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n          border: '1px solid rgba(0,0,0,.2)',\n        })}\n      >\n        {loading ? (\n          <div {...css({ padding: 10 })}>loading...</div>\n        ) : error ? (\n          <div {...css({ padding: 10 })}>error...</div>\n        ) : contacts.length ? (\n          <ContactList\n            highlightedIndex={highlightedIndex}\n            getItemProps={getItemProps}\n            contacts={contacts}\n          />\n        ) : (\n          <div {...css({ padding: 10 })}>no results...</div>\n        )}\n      </div>\n    )}\n  </FetchContacts>\n);\n\nclass FetchContacts extends React.Component {\n  static initialState = { loading: false, error: null, contacts: [] };\n  requestId = 0;\n  state = FetchContacts.initialState;\n  mounted = false;\n  reset(overrides) {\n    this.setState({ ...FetchContacts.initialState, ...overrides });\n  }\n  fetch = debounce(\n    () => {\n      if (!this.mounted) {\n        return;\n      }\n      const { omitContacts, limit } = this.props;\n      this.requestId++;\n      fetchContacts(this.props.searchValue, {\n        omitContacts,\n        limit,\n        requestId: this.requestId,\n      }).then(\n        ({ response: { data: contacts, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ contacts });\n            this.setState({ loading: false, contacts });\n          }\n        },\n        ({ response: { error, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ error });\n            this.setState({ loading: false, error });\n          }\n        },\n      );\n    },\n    { wait: 300 },\n  );\n  prepareFetch() {\n    this.reset({ loading: true });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    this.prepareFetch();\n    this.fetch();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.searchValue !== this.props.searchValue ||\n      prevProps.omitContacts !== this.props.omitContacts\n    ) {\n      this.prepareFetch();\n      this.fetch();\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\n*/\n","import withProvision from 'core/connection/withProvision';\nimport { createSuggestComponent } from '../Suggest';\n\nexport const QUERY_FORMATS = {\n  FILTER: 'FILTER',\n  SEARCH: 'SEARCH',\n};\n\nconst resolveQueryByFormat = ({\n  queryFormat,\n  filterField,\n  inputValue: searchString,\n  numberOfItemsToRequest,\n}) => {\n  const navigation = { pageSize: numberOfItemsToRequest };\n  switch (queryFormat) {\n    case QUERY_FORMATS.SEARCH:\n      return { navigation, search: searchString };\n    case QUERY_FORMATS.FILTER:\n    default:\n      return {\n        navigation,\n        filter: {\n          [filterField]: { comparator: '~', value: `%${searchString}%` },\n        },\n      };\n  }\n};\n\nconst Resolver = ({\n  sourceProps: {\n    filterField,\n    resolveDetails,\n    convertEntityToSuggestion = entity => ({\n      ...entity,\n      label: entity[filterField],\n      details: resolveDetails ? resolveDetails(entity) : undefined,\n    }),\n  } = {},\n  entities: { data: entitiesList = [] } = {},\n  children: renderProp,\n}) => renderProp((entitiesList || []).map(convertEntityToSuggestion));\n\nexport default createSuggestComponent({\n  SuggestionsResolver: withProvision(\n    (\n      state,\n      {\n        inputValue,\n        sourceProps: {\n          modelName,\n          domain,\n          filterField,\n          numberOfItemsToRequest,\n          queryFormat,\n        },\n      },\n    ) => ({\n      domain,\n      identity: inputValue,\n      request: {\n        entities: {\n          modelName,\n          observe: inputValue,\n          query: resolveQueryByFormat({\n            queryFormat,\n            filterField,\n            inputValue,\n            numberOfItemsToRequest,\n          }),\n        },\n      },\n      debounceRequest: 500,\n    }),\n  )(Resolver),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Path from 'modules/utilities/routing/Path';\nimport reactComponentPropType from 'modules/customPropTypes/reactComponentPropType';\nimport locationPropTypes from 'travel/models/locations/propTypes';\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n};\n\nconst Location = ({\n  location: { locationId, locationName = 'unknown' },\n  locationsPath,\n  Icon,\n  classes,\n}) => {\n  const locationNode = locationsPath ? (\n    <Link to={locationsPath.toUrl({ strLocationId: String(locationId) })}>\n      {locationName}\n    </Link>\n  ) : (\n    locationName\n  );\n  return (\n    <div className={classes.container}>\n      {Icon && <Icon className={classes.icon} />}\n      {locationNode}\n    </div>\n  );\n};\n\nLocation.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  location: PropTypes.shape(locationPropTypes),\n  Icon: reactComponentPropType,\n  locationsPath: PropTypes.instanceOf(Path),\n};\n\nLocation.defaultProps = {\n  location: {},\n  Icon: undefined,\n  locationsPath: undefined,\n};\n\nexport default withStyles(styles)(Location);\n","import { isValidElementType } from 'react-is';\n\nexport default (props, propName, componentName) => {\n  if (props[propName] && !isValidElementType(props[propName])) {\n    return new Error(\n      `Invalid prop '${propName}' supplied to '${componentName}': the prop is not a valid React component`,\n    );\n  }\n  return undefined;\n};\n"],"sourceRoot":""}