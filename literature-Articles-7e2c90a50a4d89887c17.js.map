{"version":3,"sources":["webpack:///./src/packages/literature/pages/Articles/Articles.jsx","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js"],"names":["ArticlesList","styled","div","_templateObject","withPaths","_ref","routes","namedPaths","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_3__","component","Link","to","literature","article","toUrl","slug","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","n","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_ButtonBase__WEBPACK_IMPORTED_MODULE_7__","_utils_helpers__WEBPACK_IMPORTED_MODULE_8__","Button","forwardRef","props","ref","children","classes","classNameProp","className","_props$color","color","_props$component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","_props$type","type","_props$variant","variant","other","contained","text","Object","root","outlined","outlinedPrimary","outlinedSecondary","textSecondary","containedSecondary","textPrimary","containedPrimary","concat","colorInherit","focusRipple","focusVisible","label","__webpack_exports__","theme","lineHeight","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","primary","transition","transitions","create","duration","short","&:hover","textDecoration","backgroundColor","action","hoverOpacity","@media (hover: none)","&$disabled","width","display","alignItems","justifyContent","main","secondary","border","getContrastText","grey","boxShadow","shadows","&$focusVisible","&:active","disabledBackground","A100","contrastText","dark","borderColor","sizeSmall","fontSize","pxToRem","sizeLarge","name"],"mappings":"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","file":"literature-Articles-7e2c90a50a4d89887c17.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { withPaths } from 'core/context/AppContext';\n\nconst ArticlesList = styled.div`\n  margin: 24px 0;\n`;\n\nexport default withPaths(({ namedPaths: routes }) => (\n  <ArticlesList>\n    <div>\n      <Button\n        component={Link}\n        to={routes.literature.article.toUrl({ slug: 'chaldini' })}\n      >\n        &laquo;Психология убеждения&raquo; Чалдини\n      </Button>\n    </div>\n    <div>\n      <Button\n        component={Link}\n        to={routes.literature.article.toUrl({ slug: 'blackSwan' })}\n      >\n        &laquo;Черный лебедь&raquo; Талеба\n      </Button>\n    </div>\n  </ArticlesList>\n));\n","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      lineHeight: 1.75\n    }, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 16px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '4px 8px',\n      minWidth: 64,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: '8px 24px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"type\", \"variant\"]);\n\n  var contained = variant === 'contained';\n  var text = variant === 'text';\n  var className = clsx(classes.root, classNameProp, variant === 'outlined' && [classes.outlined, color === 'primary' && classes.outlinedPrimary, color === 'secondary' && classes.outlinedSecondary], color === 'secondary' && [text && classes.textSecondary, contained && classes.containedSecondary], color === 'primary' && [text && classes.textPrimary, contained && classes.containedPrimary], text && classes.text, contained && classes.contained, size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, fullWidth && classes.fullWidth, color === 'inherit' && classes.colorInherit);\n  return React.createElement(ButtonBase, _extends({\n    className: className,\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);"],"sourceRoot":""}