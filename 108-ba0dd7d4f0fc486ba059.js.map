{"version":3,"file":"108-ba0dd7d4f0fc486ba059.js","mappings":"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","sources":["webpack://mine/./node_modules/blurhash/dist/esm/base83.js","webpack://mine/./node_modules/blurhash/dist/esm/utils.js","webpack://mine/./node_modules/blurhash/dist/esm/error.js","webpack://mine/./node_modules/blurhash/dist/esm/encode.js","webpack://mine/./src/packages/travel/pages/VisitPage/components/PhotosDropzone/blurhashWorker.js"],"sourcesContent":["const digitCharacters = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"#\",\n    \"$\",\n    \"%\",\n    \"*\",\n    \"+\",\n    \",\",\n    \"-\",\n    \".\",\n    \":\",\n    \";\",\n    \"=\",\n    \"?\",\n    \"@\",\n    \"[\",\n    \"]\",\n    \"^\",\n    \"_\",\n    \"{\",\n    \"|\",\n    \"}\",\n    \"~\"\n];\nexport const decode83 = (str) => {\n    let value = 0;\n    for (let i = 0; i < str.length; i++) {\n        const c = str[i];\n        const digit = digitCharacters.indexOf(c);\n        value = value * 83 + digit;\n    }\n    return value;\n};\nexport const encode83 = (n, length) => {\n    var result = \"\";\n    for (let i = 1; i <= length; i++) {\n        let digit = (Math.floor(n) / Math.pow(83, length - i)) % 83;\n        result += digitCharacters[Math.floor(digit)];\n    }\n    return result;\n};\n//# sourceMappingURL=base83.js.map","export const sRGBToLinear = (value) => {\n    let v = value / 255;\n    if (v <= 0.04045) {\n        return v / 12.92;\n    }\n    else {\n        return Math.pow((v + 0.055) / 1.055, 2.4);\n    }\n};\nexport const linearTosRGB = (value) => {\n    let v = Math.max(0, Math.min(1, value));\n    if (v <= 0.0031308) {\n        return Math.round(v * 12.92 * 255 + 0.5);\n    }\n    else {\n        return Math.round((1.055 * Math.pow(v, 1 / 2.4) - 0.055) * 255 + 0.5);\n    }\n};\nexport const sign = (n) => (n < 0 ? -1 : 1);\nexport const signPow = (val, exp) => sign(val) * Math.pow(Math.abs(val), exp);\n//# sourceMappingURL=utils.js.map","export class ValidationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"ValidationError\";\n        this.message = message;\n    }\n}\n//# sourceMappingURL=error.js.map","import { encode83 } from \"./base83\";\nimport { sRGBToLinear, signPow, linearTosRGB } from \"./utils\";\nimport { ValidationError } from \"./error\";\nconst bytesPerPixel = 4;\nconst multiplyBasisFunction = (pixels, width, height, basisFunction) => {\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    const bytesPerRow = width * bytesPerPixel;\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height; y++) {\n            const basis = basisFunction(x, y);\n            r +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 0 + y * bytesPerRow]);\n            g +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 1 + y * bytesPerRow]);\n            b +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 2 + y * bytesPerRow]);\n        }\n    }\n    let scale = 1 / (width * height);\n    return [r * scale, g * scale, b * scale];\n};\nconst encodeDC = (value) => {\n    const roundedR = linearTosRGB(value[0]);\n    const roundedG = linearTosRGB(value[1]);\n    const roundedB = linearTosRGB(value[2]);\n    return (roundedR << 16) + (roundedG << 8) + roundedB;\n};\nconst encodeAC = (value, maximumValue) => {\n    let quantR = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[0] / maximumValue, 0.5) * 9 + 9.5))));\n    let quantG = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[1] / maximumValue, 0.5) * 9 + 9.5))));\n    let quantB = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[2] / maximumValue, 0.5) * 9 + 9.5))));\n    return quantR * 19 * 19 + quantG * 19 + quantB;\n};\nconst encode = (pixels, width, height, componentX, componentY) => {\n    if (componentX < 1 || componentX > 9 || componentY < 1 || componentY > 9) {\n        throw new ValidationError(\"BlurHash must have between 1 and 9 components\");\n    }\n    if (width * height * 4 !== pixels.length) {\n        throw new ValidationError(\"Width and height must match the pixels array\");\n    }\n    let factors = [];\n    for (let y = 0; y < componentY; y++) {\n        for (let x = 0; x < componentX; x++) {\n            const normalisation = x == 0 && y == 0 ? 1 : 2;\n            const factor = multiplyBasisFunction(pixels, width, height, (i, j) => normalisation *\n                Math.cos((Math.PI * x * i) / width) *\n                Math.cos((Math.PI * y * j) / height));\n            factors.push(factor);\n        }\n    }\n    const dc = factors[0];\n    const ac = factors.slice(1);\n    let hash = \"\";\n    let sizeFlag = componentX - 1 + (componentY - 1) * 9;\n    hash += encode83(sizeFlag, 1);\n    let maximumValue;\n    if (ac.length > 0) {\n        let actualMaximumValue = Math.max(...ac.map(val => Math.max(...val)));\n        let quantisedMaximumValue = Math.floor(Math.max(0, Math.min(82, Math.floor(actualMaximumValue * 166 - 0.5))));\n        maximumValue = (quantisedMaximumValue + 1) / 166;\n        hash += encode83(quantisedMaximumValue, 1);\n    }\n    else {\n        maximumValue = 1;\n        hash += encode83(0, 1);\n    }\n    hash += encode83(encodeDC(dc), 4);\n    ac.forEach(factor => {\n        hash += encode83(encodeAC(factor, maximumValue), 2);\n    });\n    return hash;\n};\nexport default encode;\n//# sourceMappingURL=encode.js.map","import { encode } from 'blurhash';\n\nonmessage = ({\n  data: {\n    payload: { pixels, height, width, componentX, componentY },\n    uniqId,\n  },\n}) => {\n  const blurhash = encode(pixels, height, width, componentX, componentY);\n  postMessage({ payload: blurhash, uniqId });\n};\n"],"names":["digitCharacters","encode83","n","length","result","i","digit","Math","floor","pow","sRGBToLinear","value","v","linearTosRGB","max","min","round","signPow","val","exp","abs","ValidationError","Error","constructor","message","super","this","name","multiplyBasisFunction","pixels","width","height","basisFunction","r","g","b","bytesPerRow","x","y","basis","scale","onmessage","data","payload","componentX","componentY","uniqId","blurhash","factors","normalisation","factor","j","cos","PI","push","dc","ac","slice","maximumValue","hash","actualMaximumValue","map","quantisedMaximumValue","forEach","encodeAC","encode","postMessage"],"sourceRoot":""}