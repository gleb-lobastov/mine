{"version":3,"sources":["webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/packages/travel/components/common/WelcomeScreen/WelcomeScreen.jsx","webpack:///./src/packages/travel/models/trips/utils.js","webpack:///./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionsResolver.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultInputRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/components/DefaultSuggestionRender.jsx","webpack:///./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack:///./src/modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/localization.js","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/blocks/TripEditCard.jsx","webpack:///./src/packages/travel/components/models/trips/TripEditDialog/TripEditDialog.jsx","webpack:///./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack:///./src/modules/utilities/types/array.js","webpack:///./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack:///./src/packages/travel/components/models/locations/Location.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/localization.js","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/blocks/VisitEditCard.jsx","webpack:///./src/packages/travel/components/models/visits/VisitEditDialog/VisitEditDialog.jsx","webpack:///./src/packages/travel/components/models/visits/Visit.jsx","webpack:///./src/modules/components/muiExtended/DialogWithForm/DialogWithForm.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/localization.js","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/tieDateTimeFields.js","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/blocks/RideEditForm.jsx","webpack:///./src/packages/travel/components/models/rides/RideEditDialog/RideEditDialog.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/Ride.jsx","webpack:///./src/modules/utilities/dateTime/arrivalDepartureDateTimeToString.js","webpack:///./src/packages/travel/pages/TripsPage/blocks/DragHandler.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/VisitWithRides.jsx","webpack:///./src/packages/travel/pages/TripsPage/blocks/VisitCreator.jsx","webpack:///./src/packages/travel/models/visits/initialize.js","webpack:///./src/packages/travel/pages/TripsPage/blocks/Trip.jsx","webpack:///./src/packages/travel/pages/TripsPage/actionCreators.js","webpack:///./src/modules/utilities/algorithms/createOrderCalculator.js","webpack:///./src/packages/travel/pages/TripsPage/TripsPage.jsx","webpack:///./src/packages/travel/models/trips/initialize.js","webpack:///./src/packages/travel/pages/TripsPage/selectors.js"],"names":["withLoader","Component","props","_props$provision","provision","_props$provision$isPe","isPending","hasFallback","react_default","a","createElement","PlainLoader","__webpack_exports__","_len2","arguments","length","provisionParams","Array","_key2","ExtendableComponent","_len","funcsArray","_key","arg","reduceRight","composed","func","compose","provide","apply","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_3__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_3___default","modules_utilities_routing_Path__WEBPACK_IMPORTED_MODULE_4__","core_context_AppContext__WEBPACK_IMPORTED_MODULE_5__","core_context_AuthContext__WEBPACK_IMPORTED_MODULE_6__","WelcomeScreen","_ref","children","visitedUserAlias","match","params","userAlias","_ref$namedPaths","namedPaths","_ref$namedPaths$trave","travel","tripsPath","trips","authenticatedUserAlias","useAuthContext","Message","useCallback","path","toUrl","component","to","propTypes","PropTypes","node","shape","string","isRequired","instanceOf","Path","defaultProps","withRouter","withPaths","d","sortVisitsByTrips","groupAndSortVisitsByTrips","lodash_groupBy__WEBPACK_IMPORTED_MODULE_0__","lodash_groupBy__WEBPACK_IMPORTED_MODULE_0___default","lodash_mapValues__WEBPACK_IMPORTED_MODULE_1__","lodash_mapValues__WEBPACK_IMPORTED_MODULE_1___default","visitsList","sort","_ref2","orderInTrip","mapValues","groupBy","OptionsSelect","caption","classes","hasNullOption","inputId","name","handleChange","onChange","optionRender","options","value","className","container","InputLabel","shrink","htmlFor","Select","displayEmpty","input","Input","id","selectRoot","MenuItem","key","option","index","map","valuePropTypes","oneOfType","number","objectOf","bool","arrayOf","undefined","withStyles","display","flexGrow","flexBasis","DefaultSuggestionResolver","inputValue","_ref$sourceProps","sourceProps","_ref$sourceProps$sugg","suggestions","renderProp","lowerCaseInputValue","toLowerCase","Fragment","filter","label","includes","array","DefaultInputRender","inputProps","ref","other","_objectWithoutProperties","TextField","_extends","InputProps","_objectSpread","inputRef","root","inputRoot","inputInput","DefaultSuggestionRender","itemProps","isHighlighted","isSelected","_ref$children","details","DefaultSuggestionRender_extends","selected","style","fontWeight","ListItemText","primary","secondary","object","useStyles","makeStyles","theme","paper","position","zIndex","marginTop","spacing","left","right","defaultItemToString","item","createSuggestComponent","_ref2$SuggestionsReso","SuggestionsResolver","DefaultSuggestionsResolver","_ref2$SuggestionItemC","SuggestionItemComponent","_ref2$InputComponent","InputComponent","_ref3","customClasses","inputFieldProps","downshiftProps","Suggest_objectWithoutProperties","Suggest_objectSpread","downshift_esm","Suggest_extends","itemToString","_ref4","getInputProps","getItemProps","getMenuProps","highlightedIndex","isOpen","selectedItem","fullWidth","Paper","square","resolvedSuggestions","suggestion","Boolean","QUERY_FORMATS","resolveQueryByFormat","queryFormat","filterField","searchString","navigation","pageSize","numberOfItemsToRequest","search","ProvisionedSuggest_defineProperty","comparator","concat","withProvision","state","_ref3$sourceProps","modelName","domain","identity","request","entities","observe","query","debounceRequest","_ref2$sourceProps","resolveDetails","_ref2$sourceProps$con","convertEntityToSuggestion","entity","ProvisionedSuggest_objectSpread","_ref2$entities","_ref2$entities$data","data","entitiesList","TRIP_TYPE_NAMES","localization_defineProperty","_TRIP_TYPE_NAMES","TRIP_TYPES","LEISURE","BUSINESS","MIXED","RELOCATION","OTHER","renderTripType","tripType","useTripState","initialTripName","tripName","initialTripType","initialOriginLocationId","originLocationId","initialOriginGeonameId","originGeonameId","_useState2","_slicedToArray","useState","tripState","setTripState","tripStateUpdate","TripEditCard_objectSpread","TripEditCard","locationsDict","_ref3$tripState","setTripName","nextTripName","target","setTripType","_ref5","nextTripType","setOriginGeoname","_ref6","nextOriginGeonameId","geonameId","locationName","optionGroup","ProvisionedSuggest","suggest","textFieldProps","initialInputValue","placeholder","_ref8","countryName","regionName","join","muiExtended_OptionsSelect_OptionsSelect","Object","values","connect","selectDict","minWidth","TripEditDialog","initialState","handleSubmit","onSubmit","_useTripState","_React$useState2","TripEditDialog_slicedToArray","React","setOpen","handleClose","cloneElement","onClick","Dialog","transitionDuration","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","blocks_TripEditCard","DialogActions","Button","color","ridePropTypes","checkIsNodeNotSortable","event","element","dataset","sortHandler","parentNode","checkIsVisitsConnectedByRide","prevVisit","nextVisit","departureRideId","arrivalRideId","Location","_ref$location$locatio","location","Icon","icon","locationPropTypes","reactComponentPropType","marginRight","verticalAlign","VISIT_TYPE_NAMES","VisitEditDialog_localization_defineProperty","_VISIT_TYPE_NAMES","VISIT_TYPES","TRANSIT","REGULAR","BASE_CAMP","renderVisitType","visitType","useVisitState","initialVisitType","initialVisitComment","visitComment","initialLocationId","locationId","initialLocationName","initialGeonameId","VisitEditCard_slicedToArray","visitState","setVisitState","visitStateUpdate","VisitEditCard_objectSpread","VisitEditCard","_ref3$visitState","setVisitType","nextVisitType","setGeoname","nextGeonameId","setVisitComment","nextVisitComment","_ref7","multiline","rows","rowsMax","VisitEditDialog","_useVisitState","VisitEditDialog_slicedToArray","blocks_VisitEditCard","Visit","visit","handleVisitUpdate","onVisitUpdate","isEditable","TransferWithinAStationIcon","DomainIcon","LocalShippingIcon","LocationCityIcon","resolveVisitIconComponent","visits_VisitEditDialog_VisitEditDialog","updatedVisit","Visit_objectSpread","IconButton","data-sort-handler","size","variant","Edit_default","editIcon","visitPropTypes","DialogWithForm","description","handleReject","onReject","title","forwardedProps","DialogWithForm_objectWithoutProperties","formik_esm","DialogWithForm_extends","handleSubmitInternal","formikProps","RIDE_CLASSES_NAMES","RideEditDialog_localization_defineProperty","_RIDE_CLASSES_NAMES","RIDE_CLASSES","ECONOMY","COMFORT","FIRST","PRIVATE","RIDE_OCCUPATION_NAMES","_RIDE_OCCUPATION_NAME","RIDE_OCCUPATION","PASSENGER","STUFF","DRIVER","RIDE_TYPES_NAMES","_RIDE_TYPES_NAMES","RIDE_TYPES","SELF_DRIVE","SCHEDULED","CHARTER","TOUR","CARPOOL","HITCH_HIKING","DROP_OFF","VEHICLE_NAMES","_VEHICLE_NAMES","VEHICLE_TYPES","CAR","TRAIN","AIRCRAFT","BUS","MOTORHOME","LOCAL_TRAIN","FERRY","BIKE","BY_FEET","ROPEWAY","FUNICULAR","MOTORBIKE","TRUCK","ALL_TERRAIN_VEHICLE","TRAM","TROLLEY","TAXI","CITY_BUS","JITNEY","SUBWAY","PUBLIC_TRANSPORT","mixDateTime","dateFrom","timeFrom","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","tieDateTimeFields","_ref2$values","rideDeparture","rideArrival","isSameDay","checkIsSameDay","setDatesAndTimes","nextRideDeparture","nextRideArrival","beforeDateTime","afterDateTime","isInverted","checkIsAfter","actualNextRideDeparture","actualNextRideArrival","checkIsDatesEqual","setRideDeparture","setRideArrival","isSameDateField","nextIsSameDay","addDays","rideDepartureField","rideArrivalField","ORIGIN_OF_TRIP","renderVehicleType","vehicleType","renderRideType","rideType","renderRideClass","rideClass","renderRideOccupation","rideOccupation","RideEditForm","availableVisits","originLocation","_ref5$values","departureVisitId","arrivalVisitId","rideComment","departureDateTime","arrivalDateTime","availableVisitsIds","visitId","visitsDict","fromEntries","_tieDateTimeFields","renderVisit","RideEditForm_toConsumableArray","material_ui_pickers_esm","autoOk","format","FormControlLabel","control","Checkbox","checked","ampm","RideEditDialog","RideEditDialog_slicedToArray","muiExtended_DialogWithForm_DialogWithForm","initialValues","enableReinitialize","blocks_RideEditForm","locationsPropTypes","Ride","defaultArrivalVisitId","defaultDepartureVisitId","handleRideUpdate","onRideUpdate","ride","_ref$ride","rideId","showDetails","rideInitialState","initializeRide","CarIcon","TrainIcon","FlightIcon","BusIcon","VanIcon","BoatIcon","BikeIcon","WalkIcon","MotorcycleIcon","TruckIcon","TerrainIcon","TramIcon","LocalTaxiIcon","SubwayIcon","SeatIcon","CustomTransportIcon","resolveRideIconComponent","UnknownRideIcon","iconNode","rideNode","rides_RideEditDialog_RideEditDialog","editDialogTrigger","updatedRide","Ride_objectSpread","cls","ThumbUp_default","arrivalDateTimeString","toLocaleDateString","departureDateTimeString","arrivalDepartureDateTimeToString","DragHandler","DragHandle_default","dragHandler","cursor","marginLeft","top","transform","VisitWithRides","_cls","_cls2","_ref$visit","ridesDict","prevVisitId","nextVisitId","tripVisitsList","isSortable","isSorting","isArrivalRideMatch","isDepartureRideMatch","shouldWarnForArrivalRide","shouldWarnForDepartureRide","blocks_Ride","VisitWithRides_defineProperty","alwaysVisible","warning","visits_Visit","visibleOnlyOnHover","blocks_DragHandler","&:hover $editDialogTrigger","visibility","&:hover $visibleOnlyOnHover","VisitCreator","draggableContainer","SortableTrip","SortableContainer","SortableVisitWithRides","SortableElement","replaceWithNode","Trip_objectWithoutProperties","blocks_VisitWithRides","Trip_extends","Trip","handleVisitsOrderUpdate","onVisitsOrderUpdate","trip","_ref3$trip","tripId","tripIndex","handleTripUpdate","onTripUpdate","storyUrl","Trip_slicedToArray","setIsSorting","_useState4","addVisitControlIndex","setAddVisitControlIndex","VisitWithRidesComponent","visitsNodes","_toConsumableArray","slice","withItem","isItVisitCreatorControl","indexOfVisit","blocks_VisitCreator","newVisit","indexInCollection","collection","_resolveVisitsWindow2","overstepIndex","prevVisitIndex","nextVisitIndex","resolveVisitsWindow","wrappedVisitsNodes","onSortEnd","oldIndex","newIndex","shouldCancelStart","updateBeforeSortStart","lockAxis","lockToContainerEdges","originLocationNode","locations_Location","IconHome","tripEditControlsNode","trips_TripEditDialog_TripEditDialog","updatedTrip","Trip_objectSpread","lastVisit","lastButOneVisit","rideToOriginId","recentVisitId","isRelocation","rideToOriginNode","hasStory","some","departureRideComment","react_router_dom","tripPropTypes","resolveOrder","calcOrder","orderResolver","prevOrder","nextOrder","Math","random","memoizedGroupAndSortVisitsByTrips","memoizeByLastArgs","TripsPage","isTripsComplete","_ref$trips","_ref$trips$data","tripsList","_ref$visits","visits","_ref$visits$data","invalidateRequest","_useAuthContext","isAuthenticated","body","submitOrderInTrip","submitRide","submitTrip","then","actionCreators_objectSpread","submitVisit","addTripNode","useMemo","shouldShowLinkToTrips","visitsGroupedByTrips","blocks_Trip","tripStory","strTripId","String","pathsPropTypes","ridesPropTypes","userTripsIds","selectProvisionStatus","fallback","selectUserTripsIds","_selectLocationsIds","tripsDict","requiredLocationsIds","uniq","reduce","memo","push","missingLocationsIds","requiredLocationId","selectLocationsIds","isDisabled","locations","isNoop","rides","trip_id","isComplete"],"mappings":"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","file":"travel-Trips-d346b51951211d3dd190.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isPending = true, hasFallback } = {} } = props;\n  if (isPending && !hasFallback) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport compose from 'lodash/fp/compose';\nimport Path from 'modules/utilities/routing/Path';\nimport { withPaths } from 'core/context/AppContext';\nimport { useAuthContext } from 'core/context/AuthContext';\n\nconst WelcomeScreen = ({\n  children,\n  match: {\n    params: { userAlias: visitedUserAlias },\n  },\n  namedPaths: { travel: { trips: tripsPath } = {} } = {},\n}) => {\n  const { userAlias: authenticatedUserAlias } = useAuthContext();\n  if (visitedUserAlias !== authenticatedUserAlias) {\n    return (\n      <span>Пользователь пока еще не внес информацию о своих поездках</span>\n    );\n  }\n  const Message = useCallback(\n    () => (\n      <div>\n        <span>\n          Нам пока ничего не известно о ваших путешествиях. Но очень интересно\n          узнать. Создайте вашу первую поездку, а мы подготовим по ней отчет\n        </span>\n        {children}\n      </div>\n    ),\n    [children],\n  );\n  return (\n    <Switch>\n      <Route\n        path={tripsPath.toUrl({ userAlias: authenticatedUserAlias })}\n        component={Message}\n      />\n      <Redirect to={tripsPath.toUrl({ userAlias: authenticatedUserAlias })} />\n    </Switch>\n  );\n};\n\nWelcomeScreen.propTypes = {\n  children: PropTypes.node,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ userAlias: PropTypes.string }),\n  }).isRequired,\n  namedPaths: PropTypes.shape({\n    travel: PropTypes.shape({ trips: PropTypes.instanceOf(Path) }),\n  }).isRequired,\n};\n\nWelcomeScreen.defaultProps = {\n  children: null,\n};\n\nexport default compose(\n  withRouter,\n  withPaths,\n)(WelcomeScreen);\n","import groupBy from 'lodash/groupBy';\nimport mapValues from 'lodash/mapValues';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n\nexport const groupAndSortVisitsByTrips = visitsList =>\n  mapValues(groupBy(visitsList, 'tripId'), sortVisitsByTrips);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    flexGrow: '1',\n    flexBasis: '0',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  name,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      name={name}\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n    >\n      {hasNullOption && (\n        <MenuItem key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nconst valuePropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\nOptionsSelect.propTypes = {\n  name: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  hasNullOption: PropTypes.bool,\n  inputId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionRender: PropTypes.func,\n  options: PropTypes.arrayOf(valuePropTypes),\n  value: valuePropTypes,\n};\n\nOptionsSelect.defaultProps = {\n  name: undefined,\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DefaultSuggestionResolver = ({\n  inputValue,\n  sourceProps: { suggestions = [] } = {},\n  children: renderProp,\n}) => {\n  const lowerCaseInputValue = inputValue.toLowerCase();\n  return (\n    <React.Fragment>\n      {renderProp(\n        suggestions.filter(({ label }) =>\n          label.toLowerCase().includes(lowerCaseInputValue),\n        ),\n      )}\n    </React.Fragment>\n  );\n};\n\nDefaultSuggestionResolver.propTypes = {\n  inputValue: PropTypes.string.isRequired,\n  sourceProps: PropTypes.shape({\n    // eslint-disable-next-line react/forbid-prop-types\n    suggestions: PropTypes.array,\n  }).isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default DefaultSuggestionResolver;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default ({ inputProps, classes, ref, ...other }) => (\n  <TextField\n    InputProps={{\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput,\n      },\n      ...inputProps,\n    }}\n    {...other}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst DefaultSuggestionRender = ({\n  itemProps,\n  isHighlighted,\n  isSelected,\n  children: { label, details },\n}) => (\n  <MenuItem\n    {...itemProps}\n    selected={isHighlighted}\n    component=\"div\"\n    style={{\n      fontWeight: isSelected ? 500 : 400,\n    }}\n  >\n    <ListItemText primary={label} secondary={details} />\n  </MenuItem>\n);\n\nDefaultSuggestionRender.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  itemProps: PropTypes.object,\n  isHighlighted: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n};\n\nDefaultSuggestionRender.defaultProps = {\n  itemProps: undefined,\n  isHighlighted: false,\n  isSelected: false,\n};\n\nexport default DefaultSuggestionRender;\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport DefaultSuggestionsResolver from './components/DefaultSuggestionsResolver';\nimport DefaultInputRender from './components/DefaultInputRender';\nimport DefaultSuggestionRender from './components/DefaultSuggestionRender';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\nexport const createSuggestComponent = ({\n  SuggestionsResolver = DefaultSuggestionsResolver,\n  SuggestionItemComponent = DefaultSuggestionRender,\n  InputComponent = DefaultInputRender,\n} = {}) => ({\n  classes: customClasses,\n  sourceProps,\n  inputProps,\n  inputFieldProps,\n  ...downshiftProps\n}) => {\n  const classes = { ...useStyles(), ...customClasses };\n  return (\n    <div className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <InputComponent\n              fullWidth={true}\n              classes={classes}\n              inputProps={getInputProps(inputProps)}\n              {...inputFieldProps}\n            />\n            <div {...getMenuProps()}>\n              {isOpen && (\n                <Paper className={classes.paper} square={true}>\n                  <SuggestionsResolver\n                    inputValue={inputValue}\n                    sourceProps={sourceProps}\n                  >\n                    {resolvedSuggestions =>\n                      resolvedSuggestions.map((suggestion, index) => (\n                        <SuggestionItemComponent\n                          key={suggestion.label}\n                          itemProps={getItemProps({\n                            item: suggestion,\n                          })}\n                          isHighlighted={highlightedIndex === index}\n                          isSelected={\n                            Boolean(selectedItem) &&\n                            selectedItem.label === suggestion.label\n                          }\n                        >\n                          {suggestion}\n                        </SuggestionItemComponent>\n                      ))\n                    }\n                  </SuggestionsResolver>\n                </Paper>\n              )}\n            </div>\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n};\n\nexport default createSuggestComponent();\n/*\nconst x = (\n  <FetchContacts\n    searchValue={inputValue}\n    omitContacts={selectedContacts}\n    onLoaded={({ contacts }) => {\n      clearItems();\n      if (contacts) {\n        setHighlightedIndex(contacts.length ? 0 : null);\n        setItemCount(contacts.length);\n      }\n    }}\n  >\n    {({ loading, contacts, error }) => (\n      <div\n        {...css({\n          position: 'absolute',\n          backgroundColor: 'white',\n          width: 300,\n          maxHeight: 280,\n          overflow: 'scroll',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n          border: '1px solid rgba(0,0,0,.2)',\n        })}\n      >\n        {loading ? (\n          <div {...css({ padding: 10 })}>loading...</div>\n        ) : error ? (\n          <div {...css({ padding: 10 })}>error...</div>\n        ) : contacts.length ? (\n          <ContactList\n            highlightedIndex={highlightedIndex}\n            getItemProps={getItemProps}\n            contacts={contacts}\n          />\n        ) : (\n          <div {...css({ padding: 10 })}>no results...</div>\n        )}\n      </div>\n    )}\n  </FetchContacts>\n);\n\nclass FetchContacts extends React.Component {\n  static initialState = { loading: false, error: null, contacts: [] };\n  requestId = 0;\n  state = FetchContacts.initialState;\n  mounted = false;\n  reset(overrides) {\n    this.setState({ ...FetchContacts.initialState, ...overrides });\n  }\n  fetch = debounce(\n    () => {\n      if (!this.mounted) {\n        return;\n      }\n      const { omitContacts, limit } = this.props;\n      this.requestId++;\n      fetchContacts(this.props.searchValue, {\n        omitContacts,\n        limit,\n        requestId: this.requestId,\n      }).then(\n        ({ response: { data: contacts, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ contacts });\n            this.setState({ loading: false, contacts });\n          }\n        },\n        ({ response: { error, requestId } }) => {\n          if (this.mounted && requestId === this.requestId) {\n            this.props.onLoaded({ error });\n            this.setState({ loading: false, error });\n          }\n        },\n      );\n    },\n    { wait: 300 },\n  );\n  prepareFetch() {\n    this.reset({ loading: true });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    this.prepareFetch();\n    this.fetch();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.searchValue !== this.props.searchValue ||\n      prevProps.omitContacts !== this.props.omitContacts\n    ) {\n      this.prepareFetch();\n      this.fetch();\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\n*/\n","import withProvision from 'core/connection/withProvision';\nimport { createSuggestComponent } from '../Suggest';\n\nexport const QUERY_FORMATS = {\n  FILTER: 'FILTER',\n  SEARCH: 'SEARCH',\n};\n\nconst resolveQueryByFormat = ({\n  queryFormat,\n  filterField,\n  inputValue: searchString,\n  numberOfItemsToRequest,\n}) => {\n  const navigation = { pageSize: numberOfItemsToRequest };\n  switch (queryFormat) {\n    case QUERY_FORMATS.SEARCH:\n      return { navigation, search: searchString };\n    case QUERY_FORMATS.FILTER:\n    default:\n      return {\n        navigation,\n        filter: {\n          [filterField]: { comparator: '~', value: `%${searchString}%` },\n        },\n      };\n  }\n};\n\nconst Resolver = ({\n  sourceProps: {\n    filterField,\n    resolveDetails,\n    convertEntityToSuggestion = entity => ({\n      ...entity,\n      label: entity[filterField],\n      details: resolveDetails ? resolveDetails(entity) : undefined,\n    }),\n  } = {},\n  entities: { data: entitiesList = [] } = {},\n  children: renderProp,\n}) => renderProp((entitiesList || []).map(convertEntityToSuggestion));\n\nexport default createSuggestComponent({\n  SuggestionsResolver: withProvision(\n    (\n      state,\n      {\n        inputValue,\n        sourceProps: {\n          modelName,\n          domain,\n          filterField,\n          numberOfItemsToRequest,\n          queryFormat,\n        },\n      },\n    ) => ({\n      domain,\n      identity: inputValue,\n      request: {\n        entities: {\n          modelName,\n          observe: inputValue,\n          query: resolveQueryByFormat({\n            queryFormat,\n            filterField,\n            inputValue,\n            numberOfItemsToRequest,\n          }),\n        },\n      },\n      debounceRequest: 500,\n    }),\n  )(Resolver),\n});\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.RELOCATION]: 'Переезд',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport compose from 'lodash/fp/compose';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest, {\n  QUERY_FORMATS,\n} from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { selectDict } from 'core/connection';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from '../localization';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n  originGeonameId: initialOriginGeonameId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n    originGeonameId: initialOriginGeonameId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n};\n\nconst TripEditCard = ({\n  classes,\n  locationsDict,\n  tripState: { tripType, tripName, originLocationId },\n  setTripState,\n}) => {\n  const setTripName = useCallback(\n    ({ target: { value: nextTripName } }) =>\n      setTripState({ tripName: nextTripName }),\n    [setTripState],\n  );\n  const setTripType = useCallback(\n    ({ target: { value: nextTripType } }) =>\n      setTripState({ tripType: nextTripType }),\n    [setTripState],\n  );\n  const setOriginGeoname = useCallback(\n    ({ geonameId: nextOriginGeonameId }) =>\n      setTripState({ originGeonameId: nextOriginGeonameId }),\n    [setTripState],\n  );\n\n  // origin locations is fetched, so name available through locations dict\n  const originLocation = locationsDict[originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <TextField\n          fullWidth={true}\n          label=\"Название поездки\"\n          value={tripName}\n          onChange={setTripName}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          classes={{ root: classes.suggest }}\n          textFieldProps={{\n            label: 'Старт из',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Пункт отправления...' }}\n          onChange={setOriginGeoname}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'geonames',\n            domain: 'tripEditCard.geoname',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип поездки\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={setTripType}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripType}\n        />\n      </div>\n    </>\n  );\n};\n\nTripEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nTripEditCard.defaultProps = {\n  className: undefined,\n};\n\nconst mapStateToProps = state => ({\n  locationsDict: selectDict(state, 'locations'),\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles),\n)(TripEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport TripEditCard, { useTripState } from './blocks/TripEditCard';\n\nconst TripEditDialog = ({ initialState, children, onSubmit: handleSubmit }) => {\n  const { tripState, setTripState } = useTripState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(tripState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      {React.cloneElement(children, { onClick: handleClickOpen })}\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Поездка</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование поездки</DialogContentText>\n            <TripEditCard tripState={tripState} setTripState={setTripState} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nTripEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nTripEditDialog.defaultProps = {};\n\nexport default TripEditDialog;\n","// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    if (element.dataset && element.dataset.sortHandler === 'enabled') {\n      return false;\n    }\n    element = element.parentNode;\n  }\n  return true;\n};\n","export const withItem = (array, item, index = array.length) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index),\n];\n\nexport const withoutItem = (array, index) => [\n  ...array.slice(0, index),\n  ...array.slice(index + 1),\n];\n\nexport const replaceItem = (array, index, item) => [\n  ...array.slice(0, index),\n  item,\n  ...array.slice(index + 1),\n];\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport reactComponentPropType from 'modules/customPropTypes/reactComponentPropType';\nimport locationPropTypes from 'travel/models/locations/propTypes';\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n};\n\nconst Location = ({\n  location: { locationName = 'unknown' },\n  Icon,\n  classes,\n}) => (\n  <div className={classes.container}>\n    {Icon && <Icon className={classes.icon} />}\n    {locationName}\n  </div>\n);\n\nLocation.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  location: PropTypes.shape(locationPropTypes),\n  Icon: reactComponentPropType,\n};\n\nLocation.defaultProps = {\n  location: {},\n  Icon: undefined,\n};\n\nexport default withStyles(styles)(Location);\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport ProvisionedSuggest, {\n  QUERY_FORMATS,\n} from 'modules/components/muiExtended/Suggest/modifications/ProvisionedSuggest';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { VISIT_TYPE_NAMES } from '../localization';\n\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nexport const useVisitState = ({\n  visitType: initialVisitType,\n  visitComment: initialVisitComment,\n  locationId: initialLocationId,\n  locationName: initialLocationName,\n  geonameId: initialGeonameId,\n}) => {\n  const [visitState, setVisitState] = useState({\n    visitComment: initialVisitComment,\n    visitType: initialVisitType,\n    locationId: initialLocationId,\n    locationName: initialLocationName,\n    geonameId: initialGeonameId,\n  });\n\n  return {\n    visitState,\n    setVisitState: visitStateUpdate =>\n      setVisitState({ ...visitState, ...visitStateUpdate }),\n  };\n};\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n};\n\nconst VisitEditCard = ({\n  classes,\n  visitState: { visitType, visitComment, locationName },\n  setVisitState,\n}) => {\n  const setVisitType = useCallback(\n    ({ target: { value: nextVisitType } }) =>\n      setVisitState({ visitType: nextVisitType }),\n    [setVisitState],\n  );\n  const setGeoname = useCallback(\n    ({ geonameId: nextGeonameId }) =>\n      setVisitState({ geonameId: nextGeonameId }),\n    [setVisitState],\n  );\n  const setVisitComment = useCallback(\n    ({ target: { value: nextVisitComment } }) =>\n      setVisitState({ visitComment: nextVisitComment }),\n    [setVisitState],\n  );\n\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <ProvisionedSuggest\n          classes={{ root: classes.suggest }}\n          textFieldProps={{\n            label: 'Место посещения',\n          }}\n          initialInputValue={locationName}\n          inputProps={{ placeholder: 'Населенный пункт...' }}\n          onChange={setGeoname}\n          sourceProps={{\n            filterField: 'locationName',\n            modelName: 'geonames',\n            domain: 'visitEditCard.geoname',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          onChange={setVisitType}\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n          value={visitType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          label=\"Комментарий\"\n          fullWidth={true}\n          value={visitComment}\n          onChange={setVisitComment}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </div>\n    </>\n  );\n};\n\nVisitEditCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nVisitEditCard.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(VisitEditCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport VisitEditCard, { useVisitState } from './blocks/VisitEditCard';\n\nconst VisitEditDialog = ({\n  initialState,\n  children,\n  onSubmit: handleSubmit,\n}) => {\n  const { visitState, setVisitState } = useVisitState(initialState);\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = () => {\n    handleSubmit(visitState);\n    handleClose(false);\n  };\n\n  return (\n    <>\n      {React.cloneElement(children, { onClick: handleClickOpen })}\n      {isOpen && (\n        <Dialog\n          transitionDuration={500}\n          open={isOpen}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Посещение</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Редактирование посещения</DialogContentText>\n            <VisitEditCard\n              visitState={visitState}\n              setVisitState={setVisitState}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitInternal} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nVisitEditDialog.propTypes = {\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\nVisitEditDialog.defaultProps = {};\n\nexport default VisitEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisitEditDialog from 'travel/components/models/visits/VisitEditDialog';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst resolveVisitIconComponent = visitType => {\n  switch (visitType) {\n    case 'Transit':\n      return TransferWithinAStationIcon;\n    case 'BaseCamp':\n      return DomainIcon;\n    case 'Relocation':\n      return LocalShippingIcon;\n    case 'Regular':\n    default:\n      return LocationCityIcon;\n  }\n};\n\nconst Visit = ({\n  visit,\n  onVisitUpdate: handleVisitUpdate,\n  classes,\n  isEditable,\n}) => {\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName, visitType } = visit;\n  const Icon = resolveVisitIconComponent(visitType);\n  return (\n    <div className={classes.container}>\n      {Icon && <Icon className={classes.icon} />}\n      {locationName}\n      {isEditable && (\n        <VisitEditDialog\n          initialState={visit}\n          onSubmit={updatedVisit =>\n            handleVisitUpdate({ ...visit, ...updatedVisit })\n          }\n        >\n          <IconButton\n            data-sort-handler=\"disabled\"\n            size=\"small\"\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            <EditIcon className={classes.editIcon} />\n          </IconButton>\n        </VisitEditDialog>\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  editIcon: {},\n};\n\nVisit.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isEditable: PropTypes.bool,\n  onVisitUpdate: PropTypes.func.isRequired,\n  visit: PropTypes.shape(visitPropTypes),\n};\n\nVisit.defaultProps = {\n  isEditable: false,\n  visit: {},\n};\n\nexport default withStyles(styles)(Visit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst DialogWithForm = ({\n  children,\n  description,\n  onReject: handleReject,\n  onSubmit: handleSubmit,\n  title,\n  ...forwardedProps\n}) => (\n  <Formik {...forwardedProps} onSubmit={handleSubmit}>\n    {({ handleSubmit: handleSubmitInternal, ...formikProps }) => (\n      <Dialog\n        transitionDuration={500}\n        open={true}\n        onClose={handleReject}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{description}</DialogContentText>\n          {React.cloneElement(children, formikProps)}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleReject} color=\"secondary\">\n            Отмена\n          </Button>\n          <Button onClick={handleSubmitInternal} color=\"primary\">\n            Сохранить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )}\n  </Formik>\n);\n\nDialogWithForm.propTypes = {\n  children: PropTypes.node.isRequired,\n  description: PropTypes.node,\n  onReject: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.node,\n};\nDialogWithForm.defaultProps = {\n  description: undefined,\n  title: undefined,\n};\n\nexport default DialogWithForm;\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n","import checkIsSameDay from 'date-fns/isSameDay';\nimport checkIsDatesEqual from 'date-fns/isEqual';\nimport addDays from 'date-fns/addDays';\nimport checkIsAfter from 'date-fns/isAfter';\n\nconst checkIsPeriodInverted = (beforeDateTime, afterDateTime) =>\n  checkIsAfter(beforeDateTime, afterDateTime);\n\nconst mixDateTime = ({ dateFrom, timeFrom }) =>\n  new Date(\n    dateFrom.getFullYear(),\n    dateFrom.getMonth(),\n    dateFrom.getDate(),\n    timeFrom.getHours(),\n    timeFrom.getMinutes(),\n    timeFrom.getSeconds(),\n  );\n\nexport default ({ values: { rideDeparture, rideArrival }, handleChange }) => {\n  const setRideDeparture = nextRideDeparture =>\n    handleChange('departureDateTime')(nextRideDeparture);\n  const setRideArrival = nextRideArrival =>\n    handleChange('arrivalDateTime')(nextRideArrival);\n\n  const isSameDay = checkIsSameDay(rideDeparture, rideArrival);\n\n  const setDatesAndTimes = (nextRideDeparture, nextRideArrival) => {\n    const isInverted = checkIsPeriodInverted(\n      nextRideDeparture,\n      nextRideArrival,\n    );\n    const actualNextRideDeparture = isInverted\n      ? nextRideArrival\n      : nextRideDeparture;\n\n    const actualNextRideArrival = isInverted\n      ? nextRideDeparture\n      : nextRideArrival;\n\n    if (!checkIsDatesEqual(rideDeparture, actualNextRideDeparture)) {\n      setRideDeparture(actualNextRideDeparture);\n    }\n    if (!checkIsDatesEqual(rideArrival, actualNextRideArrival)) {\n      setRideArrival(actualNextRideArrival);\n    }\n  };\n\n  const handleIsSameDayFlagChange = nextIsSameDay => {\n    if (Boolean(isSameDay) !== Boolean(nextIsSameDay)) {\n      setDatesAndTimes(\n        rideDeparture,\n        mixDateTime({\n          dateFrom: nextIsSameDay ? rideDeparture : addDays(rideDeparture, 1),\n          timeFrom: rideArrival,\n        }),\n      );\n    }\n  };\n\n  const handleRideDepartureChange = nextRideDeparture => {\n    const nextRideArrival = isSameDay\n      ? mixDateTime({\n          timeFrom: rideArrival,\n          dateFrom: nextRideDeparture,\n        })\n      : rideArrival;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  const handleRideArrivalChange = nextRideArrival => {\n    const nextRideDeparture = isSameDay\n      ? mixDateTime({\n          timeFrom: rideDeparture,\n          dateFrom: nextRideArrival,\n        })\n      : rideDeparture;\n    setDatesAndTimes(nextRideDeparture, nextRideArrival);\n  };\n\n  return {\n    isSameDateField: {\n      value: isSameDay,\n      onChange: handleIsSameDayFlagChange,\n    },\n    rideDepartureField: {\n      value: rideDeparture,\n      onChange: handleRideDepartureChange,\n    },\n    rideArrivalField: {\n      value: rideArrival,\n      onChange: handleRideArrivalChange,\n    },\n  };\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { DatePicker, TimePicker } from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from '../localization';\nimport tieDateTimeFields from '../tieDateTimeFields';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nconst styles = {\n  optionGroup: {\n    display: 'flex',\n  },\n  option: {\n    flexGrow: '1',\n  },\n};\n\nconst RideEditForm = ({\n  classes,\n  availableVisits,\n  originLocation,\n  values: {\n    departureVisitId,\n    arrivalVisitId,\n    vehicleType,\n    rideType,\n    rideComment,\n    rideClass,\n    rideOccupation,\n    departureDateTime,\n    arrivalDateTime,\n  },\n  handleChange,\n}) => {\n  const availableVisitsIds = availableVisits.map(({ visitId }) => visitId);\n  const visitsDict = Object.fromEntries(\n    availableVisits.map(visit => {\n      const { visitId } = visit;\n      return [visitId, visit];\n    }),\n  );\n\n  const {\n    rideArrivalField,\n    rideDepartureField,\n    isSameDateField,\n  } = tieDateTimeFields({\n    values: {\n      rideDeparture: departureDateTime,\n      rideArrival: arrivalDateTime,\n    },\n    handleChange,\n  });\n\n  const renderVisit = useCallback(\n    ({ option: visitId }) => {\n      if (visitId === ORIGIN_OF_TRIP) {\n        const { locationName } = originLocation;\n        return locationName;\n      }\n      const visit = visitsDict[visitId];\n      if (!visit) {\n        return 'Не указано';\n      }\n      const { locationName } = visit;\n      return locationName;\n    },\n    [visitsDict],\n  );\n  return (\n    <>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"departureVisitId\"\n          caption=\"Отправление из\"\n          inputId=\"RideEditCard-departureVisitId\"\n          optionRender={renderVisit}\n          hasNullOption={false}\n          options={[ORIGIN_OF_TRIP, ...availableVisitsIds]}\n          value={departureVisitId}\n          onChange={handleChange}\n        />\n        <OptionsSelect\n          name=\"arrivalVisitId\"\n          caption=\"Прибытие в\"\n          inputId=\"RideEditCard-arrivalVisitId\"\n          hasNullOption={false}\n          optionRender={renderVisit}\n          options={[...availableVisitsIds, ORIGIN_OF_TRIP]}\n          onChange={handleChange}\n          value={arrivalVisitId}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"vehicleType\"\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          onChange={handleChange}\n          value={vehicleType}\n        />\n        <OptionsSelect\n          name=\"rideType\"\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          onChange={handleChange}\n          value={rideType}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <OptionsSelect\n          name=\"rideClass\"\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          onChange={handleChange}\n          value={rideClass}\n        />\n        <OptionsSelect\n          name=\"rideOccupation\"\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          onChange={handleChange}\n          value={rideOccupation}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <DatePicker\n          name=\"departureDateTime\"\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n          format=\"eeeeee, d MMMM yyyy\"\n        />\n        {isSameDateField.value ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSameDateField.value}\n                onChange={event =>\n                  isSameDateField.onChange(event.target.checked)\n                }\n              />\n            }\n            label=\"Прибытие в тот же день\"\n          />\n        ) : (\n          <DatePicker\n            name=\"arrivalDateTime\"\n            autoOk={true}\n            className={classes.option}\n            label=\"Дата прибытия\"\n            value={rideArrivalField.value}\n            onChange={rideArrivalField.onChange}\n            format=\"eeeeee, d MMMM yyyy\"\n          />\n        )}\n      </div>\n      <div className={classes.optionGroup}>\n        <TimePicker\n          name=\"departureDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          value={rideDepartureField.value}\n          onChange={rideDepartureField.onChange}\n        />\n        <TimePicker\n          name=\"arrivalDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          value={rideArrivalField.value}\n          onChange={rideArrivalField.onChange}\n        />\n      </div>\n      <div className={classes.optionGroup}>\n        <TextField\n          name=\"rideComment\"\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={handleChange}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </div>\n    </>\n  );\n};\n\nRideEditForm.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nRideEditForm.defaultProps = {\n  className: undefined,\n};\n\nexport default withStyles(styles)(RideEditForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogWithForm from 'modules/components/muiExtended/DialogWithForm';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport RideEditForm from './blocks/RideEditForm';\n\nconst RideEditDialog = ({\n  availableVisits,\n  initialState,\n  children,\n  className,\n  onSubmit: handleSubmit,\n  originLocation,\n}) => {\n  const [isOpen, setOpen] = React.useState(false);\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmitInternal = values => {\n    handleSubmit(values);\n    handleClose(false);\n  };\n\n  return (\n    <div className={className}>\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        {children}\n      </IconButton>\n      {isOpen && (\n        <DialogWithForm\n          initialValues={initialState}\n          enableReinitialize={true}\n          onSubmit={handleSubmitInternal}\n          onReject={handleClose}\n          title=\"Транспорт\"\n          description=\"Как вы добрались в место назначения и как уехали из него?\"\n        >\n          <RideEditForm\n            availableVisits={availableVisits}\n            originLocation={originLocation}\n          />\n        </DialogWithForm>\n      )}\n    </div>\n  );\n};\n\nRideEditDialog.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  initialState: PropTypes.shape(ridePropTypes).isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n};\nRideEditDialog.defaultProps = {\n  className: undefined,\n  availableVisits: [],\n};\n\nexport default RideEditDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport arrivalDepartureDateTimeToString from 'modules/utilities/dateTime/arrivalDepartureDateTimeToString';\nimport { VEHICLE_TYPES, RIDE_TYPES } from 'travel/models/rides/consts';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport initializeRide from 'travel/models/rides/initialize';\nimport RideEditDialog from 'travel/components/models/rides/RideEditDialog';\n\nconst resolveRideIconComponent = vehicleType => {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n    default:\n      return CustomTransportIcon;\n  }\n};\n\nexport const styles = {\n  container: {\n    display: 'inline-block',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  editDialogTrigger: {\n    display: 'inline-block',\n  },\n};\n\nconst Ride = ({\n  availableVisits,\n  originLocation,\n  classes,\n  className,\n  defaultArrivalVisitId,\n  defaultDepartureVisitId,\n  isEditable,\n  onRideUpdate: handleRideUpdate,\n  ride,\n  ride: { rideId, vehicleType, rideType, arrivalDateTime, departureDateTime },\n  showDetails,\n}) => {\n  const rideInitialState = rideId\n    ? ride\n    : initializeRide({\n        defaultDepartureVisitId,\n        defaultArrivalVisitId,\n      });\n\n  const Icon = rideId ? resolveRideIconComponent(vehicleType) : UnknownRideIcon;\n\n  const iconNode = <Icon className={classes.icon} />;\n  const rideNode = isEditable ? (\n    <RideEditDialog\n      className={classes.editDialogTrigger}\n      initialState={rideInitialState}\n      availableVisits={availableVisits}\n      onSubmit={updatedRide => handleRideUpdate({ ...ride, ...updatedRide })}\n      originLocation={originLocation}\n    >\n      {iconNode}\n    </RideEditDialog>\n  ) : (\n    iconNode\n  );\n\n  return (\n    <div className={cls(className, classes.container)}>\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.icon} />\n      )}\n      {rideNode}\n      {Boolean(rideId && showDetails) && (\n        <span className={classes.details}>\n          {arrivalDepartureDateTimeToString(departureDateTime, arrivalDateTime)}\n        </span>\n      )}\n    </div>\n  );\n};\n\nRide.propTypes = {\n  availableVisits: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  className: PropTypes.string,\n  defaultArrivalVisitId: PropTypes.number,\n  defaultDepartureVisitId: PropTypes.number,\n  isEditable: PropTypes.bool,\n  onRideUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  ride: PropTypes.shape(ridePropTypes),\n  showDetails: PropTypes.bool,\n};\n\nRide.defaultProps = {\n  availableVisits: [],\n  className: undefined,\n  defaultArrivalVisitId: undefined,\n  defaultDepartureVisitId: undefined,\n  isEditable: false,\n  ride: {},\n  showDetails: false,\n};\n\nexport default withStyles(styles)(Ride);\n","export default (departureDateTime, arrivalDateTime) => {\n  const arrivalDateTimeString =\n    Boolean(arrivalDateTime) && arrivalDateTime.toLocaleDateString();\n  const departureDateTimeString =\n    Boolean(departureDateTime) && departureDateTime.toLocaleDateString();\n  if (arrivalDateTimeString === departureDateTimeString) {\n    return arrivalDateTimeString;\n  }\n  return `${departureDateTimeString}—${arrivalDateTimeString}`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst styles = {\n  dragHandler: {\n    cursor: 'grab',\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n  },\n};\n\nconst DragHandler = ({ className, classes }) => (\n  <IconDragHandle\n    className={cls(className, classes.dragHandler)}\n    data-sort-handler=\"enabled\"\n  />\n);\n\nDragHandler.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nDragHandler.defaultProps = { className: undefined };\n\nexport default withStyles(styles)(DragHandler);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Visit from 'travel/components/models/visits/Visit';\nimport Ride from './Ride';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  alwaysVisible: {},\n  container: {\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n};\n\nconst VisitWithRides = ({\n  visit,\n  visit: { visitId, arrivalRideId, departureRideId } = {},\n  ridesDict,\n  classes,\n  prevVisitId,\n  nextVisitId,\n  tripVisitsList,\n  isEditable,\n  isSortable,\n  isSorting,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  onRideUpdate: handleRideUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  originLocation,\n}) => {\n  const shouldWarnForArrivalRide = isEditable && !isArrivalRideMatch;\n  const shouldWarnForDepartureRide = isEditable && !isDepartureRideMatch;\n\n  return (\n    <div className={classes.container}>\n      <Ride\n        availableVisits={tripVisitsList}\n        defaultDepartureVisitId={prevVisitId}\n        defaultArrivalVisitId={visitId}\n        visitId={visitId}\n        isEditable={isEditable}\n        className={cls(classes.ride, {\n          [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n          [classes.warning]: shouldWarnForArrivalRide,\n        })}\n        ride={ridesDict[arrivalRideId]}\n        showDetails={isSorting || shouldWarnForArrivalRide}\n        onRideUpdate={handleRideUpdate}\n        originLocation={originLocation}\n      />\n      <Visit\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        isEditable={isEditable}\n        onVisitUpdate={handleVisitUpdate}\n        visit={visit}\n      />\n      {(!isDepartureRideMatch || isSorting) && (\n        <Ride\n          className={cls(classes.ride, {\n            [classes.alwaysVisible]: isSorting || !isDepartureRideMatch,\n            [classes.warning]: shouldWarnForDepartureRide,\n          })}\n          ride={ridesDict[departureRideId]}\n          availableVisits={tripVisitsList}\n          defaultDepartureVisitId={visitId}\n          defaultArrivalVisitId={nextVisitId}\n          isEditable={isEditable && !isDepartureRideMatch}\n          showDetails={isSorting || shouldWarnForDepartureRide}\n          onRideUpdate={handleRideUpdate}\n          originLocation={originLocation}\n        />\n      )}\n      {isSortable &&\n        !isSorting && <DragHandler className={classes.visibleOnlyOnHover} />}\n    </div>\n  );\n};\n\nVisitWithRides.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isArrivalRideMatch: PropTypes.bool,\n  isDepartureRideMatch: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  isSortable: PropTypes.bool,\n  isSorting: PropTypes.bool,\n  nextVisitId: PropTypes.number,\n  onRideUpdate: PropTypes.func.isRequired,\n  onVisitUpdate: PropTypes.func.isRequired,\n  originLocation: PropTypes.shape(locationsPropTypes).isRequired,\n  prevVisitId: PropTypes.number,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  visit: PropTypes.shape(visitPropTypes).isRequired,\n};\n\nVisitWithRides.defaultProps = {\n  isArrivalRideMatch: true,\n  isDepartureRideMatch: true,\n  isEditable: false,\n  isSortable: false,\n  isSorting: false,\n  nextVisitId: null,\n  prevVisitId: null,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(VisitWithRides);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport initializeVisit from 'travel/models/visits/initialize';\nimport VisitEditDialog from 'travel/components/models/visits/VisitEditDialog';\nimport DragHandler from './DragHandler';\n\nconst styles = {\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  draggableContainer: {\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n};\n\nconst VisitCreator = ({\n  classes,\n  isSorting,\n  onVisitUpdate: handleVisitUpdate,\n}) => (\n  <div className={cls({ [classes.draggableContainer]: !isSorting })}>\n    <VisitEditDialog\n      initialState={initializeVisit()}\n      onSubmit={handleVisitUpdate}\n    >\n      <Button\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <span>Добавить посещение</span>\n      </Button>\n    </VisitEditDialog>\n    <DragHandler className={classes.visibleOnlyOnHover} />\n  </div>\n);\n\nVisitCreator.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  isSorting: PropTypes.bool,\n  onVisitUpdate: PropTypes.func.isRequired,\n};\n\nVisitCreator.defaultProps = {\n  isSorting: false,\n};\n\nexport default withStyles(styles)(VisitCreator);\n","export default () => ({\n  visitType: null,\n  visitComment: '',\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconHome from '@material-ui/icons/Home';\nimport EditIcon from '@material-ui/icons/Edit';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\nimport { withItem } from 'modules/utilities/types/array';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Location from 'travel/components/models/locations/Location';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport VisitWithRides from './VisitWithRides';\nimport Ride from './Ride';\nimport VisitCreator from './VisitCreator';\n\nconst SortableTrip = SortableContainer(({ children }) => <div>{children}</div>);\nconst SortableVisitWithRides = SortableElement(\n  ({ replaceWithNode, onVisitUpdate: handleVisitUpdate, ...props }) =>\n    replaceWithNode || (\n      <VisitWithRides onVisitUpdate={handleVisitUpdate} {...props} />\n    ),\n);\n\nconst styles = {\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n};\n\nconst resolveVisitsWindow = (tripVisitsList, indexOfVisit, overstepIndex) => {\n  const prevVisitIndex =\n    indexOfVisit - 1 - (indexOfVisit > overstepIndex ? 1 : 0);\n  const nextVisitIndex =\n    indexOfVisit + 1 - (indexOfVisit + 1 > overstepIndex ? 1 : 0);\n  const prevVisit = prevVisitIndex >= 0 ? tripVisitsList[prevVisitIndex] : null;\n  const nextVisit =\n    nextVisitIndex < tripVisitsList.length\n      ? tripVisitsList[nextVisitIndex]\n      : null;\n  return [prevVisit, nextVisit];\n};\n\nconst Trip = ({\n  classes,\n  isEditable,\n  locationsDict,\n  onRideUpdate: handleRideUpdate,\n  onVisitsOrderUpdate: handleVisitsOrderUpdate,\n  ridesDict,\n  trip,\n  trip: { tripId, originLocationId, tripName, tripType },\n  tripIndex,\n  tripVisitsList,\n  onTripUpdate: handleTripUpdate,\n  onVisitUpdate: handleVisitUpdate,\n  storyUrl,\n}) => {\n  const isSortable = isEditable;\n  const [isSorting, setIsSorting] = useState(false);\n  const [addVisitControlIndex, setAddVisitControlIndex] = useState(\n    tripVisitsList.length,\n  );\n  const handleSortEnd = (data, event) => {\n    setIsSorting(false);\n    const { oldIndex, newIndex } = data;\n    if (oldIndex === addVisitControlIndex) {\n      setAddVisitControlIndex(newIndex);\n    } else {\n      handleVisitsOrderUpdate(event, {\n        oldIndex: oldIndex > addVisitControlIndex ? oldIndex - 1 : oldIndex,\n        newIndex: newIndex > addVisitControlIndex ? newIndex - 1 : newIndex,\n        collection: tripVisitsList,\n      });\n    }\n  };\n\n  const VisitWithRidesComponent = isSortable\n    ? SortableVisitWithRides\n    : VisitWithRides;\n\n  const actualTripVisitsList = !isEditable\n    ? tripVisitsList\n    : withItem(\n        tripVisitsList,\n        { isItVisitCreatorControl: true },\n        addVisitControlIndex,\n      );\n  const visitsNodes = actualTripVisitsList.map((visit, indexOfVisit) => {\n    const { isItVisitCreatorControl, visitId } = visit;\n    if (isItVisitCreatorControl) {\n      return (\n        <SortableVisitWithRides\n          key=\"visitCreator\"\n          index={indexOfVisit}\n          replaceWithNode={\n            <VisitCreator\n              isSorting={isSorting}\n              onVisitUpdate={newVisit =>\n                handleVisitUpdate(newVisit, {\n                  indexInCollection: addVisitControlIndex,\n                  collection: tripVisitsList,\n                  tripId,\n                })\n              }\n            />\n          }\n        />\n      );\n    }\n    const [prevVisit, nextVisit] = resolveVisitsWindow(\n      tripVisitsList,\n      indexOfVisit,\n      addVisitControlIndex,\n    );\n    const { visitId: prevVisitId } = prevVisit || {};\n    const { visitId: nextVisitId } = nextVisit || {};\n    return (\n      <VisitWithRidesComponent\n        index={indexOfVisit /* for SortableVisitWithRides */}\n        isArrivalRideMatch={checkIsVisitsConnectedByRide(prevVisit, visit)}\n        isDepartureRideMatch={checkIsVisitsConnectedByRide(visit, nextVisit)}\n        isEditable={isEditable}\n        isSortable={isSortable}\n        isSorting={isSorting}\n        key={visitId}\n        nextVisitId={nextVisitId}\n        onRideUpdate={handleRideUpdate}\n        onVisitUpdate={handleVisitUpdate}\n        originLocation={locationsDict[originLocationId]}\n        prevVisitId={prevVisitId}\n        ridesDict={ridesDict}\n        tripVisitsList={tripVisitsList}\n        visit={visit}\n      />\n    );\n  });\n\n  const wrappedVisitsNodes = isSortable ? (\n    <SortableTrip\n      onSortEnd={handleSortEnd}\n      shouldCancelStart={checkIsNodeNotSortable}\n      updateBeforeSortStart={() => setIsSorting(true)}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n    >\n      {visitsNodes}\n    </SortableTrip>\n  ) : (\n    <div>{visitsNodes}</div>\n  );\n\n  const originLocationNode = (\n    <Location location={locationsDict[originLocationId]} Icon={IconHome} />\n  );\n\n  const tripEditControlsNode = (\n    <TripEditDialog\n      initialState={trip}\n      onSubmit={updatedTrip => handleTripUpdate({ ...trip, ...updatedTrip })}\n    >\n      <IconButton\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        <EditIcon className={classes.visibleOnlyOnHover} />\n      </IconButton>\n    </TripEditDialog>\n  );\n\n  const lastVisit = tripVisitsList[tripVisitsList.length - 1];\n  const lastButOneVisit = tripVisitsList[tripVisitsList.length - 2];\n  const { departureRideId: rideToOriginId, visitId: recentVisitId } =\n    lastVisit || {};\n\n  const isRelocation = tripType === TRIP_TYPES.RELOCATION;\n  const rideToOriginNode = isRelocation ? null : (\n    <Ride\n      availableVisits={tripVisitsList}\n      defaultDepartureVisitId={recentVisitId}\n      isEditable={isEditable}\n      onRideUpdate={handleRideUpdate}\n      originLocation={locationsDict[originLocationId]}\n      ride={ridesDict[rideToOriginId]}\n      showDetails={\n        isSorting || checkIsVisitsConnectedByRide(lastButOneVisit, lastVisit)\n      }\n    />\n  );\n\n  const hasStory = tripVisitsList.some(\n    ({ visitComment, arrivalRideId, departureRideId }) => {\n      if (visitComment) {\n        return true;\n      }\n      const { rideComment: arrivalRideComment } =\n        ridesDict[arrivalRideId] || {};\n      if (arrivalRideComment) {\n        return true;\n      }\n      const { rideComment: departureRideComment } =\n        ridesDict[departureRideId] || {};\n      return Boolean(departureRideComment);\n    },\n  );\n  return (\n    <>\n      <h1 className={classes.container}>\n        {`${tripIndex + 1}. ${tripName}`}\n        {isEditable && tripEditControlsNode}\n      </h1>\n      {originLocationNode}\n      {wrappedVisitsNodes}\n      {!isRelocation && (\n        <>\n          {rideToOriginNode}\n          {originLocationNode}\n        </>\n      )}\n      {hasStory && (\n        <div>\n          <Link to={storyUrl}>Заметки</Link>\n        </div>\n      )}\n    </>\n  );\n};\nTrip.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  tripIndex: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  onRideUpdate: PropTypes.func.isRequired,\n  onTripUpdate: PropTypes.func.isRequired,\n  onVisitsOrderUpdate: PropTypes.func.isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n  trip: PropTypes.shape(tripPropTypes).isRequired,\n  tripVisitsList: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n};\n\nTrip.defaultProps = {\n  isSortable: false,\n  tripVisitsList: [],\n};\n\nexport default withStyles(styles)(Trip);\n","import createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nexport const submitOrderInTrip = ({ oldIndex, newIndex, collection }) => ({\n  domain: 'tripsPage.visits.sort',\n  modelName: 'visits',\n  query: {\n    id: collection[oldIndex].visitId,\n    body: {\n      orderInTrip: calcOrder({ index: newIndex, collection }),\n    },\n  },\n});\n\nexport const submitRide = ({ ride, ride: { rideId } }) => ({\n  domain: 'tripsPage.visits.rides',\n  modelName: 'rides',\n  query: {\n    id: rideId,\n    body: ride,\n  },\n});\n\nexport const submitTrip = ({ trip, trip: { tripId } }) => ({\n  domain: 'tripsPage.visits.trips',\n  modelName: 'trips',\n  query: {\n    id: tripId,\n    body: trip,\n  },\n});\n\nexport const submitVisit = ({\n  visit,\n  visit: { visitId },\n  tripId,\n  indexInCollection,\n  collection,\n}) => ({\n  domain: 'tripsPage.visits.visit',\n  modelName: 'visits',\n  query: {\n    id: visitId,\n    body: {\n      ...visit,\n      tripId,\n      orderInTrip:\n        indexInCollection || indexInCollection === 0\n          ? calcOrder({ index: indexInCollection, collection })\n          : undefined,\n    },\n  },\n});\n","const INITIAL_ORDER = 100;\nexport default ({ orderResolver: resolveOrder }) => ({ index, collection }) => {\n  if (!collection.length) {\n    return INITIAL_ORDER;\n  }\n  if (index <= 0) {\n    return resolveOrder(collection[0]) - 1;\n  }\n  if (index >= collection.length - 1) {\n    return resolveOrder(collection[collection.length - 1]) + 1;\n  }\n  const prevOrder = resolveOrder(collection[index - 1]);\n  const nextOrder = resolveOrder(collection[index]);\n  const randomness = ((Math.random() - 0.5) * (nextOrder - prevOrder)) / 2;\n  return (prevOrder + nextOrder) / 2 + randomness;\n};\n","import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport compose from 'lodash/fp/compose';\nimport Button from '@material-ui/core/Button';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { selectDict, selectProvisionStatus } from 'core/connection';\nimport withProvision from 'core/connection/withProvision';\nimport { withPaths, pathsPropTypes } from 'core/context/AppContext';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport WelcomeScreen from 'travel/components/common/WelcomeScreen';\nimport TripEditDialog from 'travel/components/models/trips/TripEditDialog';\nimport locationsPropTypes from 'travel/models/locations/propTypes';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport initializeTrip from 'travel/models/trips/initialize';\nimport { groupAndSortVisitsByTrips } from 'travel/models/trips/utils';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport Trip from './blocks/Trip';\nimport {\n  submitRide,\n  submitOrderInTrip,\n  submitTrip,\n  submitVisit,\n} from './actionCreators';\nimport { selectUserTripsIds, selectLocationsIds } from './selectors';\n\nconst memoizedGroupAndSortVisitsByTrips = memoizeByLastArgs(\n  groupAndSortVisitsByTrips,\n);\n\nconst TripsPage = ({\n  match: {\n    params: { userAlias: visitedUserAlias },\n  },\n  isTripsComplete,\n  trips: { data: tripsList = [] } = {},\n  visits: { data: visitsList = [] } = {},\n  locationsDict,\n  namedPaths,\n  ridesDict,\n  request,\n  invalidateRequest,\n}) => {\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const isEditable =\n    isAuthenticated && authenticatedUserAlias === visitedUserAlias;\n\n  const handleVisitsOrderUpdate = useCallback(\n    (event, { oldIndex, newIndex, collection }) => {\n      if (oldIndex !== newIndex) {\n        request(submitOrderInTrip({ oldIndex, newIndex, collection }));\n      }\n    },\n    [request],\n  );\n\n  const handleRideUpdate = useCallback(\n    ride =>\n      request(\n        submitRide({\n          ride,\n        }),\n      ),\n    [request],\n  );\n\n  const handleTripUpdate = useCallback(\n    trip =>\n      request(\n        submitTrip({\n          trip,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.trips' })),\n    [request],\n  );\n\n  const handleVisitUpdate = useCallback(\n    (visit, { indexInCollection, collection, tripId } = {}) =>\n      request(\n        submitVisit({\n          visit,\n          tripId,\n          indexInCollection,\n          collection,\n        }),\n      ).then(() => invalidateRequest({ domain: 'tripsPage.visits' })),\n    [request],\n  );\n\n  // changes of node, when used in WelcomeScreen lead to recreation of\n  // Message Component, so loosing all internal state of TripEditDialog\n  // actually it became hidden, after isOpen flag reset\n  const addTripNode = useMemo(\n    () => (\n      <TripEditDialog\n        initialState={initializeTrip()}\n        onSubmit={handleTripUpdate}\n      >\n        <Button size=\"small\" variant=\"outlined\" color=\"primary\">\n          Добавить поездку\n        </Button>\n      </TripEditDialog>\n    ),\n    [handleTripUpdate],\n  );\n  if (isTripsComplete && !tripsList.length) {\n    return (\n      <WelcomeScreen shouldShowLinkToTrips={false}>{addTripNode}</WelcomeScreen>\n    );\n  }\n\n  const visitsGroupedByTrips = memoizedGroupAndSortVisitsByTrips(visitsList);\n  return (\n    <>\n      {isEditable && addTripNode}\n      {tripsList.map((trip, tripIndex) => {\n        const { tripId } = trip;\n        return (\n          <div key={tripId}>\n            <Trip\n              locationsDict={locationsDict}\n              onRideUpdate={handleRideUpdate}\n              onTripUpdate={handleTripUpdate}\n              onVisitUpdate={handleVisitUpdate}\n              onVisitsOrderUpdate={handleVisitsOrderUpdate}\n              ridesDict={ridesDict}\n              trip={trip}\n              tripIndex={tripIndex}\n              tripVisitsList={visitsGroupedByTrips[tripId]}\n              isEditable={isEditable}\n              storyUrl={namedPaths.travel.tripStory.toUrl({\n                strTripId: String(tripId),\n              })}\n            />\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nTripsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  namedPaths: pathsPropTypes.namedPaths.isRequired,\n  request: PropTypes.func.isRequired,\n  isTripsComplete: PropTypes.bool.isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationsPropTypes))\n    .isRequired,\n};\n\nconst mapStateToProps = state => ({\n  locationsDict: selectDict(state, 'locations'),\n  ridesDict: selectDict(state, 'rides'),\n  isTripsComplete: selectProvisionStatus(state, 'tripsPage.trips')\n    .isComplete,\n});\n\nconst mapStateToRequirements = (\n  state,\n  {\n    match: {\n      params: { userAlias },\n    },\n  },\n) => {\n  const userTripsIds = selectUserTripsIds(state);\n  const { requiredLocationsIds, missingLocationsIds } = selectLocationsIds(\n    state,\n    userTripsIds,\n  );\n\n  return {\n    domain: 'tripsPage',\n    request: {\n      trips: {\n        modelName: 'trips',\n        observe: userAlias,\n        query: { userAlias, navigation: { isDisabled: true } },\n      },\n      locations: {\n        modelName: 'locations',\n        observe: requiredLocationsIds,\n        isNoop: !missingLocationsIds.length,\n        query: {\n          filter: { id: { comparator: 'in', value: missingLocationsIds } },\n          navigation: { isDisabled: true },\n        },\n      },\n      rides: {\n        modelName: 'rides',\n        observe: userTripsIds,\n        isNoop: !userTripsIds || !userTripsIds.length,\n        query: {\n          filter: {\n            trip_id: { comparator: 'in', value: userTripsIds },\n          },\n          navigation: { isDisabled: true },\n        },\n      },\n      visits: {\n        modelName: 'visits',\n        observe: userTripsIds,\n        isNoop: !userTripsIds || !userTripsIds.length,\n        query: {\n          filter: {\n            trip_id: { comparator: 'in', value: userTripsIds },\n          },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n  };\n};\n\nexport default compose(\n  withRouter,\n  withPaths,\n  withProvision(mapStateToRequirements, mapStateToProps),\n)(TripsPage);\n","export default () => ({\n  tripType: null,\n});\n","import uniq from 'lodash/uniq';\nimport { selectDict, selectProvisionStatus } from 'core/connection';\n\nexport const selectUserTripsIds = state => {\n  const { fallback: availableUserTrips } =\n    selectProvisionStatus(state, 'tripsPage.trips') || {};\n\n  const { data: userTripsIds } = availableUserTrips['tripsPage.trips'] || {};\n\n  return userTripsIds;\n};\n\nexport const selectLocationsIds = (state, userTripsIds) => {\n  const tripsDict = selectDict(state, 'trips');\n  const locationsDict = selectDict(state, 'locations');\n\n  const requiredLocationsIds = userTripsIds\n    ? uniq(\n        userTripsIds.reduce((memo, tripId) => {\n          const trip = tripsDict[tripId];\n          if (trip) {\n            const { originLocationId } = trip;\n            if (originLocationId) {\n              memo.push(originLocationId);\n            }\n          }\n          return memo;\n        }, []),\n      )\n    : [];\n  const missingLocationsIds = requiredLocationsIds.filter(\n    requiredLocationId => !locationsDict[requiredLocationId],\n  );\n  return { requiredLocationsIds, missingLocationsIds };\n};\n"],"sourceRoot":""}