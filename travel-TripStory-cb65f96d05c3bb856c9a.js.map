{"version":3,"sources":["webpack:///./src/packages/travel/pages/VisitsPage/useVisitsPageStyles.js","webpack:///./src/packages/travel/components/models/countries/CountryInfo/CountryInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/consts.js","webpack:///./src/packages/travel/pages/VisitsPage/utils.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderCountry.js","webpack:///./src/packages/travel/components/models/locations/LocationInfo/LocationInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/calcCounters.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderLocation.js","webpack:///./src/packages/travel/components/models/trips/TripInfo/TripInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderTrip.js","webpack:///./src/packages/travel/components/common/YearInfo/YearInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderYear.js","webpack:///./src/packages/travel/pages/VisitsPage/useVisitsGroupingSidebar.js","webpack:///./src/packages/travel/pages/VisitsPage/switchSortingFn.js","webpack:///./src/packages/travel/pages/VisitsPage/VisitsPage.jsx","webpack:///./src/packages/travel/pages/VisitsPage/switchNodesOrder.js","webpack:///./src/packages/travel/pages/LocationsPage/blocks/LocationRating.jsx","webpack:///./src/packages/travel/pages/LocationsPage/useMarkers.js","webpack:///./src/packages/travel/pages/LocationsPage/LocationsPage.jsx","webpack:///./src/packages/travel/pages/LocationsPage/useUserLocations.js","webpack:///./src/packages/travel/pages/TripStoryPage/TripStoryPage.jsx","webpack:///./src/modules/utilities/types/numbers.js","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack:///./src/packages/travel/models/trips/utils/index.js","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js"],"names":["makeStyles","theme","group","backgroundColor","top","position","&:not(:first-of-type)","marginTop","spacing","& ~ $subgroup","& + $subgroup ","subgroup","detail","color","fontSize","formControl","width","ratingBlock","display","alignItems","ratingIcon","CountryInfo","_ref","_ref$country","country","countryName","isSubgroup","isDetail","className","children","classes","useVisitsPageStyles","react_default","a","createElement","Typography","variant","KEY_GROUP_VISITS_BY","GROUP_VISITS_BY","LOCATIONS","COUNTRIES","YEARS","YEARS_COUNTRIES","COUNTRIES_YEARS","TRIPS","TRIPS_COUNTRIES","KEY_SORT_VISITS_BY","SORT_VISITS_BY","RATING_ALPHABET","VISITS_ALPHABET","ALPHABET","COMPARATORS","VISIT","ARRIVAL_YEAR","TRIP","DEPARTURE_TIME","ID","COUNTRY","VISITS","RATING","NAME_ID","LOCATION","resolveTripCountryId","tripId","countryId","concat","resolveYearCountryId","year","renderCountry","_counters$countries","_counters$countries$c","_counters$yearsCountr","_counters$yearsCountr2","_counters$tripsCountr","_counters$tripsCountr2","_ref$visit","visit","visitId","_ref$changes","changes","isTripChanged","isCountryChanged","countriesDict","provision","groupBy","counters","isGroupedByTrip","isGroupedByYearCountries","locationsCounter","Object","keys","countries","locations","length","yearsCountries","tripsCountries","key","LocationInfo","_ref$location","location","locationName","lastCacheKey","cachedResult","inc","ref","refKey","counterName","counterKey","countersRef","counterRef","currentCount","getLocationVisitsCount","arguments","undefined","locationId","_counters$locations","_counters$locations$l","_counters$locations$l2","visits","getCountryVisitsCount","_counters$countries$c2","GROUPS_TO_RENDER_COUNTRY","GROUPS_TO_RENDER_YEARS_OF_VISIT","renderLocation","isYearChanged","isLocationChanged","_ref$provision","locationsDict","locationsRating","sortBy","countryDetailNode","includes","visitsCount","_counters$years","years","_counters$years$year","_counters$years$year$","getLocationVisitsByYearCount","resolveVisitsCounter","visitsDetailNode","yearsOfVisitDetailNode","_counters$locations2","_counters$locations2$","_counters$locations2$2","getYearsOfVisits","join","childrenNodes","_len","nodes","Array","_key","filter","Boolean","reduce","nodesMemo","node","index","push","joinNodes","_ref2","locationRating","_ref3","LOCATION_RATING","PLACE_TO_LIVE","Fragment","StarBorder_default","FEW_PER_YEAR","ONCE_PER_YEAR","ONCE_PER_TWO_YEARS","ONCE_PER_FIVE_YEARS","ONCE_PER_DECADE","TWICE_PER_LIVE","ONCE_PER_LIVE","NEVER","ThumbDownOutlined_default","ThumbsUpDownOutlined_default","renderRatingNode","renderAlignedRatingNode","TripInfo","_ref$trip","trip","tripName","paragraph","renderTrip","tripsDict","YearInfo","renderYear","isGroupedByCountriesYear","useVisitsGroupingSidebar","setQueryFilter","useSidebar","closeSidebar","List","ListItem","FormControl","InputLabel","shrink","id","Select","labelId","autoWidth","value","onChange","event","_defineProperty","target","MenuItem","COMPARATOR_FUNCTIONS_MAPPING","switchSortingFn_defineProperty","_COMPARATOR_FUNCTIONS","visitA","visitB","arrivalDateTimeA","arrivalDateTime","arrivalDateTimeB","getFullYear","countryIdA","countryIdB","countryNameA","_ref4","countryNameB","_ref7","ratingResolver","resolveCountryRating","_","locationIdA","locationNameA","locationIdB","locationNameB","ratingA","ratingB","_ref8","tripIdA","tripIdB","_ref9","departureDateTimeA","departureDateTime","_ref10","departureDateTimeB","resolveComparatorBySortFn","sortFn","ENTITY_COMPARATORS","createComparator","dicts","comparatorsKeys","comparatorFuncs","map","comparatorKey","comparatorFnCreator","warning","fnIdx","comparisonResult","memoizeOne","memoize","ratings","values","_ref5","countryIdToCompare","_ref6","rating","sum","VisitsPage","userAlias","match","params","_useQueryFilter","useQueryFilter","_useQueryFilter$query","queryFilter","_useQueryFilter$query2","_useQueryFilter$query3","useTripsStats","isPending","isError","updatesCounter","visitsIds","visitsDict","locationsPath","usePaths","travel","unsortedVisitsList","visitsList","cacheKey","totalVisits","trips","forEach","calcCounters","sortingFn","NAME","switchSortingFn","sort","prevVisit","prevCountryId","prevLocationId","prevTripId","prevYear","resolveArrivalYear","renderProps","checkIsGroupedByTrip","checkIsGroupedByYear","checkIsGroupedByCountry","tripNode","countryNode","yearNode","locationNode","switchNodesOrder","nodeToPush","titleNode","Link","to","toUrl","component","__webpack_require__","d","__webpack_exports__","RATING_LOCALIZATION","_RATING_LOCALIZATION","useStyles","LocationRating","isEditable","onSubmitLocationRating","propTypes","PropTypes","number","isRequired","bool","func","defaultProps","createControlledPromise","resolver","rejector","promise","Promise","resolve","reject","useMarkers","markersCoords","_useMemo","useMemo","apiPromise","handleGoogleApiLoaded","previousCoords","useRef","changesCount","useEffect","isEqual","current","markers","then","api","maps","bounds","LatLngBounds","lat","lon","marker","Marker","lng","extend","fitBounds","getZoom","setZoom","setMap","LocationsPage","container","lineHeight","visitContainer","margin","fontWeight","googleMapContainer","maxWidth","height","maxHeight","domain","_ref$match$params","strLocationId","_useAuthContext","useAuthContext","isAuthenticated","authenticatedUserAlias","_useUserLocations","_useTripsStats","_useTripsStats$locati","locationsIds","submitLocationRating","useLocationRatingRequest","useUserLocations","parseInt","actualLocationsIds","handleSubmitLocationRating","useCallback","locationIdToSubmit","query","String","condition","locationIdToShowMarker","lib_default","bootstrapURLKeys","__GOOGLE_MAP_API_KEY__","center","zoom","onGoogleApiLoaded","locationsIdToRender","shape","string","memoizedSortVisitsByTrips","memoizeByLastArgs","sortVisitsByTrips","TripStoryPage","_ref$visits","_ref$visits$data","data","ridesDict","noDataNode","lastVisitIndex","storiesNodes","visitIndex","departureRideComment","arrivalRideId","departureRideId","visitComment","arrivalRideComment","rideComment","storyPart","contentNode","some","objectOf","arrayOf","tripPropTypes","visitPropTypes","ridesPropTypes","compose","withRouter","withStyles","withProvision","state","input","strTripId","Number","isNaN","NaN","parseFloat","identity","request","rides","modelName","trip_id","comparator","navigation","isDisabled","selectDict","tripsProvision","useProvision","isProvision","observe","useTrips","_useUser","useUser","_useUser$user","user","_useUser$user$locatio","userProvision","_objectWithoutProperties","_ref3$data","selectResult","tripsIds","_useSelector","useSelector","from","Set","flatMap","tripsId","_tripsDict$tripsId","ridesIds","_tripsDict$tripsId2","countriesIds","_visitsDict$visitId","_visitsDict$visitId2","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","selectUpdatesCounter","isReady","every","selectIsReady","selectIsPending","isValid","selectIsValid","error","find","selectIsError","errors","selectError","mergeProvisionsState","ridesStats","calcRidesStats","earliestDeparture","Date","min","rideId","_ridesDict$rideId","getTime","latestArrival","max","_ridesDict$rideId2","withLoader","Component","props","_props$provision","_props$provision$isPe","hasFallback","PlainLoader","_len2","provisionParams","_key2","ExtendableComponent","funcsArray","arg","reduceRight","composed","provide","apply","core_connection__WEBPACK_IMPORTED_MODULE_0__","core_connection_request_controllerRedux__WEBPACK_IMPORTED_MODULE_1__","_ref$data","isLoading","uniqTrimAndJoin","array","maxLength","_ref$separator","separator","uniqArray","uniq","result","slice","resolveTripCaption","tripVisitsList","originCountryId","fallback","visitsByCountries","visitType","VISIT_TYPES","TRANSIT","utils_groupAndSortVisitsByTrips","orderInTrip","groupAndSortVisitsByTrips","mapValues","selectItem","_objectSpread","applicableSchemaName","requiredLocationIds","missingLocationsIds","_useRequest2","_slicedToArray","useRequest","method"],"mappings":"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","file":"travel-TripStory-cb65f96d05c3bb856c9a.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n  group: {\n    backgroundColor: 'white',\n    top: 0,\n    position: 'sticky',\n    '&:not(:first-of-type)': {\n      marginTop: theme.spacing(5),\n    },\n\n    '& ~ $subgroup': {\n      marginTop: theme.spacing(2),\n    },\n\n    '& + $subgroup ': {\n      marginTop: 0,\n    },\n  },\n  subgroup: {\n    backgroundColor: 'white',\n    position: 'sticky',\n    top: 38,\n  },\n  detail: {\n    color: 'gray',\n    fontSize: 12,\n  },\n  formControl: {\n    width: '100%',\n  },\n  ratingBlock: { display: 'inline-flex', alignItems: 'center' },\n  ratingIcon: { color: 'gray', fontSize: 12 },\n}));\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function CountryInfo({\n  country: { countryName } = {},\n  isSubgroup,\n  isDetail,\n  className,\n  children,\n}) {\n  const classes = useVisitsPageStyles();\n  if (isDetail) {\n    return <span className={className}>{countryName}</span>;\n  }\n  return (\n    <Typography\n      variant={isSubgroup ? 'h5' : 'h4'}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {countryName} {children}\n    </Typography>\n  );\n}\n","export const KEY_GROUP_VISITS_BY = 'group';\nexport const GROUP_VISITS_BY = {\n  LOCATIONS: 'loc',\n  COUNTRIES: 'c',\n  YEARS: 'yr',\n  YEARS_COUNTRIES: 'yr_c',\n  COUNTRIES_YEARS: 'c_yr',\n  TRIPS: 't',\n  TRIPS_COUNTRIES: 't_с',\n};\n\nexport const KEY_SORT_VISITS_BY = 'sort';\nexport const SORT_VISITS_BY = {\n  RATING_ALPHABET: 'r_a',\n  VISITS_ALPHABET: 'v_a',\n  ALPHABET: 'a',\n};\n\nexport const COMPARATORS = {\n  VISIT: { ARRIVAL_YEAR: 'ARRIVAL_YEAR' },\n  TRIP: { DEPARTURE_TIME: 'TRIP_DEPARTURE_DATE', ID: 'TRIP_ID' },\n  COUNTRY: {\n    VISITS: 'COUNTRY_VISITS',\n    RATING: 'COUNTRY_RATING',\n    NAME_ID: 'COUNTRY_NAME_ID',\n  },\n  LOCATION: {\n    VISITS: 'LOCATION_VISITS',\n    RATING: 'LOCATION_RATING',\n    NAME_ID: 'LOCATION_NAME_ID',\n  },\n};\n","export function resolveTripCountryId(tripId, countryId) {\n  return `t${tripId}_c${countryId}`;\n}\nexport function resolveYearCountryId(year, countryId) {\n  return `y${year}_c${countryId}`;\n}\n\nexport function resolveArrivalYear({ arrivalDateTime }) {\n  if (!arrivalDateTime) {\n    return null;\n  }\n  return arrivalDateTime.getFullYear(arrivalDateTime);\n}\n","import React from 'react';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { GROUP_VISITS_BY } from '../consts';\nimport { resolveTripCountryId, resolveYearCountryId } from '../utils';\n\nexport default function renderCountry({\n  visit: { tripId, visitId, countryId },\n  changes: { isTripChanged, isCountryChanged },\n  provision: { countriesDict },\n  groupBy,\n  year,\n  counters,\n  classes,\n}) {\n  const isGroupedByTrip = groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES;\n  const isGroupedByYearCountries = groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES;\n  const shouldRender = isCountryChanged || (isGroupedByTrip && isTripChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  let locationsCounter = 0;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.countries?.[countryId]?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.yearsCountries?.[resolveYearCountryId(year, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.tripsCountries?.[resolveTripCountryId(tripId, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    default:\n      break;\n  }\n  return (\n    <CountryInfo\n      key={`c${countryId}_v${visitId}`}\n      country={countriesDict[countryId]}\n      isSubgroup={isGroupedByTrip || isGroupedByYearCountries}\n    >\n      {locationsCounter > 2 && (\n        <span className={classes.detail}>{`${locationsCounter} мест`}</span>\n      )}\n    </CountryInfo>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function LocationInfo({\n  children,\n  location: { locationName } = {},\n}) {\n  return (\n    <Typography>\n      {locationName} {children}\n    </Typography>\n  );\n}\n","import {\n  resolveTripCountryId,\n  resolveYearCountryId,\n  resolveArrivalYear,\n} from './utils';\n\nlet lastCacheKey = null;\nlet cachedResult = null;\nexport default function calcCounters(visitsList, cacheKey) {\n  if (cacheKey && cacheKey === lastCacheKey) {\n    return cachedResult;\n  }\n\n  const counters = {\n    totalVisits: {},\n    countries: {},\n    years: {},\n    trips: {},\n    tripsCountries: {},\n    yearsCountries: {},\n    locations: {},\n  };\n\n  visitsList.forEach(visit => {\n    const { locationId, countryId, tripId, visitId } = visit;\n    const year = resolveArrivalYear(visit);\n\n    inc(counters.countries, countryId, 'visits', visitId);\n    inc(counters.countries, countryId, 'locations', locationId);\n    inc(counters.countries, countryId, 'years', year);\n    inc(counters.countries, countryId, 'trips', tripId);\n\n    inc(counters.years, year, 'locations', locationId);\n    inc(counters.years, year, 'countries', countryId);\n    inc(counters.years, year, 'trips', tripId);\n\n    inc(counters.trips, tripId, 'visits', visitId);\n    inc(counters.trips, tripId, 'locations', locationId);\n    inc(counters.trips, tripId, 'countries', countryId);\n\n    inc(counters.locations, locationId, 'visits', visitId);\n    inc(counters.locations, locationId, 'years', year);\n    inc(counters.locations, locationId, 'trips', tripId);\n\n    inc(\n      counters.tripsCountries,\n      resolveTripCountryId(tripId, countryId),\n      'locations',\n      locationId,\n    );\n    inc(\n      counters.yearsCountries,\n      resolveYearCountryId(year, countryId),\n      'locations',\n      locationId,\n    );\n  }, {});\n\n  lastCacheKey = cacheKey;\n  cachedResult = counters;\n\n  return counters;\n}\n\nfunction inc(ref, refKey, counterName, counterKey) {\n  /* eslint-disable no-multi-assign, no-param-reassign */\n  let countersRef = ref[refKey];\n  if (!countersRef) {\n    countersRef = ref[refKey] = {};\n  }\n\n  let counterRef = countersRef[counterName];\n  if (!counterRef) {\n    counterRef = countersRef[counterName] = {};\n  }\n  /* eslint-enable no-multi-assign, no-param-reassign */\n\n  const currentCount = counterRef[counterKey] || 0;\n  counterRef[counterKey] = currentCount + 1;\n}\n\nexport function getLocationVisitsCount(counters = {}, locationId) {\n  const { locations: { [locationId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getCountryVisitsCount(counters = {}, countryId) {\n  const { countries: { [countryId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getLocationVisitsByYearCount(counters, locationId, year) {\n  const {\n    years: {\n      [year]: {\n        locations: { [locationId]: locationVisitsByYearCount } = {},\n      } = {},\n    } = {},\n  } = counters;\n  return locationVisitsByYearCount;\n}\n\nexport function getYearsOfVisits(counters, locationId) {\n  const { locations: { [locationId]: { years = {} } = {} } = {} } = counters;\n  return Object.keys(years);\n}\n","import React from 'react';\nimport IconStar from '@material-ui/icons/StarBorder';\nimport IconThumbDown from '@material-ui/icons/ThumbDownOutlined';\nimport IconThumbsUpDown from '@material-ui/icons/ThumbsUpDownOutlined';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY } from '../consts';\nimport {\n  getYearsOfVisits,\n  getLocationVisitsByYearCount,\n  getLocationVisitsCount,\n} from '../calcCounters';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\nconst GROUPS_TO_RENDER_YEARS_OF_VISIT = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.COUNTRIES,\n];\n\nexport default function renderLocation({\n  visit,\n  visit: { visitId, locationId, countryId },\n  classes,\n  changes: {\n    isYearChanged,\n    isCountryChanged,\n    isTripChanged,\n    isLocationChanged,\n  },\n  year,\n  provision: { locationsDict, locationsRating, countriesDict },\n  groupBy,\n  sortBy,\n  counters,\n}) {\n  const isGroupedByTripsOnly = groupBy === GROUP_VISITS_BY.TRIPS;\n  const shouldRender =\n    isGroupedByTripsOnly || // every visit in trip should be shown\n    isTripChanged || // in other grouping show only unique locations\n    isYearChanged ||\n    isCountryChanged ||\n    isLocationChanged;\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  const visitsCount = resolveVisitsCounter(visit, counters, year, groupBy);\n  const visitsDetailNode =\n    visitsCount > 1 ? (\n      <span className={classes.detail}>{`${visitsCount} визитов`}</span>\n    ) : null;\n\n  const shouldRenderYearOfVisit = GROUPS_TO_RENDER_YEARS_OF_VISIT.includes(\n    groupBy,\n  );\n  const yearsOfVisitDetailNode = shouldRenderYearOfVisit ? (\n    <span className={classes.detail}>\n      {`в ${getYearsOfVisits(counters, locationId).join(', ')}`}\n    </span>\n  ) : null;\n\n  const ratingNode =\n    sortBy === SORT_VISITS_BY.RATING_ALPHABET\n      ? renderAlignedRatingNode({\n          classes,\n          locationRating: locationsRating?.[locationId],\n        })\n      : null;\n\n  const childrenNodes = joinNodes(\n    ratingNode,\n    countryDetailNode,\n    visitsDetailNode,\n    yearsOfVisitDetailNode,\n  );\n\n  return (\n    <LocationInfo\n      key={`l${locationId}_v${visitId}`}\n      location={locationsDict[locationId]}\n      country={countriesDict[countryId]}\n    >\n      {childrenNodes}\n    </LocationInfo>\n  );\n}\n\nfunction renderAlignedRatingNode({ locationRating, classes }) {\n  return (\n    <div className={classes.ratingBlock}>\n      {renderRatingNode({ locationRating, classes })}\n    </div>\n  );\n}\n\nfunction renderRatingNode({ locationRating, classes }) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return <IconStar className={classes.ratingIcon} />;\n    case LOCATION_RATING.NEVER:\n      return <IconThumbDown className={classes.ratingIcon} />;\n    default:\n      return <IconThumbsUpDown className={classes.ratingIcon} />;\n  }\n}\n\nfunction joinNodes(...nodes) {\n  return nodes.filter(Boolean).reduce((nodesMemo, node, index) => {\n    if (index > 0) {\n      nodesMemo.push(<span> </span>);\n    }\n    nodesMemo.push(node);\n    return nodesMemo;\n  }, []);\n}\n\nfunction resolveVisitsCounter(visit, counters = {}, year, groupBy) {\n  const { locationId } = visit;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.LOCATIONS:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.YEARS:\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return getLocationVisitsByYearCount(counters, locationId, year);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n    default:\n      break;\n  }\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function TripInfo({ trip: { tripName } = {} }) {\n  const classes = useVisitsPageStyles();\n  return (\n    <Typography variant=\"h4\" className={classes.group} paragraph={true}>\n      {tripName}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport TripInfo from 'travel/components/models/trips/TripInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nexport default function renderTrip({\n  visit: { visitId, tripId },\n  changes: { isTripChanged },\n  provision: { tripsDict },\n}) {\n  if (!isTripChanged) {\n    return null;\n  }\n  return <TripInfo key={`t${tripId}_v${visitId}`} trip={tripsDict[tripId]} />;\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function YearInfo({ year, isSubgroup }) {\n  const classes = useVisitsPageStyles();\n  return (\n    <Typography\n      variant={isSubgroup ? 'h5' : 'h4'}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {year}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport YearInfo from 'travel/components/common/YearInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nexport default function renderYear({\n  visit: { visitId },\n  changes: { isYearChanged, isCountryChanged },\n  groupBy,\n  year,\n}) {\n  const isGroupedByCountriesYear = groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS;\n  const shouldRender =\n    isYearChanged || (isGroupedByCountriesYear && isCountryChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  return (\n    <YearInfo\n      key={`y${year}_v${visitId}`}\n      year={year}\n      isSubgroup={isGroupedByCountriesYear}\n    />\n  );\n}\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useSidebar } from 'core/context/SidebarContext';\nimport {\n  GROUP_VISITS_BY,\n  KEY_GROUP_VISITS_BY,\n  SORT_VISITS_BY,\n  KEY_SORT_VISITS_BY,\n} from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\n\nexport default function(setQueryFilter, { groupBy, sortBy }) {\n  const classes = useVisitsPageStyles();\n  useSidebar(\n    ({ closeSidebar }) => (\n      <List>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <InputLabel shrink={true} id=\"select-groupBy-filter-label\">\n              Сгруппировать\n            </InputLabel>\n            <Select\n              labelId=\"select-groupBy-filter-label\"\n              autoWidth={true}\n              id=\"select-groupBy-filter\"\n              value={groupBy}\n              onChange={event => {\n                closeSidebar();\n                setQueryFilter({\n                  [KEY_GROUP_VISITS_BY]: event.target.value,\n                });\n              }}\n            >\n              <MenuItem value={GROUP_VISITS_BY.LOCATIONS}>По городам</MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.COUNTRIES}>По странам</MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.YEARS}>По годам</MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.YEARS_COUNTRIES}>\n                По годам и странам\n              </MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.COUNTRIES_YEARS}>\n                По странам и годам\n              </MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.TRIPS}>По поездкам</MenuItem>\n              <MenuItem value={GROUP_VISITS_BY.TRIPS_COUNTRIES}>\n                По поездкам и странам\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </ListItem>\n        {groupBy !== GROUP_VISITS_BY.TRIPS && (\n          <ListItem>\n            <FormControl className={classes.formControl}>\n              <InputLabel shrink={true} id=\"select-sortBy-filter-label\">\n                Сортировать\n              </InputLabel>\n              <Select\n                labelId=\"select-sortBy-filter-label\"\n                autoWidth={true}\n                id=\"select-sortBy-filter\"\n                value={sortBy}\n                onChange={event => {\n                  closeSidebar();\n                  setQueryFilter({\n                    [KEY_SORT_VISITS_BY]: event.target.value,\n                  });\n                }}\n              >\n                <MenuItem value={SORT_VISITS_BY.ALPHABET}>По алфавиту</MenuItem>\n                <MenuItem value={SORT_VISITS_BY.VISITS_ALPHABET}>\n                  По числу посещений\n                </MenuItem>\n                <MenuItem value={SORT_VISITS_BY.RATING_ALPHABET}>\n                  По рейтингу\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </ListItem>\n        )}\n      </List>\n    ),\n    [groupBy, sortBy],\n  );\n}\n","import warning from 'warning';\nimport memoize from 'lodash/memoize';\nimport sum from 'lodash/sum';\nimport memoizeOne from 'memoize-one';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY, COMPARATORS } from './consts';\nimport { getLocationVisitsCount, getCountryVisitsCount } from './calcCounters';\n\nconst COMPARATOR_FUNCTIONS_MAPPING = {\n  [COMPARATORS.VISIT.ARRIVAL_YEAR]: createArrivalYearComparator,\n  [COMPARATORS.COUNTRY.NAME_ID]: createCountryNameIdComparator,\n  [COMPARATORS.COUNTRY.RATING]: createCountryRatingComparator,\n  [COMPARATORS.COUNTRY.VISITS]: createCountryVisitsComparator,\n  [COMPARATORS.LOCATION.NAME_ID]: createLocationNameIdComparator,\n  [COMPARATORS.LOCATION.RATING]: createLocationRatingComparator,\n  [COMPARATORS.LOCATION.VISITS]: createLocationVisitsComparator,\n  [COMPARATORS.TRIP.DEPARTURE_TIME]: createTripDepartureTimeComparator,\n  [COMPARATORS.TRIP.ID]: createTripIdComparator,\n};\n\nexport default function switchSortingFn(queryFilter, dicts, counters) {\n  const { groupBy, sortBy } = queryFilter;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      // sorting is not applicable, as locations ordered chronologically\n      return createComparator(dicts, counters, [\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        COMPARATORS.LOCATION.NAME,\n      ]);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return createComparator(dicts, counters, [\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return createComparator(dicts, counters, [\n        resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS:\n      return createComparator(dicts, counters, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return createComparator(dicts, counters, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return createComparator(dicts, counters, [\n        resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      return createComparator(dicts, counters, [\n        resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n  }\n}\n\nfunction resolveComparatorBySortFn(sortFn, ENTITY_COMPARATORS) {\n  switch (sortFn) {\n    case SORT_VISITS_BY.VISITS_ALPHABET:\n      return ENTITY_COMPARATORS?.VISITS;\n    case SORT_VISITS_BY.RATING_ALPHABET:\n      return ENTITY_COMPARATORS?.RATING;\n    default:\n      return undefined;\n  }\n}\n\nfunction createComparator(dicts, counters, comparatorsKeys) {\n  const comparatorFuncs = comparatorsKeys\n    .map(comparatorKey => {\n      const comparatorFnCreator = COMPARATOR_FUNCTIONS_MAPPING[comparatorKey];\n      warning(comparatorFnCreator, 'missing comparatorKey: %s', comparatorKey);\n      if (!comparatorFnCreator) {\n        return null;\n      }\n      return comparatorFnCreator(dicts, counters);\n    })\n    .filter(Boolean);\n\n  return (visitA, visitB) => {\n    for (let fnIdx = 0; fnIdx < comparatorFuncs.length; fnIdx += 1) {\n      const comparisonResult = comparatorFuncs[fnIdx](visitA, visitB);\n      if (comparisonResult) {\n        return comparisonResult;\n      }\n    }\n    return 0;\n  };\n}\n\nfunction createLocationNameIdComparator() {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA, locationName: locationNameA } = visitA;\n    const { locationId: locationIdB, locationName: locationNameB } = visitB;\n    if (locationNameA > locationNameB) {\n      return 1;\n    }\n    if (locationNameB > locationNameA) {\n      return -1;\n    }\n    return locationIdA - locationIdB;\n  };\n}\n\nfunction createLocationRatingComparator({ locationsRating }) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    const ratingA = locationsRating[locationIdA];\n    const ratingB = locationsRating[locationIdB];\n    return ratingA - ratingB;\n  };\n}\n\nfunction createLocationVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    return (\n      getLocationVisitsCount(counters, locationIdB) -\n      getLocationVisitsCount(counters, locationIdA)\n    );\n  };\n}\n\nfunction createCountryNameIdComparator({ countriesDict }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const { countryName: countryNameA } = countriesDict[countryIdA] || {};\n    const { countryName: countryNameB } = countriesDict[countryIdB] || {};\n\n    if (countryNameA > countryNameB) {\n      return 1;\n    }\n    if (countryNameB > countryNameA) {\n      return -1;\n    }\n    return countryIdA - countryIdB;\n  };\n}\n\nconst resolveCountryRating = memoizeOne(locationsDict =>\n  memoize(countryId => {\n    const ratings = Object.values(locationsDict)\n      .filter(\n        ({ countryId: countryIdToCompare }) => countryId === countryIdToCompare,\n      )\n      .map(({ rating }) => rating);\n    if (!ratings.length) {\n      return 0;\n    }\n    return sum(ratings) / ratings.length;\n  }),\n);\n\nfunction createCountryRatingComparator({ locationsDict }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const ratingResolver = resolveCountryRating(locationsDict);\n    return ratingResolver(countryIdA) - ratingResolver(countryIdB);\n  };\n}\n\nfunction createCountryVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    return (\n      getCountryVisitsCount(counters, countryIdB) -\n      getCountryVisitsCount(counters, countryIdA)\n    );\n  };\n}\n\nfunction createTripDepartureTimeComparator({ tripsDict }) {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n    const { departureDateTime: departureDateTimeA } = tripsDict[tripIdA] || {};\n    const { departureDateTime: departureDateTimeB } = tripsDict[tripIdB] || {};\n\n    if (!departureDateTimeA && !departureDateTimeB) {\n      return 0;\n    }\n    if (!departureDateTimeA || !departureDateTimeB) {\n      // here also considered previous check: !arrivalDateTimeA && !arrivalDateTimeB\n      return departureDateTimeA ? -1 : 1;\n    }\n    return departureDateTimeB.getFullYear() - departureDateTimeA.getFullYear();\n  };\n}\n\nfunction createTripIdComparator() {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n\n    return tripIdA - tripIdB;\n  };\n}\n\nfunction createArrivalYearComparator() {\n  return (visitA, visitB) => {\n    const { arrivalDateTime: arrivalDateTimeA } = visitA;\n    const { arrivalDateTime: arrivalDateTimeB } = visitB;\n\n    if (!arrivalDateTimeA && !arrivalDateTimeB) {\n      return 0;\n    }\n    if (!arrivalDateTimeA || !arrivalDateTimeB) {\n      // here also considered previous check: !arrivalDateTimeA && !arrivalDateTimeB\n      return arrivalDateTimeA ? -1 : 1;\n    }\n    return arrivalDateTimeB.getFullYear() - arrivalDateTimeA.getFullYear();\n  };\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport MUILink from '@material-ui/core/Link';\nimport { usePaths } from 'modules/packages';\nimport { useTripsStats } from 'travel/dataSource';\nimport { useQueryFilter } from 'core/context/QueryFilterContext';\nimport renderCountry from './blocks/renderCountry';\nimport renderLocation from './blocks/renderLocation';\nimport renderTrip from './blocks/renderTrip';\nimport renderYear from './blocks/renderYear';\nimport {\n  KEY_GROUP_VISITS_BY,\n  GROUP_VISITS_BY,\n  KEY_SORT_VISITS_BY,\n  SORT_VISITS_BY,\n} from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\nimport useVisitsGroupingSidebar from './useVisitsGroupingSidebar';\nimport switchSortingFn from './switchSortingFn';\nimport switchNodesOrder from './switchNodesOrder';\nimport calcCounters from './calcCounters';\n\nexport default function VisitsPage({\n  match: {\n    params: { userAlias },\n  },\n}) {\n  const classes = useVisitsPageStyles();\n  const {\n    queryFilter: {\n      [KEY_GROUP_VISITS_BY]: groupBy = GROUP_VISITS_BY.LOCATIONS,\n      [KEY_SORT_VISITS_BY]: sortBy = SORT_VISITS_BY.ALPHABET,\n    } = {},\n    setQueryFilter,\n  } = useQueryFilter();\n  useVisitsGroupingSidebar(setQueryFilter, { groupBy, sortBy });\n\n  const provision = useTripsStats({ userAlias });\n  const {\n    isPending,\n    isError,\n    updatesCounter,\n    visitsIds,\n    visitsDict,\n    tripsDict,\n    locationsDict,\n    locationsRating,\n    countriesDict,\n  } = provision;\n\n  const {\n    travel: { locations: locationsPath },\n  } = usePaths();\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  const unsortedVisitsList = visitsIds\n    .map(visitId => visitsDict[visitId])\n    .filter(Boolean);\n\n  const counters = calcCounters(unsortedVisitsList, updatesCounter);\n  const sortingFn = switchSortingFn(\n    { groupBy, sortBy },\n    { locationsDict, tripsDict, countriesDict, locationsRating },\n    counters,\n  );\n  const visitsList = unsortedVisitsList.sort(sortingFn);\n\n  const nodes = visitsList.reduce((nodesMemo, visit, index) => {\n    const prevVisit = index > 0 ? visitsList[index - 1] : {};\n    const {\n      countryId: prevCountryId,\n      locationId: prevLocationId,\n      tripId: prevTripId,\n    } = prevVisit;\n    const { countryId, locationId, tripId } = visit;\n\n    const prevYear = resolveArrivalYear(prevVisit);\n    const year = resolveArrivalYear(visit);\n\n    const isGroupedByTrip = checkIsGroupedByTrip(groupBy);\n    const isGroupedByYear = checkIsGroupedByYear(groupBy);\n    const isGroupedByCountry = checkIsGroupedByCountry(groupBy);\n\n    const changes = {\n      isTripChanged: isGroupedByTrip && prevTripId !== tripId,\n      isYearChanged: isGroupedByYear && prevYear !== year,\n      isCountryChanged: isGroupedByCountry && prevCountryId !== countryId,\n      isLocationChanged: prevLocationId !== locationId,\n    };\n\n    const renderProps = {\n      changes,\n      classes,\n      counters,\n      groupBy,\n      sortBy,\n      provision,\n      visit,\n      year,\n    };\n\n    const nodesToPush = switchNodesOrder(\n      {\n        tripNode: renderTrip(renderProps),\n        countryNode: renderCountry(renderProps),\n        yearNode: renderYear(renderProps),\n        locationNode: renderLocation(renderProps),\n      },\n      groupBy,\n    ).filter(Boolean);\n\n    nodesToPush.forEach(nodeToPush => {\n      nodesMemo.push(nodeToPush);\n    });\n    return nodesMemo;\n  }, []);\n\n  const titleNode = (\n    <Typography variant=\"h6\" paragraph={true}>\n      <span>Всего </span>\n      <MUILink to={locationsPath.toUrl({ userAlias })} component={Link}>\n        {`${Object.keys(counters?.locations || {}).length} городов `}\n      </MUILink>\n      <span>из </span>\n      <span>{`${Object.keys(counters?.countries || {}).length} стран `}</span>\n    </Typography>\n  );\n\n  return (\n    <div>\n      {titleNode}\n      {nodes}\n    </div>\n  );\n}\n\nfunction resolveArrivalYear({ arrivalDateTime }) {\n  if (!arrivalDateTime) {\n    return null;\n  }\n  return arrivalDateTime.getFullYear(arrivalDateTime);\n}\n\nfunction checkIsGroupedByTrip(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS ||\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES\n  );\n}\n\nfunction checkIsGroupedByYear(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.YEARS ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n\nfunction checkIsGroupedByCountry(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n\n/*\n// byCities -> groupBy(visits, cities) '123': []\nЧелябинск, Россия, 3 визита в 2011 и 2012\n-> 20 августа 2011\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountries -> groupBy(visits, countries & cities) '1-123': []\n[Россия](/travel/:userAlias/countries/1)\n[Челябинск](/travel/:userAlias/cities/123), 3 визита в [2011](/travel/:userAlias/year/2011) и [2012](/travel/:userAlias/year/2012) [заметки](/travel/:userAlias/cities/123/story)\n-> 20 августа 2011 [заметки](/travel/:userAlias/visits/111/story)\n   до 5 фоток\n-> 20-21 июня 2012 [заметки](/travel/:userAlias/visits/222/story)\n   до 5 фоток\n-> 31 июля-1 августа 2012 [заметки](/travel/:userAlias/visits/333/story)\n   до 5 фоток\n\n// byYears -> groupBy(visits, years & cities) '2011-123': []\n2011\nЧелябинск, Россия\n-> 20 августа 2011\n\n2012\nЧелябинск, Россия, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byYearsAndCountries -> groupBy(visits, years & countries & cities)  '2011-1-123': []\n2011\nРоссия\nЧелябинск\n-> 20 августа 2011\n\n2012\nРоссия\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountriesAndYears -> groupBy(visits, countries & years & cities) 'c1-y2011-l123': []\nРоссия\n\n2011\nЧелябинск\n-> 20 августа 2011\n\n2012\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n*/\n","import { GROUP_VISITS_BY } from './consts';\n\nexport default function switchNodesOrder(\n  { tripNode, countryNode, yearNode, locationNode },\n  groupBy,\n) {\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      return [tripNode, locationNode];\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return [tripNode, countryNode, locationNode];\n    case GROUP_VISITS_BY.COUNTRIES:\n      return [countryNode, locationNode];\n    case GROUP_VISITS_BY.YEARS:\n      return [yearNode, locationNode];\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return [yearNode, countryNode, locationNode];\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return [countryNode, yearNode, locationNode];\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      // return {push:[locationNode], keep: [countryNode, yearNode]};\n      return [locationNode];\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\n\nconst RATING_LOCALIZATION = {\n  [LOCATION_RATING.PLACE_TO_LIVE]: 'Жил бы здесь',\n  [LOCATION_RATING.FEW_PER_YEAR]: 'Несколько раз в год',\n  [LOCATION_RATING.ONCE_PER_YEAR]: 'Раз в год',\n  [LOCATION_RATING.ONCE_PER_TWO_YEARS]: 'Раз в пару лет',\n  [LOCATION_RATING.ONCE_PER_FIVE_YEARS]: 'Раз в пять лет',\n  [LOCATION_RATING.ONCE_PER_DECADE]: 'Раз в десятилетие',\n  [LOCATION_RATING.TWICE_PER_LIVE]: 'Пару раз в жизни',\n  [LOCATION_RATING.ONCE_PER_LIVE]: 'Раз в жизни',\n  [LOCATION_RATING.NEVER]: 'Никогда',\n};\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%',\n  },\n});\n\nexport default function LocationRating({\n  locationId,\n  locationRating,\n  isEditable,\n  onSubmitLocationRating,\n}) {\n  const classes = useStyles();\n  if (!isEditable) {\n    return <div>{RATING_LOCALIZATION[locationRating]}</div>;\n  }\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink={true} id=\"select-location-rating-label\">\n        Я бы ездил сюда\n      </InputLabel>\n      <Select\n        labelId=\"select-location-rating-label\"\n        id=\"select-location-rating\"\n        value={locationRating}\n        onChange={event => {\n          onSubmitLocationRating(event, locationId, event.target.value);\n        }}\n      >\n        <MenuItem value={LOCATION_RATING.PLACE_TO_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.PLACE_TO_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.FEW_PER_YEAR}>\n          {RATING_LOCALIZATION[LOCATION_RATING.FEW_PER_YEAR]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_YEAR}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_YEAR]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_TWO_YEARS}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_TWO_YEARS]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_FIVE_YEARS}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_FIVE_YEARS]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_DECADE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_DECADE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.TWICE_PER_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.TWICE_PER_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.NEVER}>\n          {RATING_LOCALIZATION[LOCATION_RATING.NEVER]}\n        </MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nLocationRating.propTypes = {\n  locationRating: PropTypes.number,\n  locationId: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  onSubmitLocationRating: PropTypes.func.isRequired,\n};\n\nLocationRating.defaultProps = { locationRating: null };\n","import { useMemo, useEffect, useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nconst createControlledPromise = () => {\n  // This fields will be initialized synchronously in promise constructor\n  let resolver = null;\n  let rejector = null;\n\n  const promise = new Promise((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  return { promise, resolver, rejector };\n};\n\nexport default markersCoords => {\n  const { promise: apiPromise, resolver: handleGoogleApiLoaded } = useMemo(\n    createControlledPromise,\n    [],\n  );\n\n  const previousCoords = useRef(null);\n  const changesCount = useRef(0);\n\n  useEffect(() => {\n    if (!isEqual(previousCoords, markersCoords)) {\n      changesCount.current += 1;\n    }\n  });\n\n  useEffect(\n    () => {\n      let markers = [];\n      apiPromise.then(api => {\n        const { map, maps } = api;\n        const bounds = new maps.LatLngBounds();\n        markers = markersCoords.map(({ lat, lon }) => {\n          const marker = new maps.Marker({ position: { lat, lng: lon }, map });\n          bounds.extend(marker.position);\n          return marker;\n        });\n        map.fitBounds(bounds);\n        const zoom = map.getZoom();\n        if (zoom > 11) {\n          map.setZoom(11);\n        }\n      });\n      return () => markers.forEach(marker => marker.setMap(null));\n    },\n    [changesCount.current],\n  );\n  return { handleGoogleApiLoaded };\n};\n","/* globals __GOOGLE_MAP_API_KEY__ */\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport GoogleMapReact from 'google-map-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport LocationRating from './blocks/LocationRating';\nimport useMarkers from './useMarkers';\nimport useUserLocations from './useUserLocations';\n\nconst useStyles = makeStyles({\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  googleMapContainer: {\n    margin: '12px 0',\n    width: '800px',\n    maxWidth: '100%',\n    height: '400px',\n    maxHeight: '100%',\n  },\n});\n\nconst domain = 'travel.LocationsPage';\nexport default function LocationsPage({\n  match: {\n    params: { userAlias, strLocationId },\n  },\n}) {\n  const classes = useStyles();\n\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds,\n    locationsRating,\n    submitLocationRating,\n  } = useUserLocations({ domain, userAlias });\n\n  const locationId = parseInt(strLocationId, 10);\n  const actualLocationsIds = locationId ? [locationId] : locationsIds;\n\n  const handleSubmitLocationRating = useCallback(\n    (event, locationIdToSubmit, value) => {\n      submitLocationRating({\n        query: { rating: value, id: String(locationIdToSubmit) },\n        condition: Boolean(locationIdToSubmit),\n      });\n    },\n  );\n\n  const { handleGoogleApiLoaded } = useMarkers(\n    actualLocationsIds.map(\n      locationIdToShowMarker => locationsDict[locationIdToShowMarker],\n    ),\n  );\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n  if (locationId && !locationsIds.includes(locationId)) {\n    return (\n      <div>{`Путешественик ${userAlias} еще не посетил данную локацию`}</div>\n    );\n  }\n\n  const isEditable = isAuthenticated && authenticatedUserAlias === userAlias;\n  return (\n    <div className={classes.container}>\n      <div className={classes.googleMapContainer}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: __GOOGLE_MAP_API_KEY__ }}\n          center={{ lat: 0, lng: 0 }}\n          zoom={11}\n          onGoogleApiLoaded={handleGoogleApiLoaded}\n        />\n      </div>\n      {actualLocationsIds.map(locationsIdToRender => {\n        const location = locationsDict[locationsIdToRender];\n        if (!location) {\n          return null;\n        }\n        const { locationName } = location;\n        return (\n          <React.Fragment key={locationsIdToRender}>\n            <h1 className={classes.location}>{locationName}</h1>\n            <LocationRating\n              locationId={locationsIdToRender}\n              locationRating={locationsRating[locationsIdToRender]}\n              isEditable={isEditable}\n              onSubmitLocationRating={handleSubmitLocationRating}\n            />\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\n\nLocationsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n      strLocationId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n","import useUser from 'travel/dataSource/useUser';\nimport { useTripsStats } from 'travel/dataSource/useTrips';\nimport { useLocationRatingRequest } from 'travel/dataSource/useLocations';\n\nexport default function useUserLocations({ domain, userAlias }) {\n  const {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds = [],\n    locationsRating,\n  } = useTripsStats({\n    userAlias,\n  });\n  const { submitLocationRating } = useLocationRatingRequest({ domain });\n\n  return {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds,\n    locationsRating,\n    submitLocationRating,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport compose from 'lodash/fp/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { toNumber } from 'modules/utilities/types/numbers';\nimport { selectDict } from 'core/connection';\nimport withProvision from 'core/connection/withProvision';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { sortVisitsByTrips } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst memoizedSortVisitsByTrips = memoizeByLastArgs(sortVisitsByTrips);\n\nconst styles = {\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  storyPart: { margin: '12px 0' },\n};\n\nconst TripStoryPage = ({\n  classes,\n  visits: { data: visitsList = [] } = {},\n  ridesDict,\n}) => {\n  if (!ridesDict || !visitsList) {\n    return <div>None</div>;\n  }\n\n  const noDataNode = <div>Заметки о поездке не найдены</div>;\n  if (!visitsList.length) {\n    return noDataNode;\n  }\n\n  const lastVisitIndex = visitsList.length - 1;\n  const storiesNodes = memoizedSortVisitsByTrips(visitsList).map(\n    (\n      { visitId, arrivalRideId, departureRideId, visitComment, locationName },\n      visitIndex,\n    ) => {\n      const { rideComment: arrivalRideComment } =\n        ridesDict[arrivalRideId] || {};\n\n      let departureRideComment;\n      if (lastVisitIndex === visitIndex) {\n        const { rideComment } = ridesDict[departureRideId] || {};\n        departureRideComment = rideComment;\n      }\n\n      if (!arrivalRideComment && !departureRideComment && !visitComment) {\n        return null;\n      }\n      return (\n        <article key={`id${visitId}`} className={classes.visitContainer}>\n          <h1 className={classes.location}>{locationName}</h1>\n          {Boolean(arrivalRideComment) && (\n            <section className={classes.storyPart}>\n              {arrivalRideComment}\n            </section>\n          )}\n          {Boolean(visitComment) && (\n            <section className={classes.storyPart}>{visitComment}</section>\n          )}\n          {Boolean(departureRideComment) && (\n            <section className={classes.storyPart}>\n              {departureRideComment}\n            </section>\n          )}\n        </article>\n      );\n    },\n  );\n\n  const contentNode = storiesNodes.some(Boolean) ? storiesNodes : noDataNode;\n  return <div className={classes.container}>{contentNode}</div>;\n};\n\nTripStoryPage.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n};\n\nconst mapStateToRequirements = (\n  state,\n  {\n    match: {\n      params: { strTripId },\n    },\n  },\n) => {\n  const tripId = toNumber(strTripId);\n  return {\n    identity: {\n      strTripId,\n    },\n    request: {\n      rides: {\n        modelName: 'rides',\n        query: {\n          filter: { trip_id: { comparator: '=', value: tripId } },\n          navigation: { isDisabled: true },\n        },\n      },\n      visits: {\n        modelName: 'visits',\n        query: {\n          filter: { trip_id: { comparator: '=', value: tripId } },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n    domain: 'tripStoryPage',\n  };\n};\n\nconst mapStateToProps = state => ({\n  ridesDict: selectDict(state, 'rides'),\n});\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  withProvision(mapStateToRequirements, mapStateToProps),\n)(TripStoryPage);\n","export const toNumber = input => {\n  const number = Number(input);\n  return Number.isNaN(number) ? NaN : parseFloat(input);\n};\n\nexport const toInteger = input => {\n  const number = Number(input);\n  return Number.isNaN(number) ? NaN : parseInt(input, 10);\n};\n","import { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias }) {\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: { userAlias, navigation: { isDisabled: true } },\n  });\n}\n\nexport function useTripsStats({ userAlias }) {\n  const tripsProvision = useTrips({ userAlias });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n  );\n\n  const ridesIds = Array.from(\n    new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n  );\n\n  const countriesIds = Array.from(\n    new Set(visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || [])),\n  );\n\n  const locationsIds = Array.from(\n    new Set(\n      visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n    ),\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isPending = true, hasFallback } = {} } = props;\n  if (isPending && !hasFallback) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  const provision = useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n\n  const { data: countriesIds = [] } = selectResult(provision) || {};\n\n  return {\n    countriesIds,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default (tripVisitsList, countriesDict, originCountryId, fallback) => {\n  if (!tripVisitsList.length) {\n    return fallback;\n  }\n  const visitsByCountries = Object.keys(\n    groupBy(\n      tripVisitsList.filter(\n        ({ visitType }) => visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n  if (visitsByCountries.length === 1) {\n    return (\n      uniqTrimAndJoin(tripVisitsList.map(({ locationName }) => locationName), {\n        maxLength: 4,\n      }) || fallback\n    );\n  }\n  return (\n    uniqTrimAndJoin(\n      visitsByCountries\n        .map(\n          countryId =>\n            Number(countryId) !== originCountryId &&\n            countriesDict[countryId] &&\n            countriesDict[countryId].countryName,\n        )\n        .filter(Boolean),\n      { maxLength: 4 },\n    ) || fallback\n  );\n};\n","import groupBy from 'lodash/groupBy';\nimport mapValues from 'lodash/mapValues';\n\nexport { default as resolveTripCaption } from './resolveTripCaption';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n\nexport const groupAndSortVisitsByTrips = visitsList =>\n  mapValues(groupBy(visitsList, 'tripId'), sortVisitsByTrips);\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport {\n  useProvision,\n  useRequest,\n  selectDict,\n} from 'core/connection';\nimport {\n  selectIsPending,\n  selectIsError,\n  selectIsReady,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  const provision = useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n\n  return {\n    locationsDict,\n    isReady: selectIsReady(provision),\n    isLoading: selectIsPending(provision),\n    isError: selectIsError(provision),\n    counters: provision.counters,\n  };\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n"],"sourceRoot":""}