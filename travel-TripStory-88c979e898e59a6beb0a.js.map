{"version":3,"sources":["webpack:///./src/packages/travel/components/models/locations/LocationCard/useMarker.js","webpack:///./src/packages/travel/components/models/locations/LocationCard/LocationCard.jsx","webpack:///./src/packages/travel/pages/LocationPage/LocationPage.jsx","webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack:///./src/packages/travel/models/trips/utils/index.js","webpack:///./src/modules/utilities/types/numbers.js","webpack:///./src/packages/travel/pages/TripStoryPage/TripStoryPage.jsx"],"names":["createControlledPromise","resolver","rejector","promise","Promise","resolve","reject","LocationCard","_ref10","classes","_ref10$location","location","locationName","lat","lon","_ref10$visits","visits","_ref10$visits$data","data","visitsList","ridesDict","noDataNode","react_default","a","createElement","length","handleGoogleApiLoaded","_ref","_useMemo","useMemo","apiPromise","useEffect","marker","then","api","map","maps","Marker","position","lng","setMap","useMarker","orderedAndCountedVisitsByYear","visitsCountByYear","_ref2","arrivalRideId","arrivalDateTime","filter","Boolean","reduce","memo","date","year","getFullYear","Object","entries","sort","_ref4","_ref5","_slicedToArray","_ref8","_ref9","key","value","concat","join","renderOrderedAndCountedVisitsByYear","className","container","googleMapContainer","lib_default","bootstrapURLKeys","__GOOGLE_MAP_API_KEY__","center","defaultZoom","onGoogleApiLoaded","propTypes","PropTypes","objectOf","string","isRequired","shape","locationPropTypes","arrayOf","visitPropTypes","ridePropTypes","compose","withStyles","fontSize","lineHeight","visitContainer","margin","fontWeight","width","maxWidth","height","maxHeight","withProvision","state","_ref11","locationId","_ref12$value","selectProvisionStatus","_ref12$value$location","requiredVisitIds","request","modelName","observe","query","id","location_id","comparator","navigation","isDisabled","rides","condition","visit_id","domain","selectDict","LocationPage","strLocationId","match","params","locations_LocationCard_LocationCard","toNumber","withLoader","Component","props","_props$provision","provision","_props$provision$isPe","isPending","hasFallback","PlainLoader","__webpack_exports__","_len2","arguments","provisionParams","Array","_key2","ExtendableComponent","_len","funcsArray","_key","arg","reduceRight","composed","func","provide","apply","uniqTrimAndJoin","array","maxLength","_ref$separator","separator","uniqArray","uniq","result","slice","resolveTripCaption","tripVisitsList","countriesDict","originCountryId","fallback","visitsByCountries","keys","groupBy","visitType","VISIT_TYPES","TRANSIT","countryId","Number","countryName","__webpack_require__","d","sortVisitsByTrips","utils_groupAndSortVisitsByTrips","orderInTrip","groupAndSortVisitsByTrips","mapValues","input","number","isNaN","NaN","parseFloat","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router__WEBPACK_IMPORTED_MODULE_2__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_3__","lodash_fp_compose__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","modules_utilities_memo__WEBPACK_IMPORTED_MODULE_5__","modules_utilities_types_numbers__WEBPACK_IMPORTED_MODULE_6__","core_connection__WEBPACK_IMPORTED_MODULE_7__","core_connection_withProvision__WEBPACK_IMPORTED_MODULE_8__","travel_models_rides_propTypes__WEBPACK_IMPORTED_MODULE_9__","travel_models_trips_propTypes__WEBPACK_IMPORTED_MODULE_10__","travel_models_trips_utils__WEBPACK_IMPORTED_MODULE_11__","travel_models_visits_propTypes__WEBPACK_IMPORTED_MODULE_12__","memoizedSortVisitsByTrips","memoizeByLastArgs","TripStoryPage","_ref$visits","_ref$visits$data","lastVisitIndex","storiesNodes","visitIndex","departureRideComment","visitId","departureRideId","visitComment","arrivalRideComment","rideComment","storyPart","contentNode","some","trips","tripPropTypes","ridesPropTypes","withRouter","strTripId","tripId","identity","trip_id"],"mappings":"yOAEMA,EAA0B,WAE9B,IAAIC,EAAW,KACXC,EAAW,KAMf,MAAO,CAAEC,QAJO,IAAIC,QAAQ,SAACC,EAASC,GACpCL,EAAWI,EACXH,EAAWI,IAEKL,WAAUC,+ZCE9B,IAmCMK,EAAe,SAAAC,GAKf,IAJJC,EAIID,EAJJC,QAIIC,EAAAF,EAHJG,SAAYC,GAGRF,OAAA,IAAAA,EAHmC,GAGnCA,GAHQE,aAAcC,EAGtBH,EAHsBG,IAAKC,EAG3BJ,EAH2BI,IAG3BC,EAAAP,EAFJQ,OAEIC,GAAAF,OAAA,IAAAA,EAFgC,GAEhCA,GAFMG,KAAMC,OAEZ,IAAAF,EAFyB,GAEzBA,EADJG,EACIZ,EADJY,UAEMC,EAAaC,EAAAC,EAAAC,cAAA,2CACnB,IAAKL,EAAWM,OACd,OAAOJ,EAHL,IAMIK,ED7CK,SAAAC,GAAkB,IAAfd,EAAec,EAAfd,IAAKC,EAAUa,EAAVb,IAAUc,EACkCC,kBAC/D7B,EACA,IAFe8B,EADcF,EACvBzB,QAA+BuB,EADRE,EACF3B,SAoB7B,OAfA8B,oBACE,WACE,IAAIC,EAKJ,OAJAF,EAAWG,KAAK,SAAAC,GAAO,IACbC,EAAcD,EAAdC,IAAKC,EAASF,EAATE,KACbJ,EAAS,IAAII,EAAKC,OAAO,CAAEC,SAAU,CAAEzB,MAAK0B,IAAKzB,GAAOqB,UAEnD,WACDH,GACFA,EAAOQ,OAAO,QAIpB,CAAC3B,EAAKC,IAED,CAAEY,yBCwByBe,CAAU,CAAE5B,MAAKC,QAA3CY,sBAEFgB,EAnCoC,SAAAf,GAA+B,IAA5BR,EAA4BQ,EAA5BR,WAAYC,EAAgBO,EAAhBP,UACnDuB,EAAoBxB,EACvBgB,IAAI,SAAAS,GAAuB,IAApBC,EAAoBD,EAApBC,cAEN,OAD4BzB,EAAUyB,IAAkB,IAAhDC,kBAGTC,OAAOC,SACPC,OAAO,SAACC,EAAMC,GACb,IAAMC,EAAOD,EAAKE,cAKlB,OAJKH,EAAKE,KACRF,EAAKE,GAAQ,GAEfF,EAAKE,IAAS,EACPF,GACN,IAEL,OAAOI,OAAOC,QAAQZ,GACnBa,KAAK,SAAAC,EAAAC,GAAA,OAAAC,EAAAF,EAAA,MAAAE,EAAAD,EAAA,QACLvB,IAAI,SAAAyB,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAEE,EAAFD,EAAA,GAAOE,EAAPF,EAAA,UAAmBE,EAAQ,EAAR,GAAAC,OAAeF,EAAf,MAAAE,OAAuBD,GAAUD,IACxDG,KAAK,MAgB8BC,CAAoC,CACxE/C,aACAC,cAEF,OACEE,EAAAC,EAAAC,cAAA,OAAK2C,UAAW1D,EAAQ2D,WACtB9C,EAAAC,EAAAC,cAAA,MAAI2C,UAAW1D,EAAQE,UAAWC,GAClCU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAAAwC,OAAmB7C,EAAWM,OAA9B,SADF,IAGGiB,GACCpB,EAAAC,EAAAC,cAAA,iBAAAwC,OAAYtB,KAGhBpB,EAAAC,EAAAC,cAAA,OAAK2C,UAAW1D,EAAQ4D,oBACtB/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEgD,iBAAkB,CAAET,IAAKU,2CACzBC,OAAQ,CAAE5D,MAAK0B,IAAKzB,GACpB4D,YAAa,GACbC,kBAAmBjD,OAO7BnB,EAAaqE,UAAY,CACvBnE,QAASoE,IAAUC,SAASD,IAAUE,QAAQC,WAC9CrE,SAAUkE,IAAUI,MAAMC,WAAmBF,WAC7ChE,OAAQ6D,IAAUI,MAAM,CACtB/D,KAAM2D,IAAUM,QAAQN,IAAUI,MAAMG,cACvCJ,WACH5D,UAAWyD,IAAUC,SAASD,IAAUI,MAAMI,YAAgBL,YAGhE,IAqCeM,MACbC,YAzHa,CACbnB,UAAW,CAAEoB,SAAU,OAAQC,WAAY,OAC3CC,eAAgB,CAAEC,OAAQ,UAC1BhF,SAAU,CAAEiF,WAAY,OAAQJ,SAAU,QAC1CnB,mBAAoB,CAClBsB,OAAQ,SACRE,MAAO,QACPC,SAAU,OACVC,OAAQ,QACRC,UAAW,UAiHbC,YAnC6B,SAACC,EAADC,GAA2B,IAAjBC,EAAiBD,EAAjBC,WAAiBC,GAGpDC,YAAsBJ,EAAO,wBAA0B,IADzDnC,MAFsDwC,GAAAF,OAAA,IAAAA,EAEc,GAFdA,GAE7C,uBAA+BG,GAFcD,OAAA,IAAAA,EAEO,GAFPA,GAEpBrF,KAEpC,MAAO,CACLuF,QAAS,CACP9F,SAAU,CACR+F,UAAW,YACXC,QAASP,EACTQ,MAAO,CAAEC,GAAIT,IAEfpF,OAAQ,CACN0F,UAAW,SACXC,QAASP,EACTQ,MAAO,CACL7D,OAAQ,CAAE+D,YAAa,CAAEC,WAAY,IAAKhD,MAAOqC,IACjDY,WAAY,CAAEC,YAAY,KAG9BC,MAAO,CACLR,UAAW,QACXS,UAAWX,GAAoBA,EAAiB/E,OAChDkF,QAASH,EACTI,MAAO,CACL7D,OAAQ,CAAEqE,SAAU,CAAEL,WAAY,KAAMhD,MAAOyC,IAC/CQ,WAAY,CAAEC,YAAY,MAIhCI,OAAQ,iBAjCY,SAAAnB,GAAK,MAAK,CAChC9E,UAAWkG,YAAWpB,EAAO,YAoChBZ,CAGb/E,GCnIIgH,EAAe,SAAA5F,GAAA,IAEP6F,EAFO7F,EACnB8F,MACEC,OAAUF,cAFO,OAIflG,EAAAC,EAAAC,cAACmG,EAAD,CAAcvB,WAAYwB,YAASJ,MAEzCD,EAAa3C,UAAY,CACvB6C,MAAO5C,IAAUI,MAAM,CACrByC,OAAQ7C,IAAUI,MAAM,CAAEuC,cAAe3C,IAAUE,SAAUC,aAC5DA,YAGUuC,2ECZFM,EAAa,SAAAC,GAAS,OAAI,SAAAC,GAAS,IAAAC,EACgBD,EAAtDE,UADsCC,GAAAF,OAAA,IAAAA,EACS,GADTA,GACzBG,iBADyB,IAAAD,KACPE,EADOJ,EACPI,YACvC,OAAID,IAAcC,EACT9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,MAEF/G,EAAAC,EAAAC,cAACsG,EAAcC,cCJTO,EAAA,qBAAAC,EAAAC,UAAA/G,OAAIgH,EAAJ,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAIF,EAAJE,GAAAH,UAAAG,GAAA,OAAwB,SAAAC,GAAmB,OAH1C,mBAAAC,EAAAL,UAAA/G,OAAIqH,EAAJ,IAAAJ,MAAAG,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAID,EAAJC,GAAAP,UAAAO,GAAA,OAAmB,SAAAC,GAAG,OACpCF,EAAWG,YAAY,SAACC,EAAUC,GAAX,OAAoBA,EAAKD,IAAWF,IAG3D1D,CACE8D,IAAOC,WAAP,EAAWZ,GACXZ,EAFFvC,CAGEsD,iGCRWU,EAAA,SAACC,EAAD5H,GAA4C,IAAlC6H,EAAkC7H,EAAlC6H,UAAkCC,EAAA9H,EAAvB+H,iBAAuB,IAAAD,EAAX,KAAWA,EACnDE,EAAYC,IAAKL,GACjBM,EAASF,EAAUG,MAAM,EAAGN,GAAWvF,KAAKyF,GAClD,OAAIC,EAAUlI,OAAS+H,EACrB,GAAAxF,OAAU6F,EAAV,OAEKA,YCJME,EAAA,SAACC,EAAgBC,EAAeC,EAAiBC,GAC9D,IAAKH,EAAevI,OAClB,OAAO0I,EAET,IAAMC,EAAoB9G,OAAO+G,KAC/BC,IACEN,EAAejH,OACb,SAAApB,GAAA,OAAAA,EAAG4I,YAA8BC,cAAYC,UAE/C,cAGJ,OAAiC,IAA7BL,EAAkB3I,OAElB6H,EAAgBU,EAAe7H,IAAI,SAAAS,GAAA,OAAAA,EAAGhC,eAAkC,CACtE4I,UAAW,KACPW,EAIRb,EACEc,EACGjI,IACC,SAAAuI,GAAS,OACPC,OAAOD,KAAeR,GACtBD,EAAcS,IACdT,EAAcS,GAAWE,cAE5B7H,OAAOC,SACV,CAAEwG,UAAW,KACVW,GClCTU,EAAAC,EAAAxC,EAAA,sBAAAyC,IAAAF,EAAAC,EAAAxC,EAAA,sBAAA0C,IAAAH,EAAAC,EAAAxC,EAAA,sBAAAyB,IAKO,IAAMgB,EAAoB,SAAA5J,GAAU,OACzCA,EAAWqC,KACT,SAAA7B,EAAAiB,GAAA,OAAAjB,EAAGsJ,YAAHrI,EAAkCqI,eAIzBC,EAA4B,SAAA/J,GAAU,OACjDgK,IAAUb,IAAQnJ,EAAY,UAAW4J,sCCZ3CF,EAAAC,EAAAxC,EAAA,sBAAAV,IAAO,IAAMA,EAAW,SAAAwD,GACtB,IAAMC,EAASV,OAAOS,GACtB,OAAOT,OAAOW,MAAMD,GAAUE,IAAMC,WAAWJ,sCCFjDP,EAAAY,EAAAnD,GAAA,IAAAoD,EAAAb,EAAA,GAAAc,EAAAd,EAAAe,EAAAF,GAAAG,EAAAhB,EAAA,GAAAiB,EAAAjB,EAAAe,EAAAC,GAAAE,EAAAlB,EAAA,IAAAmB,EAAAnB,EAAA,KAAAoB,EAAApB,EAAAe,EAAAI,GAAAE,EAAArB,EAAA,IAAAsB,EAAAtB,EAAA,KAAAuB,EAAAvB,EAAA,KAAAwB,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAA,KAAA0B,EAAA1B,EAAA,KAAA2B,EAAA3B,EAAA,KAAA4B,EAAA5B,EAAA,KAAA6B,EAAA7B,EAAA,KAcM8B,EAA4BC,YAAkB7B,KAS9C8B,EAAgB,SAAAlL,GAIhB,IAHJlB,EAGIkB,EAHJlB,QAGIqM,EAAAnL,EAFJX,OAEI+L,GAAAD,OAAA,IAAAA,EAFgC,GAEhCA,GAFM5L,KAAMC,OAEZ,IAAA4L,EAFyB,GAEzBA,EADJ3L,EACIO,EADJP,UAEA,IAAKA,IAAcD,EACjB,OAAOwK,EAAApK,EAAAC,cAAA,mBAGT,IAAMH,EAAasK,EAAApK,EAAAC,cAAA,2CACnB,IAAKL,EAAWM,OACd,OAAOJ,EAGT,IAAM2L,EAAiB7L,EAAWM,OAAS,EACrCwL,EAAeN,EAA0BxL,GAAYgB,IACzD,SAAAS,EAEEsK,GACG,IAICC,EANFC,EAECxK,EAFDwK,QAASvK,EAERD,EAFQC,cAAewK,EAEvBzK,EAFuByK,gBAAiBC,EAExC1K,EAFwC0K,aAAc1M,EAEtDgC,EAFsDhC,aAGpC2M,GACnBnM,EAAUyB,IAAkB,IADtB2K,YAIJR,IAAmBE,IAErBC,GADwB/L,EAAUiM,IAAoB,IAA9CG,aAIV,OAAKD,GAAuBJ,GAAyBG,EAInD3B,EAAApK,EAAAC,cAAA,WAASsC,IAAG,KAAAE,OAAOoJ,GAAWjJ,UAAW1D,EAAQiF,gBAC/CiG,EAAApK,EAAAC,cAAA,MAAI2C,UAAW1D,EAAQE,UAAWC,GACjCoC,QAAQuK,IACP5B,EAAApK,EAAAC,cAAA,WAAS2C,UAAW1D,EAAQgN,WACzBF,GAGJvK,QAAQsK,IACP3B,EAAApK,EAAAC,cAAA,WAAS2C,UAAW1D,EAAQgN,WAAYH,GAEzCtK,QAAQmK,IACPxB,EAAApK,EAAAC,cAAA,WAAS2C,UAAW1D,EAAQgN,WACzBN,IAfA,OAuBPO,EAAcT,EAAaU,KAAK3K,SAAWiK,EAAe5L,EAChE,OAAOsK,EAAApK,EAAAC,cAAA,OAAK2C,UAAW1D,EAAQ2D,WAAYsJ,IAG7Cb,EAAcjI,UAAY,CACxBnE,QAASoE,IAAUC,SAASD,IAAUE,QAAQC,WAC9C4I,MAAO/I,IAAUI,MAAM,CACrB/D,KAAM2D,IAAUM,QAAQN,IAAUI,MAAM4I,cACvC7I,WACHhE,OAAQ6D,IAAUI,MAAM,CACtB/D,KAAM2D,IAAUM,QAAQN,IAAUI,MAAMG,cACvCJ,WACH5D,UAAWyD,IAAUC,SAASD,IAAUI,MAAM6I,YAAiB9I,YAwClDM,cACbyI,IACAxI,YAlHa,CACbnB,UAAW,CAAEoB,SAAU,OAAQC,WAAY,OAC3CC,eAAgB,CAAEC,OAAQ,UAC1BhF,SAAU,CAAEiF,WAAY,OAAQJ,SAAU,QAC1CiI,UAAW,CAAE9H,OAAQ,YA+GrBM,YAxC6B,SAC7BC,EAD6BxC,GAO1B,IAHWsK,EAGXtK,EAJD+D,MACEC,OAAUsG,UAIRC,EAASrG,YAASoG,GACxB,MAAO,CACLE,SAAU,CACRF,aAEFvH,QAAS,CACPS,MAAO,CACLR,UAAW,QACXE,MAAO,CACL7D,OAAQ,CAAEoL,QAAS,CAAEpH,WAAY,IAAKhD,MAAOkK,IAC7CjH,WAAY,CAAEC,YAAY,KAG9BjG,OAAQ,CACN0F,UAAW,SACXE,MAAO,CACL7D,OAAQ,CAAEoL,QAAS,CAAEpH,WAAY,IAAKhD,MAAOkK,IAC7CjH,WAAY,CAAEC,YAAY,MAIhCI,OAAQ,kBAIY,SAAAnB,GAAK,MAAK,CAChC9E,UAAWkG,YAAWpB,EAAO,YAGhBZ,CAIbuH","file":"travel-TripStory-88c979e898e59a6beb0a.js","sourcesContent":["import { useMemo, useEffect } from 'react';\n\nconst createControlledPromise = () => {\n  // This fields will be initialized synchronously in promise constructor\n  let resolver = null;\n  let rejector = null;\n\n  const promise = new Promise((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  return { promise, resolver, rejector };\n};\n\nexport default ({ lat, lon }) => {\n  const { promise: apiPromise, resolver: handleGoogleApiLoaded } = useMemo(\n    createControlledPromise,\n    [],\n  );\n\n  useEffect(\n    () => {\n      let marker;\n      apiPromise.then(api => {\n        const { map, maps } = api;\n        marker = new maps.Marker({ position: { lat, lng: lon }, map });\n      });\n      return () => {\n        if (marker) {\n          marker.setMap(null);\n        }\n      };\n    },\n    [lat, lon],\n  );\n  return { handleGoogleApiLoaded };\n};\n","/* globals __GOOGLE_MAP_API_KEY__ */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport GoogleMapReact from 'google-map-react';\nimport compose from 'lodash/fp/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { selectProvisionStatus, selectDict } from 'core/connection';\nimport withProvision from 'core/connection/withProvision';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport visitPropTypes from 'travel/models/visits/propTypes';\nimport ridePropTypes from 'travel/models/rides/propTypes';\nimport useMarker from './useMarker';\n\nconst styles = {\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  googleMapContainer: {\n    margin: '12px 0',\n    width: '800px',\n    maxWidth: '100%',\n    height: '400px',\n    maxHeight: '100%',\n  },\n};\n\nconst renderOrderedAndCountedVisitsByYear = ({ visitsList, ridesDict }) => {\n  const visitsCountByYear = visitsList\n    .map(({ arrivalRideId }) => {\n      const { arrivalDateTime } = ridesDict[arrivalRideId] || {};\n      return arrivalDateTime;\n    })\n    .filter(Boolean)\n    .reduce((memo, date) => {\n      const year = date.getFullYear();\n      if (!memo[year]) {\n        memo[year] = 0;\n      }\n      memo[year] += 1;\n      return memo;\n    }, {});\n\n  return Object.entries(visitsCountByYear)\n    .sort(([keyA], [keyB]) => keyA - keyB)\n    .map(([key, value]) => (value > 1 ? `${key} x${value}` : key))\n    .join(', ');\n};\n\nconst LocationCard = ({\n  classes,\n  location: { locationName, lat, lon } = {},\n  visits: { data: visitsList = [] } = {},\n  ridesDict,\n}) => {\n  const noDataNode = <div>Заметки о поездке не найдены</div>;\n  if (!visitsList.length) {\n    return noDataNode;\n  }\n\n  const { handleGoogleApiLoaded } = useMarker({ lat, lon });\n\n  const orderedAndCountedVisitsByYear = renderOrderedAndCountedVisitsByYear({\n    visitsList,\n    ridesDict,\n  });\n  return (\n    <div className={classes.container}>\n      <h1 className={classes.location}>{locationName}</h1>\n      <div>\n        <span>{`Посещено ${visitsList.length} раз`}</span>\n        &nbsp;\n        {orderedAndCountedVisitsByYear && (\n          <span>{`в ${orderedAndCountedVisitsByYear}`}</span>\n        )}\n      </div>\n      <div className={classes.googleMapContainer}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: __GOOGLE_MAP_API_KEY__ }}\n          center={{ lat, lng: lon }}\n          defaultZoom={11}\n          onGoogleApiLoaded={handleGoogleApiLoaded}\n        />\n      </div>\n    </div>\n  );\n};\n\nLocationCard.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  location: PropTypes.shape(locationPropTypes).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridePropTypes)).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  ridesDict: selectDict(state, 'rides'),\n});\n\nconst mapStateToRequirements = (state, { locationId }) => {\n  const {\n    value: { 'locationPage.visits': { data: requiredVisitIds } = {} } = {},\n  } = selectProvisionStatus(state, 'locationPage.visits') || {};\n  return {\n    request: {\n      location: {\n        modelName: 'locations',\n        observe: locationId,\n        query: { id: locationId },\n      },\n      visits: {\n        modelName: 'visits',\n        observe: locationId,\n        query: {\n          filter: { location_id: { comparator: '=', value: locationId } },\n          navigation: { isDisabled: true },\n        },\n      },\n      rides: {\n        modelName: 'rides',\n        condition: requiredVisitIds && requiredVisitIds.length,\n        observe: requiredVisitIds,\n        query: {\n          filter: { visit_id: { comparator: 'in', value: requiredVisitIds } },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n    domain: 'locationPage',\n  };\n};\n\nexport default compose(\n  withStyles(styles),\n  withProvision(mapStateToRequirements, mapStateToProps),\n)(LocationCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { toNumber } from 'modules/utilities/types/numbers';\nimport LocationCard from 'travel/components/models/locations/LocationCard';\n\nconst LocationPage = ({\n  match: {\n    params: { strLocationId },\n  },\n}) => <LocationCard locationId={toNumber(strLocationId)} />;\n\nLocationPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({ strLocationId: PropTypes.string }).isRequired,\n  }).isRequired,\n};\n\nexport default LocationPage;\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isPending = true, hasFallback } = {} } = props;\n  if (isPending && !hasFallback) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default (tripVisitsList, countriesDict, originCountryId, fallback) => {\n  if (!tripVisitsList.length) {\n    return fallback;\n  }\n  const visitsByCountries = Object.keys(\n    groupBy(\n      tripVisitsList.filter(\n        ({ visitType }) => visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n  if (visitsByCountries.length === 1) {\n    return (\n      uniqTrimAndJoin(tripVisitsList.map(({ locationName }) => locationName), {\n        maxLength: 4,\n      }) || fallback\n    );\n  }\n  return (\n    uniqTrimAndJoin(\n      visitsByCountries\n        .map(\n          countryId =>\n            Number(countryId) !== originCountryId &&\n            countriesDict[countryId] &&\n            countriesDict[countryId].countryName,\n        )\n        .filter(Boolean),\n      { maxLength: 4 },\n    ) || fallback\n  );\n};\n","import groupBy from 'lodash/groupBy';\nimport mapValues from 'lodash/mapValues';\n\nexport { default as resolveTripCaption } from './resolveTripCaption';\n\nexport const sortVisitsByTrips = visitsList =>\n  visitsList.sort(\n    ({ orderInTrip: orderInTripA }, { orderInTrip: orderInTripB }) =>\n      orderInTripA - orderInTripB,\n  );\n\nexport const groupAndSortVisitsByTrips = visitsList =>\n  mapValues(groupBy(visitsList, 'tripId'), sortVisitsByTrips);\n","export const toNumber = input => {\n  const number = Number(input);\n  return Number.isNaN(number) ? NaN : parseFloat(input);\n};\n\nexport const toInteger = input => {\n  const number = Number(input);\n  return Number.isNaN(number) ? NaN : parseInt(input, 10);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport compose from 'lodash/fp/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { memoizeByLastArgs } from 'modules/utilities/memo';\nimport { toNumber } from 'modules/utilities/types/numbers';\nimport { selectDict } from 'core/connection';\nimport withProvision from 'core/connection/withProvision';\nimport ridesPropTypes from 'travel/models/rides/propTypes';\nimport tripPropTypes from 'travel/models/trips/propTypes';\nimport { sortVisitsByTrips } from 'travel/models/trips/utils';\nimport visitPropTypes from 'travel/models/visits/propTypes';\n\nconst memoizedSortVisitsByTrips = memoizeByLastArgs(sortVisitsByTrips);\n\nconst styles = {\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  storyPart: { margin: '12px 0' },\n};\n\nconst TripStoryPage = ({\n  classes,\n  visits: { data: visitsList = [] } = {},\n  ridesDict,\n}) => {\n  if (!ridesDict || !visitsList) {\n    return <div>None</div>;\n  }\n\n  const noDataNode = <div>Заметки о поездке не найдены</div>;\n  if (!visitsList.length) {\n    return noDataNode;\n  }\n\n  const lastVisitIndex = visitsList.length - 1;\n  const storiesNodes = memoizedSortVisitsByTrips(visitsList).map(\n    (\n      { visitId, arrivalRideId, departureRideId, visitComment, locationName },\n      visitIndex,\n    ) => {\n      const { rideComment: arrivalRideComment } =\n        ridesDict[arrivalRideId] || {};\n\n      let departureRideComment;\n      if (lastVisitIndex === visitIndex) {\n        const { rideComment } = ridesDict[departureRideId] || {};\n        departureRideComment = rideComment;\n      }\n\n      if (!arrivalRideComment && !departureRideComment && !visitComment) {\n        return null;\n      }\n      return (\n        <article key={`id${visitId}`} className={classes.visitContainer}>\n          <h1 className={classes.location}>{locationName}</h1>\n          {Boolean(arrivalRideComment) && (\n            <section className={classes.storyPart}>\n              {arrivalRideComment}\n            </section>\n          )}\n          {Boolean(visitComment) && (\n            <section className={classes.storyPart}>{visitComment}</section>\n          )}\n          {Boolean(departureRideComment) && (\n            <section className={classes.storyPart}>\n              {departureRideComment}\n            </section>\n          )}\n        </article>\n      );\n    },\n  );\n\n  const contentNode = storiesNodes.some(Boolean) ? storiesNodes : noDataNode;\n  return <div className={classes.container}>{contentNode}</div>;\n};\n\nTripStoryPage.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  trips: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(tripPropTypes)),\n  }).isRequired,\n  visits: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape(visitPropTypes)),\n  }).isRequired,\n  ridesDict: PropTypes.objectOf(PropTypes.shape(ridesPropTypes)).isRequired,\n};\n\nconst mapStateToRequirements = (\n  state,\n  {\n    match: {\n      params: { strTripId },\n    },\n  },\n) => {\n  const tripId = toNumber(strTripId);\n  return {\n    identity: {\n      strTripId,\n    },\n    request: {\n      rides: {\n        modelName: 'rides',\n        query: {\n          filter: { trip_id: { comparator: '=', value: tripId } },\n          navigation: { isDisabled: true },\n        },\n      },\n      visits: {\n        modelName: 'visits',\n        query: {\n          filter: { trip_id: { comparator: '=', value: tripId } },\n          navigation: { isDisabled: true },\n        },\n      },\n    },\n    domain: 'tripStoryPage',\n  };\n};\n\nconst mapStateToProps = state => ({\n  ridesDict: selectDict(state, 'rides'),\n});\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  withProvision(mapStateToRequirements, mapStateToProps),\n)(TripStoryPage);\n"],"sourceRoot":""}