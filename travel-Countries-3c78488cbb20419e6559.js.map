{"version":3,"sources":["webpack:///./src/modules/components/loaders/ProvisionLoader.jsx","webpack:///./src/core/connection/withProvision.jsx","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/lodash/_createAggregator.js","webpack:///./node_modules/lodash/_arrayAggregator.js","webpack:///./node_modules/lodash/_baseAggregator.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./src/packages/travel/pages/Countries/Countries.jsx"],"names":["withLoader","Component","props","_props$provision","provision","_props$provision$isCo","isComplete","_props$provision$isPe","isPending","react_default","a","createElement","PlainLoader","__webpack_exports__","_len2","arguments","length","provisionParams","Array","_key2","ExtendableComponent","_len","funcsArray","_key","arg","reduceRight","composed","func","compose","provide","apply","baseFor","__webpack_require__","keys","module","exports","object","iteratee","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","value","key","call","push","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","accumulator","array","index","baseEach","baseForOwn","createBaseEach","createBaseFor","fromRight","keysFunc","iterable","isArrayLike","eachFunc","byCitiesCount","_ref","_ref2","_ref3$","_slicedToArray","citiesA","_ref4$","alphabetically","_ref5","_ref6","locationName","b","localeCompare","Countries","_ref7","_ref7$locations","locations","_ref7$locations$data","data","locationsList","react__WEBPACK_IMPORTED_MODULE_0___default","entries","sort","map","_ref8","countryIndex","_ref9","countryName","cities","concat","_ref10","locationIndex","propTypes","PropTypes","shape","arrayOf","string","defaultProps","withProvision","require","modelName","query","navigation","isDisabled","meta","domain"],"mappings":"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","file":"travel-Countries-3c78488cbb20419e6559.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PlainLoader from 'modules/components/loaders/PlainLoader';\n\n// todo implement logic, which loader to show for each request, etc.\nexport const withLoader = Component => props => {\n  const { provision: { isComplete = false, isPending = true } = {} } = props;\n  if (!isComplete || isPending) {\n    return <PlainLoader />;\n  }\n  return <Component {...props} />;\n};\n","import { withLoader } from 'modules/components/loaders/ProvisionLoader';\nimport { provide } from 'core/connection';\n\nconst compose = (...funcsArray) => arg =>\n  funcsArray.reduceRight((composed, func) => func(composed), arg);\n\nexport default (...provisionParams) => ExtendableComponent =>\n  compose(\n    provide(...provisionParams),\n    withLoader,\n  )(ExtendableComponent);\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","import React from 'react';\nimport groupBy from 'lodash/groupBy';\nimport PropTypes from 'prop-types';\nimport withProvision from 'core/connection/withProvision';\n\nconst byCitiesCount = ([, citiesA = []], [, citiesB = []]) =>\n  citiesB.length - citiesA.length;\nconst alphabetically = ({ locationName: a }, { locationName: b }) =>\n  a.localeCompare(b);\n\nconst Countries = ({ locations: { data: locationsList = [] } = {} }) => (\n  <div>\n    {Object.entries(groupBy(locationsList, 'countryName'))\n      .sort(byCitiesCount)\n      .map(([countryName, cities], countryIndex) => (\n        <div key={countryName}>\n          <h1>{`${countryIndex + 1}. ${countryName}`}</h1>\n          {cities\n            .sort(alphabetically)\n            .map(({ locationName }, locationIndex) => (\n              <div key={locationName}>{`${locationIndex +\n                1}. ${locationName}`}</div>\n            ))}\n        </div>\n      ))}\n  </div>\n);\nCountries.propTypes = {\n  locations: PropTypes.shape({ data: PropTypes.arrayOf(PropTypes.string) }),\n};\nCountries.defaultProps = {\n  locations: { data: [] },\n};\n\nexport default withProvision(() => ({\n  require: {\n    locations: {\n      modelName: 'locations',\n      query: { navigation: { isDisabled: true } },\n    },\n  },\n  meta: {\n    domain: 'countries',\n  },\n}))(Countries);\n"],"sourceRoot":""}