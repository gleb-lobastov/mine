{"version":3,"sources":["webpack:///./src/packages/literature/pages/Articles/blocks/Article/Article.jsx","webpack:///./src/packages/literature/pages/Articles/Articles.jsx","webpack:///./node_modules/@material-ui/core/esm/Link/Link.js"],"names":["withRouter","ArticleComponent","slug","React","lazy","selectArticle","Link","props","component","RouterLink","compose","withStyles","container","display","iconHome","padding","slugList","flex","classes","match","params","tag","usePaths","literaturePaths","literature","codePaths","code","hasSummaryTag","hasCodeTag","selfPaths","to","entry","toUrl","className","List","aria-label","root","ListItem","button","articles","ListItemText","primary","forwardRef","ref","_props$color","color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","useState","focusVisible","setFocusVisible","handlerRef","createElement","concat","event","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","borderStyle","name"],"mappings":"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","file":"literature-Articles-755bcad9bdd3ad4c4f21.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\n\nconst selectArticle = slug => {\n  switch (slug) {\n    case 'chaldini':\n      return React.lazy(() =>\n        import(/* webpackChunkName: 'literature-Chaldini' */ './designed/Chaldini'),\n      );\n    case 'blackSwan':\n      return React.lazy(() =>\n        import(/* webpackChunkName: 'literature-BlackSwan' */ './designed/BlackSwan'),\n      );\n    case 'importThis':\n      return React.lazy(() =>\n        import(/* webpackChunkName: 'literature-ImportThis' */ './designed/ImportThis'),\n      );\n    default:\n      return null;\n  }\n};\n\nconst Article = ({ slug }) => {\n  const ArticleComponent = selectArticle(slug);\n  if (!ArticleComponent) {\n    return <div>Статья не найдена</div>;\n  }\n  return <ArticleComponent />;\n};\n\nexport default withRouter(Article);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport compose from 'lodash/fp/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MUILink from '@material-ui/core/Link';\nimport IconHome from '@material-ui/icons/Home';\nimport { usePaths } from 'modules/packages';\nimport Article from './blocks/Article';\n\nconst Link = props => <MUILink {...props} component={RouterLink} />;\n\nfunction Articles({\n  classes,\n  match: {\n    params: { slug, tag },\n  },\n}) {\n  const { literature: literaturePaths, code: codePaths } = usePaths();\n  const hasSummaryTag = !tag || tag === 'summary';\n  const hasCodeTag = !tag || tag === 'code';\n  const selfPaths = literaturePaths || codePaths;\n  return (\n    <>\n      {!literaturePaths && (\n        <Link to={selfPaths.entry.toUrl()} className={classes.iconHome}>\n          <IconHome />\n        </Link>\n      )}\n      <div className={classes.container}>\n        <List\n          component=\"nav\"\n          aria-label=\"articles\"\n          classes={{ root: classes.slugList }}\n        >\n          {hasSummaryTag && (\n            <ListItem\n              button={true}\n              component={Link}\n              to={selfPaths.articles.toUrl({ slug: 'chaldini' })}\n            >\n              <ListItemText primary=\"&laquo;Психология убеждения&raquo; Чалдини\" />\n            </ListItem>\n          )}\n          {hasSummaryTag && (\n            <ListItem\n              button={true}\n              component={Link}\n              to={selfPaths.articles.toUrl({ slug: 'blackSwan' })}\n            >\n              <ListItemText primary=\"&laquo;Черный лебедь&raquo; Талеба\" />\n            </ListItem>\n          )}\n          {hasCodeTag && (\n            <ListItem\n              button={true}\n              component={Link}\n              to={selfPaths.articles.toUrl({ slug: 'importThis' })}\n            >\n              <ListItemText primary=\"19 принципов достижения дзена при написании компьютерных программ\" />\n            </ListItem>\n          )}\n        </List>\n        {slug && (\n          <div>\n            <Article slug={slug} />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n  },\n  iconHome: {\n    padding: '0 16px',\n  },\n  slugList: {\n    flex: '0 1 350px',\n  },\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n)(Articles);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"],"sourceRoot":""}