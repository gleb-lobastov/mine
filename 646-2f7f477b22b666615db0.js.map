{"version":3,"file":"646-2f7f477b22b666615db0.js","mappings":"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","sources":["webpack://mine/./src/packages/travel/components/LocationsMap/consts.js","webpack://mine/./src/packages/travel/components/LocationsMap/utils/makeScaleUtils.js","webpack://mine/./src/modules/utilities/dateTime/formatDate.js","webpack://mine/./src/packages/travel/components/LocationsMap/utils/renderTitle.js","webpack://mine/./src/packages/travel/components/LocationsMap/utils/resolveMarkerUrl.js","webpack://mine/./src/packages/travel/components/LocationsMap/blocks/MarkersScaleSelect/MarkersScaleSelect.jsx","webpack://mine/./src/packages/travel/components/LocationsMap/blocks/MarkersRatingLevelSelect/MarkersRatingLevelSelect.jsx","webpack://mine/./src/packages/travel/components/LocationsMap/useMarkersScaleSidebar.js","webpack://mine/./src/packages/travel/components/LocationsMap/LocationsMap.jsx","webpack://mine/./src/packages/travel/components/LocationsMap/utils/filterMarkerData.js","webpack://mine/./src/packages/travel/components/LocationsMap/utils/adaptMarkerData.js","webpack://mine/./src/packages/travel/components/LocationsMap/utils/resolveLocationFirstAndLastVisitDateTime.js","webpack://mine/./src/packages/travel/components/LocationsMap/useMarkers.js"],"sourcesContent":["export const KEY_MARKERS_SCALE_BY = 'scale';\n\nexport const MARKERS_SCALES = {\n  BY_FIRST_VISIT: 'fv',\n  BY_LAST_VISIT: 'lv',\n  BY_VISITS_COUNT: 'vc',\n  BY_RATING: 'r',\n};\n\nexport const MARKERS_SCALE_DEFAULT = MARKERS_SCALES.BY_LAST_VISIT;\n\nexport const MARKERS_SCALE_IMAGES_BASE_PATH =\n  'https://res.cloudinary.com/dc2eke0gj/image/upload/markers/';\n\nexport const MARKERS_SCALE_BY_TIME_FILENAMES = [\n  'step_by_time_1_zjtrlw.png',\n  'step_by_time_2_tvotvg.png',\n  'step_by_time_3_ylj1vi.png',\n  'step_by_time_4_uovfrs.png',\n  'step_by_time_5_s4jq0u.png',\n  'step_by_time_6_lmihnf.png',\n];\n\nexport const MARKERS_SCALE_BY_RATING_FILENAMES = [\n  'step_by_rating_1_id2qgb.png',\n  'step_by_rating_2_iiqvik.png',\n  'step_by_rating_3_x2gzsd.png',\n  'step_by_rating_4_cbqdcn.png',\n  'step_by_rating_5_viyhls.png',\n  'step_by_rating_6_zzfgki.png',\n  'step_by_rating_7_pjjhhq.png',\n  'step_by_rating_8_vgetsd.png',\n  'step_by_rating_9_t6tenz.png',\n  'step_by_rating_10_yjywr0.png',\n];\n\nexport const MARKERS_SCALE_BY_VISITS_FILENAMES = [\n  'step_by_visits_1_zv3tba.png',\n  'step_by_visits_2_qthjqa.png',\n  'step_by_visits_3_xcjyla.png',\n  'step_by_visits_4_kwdwka.png',\n  'step_by_visits_5_xnnipa.png',\n];\n\nexport const MARKERS_SCALE_BY_SOURCES = {\n  [MARKERS_SCALES.BY_FIRST_VISIT]: MARKERS_SCALE_BY_TIME_FILENAMES,\n  [MARKERS_SCALES.BY_LAST_VISIT]: MARKERS_SCALE_BY_TIME_FILENAMES,\n  [MARKERS_SCALES.BY_VISITS_COUNT]: MARKERS_SCALE_BY_VISITS_FILENAMES,\n  [MARKERS_SCALES.BY_RATING]: MARKERS_SCALE_BY_RATING_FILENAMES,\n};\n\nexport const MARKERS_RATING_LEVELS = {\n  ALL: 'all',\n  WANT_COME_BACK: 'good',\n  LOVE_THIS_PLACE: 'best',\n};\n\nexport const KEY_MARKERS_RATING_LEVEL = 'rating';\n\nexport const MARKERS_RATING_LEVEL_DEFAULT = MARKERS_RATING_LEVELS.ALL;\n","import min from 'lodash/min';\nimport max from 'lodash/max';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\nimport { MARKERS_SCALES } from '../consts';\n\nexport default function makeScaleUtils(scaleBy) {\n  switch (scaleBy) {\n    case MARKERS_SCALES.BY_VISITS_COUNT:\n      return {\n        resolveStep: stepByVisitsCount,\n      };\n    case MARKERS_SCALES.BY_RATING:\n      return {\n        resolveStep: stepByRating,\n      };\n    case MARKERS_SCALES.BY_LAST_VISIT:\n      return makeScaleByDateTimeUtils('lastVisitDateTime');\n    case MARKERS_SCALES.BY_FIRST_VISIT:\n      return makeScaleByDateTimeUtils('firstVisitDateTime');\n    default:\n      return {\n        resolveStep: () => 1,\n      };\n  }\n}\n\nfunction stepByVisitsCount({ visitsCount }) {\n  switch (true) {\n    case visitsCount > 10:\n      return 5;\n    case visitsCount > 5:\n      return 4;\n    case visitsCount > 2:\n      return 3;\n    case visitsCount > 1:\n      return 2;\n    default:\n      return 1;\n  }\n}\n\nfunction stepByRating({ locationRating }) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return 1;\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return 3;\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return 4;\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return 7;\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return 9;\n    case LOCATION_RATING.NEVER:\n      return 10;\n    default:\n      return 6;\n  }\n}\n\nconst stepsByDateTimeCount = 6;\nfunction makeScaleByDateTimeUtils(field) {\n  return {\n    resolveStep: function stepByDateTime(\n      { [field]: dateTime },\n      { minTime, diff },\n    ) {\n      const step = ((dateTime - minTime) / diff) * stepsByDateTimeCount;\n      return Math.min(Math.max(Math.floor(step), 0), stepsByDateTimeCount);\n    },\n    resolveOptions: function resolveOptionsForStepByDateTime(markersDataList) {\n      const times = markersDataList\n        .map(markerData => markerData[field] && markerData[field].getTime())\n        .filter(Boolean);\n\n      const minTime = min(times);\n      const maxTime = max(times) + 1;\n      const diff = maxTime - minTime;\n      return { minTime, diff };\n    },\n  };\n}\n","import ru from 'date-fns/locale/ru';\nimport dateFormat from './safeDateFormat';\n\nexport default function formatDate(date, format = 'eeeeee, d MMMM yyyy') {\n  return dateFormat(date, format, { locale: ru });\n}\n","import formatDate from 'modules/utilities/dateTime/formatDate';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\n\nexport default function renderTitle({\n  locationName,\n  locationRating,\n  visitsCount,\n  firstVisitDateTime,\n  lastVisitDateTime,\n}) {\n  return [\n    locationName,\n    `Посещено ${visitsCount} раз`,\n    `Впервые ${formatDate(firstVisitDateTime)}`,\n    visitsCount > 1 && `Прошлое посешение ${formatDate(lastVisitDateTime)}`,\n    `Рейтинг: ${renderRating(locationRating)}`,\n  ]\n    .filter(Boolean)\n    .join('\\n');\n}\n\nfunction renderRating(locationRating) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return 'Жил бы здесь';\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return 'Готов ездить сюда постоянно';\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return 'Приезжал бы иногда';\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return 'Заглянул бы еще разок';\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return 'Одного посещения достаточно';\n    case LOCATION_RATING.NEVER:\n      return 'Тут нечего делать';\n    default:\n      return '?';\n  }\n}\n","import {\n  MARKERS_SCALE_BY_SOURCES,\n  MARKERS_SCALE_BY_TIME_FILENAMES,\n  MARKERS_SCALE_IMAGES_BASE_PATH,\n} from '../consts';\n\nexport default function resolveMarkerUrl(step, scaleBy) {\n  if (!scaleBy) {\n    return `${MARKERS_SCALE_IMAGES_BASE_PATH}${\n      MARKERS_SCALE_BY_TIME_FILENAMES[0]\n    }`;\n  }\n  const markerSources = MARKERS_SCALE_BY_SOURCES[scaleBy];\n  const subPath = markerSources[step - 1] || markerSources[0];\n  return `${MARKERS_SCALE_IMAGES_BASE_PATH}${subPath}`;\n}\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n  MARKERS_SCALES,\n  KEY_MARKERS_SCALE_BY,\n  KEY_MARKERS_RATING_LEVEL,\n} from '../../consts';\n\nexport default function MarkersScaleSelect({\n  classes,\n  scaleBy,\n  onClose,\n  onChange,\n}) {\n  return (\n    <List>\n      <ListItem>\n        <FormControl className={classes.formControl}>\n          <InputLabel shrink={true} id=\"select-scaleBy-filter-label\">\n            Раскрасить маркеры\n          </InputLabel>\n          <Select\n            labelId=\"select-scaleBy-filter-label\"\n            autoWidth={true}\n            id=\"select-scaleBy-filter\"\n            value={scaleBy}\n            onChange={event => {\n              onClose();\n              const nextScaleBy = event.target.value;\n              const updates = { [KEY_MARKERS_SCALE_BY]: nextScaleBy };\n              if (nextScaleBy !== MARKERS_SCALES.BY_RATING) {\n                updates[KEY_MARKERS_RATING_LEVEL] = undefined;\n              }\n              onChange(updates);\n            }}\n          >\n            <MenuItem\n              key={MARKERS_SCALES.BY_FIRST_VISIT}\n              value={MARKERS_SCALES.BY_FIRST_VISIT}\n            >\n              По первому посещению\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_SCALES.BY_LAST_VISIT}\n              value={MARKERS_SCALES.BY_LAST_VISIT}\n            >\n              По последнему посещению\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_SCALES.BY_VISITS_COUNT}\n              value={MARKERS_SCALES.BY_VISITS_COUNT}\n            >\n              По числу посещений\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_SCALES.BY_RATING}\n              value={MARKERS_SCALES.BY_RATING}\n            >\n              По рейтингу\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </ListItem>\n    </List>\n  );\n}\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MARKERS_RATING_LEVELS, KEY_MARKERS_RATING_LEVEL } from '../../consts';\n\nexport default function MarkersRatingLevelSelect({\n  classes,\n  ratingLevel,\n  onClose,\n  onChange,\n}) {\n  return (\n    <List>\n      <ListItem>\n        <FormControl className={classes.formControl}>\n          <InputLabel shrink={true} id=\"select-ratingLevel-filter-label\">\n            Фильтр по рейтингу\n          </InputLabel>\n          <Select\n            labelId=\"select-ratingLevel-filter-label\"\n            autoWidth={true}\n            id=\"select-ratingLevel-filter\"\n            value={ratingLevel}\n            onChange={event => {\n              onClose();\n              onChange({\n                [KEY_MARKERS_RATING_LEVEL]: event.target.value,\n              });\n            }}\n          >\n            <MenuItem\n              key={MARKERS_RATING_LEVELS.ALL}\n              value={MARKERS_RATING_LEVELS.ALL}\n            >\n              Все\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_RATING_LEVELS.WANT_COME_BACK}\n              value={MARKERS_RATING_LEVELS.WANT_COME_BACK}\n            >\n              Куда бы вернулся\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_RATING_LEVELS.LOVE_THIS_PLACE}\n              value={MARKERS_RATING_LEVELS.LOVE_THIS_PLACE}\n            >\n              Лучшие места\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </ListItem>\n    </List>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSidebar } from 'core/context/SidebarContext';\nimport MarkersScaleSelect from './blocks/MarkersScaleSelect';\nimport MarkersRatingLevelSelect from './blocks/MarkersRatingLevelSelect';\nimport {\n  MARKERS_SCALES,\n  KEY_MARKERS_SCALE_BY,\n  MARKERS_SCALE_DEFAULT,\n  MARKERS_RATING_LEVELS,\n  KEY_MARKERS_RATING_LEVEL,\n  MARKERS_RATING_LEVEL_DEFAULT,\n} from './consts';\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%',\n  },\n});\n\nexport default function(setQueryFilter, queryFilter) {\n  const classes = useStyles();\n  const {\n    [KEY_MARKERS_SCALE_BY]: scaleByQuery,\n    [KEY_MARKERS_RATING_LEVEL]: ratingLevelQuery,\n  } = queryFilter || {};\n  const scaleBy = resolveActualScaleBy(scaleByQuery);\n  const ratingLevel = resolveActualRatingLevel(ratingLevelQuery);\n  useSidebar(\n    ({ closeSidebar }) => (\n      <>\n        <MarkersScaleSelect\n          classes={classes}\n          onClose={closeSidebar}\n          scaleBy={scaleBy}\n          onChange={setQueryFilter}\n        />\n        {scaleBy === MARKERS_SCALES.BY_RATING && (\n          <MarkersRatingLevelSelect\n            classes={classes}\n            onClose={closeSidebar}\n            ratingLevel={ratingLevel}\n            onChange={setQueryFilter}\n          />\n        )}\n      </>\n    ),\n    [scaleBy, ratingLevel],\n  );\n\n  return { scaleBy, ratingLevel };\n}\n\nfunction resolveActualScaleBy(scaleByQuery) {\n  return Object.values(MARKERS_SCALES).includes(scaleByQuery)\n    ? scaleByQuery\n    : MARKERS_SCALE_DEFAULT;\n}\nfunction resolveActualRatingLevel(ratingLevelQuery) {\n  return Object.values(MARKERS_RATING_LEVELS).includes(ratingLevelQuery)\n    ? ratingLevelQuery\n    : MARKERS_RATING_LEVEL_DEFAULT;\n}\n","/* globals __GOOGLE_MAP_API_KEY__ */\nimport React, { useMemo } from 'react';\nimport cls from 'classnames';\nimport GoogleMapReact from 'google-map-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport adaptMarkerData from './utils/adaptMarkerData';\nimport filterMarkerData from './utils/filterMarkerData';\nimport makeScaleUtils from './utils/makeScaleUtils';\nimport renderTitle from './utils/renderTitle';\nimport resolveMarkerUrl from './utils/resolveMarkerUrl';\nimport { MARKERS_SCALES, MARKERS_RATING_LEVELS } from './consts';\nimport useMarkers from './useMarkers';\n\nexport { MARKERS_SCALES, MARKERS_RATING_LEVELS };\nexport useMarkersScaleSidebar from './useMarkersScaleSidebar';\n\nconst useStyles = makeStyles({\n  googleMapContainer: {\n    margin: '12px 0',\n    maxWidth: '100%',\n    flexGrow: 1,\n    minHeight: ({ minHeight }) => minHeight,\n    position: 'relative',\n  },\n  googleMapPosition: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: '0',\n    bottom: '0',\n  },\n});\n\nexport default function LocationsMap({\n  className,\n  locationsDict,\n  visitsDict,\n  locationsRating,\n  locationsIds,\n  minHeight,\n  scaleBy,\n  ratingLevel,\n}) {\n  const classes = useStyles({ minHeight });\n  const markersData = useMemo(\n    () => {\n      const adaptedMarkersData = adaptMarkerData({\n        locationsDict,\n        visitsDict,\n        locationsRating,\n        locationsIds,\n      });\n      const actualMarkersData = filterMarkerData(adaptedMarkersData, {\n        ratingLevel,\n      });\n      const { resolveStep, resolveOptions } = makeScaleUtils(scaleBy);\n      const options = resolveOptions && resolveOptions(actualMarkersData);\n      return actualMarkersData.map(markerData => {\n        const step = resolveStep(markerData, options);\n        return {\n          ...markerData,\n          zIndex: [\n            MARKERS_SCALES.BY_RATING,\n            MARKERS_SCALES.BY_FIRST_VISIT,\n          ].includes(scaleBy)\n            ? 10 - step\n            : step,\n          iconUrl: resolveMarkerUrl(step, scaleBy),\n          title: renderTitle(markerData),\n        };\n      });\n    },\n    [\n      locationsDict,\n      visitsDict,\n      locationsRating,\n      locationsIds,\n      scaleBy,\n      ratingLevel,\n    ],\n  );\n  const { handleGoogleApiLoaded } = useMarkers(markersData);\n\n  return (\n    <div className={cls(className, classes.googleMapContainer)}>\n      <div className={classes.googleMapPosition}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: __GOOGLE_MAP_API_KEY__ }}\n          center={{ lat: 0, lng: 0 }}\n          zoom={11}\n          onGoogleApiLoaded={handleGoogleApiLoaded}\n        />\n      </div>\n    </div>\n  );\n}\n\nLocationsMap.defaultProps = {\n  className: undefined,\n  minHeight: '400px',\n};\n","import { MARKERS_RATING_LEVELS } from '../consts';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\n\nexport default function filterMarkerData(adaptedMarkersData, { ratingLevel }) {\n  const validMarkersData = adaptedMarkersData.filter(Boolean);\n  if (\n    !Object.values(MARKERS_RATING_LEVELS).includes(ratingLevel) ||\n    ratingLevel === MARKERS_RATING_LEVELS.ALL\n  ) {\n    return validMarkersData;\n  }\n  return validMarkersData.filter(({ locationRating, visitsCount }) => {\n    switch (ratingLevel) {\n      case MARKERS_RATING_LEVELS.WANT_COME_BACK:\n        if (visitsCount < 2) {\n          return locationRating <= LOCATION_RATING.TWICE_PER_LIVE;\n        }\n        return locationRating <= LOCATION_RATING.ONCE_PER_DECADE;\n      case MARKERS_RATING_LEVELS.LOVE_THIS_PLACE:\n        return locationRating <= LOCATION_RATING.ONCE_PER_YEAR;\n      default:\n        return true;\n    }\n  });\n}\n","import resolveLocationFirstAndLastVisitDateTime from './resolveLocationFirstAndLastVisitDateTime';\n\nexport default function adaptMarkerData({\n  locationsIds,\n  locationsDict,\n  visitsDict,\n  locationsRating,\n}) {\n  return locationsIds.map(locationId => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return null;\n    }\n    const { lon, lat, locationName, visitsIds } = location;\n    const {\n      firstVisitDateTime,\n      lastVisitDateTime,\n    } = resolveLocationFirstAndLastVisitDateTime(visitsIds ?? [], visitsDict);\n\n    return {\n      locationName,\n      lat,\n      lon,\n      firstVisitDateTime,\n      lastVisitDateTime,\n      locationRating: locationsRating[locationId],\n      visitsCount: location.visitsIds?.length,\n    };\n  });\n}\n","import min from 'lodash/min';\nimport max from 'lodash/max';\n\nexport default function resolveLocationFirstAndLastVisitDateTime(\n  visitsIds,\n  visitsDict,\n) {\n  return visitsIds.reduce(\n    (accumulator, visitId) => {\n      const visit = visitsDict[visitId];\n      if (visit) {\n        const { arrivalDateTime, departureDateTime } = visit;\n        accumulator.firstVisitDateTime = min([\n          accumulator.firstVisitDateTime,\n          arrivalDateTime,\n        ]);\n        accumulator.lastVisitDateTime = max([\n          accumulator.lastVisitDateTime,\n          departureDateTime,\n        ]);\n      }\n      return accumulator;\n    },\n    { firstVisitDateTime: null, lastVisitDateTime: null },\n  );\n}\n","import { useState, useEffect, useRef } from 'react';\n\nexport default markersData => {\n  const [googleMapsApi, setGoogleMapsApi] = useState(null);\n\n  const isFirsRenderRef = useRef(true);\n\n  useEffect(\n    () => {\n      if (!googleMapsApi) {\n        return undefined;\n      }\n      const { map, maps } = googleMapsApi;\n      const bounds = new maps.LatLngBounds();\n      const markers = markersData.map(\n        ({ lat, lon, iconUrl, title, zIndex }) => {\n          const marker = new maps.Marker({\n            map,\n            position: { lat, lng: lon },\n            icon: {\n              url: iconUrl,\n              scaledSize: new maps.Size(24, 24),\n            },\n            scale: 0.5,\n            title,\n            zIndex,\n          });\n          bounds.extend(marker.position);\n          return marker;\n        },\n      );\n      if (isFirsRenderRef.current) {\n        map.setOptions({ maxZoom: 11, minZoom: 2 });\n        map.fitBounds(bounds);\n        map.setOptions({ maxZoom: null, minZoom: null });\n        isFirsRenderRef.current = false;\n      }\n      return () => {\n        markers.forEach(marker => {\n          marker.setMap(null);\n          marker.setVisible(false);\n        });\n        markers.length = 0;\n      };\n    },\n    [googleMapsApi, markersData],\n  );\n  return { handleGoogleApiLoaded: api => setGoogleMapsApi(api) };\n};\n"],"names":["MARKERS_SCALES","BY_FIRST_VISIT","BY_LAST_VISIT","BY_VISITS_COUNT","BY_RATING","MARKERS_SCALE_DEFAULT","MARKERS_SCALE_IMAGES_BASE_PATH","MARKERS_SCALE_BY_TIME_FILENAMES","MARKERS_SCALE_BY_SOURCES","MARKERS_RATING_LEVELS","ALL","WANT_COME_BACK","LOVE_THIS_PLACE","MARKERS_RATING_LEVEL_DEFAULT","stepByVisitsCount","visitsCount","stepByRating","locationRating","LOCATION_RATING","makeScaleByDateTimeUtils","field","resolveStep","step","minTime","diff","Math","min","max","floor","resolveOptions","markersDataList","times","map","markerData","getTime","filter","Boolean","formatDate","date","format","dateFormat","locale","ru","renderRating","resolveMarkerUrl","scaleBy","markerSources","subPath","MarkersScaleSelect","classes","onClose","onChange","List","ListItem","FormControl","className","formControl","InputLabel","shrink","id","Select","labelId","autoWidth","value","event","nextScaleBy","target","updates","undefined","MenuItem","key","MarkersRatingLevelSelect","ratingLevel","useStyles","makeStyles","width","setQueryFilter","queryFilter","scaleByQuery","ratingLevelQuery","Object","values","includes","resolveActualScaleBy","resolveActualRatingLevel","useSidebar","closeSidebar","googleMapContainer","margin","maxWidth","flexGrow","minHeight","position","googleMapPosition","top","left","right","bottom","LocationsMap","locationsDict","visitsDict","locationsRating","locationsIds","markersData","useMemo","actualMarkersData","adaptedMarkersData","validMarkersData","filterMarkerData","locationId","location","lon","lat","locationName","visitsIds","reduce","accumulator","visitId","visit","arrivalDateTime","departureDateTime","firstVisitDateTime","lastVisitDateTime","resolveLocationFirstAndLastVisitDateTime","length","adaptMarkerData","makeScaleUtils","options","zIndex","iconUrl","title","join","useState","googleMapsApi","setGoogleMapsApi","isFirsRenderRef","useRef","useEffect","maps","bounds","LatLngBounds","markers","marker","Marker","lng","icon","url","scaledSize","Size","scale","extend","current","setOptions","maxZoom","minZoom","fitBounds","forEach","setMap","setVisible","handleGoogleApiLoaded","api","useMarkers","cls","bootstrapURLKeys","__GOOGLE_MAP_API_KEY__","center","zoom","onGoogleApiLoaded","defaultProps"],"sourceRoot":""}