{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/StarBorder.js","webpack:///./node_modules/@material-ui/icons/ThumbDownOutlined.js","webpack:///./node_modules/@material-ui/icons/ThumbsUpDownOutlined.js","webpack:///./src/packages/travel/pages/VisitsPage/consts.js","webpack:///./src/packages/travel/pages/VisitsPage/useVisitsPageStyles.js","webpack:///./src/packages/travel/pages/VisitsPage/useVisitsGroupingSidebar.js","webpack:///./node_modules/memoize-one/dist/memoize-one.esm.js","webpack:///./src/packages/travel/pages/VisitsPage/utils.js","webpack:///./src/packages/travel/pages/VisitsPage/calcCounters.js","webpack:///./src/packages/travel/pages/VisitsPage/switchSortingFn.js","webpack:///./src/packages/travel/components/models/countries/CountryInfo/CountryInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderCountry.js","webpack:///./src/modules/components/muiExtended/ConnectedLink/ConnectedLink.jsx","webpack:///./src/packages/travel/components/models/locations/LocationInfo/LocationInfo.jsx","webpack:///./src/packages/travel/components/models/locations/LocationPhotos/LocationPhotos.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderOriginLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderDepartureLocation.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderArrivalLocation.js","webpack:///./src/packages/travel/components/models/trips/TripInfo/TripInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderTrip.js","webpack:///./src/packages/travel/components/common/YearInfo/YearInfo.jsx","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderYear.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderNodesInOrder.js","webpack:///./src/packages/travel/pages/VisitsPage/blocks/renderTitle.jsx","webpack:///./src/packages/travel/pages/VisitsPage/locators.js","webpack:///./src/packages/travel/pages/VisitsPage/VisitsPage.jsx","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/packages/travel/dataSource/useVisit.js","webpack:///./src/packages/travel/components/models/rides/RideInfo/RideInfo.jsx","webpack:///./src/packages/travel/components/models/rides/RideIcon/RideIcon.jsx","webpack:///./src/modules/utilities/text/uniqTrimAndJoin.js","webpack:///./src/packages/travel/models/trips/utils/resolveTripCaption.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","GROUP_VISITS_BY","VISITS_SECTIONS","TRIPS","LOCATIONS","VISITS_SECTION_DEFAULT","VISITS_SECTIONS_GROUPS","key","l10n","GROUP_VISITS_BY_DEFAULTS","SORT_VISITS_BY","RATING_ALPHABET","VISITS_ALPHABET","ALPHABET","SORT_VISITS_BY_DEFAULT","COMPARATORS","VISIT","ARRIVAL_YEAR","TRIP","DEPARTURE_TIME","ID","PRESERVE_ORDER","COUNTRY","VISITS","RATING","NAME_ID","LOCATION","makeStyles","theme","visibilityTrigger","visibility","visibleOnlyOnHover","group","backgroundColor","top","marginTop","spacing","subgroup","detail","color","fontSize","formControl","width","ratingBlock","display","alignItems","ratingIcon","halfDown","position","setQueryFilter","queryFilter","section","classes","useVisitsPageStyles","groupByQuery","sortBy","sortByQuery","values","includes","resolveActualSortBy","actualSection","visitsSectionGroups","find","resolveActualGroupBy","groupBy","useSidebar","closeSidebar","List","ListItem","FormControl","className","InputLabel","shrink","id","Select","labelId","autoWidth","onChange","event","target","map","visitsSectionGroup","MenuItem","areInputsEqual","newInputs","lastInputs","length","i","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","arguments","this","apply","resolveTripCountryId","tripId","countryId","resolveYearCountryId","year","resolveArrivalYear","arrivalDateTime","getFullYear","checkIsGroupedByTrip","lastCacheKey","cachedResult","inc","ref","refKey","counterName","counterKey","countersRef","counterRef","currentCount","getLocationVisitsCount","counters","locationId","locations","visits","keys","getCountryVisitsCount","countries","getLocationVisitsByYearCount","years","COMPARATOR_FUNCTIONS_MAPPING","visitA","visitB","arrivalDateTimeA","arrivalDateTimeB","countriesDict","countryIdA","countryIdB","countryNameA","countryName","countryNameB","countriesRating","_","locationIdA","locationNameA","locationName","locationIdB","locationNameB","locationsRating","tripsIds","tripIdA","tripIdB","indexA","indexOf","indexB","tripsDict","departureDateTimeA","departureDateTime","departureDateTimeB","resolveComparatorBySortFn","sortFn","ENTITY_COMPARATORS","createComparator","provision","comparatorsKeys","comparatorFuncs","comparatorKey","comparatorFnCreator","warning","filter","Boolean","fnIdx","comparisonResult","memoizeOne","locationsDict","memoize","ratings","countryIdToCompare","rating","sum","CountryInfo","country","isSubgroup","isDetail","children","Typography","variant","renderCountry","visit","visitId","changes","isTripChanged","isCountryChanged","isGroupedByTrip","isGroupedByYearCountries","locationsCounter","yearsCountries","tripsCountries","ConnectedLink","props","component","RouterLink","useStyles","autoMargin","marginLeft","LocationInfo","shouldJustifyContent","href","location","childrenArray","React","Children","toArray","lastChildren","slice","restChildren","Grid","container","justify","item","to","photosContainer","justifyContent","photoContainer","margin","minWidth","maxHeight","textAlign","photo","maxWidth","borderRadius","GROUPS_TO_RENDER_COUNTRY","GROUPS_TO_RENDER_YEARS_OF_VISIT","renderLocation","departureRideId","isYearChanged","isLocationChanged","visitsDict","ridesDict","visitEditUrl","isGroupedByTripsOnly","countryDetailNode","visitsCount","resolveVisitsCounter","visitsDetailNode","yearsOfVisitDetailNode","getYearsOfVisits","join","childrenNodes","nodes","reduce","nodesMemo","node","index","push","joinNodes","locationRating","LOCATION_RATING","PLACE_TO_LIVE","FEW_PER_YEAR","ONCE_PER_YEAR","ONCE_PER_TWO_YEARS","ONCE_PER_FIVE_YEARS","ONCE_PER_DECADE","TWICE_PER_LIVE","ONCE_PER_LIVE","NEVER","renderRatingNode","renderAlignedRatingNode","Fragment","visitDateTimePeriodToString","RideInfo","ride","renderOriginLocation","keyBase","trip","originLocationId","originLocation","renderDepartureLocation","arrivalRideId","renderArrivalLocation","willTripChange","TripInfo","paragraph","resolveTripCaption","renderTrip","tripEditPath","travelPaths","tripEdit","hasEditRights","userAlias","tripEditButtonNode","IconButton","toUrl","strTripId","String","size","cls","YearInfo","renderYear","isGroupedByCountriesYear","renderNodesInOrder","prevVisit","nextVisit","forwardedProps","prevCountryId","prevLocationId","prevTripId","nextTripId","prevYear","renderProps","checkIsGroupedByYear","checkIsGroupedByCountry","renderTitle","createTripUrl","locationsUrl","locationsCount","countriesCount","linkToCreateTripNode","Link","data-locator","VisitsPage","match","params","authenticatedUserAlias","useAuthContext","useQueryFilter","useVisitsGroupingSidebar","useTripsStats","isPending","isError","usePaths","travel","locationsPath","tripCreatePath","tripCreate","visitEditPath","visitEdit","visitsIds","unsortedVisitsList","visitsList","cacheKey","totalVisits","trips","forEach","calcCounters","updatesCounter","titleNode","sort","NAME","switchSortingFn","nodesAccumulator","strVisitId","undefined","propTypes","PropTypes","string","isRequired","number","tripsProvision","requiredTripsIds","useSelector","state","selectDict","shouldRequireAllTrips","missingTripsIds","useProvision","domain","isProvision","modelName","observe","query","navigation","isDisabled","comparator","useTrips","useUser","user","userProvision","selectResult","data","useMemo","Array","from","Set","flatMap","tripsId","ridesIds","rides","countriesIds","locationsIds","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","selectUpdatesCounter","isReady","every","selectIsReady","some","selectIsPending","isValid","selectIsValid","error","selectIsError","errors","selectError","invalidate","mergeProvisionsState","ratingsGroupedByCountries","memo","mapValues","ratingsByCountry","Infinity","avg","a","b","best","max","lengthRatio","Math","log","averageRating","calcCountriesRating","ridesStats","calcRidesStats","earliestDeparture","Date","min","rideId","getTime","latestArrival","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","periodEndString","dateFormat","locale","ru","isSameDay","periodStartString","isSameMonth","isSameYear","rideDateTimePeriodToString","selectItem","applicableSchemaName","condition","requiredLocationIds","missingLocationsIds","useLocationRatingRequest","useRequest","method","submitLocationRating","useVisit","requiredVisitId","visit_id","useAddVisitPhotoRequest","contentType","submitVisitPhoto","icon","height","absoluteIcon","rideType","isLong","RIDE_TYPES","HITCH_HIKING","RideIcon","vehicleType","IconComponent","VEHICLE_TYPES","CAR","CarIcon","TRAIN","TrainIcon","AIRCRAFT","FlightIcon","BUS","TROLLEY","CITY_BUS","BusIcon","MOTORHOME","JITNEY","VanIcon","LOCAL_TRAIN","FERRY","BoatIcon","BIKE","BikeIcon","BY_FEET","WalkIcon","MOTORBIKE","MotorcycleIcon","TRUCK","TruckIcon","ALL_TERRAIN_VEHICLE","TerrainIcon","TRAM","TramIcon","TAXI","LocalTaxiIcon","SUBWAY","SubwayIcon","PUBLIC_TRANSPORT","SeatIcon","ROPEWAY","FUNICULAR","CustomTransportIcon","UnknownRideIcon","resolveRideIconComponent","array","maxLength","separator","uniqArray","uniq","result","tripName","hasAutogeneratedTripName","originCountryId","periodStr","dateMin","visitsId","dateMax","visitsByCountries","visitType","VISIT_TYPES","TRANSIT","locationsNames","uniqTrimAndJoin","countriesNames","Number"],"mappings":"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","file":"travel-VisitsPage-5063617c66aef6a2b8d0.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n}), 'StarBorder');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm0 12l-4.34 4.34L12 14H3v-2l3-7h9v10zm4-12h4v12h-4z\"\n}), 'ThumbDownOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 6c0-.55-.45-1-1-1H5.82l.66-3.18.02-.23c0-.31-.13-.59-.33-.8L5.38 0 .44 4.94C.17 5.21 0 5.59 0 6v6.5c0 .83.67 1.5 1.5 1.5h6.75c.62 0 1.15-.38 1.38-.91l2.26-5.29c.07-.17.11-.36.11-.55V6zm-2 1.13L7.92 12H2V6.21l1.93-1.93L3.36 7H10v.13zM22.5 10h-6.75c-.62 0-1.15.38-1.38.91l-2.26 5.29c-.07.17-.11.36-.11.55V18c0 .55.45 1 1 1h5.18l-.66 3.18-.02.24c0 .31.13.59.33.8l.79.78 4.94-4.94c.27-.27.44-.65.44-1.06v-6.5c0-.83-.67-1.5-1.5-1.5zm-.5 7.79l-1.93 1.93.57-2.72H14v-.13L16.08 12H22v5.79z\"\n}), 'ThumbsUpDownOutlined');\n\nexports.default = _default;","export const KEY_GROUP_VISITS_BY = 'group';\nexport const GROUP_VISITS_BY = {\n  LOCATIONS: 'loc',\n  COUNTRIES: 'c',\n  YEARS: 'yr',\n  YEARS_COUNTRIES: 'yr_c',\n  COUNTRIES_YEARS: 'c_yr',\n  TRIPS: 't',\n  TRIPS_COUNTRIES: 't_с',\n};\n\nexport const VISITS_SECTIONS = {\n  TRIPS: 'trips',\n  LOCATIONS: 'locations',\n};\nexport const VISITS_SECTION_DEFAULT = VISITS_SECTIONS.TRIPS;\nexport const VISITS_SECTIONS_GROUPS = {\n  [VISITS_SECTIONS.LOCATIONS]: [\n    { key: GROUP_VISITS_BY.LOCATIONS, l10n: 'По городам' },\n    { key: GROUP_VISITS_BY.COUNTRIES, l10n: 'По странам' },\n    { key: GROUP_VISITS_BY.YEARS, l10n: 'По годам' },\n    { key: GROUP_VISITS_BY.YEARS_COUNTRIES, l10n: 'По годам и странам' },\n    { key: GROUP_VISITS_BY.COUNTRIES_YEARS, l10n: 'По странам и годам' },\n  ],\n  [VISITS_SECTIONS.TRIPS]: [\n    { key: GROUP_VISITS_BY.TRIPS, l10n: 'По поездкам' },\n    { key: GROUP_VISITS_BY.TRIPS_COUNTRIES, l10n: 'По поездкам и странам' },\n  ],\n};\nexport const GROUP_VISITS_BY_DEFAULTS = {\n  [VISITS_SECTIONS.LOCATIONS]: GROUP_VISITS_BY.COUNTRIES,\n  [VISITS_SECTIONS.TRIPS]: GROUP_VISITS_BY.TRIPS,\n};\n\nexport const KEY_SORT_VISITS_BY = 'sort';\nexport const SORT_VISITS_BY = {\n  RATING_ALPHABET: 'r_a',\n  VISITS_ALPHABET: 'v_a',\n  ALPHABET: 'a',\n};\nexport const SORT_VISITS_BY_DEFAULT = SORT_VISITS_BY.ALPHABET;\n\nexport const COMPARATORS = {\n  VISIT: { ARRIVAL_YEAR: 'ARRIVAL_YEAR' },\n  TRIP: {\n    DEPARTURE_TIME: 'TRIP_DEPARTURE_DATE',\n    ID: 'TRIP_ID',\n    PRESERVE_ORDER: 'PRESERVE_ORDER',\n  },\n  COUNTRY: {\n    VISITS: 'COUNTRY_VISITS',\n    RATING: 'COUNTRY_RATING',\n    NAME_ID: 'COUNTRY_NAME_ID',\n  },\n  LOCATION: {\n    VISITS: 'LOCATION_VISITS',\n    RATING: 'LOCATION_RATING',\n    NAME_ID: 'LOCATION_NAME_ID',\n  },\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n  visibilityTrigger: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  group: {\n    backgroundColor: 'white',\n    top: 0,\n    '&:not(:first-of-type)': {\n      marginTop: theme.spacing(5),\n    },\n\n    '& ~ $subgroup': {\n      marginTop: theme.spacing(2),\n    },\n\n    '& + $subgroup ': {\n      marginTop: 0,\n    },\n  },\n  subgroup: {\n    backgroundColor: 'white',\n    top: 38,\n  },\n  detail: {\n    color: 'gray',\n    fontSize: 12,\n  },\n  formControl: {\n    width: '100%',\n  },\n  ratingBlock: { display: 'inline-flex', alignItems: 'center' },\n  ratingIcon: { color: 'gray', fontSize: 12 },\n  halfDown: { position: 'relative', top: 12 },\n}));\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useSidebar } from 'core/context/SidebarContext';\nimport {\n  GROUP_VISITS_BY,\n  KEY_GROUP_VISITS_BY,\n  GROUP_VISITS_BY_DEFAULTS,\n  VISITS_SECTION_DEFAULT,\n  VISITS_SECTIONS,\n  VISITS_SECTIONS_GROUPS,\n  SORT_VISITS_BY,\n  KEY_SORT_VISITS_BY,\n  SORT_VISITS_BY_DEFAULT,\n} from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\n\nexport default function(setQueryFilter, queryFilter, section) {\n  const classes = useVisitsPageStyles();\n  const {\n    [KEY_GROUP_VISITS_BY]: groupByQuery,\n    [KEY_SORT_VISITS_BY]: sortByQuery,\n  } = queryFilter || {};\n  const sortBy = resolveActualSortBy(sortByQuery);\n  const [groupBy, visitsSectionGroups] = resolveActualGroupBy(\n    groupByQuery,\n    section,\n  );\n\n  useSidebar(\n    ({ closeSidebar }) => (\n      <List>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <InputLabel shrink={true} id=\"select-groupBy-filter-label\">\n              Сгруппировать\n            </InputLabel>\n            <Select\n              labelId=\"select-groupBy-filter-label\"\n              autoWidth={true}\n              id=\"select-groupBy-filter\"\n              value={groupBy}\n              onChange={event => {\n                closeSidebar();\n                setQueryFilter({\n                  [KEY_GROUP_VISITS_BY]: event.target.value,\n                });\n              }}\n            >\n              {visitsSectionGroups.map(visitsSectionGroup => (\n                <MenuItem\n                  key={visitsSectionGroup.key}\n                  value={visitsSectionGroup.key}\n                >\n                  {visitsSectionGroup.l10n}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        {groupBy !== GROUP_VISITS_BY.TRIPS && (\n          <ListItem>\n            <FormControl className={classes.formControl}>\n              <InputLabel shrink={true} id=\"select-sortBy-filter-label\">\n                Сортировать\n              </InputLabel>\n              <Select\n                labelId=\"select-sortBy-filter-label\"\n                autoWidth={true}\n                id=\"select-sortBy-filter\"\n                value={sortBy}\n                onChange={event => {\n                  closeSidebar();\n                  setQueryFilter({\n                    [KEY_SORT_VISITS_BY]: event.target.value,\n                  });\n                }}\n              >\n                <MenuItem value={SORT_VISITS_BY.ALPHABET}>По алфавиту</MenuItem>\n                <MenuItem value={SORT_VISITS_BY.VISITS_ALPHABET}>\n                  По числу посещений\n                </MenuItem>\n                <MenuItem value={SORT_VISITS_BY.RATING_ALPHABET}>\n                  По рейтингу\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </ListItem>\n        )}\n      </List>\n    ),\n    [groupBy, sortBy],\n  );\n\n  return { groupBy, sortBy };\n}\n\nfunction resolveActualSortBy(sortByQuery) {\n  return Object.values(SORT_VISITS_BY).includes(sortByQuery)\n    ? sortByQuery\n    : SORT_VISITS_BY_DEFAULT;\n}\nfunction resolveActualGroupBy(groupByQuery, section) {\n  const actualSection = Object.values(VISITS_SECTIONS).includes(section)\n    ? section\n    : VISITS_SECTION_DEFAULT;\n  const visitsSectionGroups = VISITS_SECTIONS_GROUPS[actualSection] || [];\n  const groupBy = visitsSectionGroups.find(({ key }) => key === groupByQuery)\n    ? groupByQuery\n    : GROUP_VISITS_BY_DEFAULTS[actualSection];\n  return [groupBy, visitsSectionGroups];\n}\n","function areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","import { GROUP_VISITS_BY } from './consts';\n\nexport function resolveTripCountryId(tripId, countryId) {\n  return `t${tripId}_c${countryId}`;\n}\nexport function resolveYearCountryId(year, countryId) {\n  return `y${year}_c${countryId}`;\n}\n\nexport function resolveArrivalYear({ arrivalDateTime }) {\n  if (!arrivalDateTime) {\n    return null;\n  }\n  return arrivalDateTime.getFullYear(arrivalDateTime);\n}\n\nexport function checkIsGroupedByTrip(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS ||\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES\n  );\n}\n\nexport function checkIsGroupedByYear(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.YEARS ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n\nexport function checkIsGroupedByCountry(groupBy) {\n  return (\n    groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES ||\n    groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS ||\n    groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES\n  );\n}\n","import {\n  resolveTripCountryId,\n  resolveYearCountryId,\n  resolveArrivalYear,\n} from './utils';\n\nlet lastCacheKey = null;\nlet cachedResult = null;\nexport default function calcCounters(visitsList, cacheKey) {\n  if (cacheKey && cacheKey === lastCacheKey) {\n    return cachedResult;\n  }\n\n  const counters = {\n    totalVisits: {},\n    countries: {},\n    years: {},\n    trips: {},\n    tripsCountries: {},\n    yearsCountries: {},\n    locations: {},\n  };\n\n  visitsList.forEach(visit => {\n    const { locationId, countryId, tripId, visitId } = visit;\n    const year = resolveArrivalYear(visit);\n\n    inc(counters.countries, countryId, 'visits', visitId);\n    inc(counters.countries, countryId, 'locations', locationId);\n    inc(counters.countries, countryId, 'years', year);\n    inc(counters.countries, countryId, 'trips', tripId);\n\n    inc(counters.years, year, 'locations', locationId);\n    inc(counters.years, year, 'countries', countryId);\n    inc(counters.years, year, 'trips', tripId);\n\n    inc(counters.trips, tripId, 'visits', visitId);\n    inc(counters.trips, tripId, 'locations', locationId);\n    inc(counters.trips, tripId, 'countries', countryId);\n\n    inc(counters.locations, locationId, 'visits', visitId);\n    inc(counters.locations, locationId, 'years', year);\n    inc(counters.locations, locationId, 'trips', tripId);\n\n    inc(\n      counters.tripsCountries,\n      resolveTripCountryId(tripId, countryId),\n      'locations',\n      locationId,\n    );\n    inc(\n      counters.yearsCountries,\n      resolveYearCountryId(year, countryId),\n      'locations',\n      locationId,\n    );\n  }, {});\n\n  lastCacheKey = cacheKey;\n  cachedResult = counters;\n\n  return counters;\n}\n\nfunction inc(ref, refKey, counterName, counterKey) {\n  /* eslint-disable no-multi-assign, no-param-reassign */\n  let countersRef = ref[refKey];\n  if (!countersRef) {\n    countersRef = ref[refKey] = {};\n  }\n\n  let counterRef = countersRef[counterName];\n  if (!counterRef) {\n    counterRef = countersRef[counterName] = {};\n  }\n  /* eslint-enable no-multi-assign, no-param-reassign */\n\n  const currentCount = counterRef[counterKey] || 0;\n  counterRef[counterKey] = currentCount + 1;\n}\n\nexport function getLocationVisitsCount(counters = {}, locationId) {\n  const { locations: { [locationId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getCountryVisitsCount(counters = {}, countryId) {\n  const { countries: { [countryId]: { visits = {} } = {} } = {} } = counters;\n  return Object.keys(visits).length;\n}\n\nexport function getLocationVisitsByYearCount(counters, locationId, year) {\n  const {\n    years: {\n      [year]: {\n        locations: { [locationId]: locationVisitsByYearCount } = {},\n      } = {},\n    } = {},\n  } = counters;\n  return locationVisitsByYearCount;\n}\n\nexport function getYearsOfVisits(counters, locationId) {\n  const { locations: { [locationId]: { years = {} } = {} } = {} } = counters;\n  return Object.keys(years);\n}\n","import warning from 'warning';\nimport memoize from 'lodash/memoize';\nimport sum from 'lodash/sum';\nimport memoizeOne from 'memoize-one';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY, COMPARATORS } from './consts';\nimport { getLocationVisitsCount, getCountryVisitsCount } from './calcCounters';\n\nconst COMPARATOR_FUNCTIONS_MAPPING = {\n  [COMPARATORS.VISIT.ARRIVAL_YEAR]: createArrivalYearComparator,\n  [COMPARATORS.COUNTRY.NAME_ID]: createCountryNameIdComparator,\n  [COMPARATORS.COUNTRY.RATING]: createCountryRatingComparator,\n  [COMPARATORS.COUNTRY.VISITS]: createCountryVisitsComparator,\n  [COMPARATORS.LOCATION.NAME_ID]: createLocationNameIdComparator,\n  [COMPARATORS.LOCATION.RATING]: createLocationRatingComparator,\n  [COMPARATORS.LOCATION.VISITS]: createLocationVisitsComparator,\n  [COMPARATORS.TRIP.PRESERVE_ORDER]: createTripPreserveOrderComparator,\n  [COMPARATORS.TRIP.DEPARTURE_TIME]: createTripDepartureTimeComparator,\n  [COMPARATORS.TRIP.ID]: createTripIdComparator,\n};\n\nexport default function switchSortingFn(queryFilter, provision, counters) {\n  const { groupBy, sortBy } = queryFilter;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      // sorting is not applicable, as locations ordered chronologically\n      return createComparator(provision, counters, [\n        COMPARATORS.TRIP.PRESERVE_ORDER,\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        COMPARATORS.LOCATION.NAME,\n      ]);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return createComparator(provision, counters, [\n        COMPARATORS.TRIP.PRESERVE_ORDER,\n        COMPARATORS.TRIP.DEPARTURE_TIME,\n        COMPARATORS.TRIP.ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return createComparator(provision, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS:\n      return createComparator(provision, counters, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return createComparator(provision, counters, [\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return createComparator(provision, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.COUNTRY),\n        COMPARATORS.COUNTRY.NAME_ID,\n        COMPARATORS.VISIT.ARRIVAL_YEAR,\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      return createComparator(provision, counters, [\n        ...resolveComparatorBySortFn(sortBy, COMPARATORS.LOCATION),\n        COMPARATORS.LOCATION.NAME_ID,\n      ]);\n  }\n}\n\nfunction resolveComparatorBySortFn(sortFn, ENTITY_COMPARATORS) {\n  switch (sortFn) {\n    case SORT_VISITS_BY.VISITS_ALPHABET:\n      return [ENTITY_COMPARATORS?.VISITS];\n    case SORT_VISITS_BY.RATING_ALPHABET:\n      return [ENTITY_COMPARATORS?.RATING, ENTITY_COMPARATORS?.VISITS];\n    default:\n      return [];\n  }\n}\n\nfunction createComparator(provision, counters, comparatorsKeys) {\n  const comparatorFuncs = comparatorsKeys\n    .map(comparatorKey => {\n      const comparatorFnCreator = COMPARATOR_FUNCTIONS_MAPPING[comparatorKey];\n      warning(comparatorFnCreator, 'missing comparatorKey: %s', comparatorKey);\n      if (!comparatorFnCreator) {\n        return null;\n      }\n      return comparatorFnCreator(provision, counters);\n    })\n    .filter(Boolean);\n\n  return (visitA, visitB) => {\n    for (let fnIdx = 0; fnIdx < comparatorFuncs.length; fnIdx += 1) {\n      const comparisonResult = comparatorFuncs[fnIdx](visitA, visitB);\n      if (comparisonResult) {\n        return comparisonResult;\n      }\n    }\n    return 0;\n  };\n}\n\nfunction createLocationNameIdComparator() {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA, locationName: locationNameA } = visitA;\n    const { locationId: locationIdB, locationName: locationNameB } = visitB;\n    if (locationNameA > locationNameB) {\n      return 1;\n    }\n    if (locationNameB > locationNameA) {\n      return -1;\n    }\n    return locationIdA - locationIdB;\n  };\n}\n\nfunction createLocationRatingComparator({ locationsRating }) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    const ratingA = locationsRating[locationIdA] || 10;\n    const ratingB = locationsRating[locationIdB] || 10;\n    return ratingA - ratingB;\n  };\n}\n\nfunction createLocationVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { locationId: locationIdA } = visitA;\n    const { locationId: locationIdB } = visitB;\n    return (\n      getLocationVisitsCount(counters, locationIdB) -\n      getLocationVisitsCount(counters, locationIdA)\n    );\n  };\n}\n\nfunction createCountryNameIdComparator({ countriesDict }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const { countryName: countryNameA } = countriesDict[countryIdA] || {};\n    const { countryName: countryNameB } = countriesDict[countryIdB] || {};\n\n    if (countryNameA > countryNameB) {\n      return 1;\n    }\n    if (countryNameB > countryNameA) {\n      return -1;\n    }\n    return countryIdA - countryIdB;\n  };\n}\n\nconst resolveCountryRating = memoizeOne(locationsDict =>\n  memoize(countryId => {\n    const ratings = Object.values(locationsDict)\n      .filter(\n        ({ countryId: countryIdToCompare }) => countryId === countryIdToCompare,\n      )\n      .map(({ rating }) => rating);\n    if (!ratings.length) {\n      return 0;\n    }\n    return sum(ratings) / ratings.length;\n  }),\n);\n\nfunction createCountryRatingComparator({ countriesRating }) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    const ratingA = countriesRating[countryIdA] || 10;\n    const ratingB = countriesRating[countryIdB] || 10;\n    return ratingA - ratingB;\n  };\n}\n\nfunction createCountryVisitsComparator(_, counters) {\n  return (visitA, visitB) => {\n    const { countryId: countryIdA } = visitA;\n    const { countryId: countryIdB } = visitB;\n    return (\n      getCountryVisitsCount(counters, countryIdB) -\n      getCountryVisitsCount(counters, countryIdA)\n    );\n  };\n}\n\nfunction createTripPreserveOrderComparator({ tripsIds }) {\n  return (visitA, visitB) => {\n    if (!tripsIds) {\n      return 0;\n    }\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n    const indexA = tripsIds.indexOf(tripIdA);\n    const indexB = tripsIds.indexOf(tripIdB);\n    if (indexA < 0 || indexB < 0) {\n      if (indexA < 0 && indexB < 0) {\n        return 0;\n      }\n      if (indexB < 0) {\n        return -1;\n      }\n      return 1;\n    }\n    return indexA - indexB;\n  };\n}\n\nfunction createTripDepartureTimeComparator({ tripsDict }) {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n    const { departureDateTime: departureDateTimeA } = tripsDict[tripIdA] || {};\n    const { departureDateTime: departureDateTimeB } = tripsDict[tripIdB] || {};\n\n    if (!departureDateTimeA && !departureDateTimeB) {\n      return 0;\n    }\n    if (!departureDateTimeA || !departureDateTimeB) {\n      // here also considered previous check: !arrivalDateTimeA && !arrivalDateTimeB\n      return departureDateTimeA ? -1 : 1;\n    }\n    return departureDateTimeB.getFullYear() - departureDateTimeA.getFullYear();\n  };\n}\n\nfunction createTripIdComparator() {\n  return (visitA, visitB) => {\n    const { tripId: tripIdA } = visitA;\n    const { tripId: tripIdB } = visitB;\n\n    return tripIdA - tripIdB;\n  };\n}\n\nfunction createArrivalYearComparator() {\n  return (visitA, visitB) => {\n    const { arrivalDateTime: arrivalDateTimeA } = visitA;\n    const { arrivalDateTime: arrivalDateTimeB } = visitB;\n\n    if (!arrivalDateTimeA && !arrivalDateTimeB) {\n      return 0;\n    }\n    if (!arrivalDateTimeA || !arrivalDateTimeB) {\n      // here also considered previous check: !arrivalDateTimeA && !arrivalDateTimeB\n      return arrivalDateTimeA ? -1 : 1;\n    }\n    return arrivalDateTimeB.getFullYear() - arrivalDateTimeA.getFullYear();\n  };\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function CountryInfo({\n  country: { countryName } = {},\n  isSubgroup,\n  isDetail,\n  className,\n  children,\n}) {\n  if (isDetail) {\n    return <span className={className}>{countryName}</span>;\n  }\n  return (\n    <Typography variant={isSubgroup ? 'h5' : 'h4'} className={className}>\n      {countryName} {children}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { GROUP_VISITS_BY } from '../consts';\nimport { resolveTripCountryId, resolveYearCountryId } from '../utils';\n\nexport default function renderCountry({\n  visit: { tripId, visitId, countryId },\n  changes: { isTripChanged, isCountryChanged },\n  provision: { countriesDict },\n  groupBy,\n  year,\n  counters,\n  classes,\n}) {\n  const isGroupedByTrip = groupBy === GROUP_VISITS_BY.TRIPS_COUNTRIES;\n  const isGroupedByYearCountries = groupBy === GROUP_VISITS_BY.YEARS_COUNTRIES;\n  const shouldRender = isCountryChanged || (isGroupedByTrip && isTripChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  let locationsCounter = 0;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.countries?.[countryId]?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.yearsCountries?.[resolveYearCountryId(year, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      locationsCounter = Object.keys(\n        counters?.tripsCountries?.[resolveTripCountryId(tripId, countryId)]\n          ?.locations || {},\n      ).length;\n      break;\n    default:\n      break;\n  }\n\n  const isSubgroup = isGroupedByTrip || isGroupedByYearCountries;\n  return (\n    <CountryInfo\n      key={`c${countryId}_v${visitId}`}\n      country={countriesDict[countryId]}\n      isSubgroup={isSubgroup}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {locationsCounter > 2 && (\n        <span className={classes.detail}>{`${locationsCounter} мест`}</span>\n      )}\n    </CountryInfo>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MUILink from '@material-ui/core/Link';\n\nexport default function ConnectedLink(props) {\n  return <MUILink {...props} component={RouterLink} />;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ConnectedLink from 'modules/components/muiExtended/ConnectedLink/ConnectedLink.jsx';\n\nconst useStyles = makeStyles({\n  autoMargin: { marginLeft: 'auto' },\n});\n\nexport default function LocationInfo({\n  children,\n  shouldJustifyContent,\n  href,\n  location: { locationName } = {},\n}) {\n  const classes = useStyles();\n  const childrenArray = React.Children.toArray(children);\n  if (!shouldJustifyContent || childrenArray.length <= 1) {\n    return (\n      <Typography>\n        {locationName} {children}\n      </Typography>\n    );\n  }\n\n  const lastChildren = childrenArray.slice(-1);\n  const restChildren = childrenArray.slice(0, -1);\n  return (\n    <Grid container={true} justify=\"space-between\" alignItems=\"center\">\n      <Grid item={true}>\n        <Typography>\n          {href ? (\n            <ConnectedLink to={href}>{locationName}</ConnectedLink>\n          ) : (\n            locationName\n          )}{' '}\n          {restChildren}\n        </Typography>\n      </Grid>\n      <Grid item={true} classes={{ item: classes.autoMargin }}>\n        {lastChildren}\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  photosContainer: { display: 'flex', justifyContent: 'space-between' },\n  photoContainer: {\n    margin: '4px 12px 12px',\n    minWidth: '150px',\n    maxHeight: '100px',\n    textAlign: 'center',\n  },\n  photo: {\n    maxWidth: '150px',\n    borderRadius: '4px',\n  },\n});\n\nexport default function LocationPhotos({\n  visitId,\n  tripId,\n  location,\n  visitsDict,\n  year,\n}) {\n  const classes = useStyles();\n  const { visitsIds } = location;\n  const actualVisits = visitsIds\n    .map(visitsId => visitsDict[visitsId])\n    .filter(visit => {\n      if (!visit) {\n        return false;\n      }\n      const { tripId: tripIdToCompare, visitId: visitIdToCompare } = visit;\n      if (visitId && visitId !== visitIdToCompare) {\n        return false;\n      }\n      if (tripId && tripId !== tripIdToCompare) {\n        return false;\n      }\n      if (!year) {\n        return true;\n      }\n      const { arrivalDateTime, departureDateTime } = visit;\n      return (\n        arrivalDateTime.getFullYear() <= year &&\n        departureDateTime.getFullYear() >= year\n      );\n    });\n\n  const thumbnailsUrls = actualVisits\n    .flatMap(({ photos }) => photos.map(({ thumbnailUrl }) => thumbnailUrl))\n    .slice(0, 3);\n\n  if (!thumbnailsUrls.length) {\n    return null;\n  }\n\n  return (\n    <div className={classes.photosContainer}>\n      {thumbnailsUrls.map(thumbnailUrl => (\n        <div key={thumbnailUrl} className={classes.photoContainer}>\n          <img className={classes.photo} src={thumbnailUrl} />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport IconStar from '@material-ui/icons/StarBorder';\nimport IconThumbDown from '@material-ui/icons/ThumbDownOutlined';\nimport IconThumbsUpDown from '@material-ui/icons/ThumbsUpDownOutlined';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport LocationPhotos from 'travel/components/models/locations/LocationPhotos';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\nimport { GROUP_VISITS_BY, SORT_VISITS_BY } from '../consts';\nimport {\n  getYearsOfVisits,\n  getLocationVisitsByYearCount,\n  getLocationVisitsCount,\n} from '../calcCounters';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\nconst GROUPS_TO_RENDER_YEARS_OF_VISIT = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.COUNTRIES,\n];\n\nexport default function renderLocation({\n  visit,\n  visit: { tripId, visitId, locationId, countryId, departureRideId },\n  classes,\n  changes: {\n    isYearChanged,\n    isCountryChanged,\n    isTripChanged,\n    isLocationChanged,\n  },\n  year,\n  provision: {\n    locationsDict,\n    locationsRating,\n    countriesDict,\n    visitsDict,\n    ridesDict,\n  },\n  groupBy,\n  sortBy,\n  counters,\n  visitEditUrl,\n}) {\n  const isGroupedByTripsOnly = groupBy === GROUP_VISITS_BY.TRIPS;\n  const shouldRender =\n    isGroupedByTripsOnly || // every visit in trip should be shown\n    isTripChanged || // in other grouping show only unique locations\n    isYearChanged ||\n    isCountryChanged ||\n    isLocationChanged;\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  const visitsCount = resolveVisitsCounter(visit, counters, year, groupBy);\n  const visitsDetailNode =\n    sortBy !== SORT_VISITS_BY.RATING_ALPHABET && visitsCount > 1 ? (\n      <span className={classes.detail}>{`${visitsCount} визитов`}</span>\n    ) : null;\n\n  const shouldRenderYearOfVisit =\n    sortBy !== SORT_VISITS_BY.RATING_ALPHABET &&\n    GROUPS_TO_RENDER_YEARS_OF_VISIT.includes(groupBy);\n  const yearsOfVisitDetailNode = shouldRenderYearOfVisit ? (\n    <span className={classes.detail}>\n      {`в ${getYearsOfVisits(counters, locationId).join(', ')}`}\n    </span>\n  ) : null;\n\n  const ratingNode =\n    sortBy === SORT_VISITS_BY.RATING_ALPHABET\n      ? renderAlignedRatingNode({\n          classes,\n          locationRating: locationsRating?.[locationId],\n        })\n      : null;\n\n  const childrenNodes = joinNodes(\n    countryDetailNode,\n    ratingNode,\n    visitsDetailNode,\n    yearsOfVisitDetailNode,\n  );\n\n  // const renderLocationsPhotos = () => {\n  //   switch (groupBy) {\n  //     case GROUP_VISITS_BY.TRIPS:\n  //       return (\n  //         <LocationPhotos\n  //           visitId={visitId}\n  //           location={locationsDict[locationId]}\n  //           visitsDict={visitsDict}\n  //         />\n  //       );\n  //     case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n  //       return (\n  //         <LocationPhotos\n  //           tripId={tripId}\n  //           location={locationsDict[locationId]}\n  //           visitsDict={visitsDict}\n  //         />\n  //       );\n  //     case GROUP_VISITS_BY.YEARS:\n  //     case GROUP_VISITS_BY.YEARS_COUNTRIES:\n  //     case GROUP_VISITS_BY.COUNTRIES_YEARS:\n  //       return (\n  //         <LocationPhotos\n  //           location={locationsDict[locationId]}\n  //           visitsDict={visitsDict}\n  //           year={year}\n  //         />\n  //       );\n  //     case GROUP_VISITS_BY.COUNTRIES:\n  //     case GROUP_VISITS_BY.LOCATIONS:\n  //     default:\n  //       return (\n  //         <LocationPhotos\n  //           location={locationsDict[locationId]}\n  //           visitsDict={visitsDict}\n  //         />\n  //       );\n  //   }\n  // };\n\n  return (\n    <React.Fragment key={`l${locationId}_v${visitId}`}>\n      <LocationInfo\n        location={locationsDict[locationId]}\n        country={countriesDict[countryId]}\n        shouldJustifyContent={isGroupedByTripsOnly}\n        href={visitEditUrl}\n      >\n        {childrenNodes}\n        {isGroupedByTripsOnly && (\n          <Grid container={true}>\n            <Grid item={true}>\n              <Typography className={classes.detail}>\n                {visitDateTimePeriodToString(visitsDict[visitId])}\n              </Typography>\n            </Grid>\n            <Grid item={true}>\n              <RideInfo\n                ride={ridesDict[departureRideId]}\n                className={classes.halfDown}\n              />\n            </Grid>\n          </Grid>\n        )}\n      </LocationInfo>\n      {/*{renderLocationsPhotos()}*/}\n    </React.Fragment>\n  );\n}\n\nfunction renderAlignedRatingNode({ locationRating, classes }) {\n  return (\n    <div className={classes.ratingBlock}>\n      {renderRatingNode({ locationRating, classes })}\n    </div>\n  );\n}\n\nfunction renderRatingNode({ locationRating, classes }) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return (\n        <>\n          <IconStar className={classes.ratingIcon} />\n          <IconStar className={classes.ratingIcon} />\n        </>\n      );\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return <IconStar className={classes.ratingIcon} />;\n    case LOCATION_RATING.NEVER:\n      return <IconThumbDown className={classes.ratingIcon} />;\n    default:\n      return <IconThumbsUpDown className={classes.ratingIcon} />;\n  }\n}\n\nfunction joinNodes(...nodes) {\n  return nodes.filter(Boolean).reduce((nodesMemo, node, index) => {\n    if (index > 0) {\n      nodesMemo.push(<span> </span>);\n    }\n    nodesMemo.push(node);\n    return nodesMemo;\n  }, []);\n}\n\nfunction resolveVisitsCounter(visit, counters = {}, year, groupBy) {\n  const { locationId } = visit;\n  switch (groupBy) {\n    case GROUP_VISITS_BY.LOCATIONS:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.COUNTRIES:\n      return getLocationVisitsCount(counters, locationId);\n    case GROUP_VISITS_BY.YEARS:\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return getLocationVisitsByYearCount(counters, locationId, year);\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n    default:\n      break;\n  }\n}\n","import React from 'react';\nimport LocationInfo from 'travel/components/models/locations/LocationInfo';\nimport CountryInfo from 'travel/components/models/countries/CountryInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nconst GROUPS_TO_RENDER_COUNTRY = [\n  GROUP_VISITS_BY.LOCATIONS,\n  GROUP_VISITS_BY.YEARS,\n  GROUP_VISITS_BY.TRIPS,\n];\n\nexport default function renderOriginLocation({\n  keyBase,\n  children,\n  classes,\n  visit: { tripId },\n  provision: { tripsDict, locationsDict, countriesDict },\n  groupBy,\n}) {\n  const trip = tripsDict[tripId];\n  if (!trip) {\n    return null;\n  }\n  const { originLocationId } = trip;\n\n  const originLocation = locationsDict[originLocationId];\n  if (!originLocation) {\n    return null;\n  }\n\n  const { countryId } = originLocation;\n  const shouldRenderCountry = GROUPS_TO_RENDER_COUNTRY.includes(groupBy);\n  const countryDetailNode = shouldRenderCountry ? (\n    <CountryInfo\n      country={countriesDict[countryId]}\n      className={classes.detail}\n      isDetail={true}\n    />\n  ) : null;\n\n  return (\n    <LocationInfo\n      key={`${keyBase}_t${tripId}_ol${originLocationId}`}\n      location={locationsDict[originLocationId]}\n      country={countriesDict[countryId]}\n      shouldJustifyContent={children != null}\n    >\n      {countryDetailNode}\n      {children}\n    </LocationInfo>\n  );\n}\n","import React from 'react';\nimport RideInfo from 'travel/components/models/rides/RideInfo';\nimport renderOriginLocation from './renderOriginLocation';\n\nexport default function renderDepartureLocation(props) {\n  const {\n    visit: { arrivalRideId },\n    classes,\n    changes: { isTripChanged },\n    provision: { ridesDict },\n  } = props;\n\n  if (!isTripChanged) {\n    return null;\n  }\n\n  return renderOriginLocation({\n    ...props,\n    keyBase: `dl`,\n    children: (\n      <RideInfo ride={ridesDict[arrivalRideId]} className={classes.halfDown} />\n    ),\n  });\n}\n","import React from 'react';\nimport renderOriginLocation from './renderOriginLocation';\n\nexport default function renderArrivalLocation(props) {\n  const {\n    changes: { willTripChange },\n  } = props;\n\n  if (!willTripChange) {\n    return null;\n  }\n\n  return renderOriginLocation({\n    ...props,\n    keyBase: 'al',\n  });\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\n\nexport default function TripInfo({\n  trip,\n  visitsDict,\n  countriesDict,\n  locationsDict,\n  children,\n  className,\n}) {\n  return (\n    <Typography variant=\"h4\" className={className} paragraph={true}>\n      <span>\n        {resolveTripCaption(trip, visitsDict, countriesDict, locationsDict)}\n      </span>\n      {children}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport cls from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport IconEdit from '@material-ui/icons/Edit';\nimport TripInfo from 'travel/components/models/trips/TripInfo';\n\nexport default function renderTrip({\n  visit: { visitId, tripId },\n  changes: { isTripChanged },\n  provision: { tripsDict, visitsDict, countriesDict, locationsDict },\n  travelPaths: { tripEdit: tripEditPath },\n  hasEditRights,\n  userAlias,\n  classes,\n}) {\n  if (!isTripChanged) {\n    return null;\n  }\n\n  const tripEditButtonNode = hasEditRights ? (\n    <IconButton\n      className={classes.visibleOnlyOnHover}\n      href={tripEditPath.toUrl({ userAlias, strTripId: String(tripId) })}\n      size=\"small\"\n    >\n      <IconEdit />\n    </IconButton>\n  ) : null;\n\n  return (\n    <TripInfo\n      key={`t${tripId}_v${visitId}`}\n      className={cls(classes.visibilityTrigger, classes.group)}\n      trip={tripsDict[tripId]}\n      visitsDict={visitsDict}\n      countriesDict={countriesDict}\n      locationsDict={locationsDict}\n    >\n      {tripEditButtonNode}\n    </TripInfo>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useVisitsPageStyles from '../../../pages/VisitsPage/useVisitsPageStyles';\n\nexport default function YearInfo({ year, isSubgroup }) {\n  const classes = useVisitsPageStyles();\n  return (\n    <Typography\n      variant={isSubgroup ? 'h5' : 'h4'}\n      className={isSubgroup ? classes.subgroup : classes.group}\n    >\n      {year}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport YearInfo from 'travel/components/common/YearInfo';\nimport { GROUP_VISITS_BY } from '../consts';\n\nexport default function renderYear({\n  visit: { visitId },\n  changes: { isYearChanged, isCountryChanged },\n  groupBy,\n  year,\n}) {\n  const isGroupedByCountriesYear = groupBy === GROUP_VISITS_BY.COUNTRIES_YEARS;\n  const shouldRender =\n    isYearChanged || (isGroupedByCountriesYear && isCountryChanged);\n  if (!shouldRender) {\n    return null;\n  }\n  return (\n    <YearInfo\n      key={`y${year}_v${visitId}`}\n      year={year}\n      isSubgroup={isGroupedByCountriesYear}\n    />\n  );\n}\n","import {\n  resolveArrivalYear,\n  checkIsGroupedByCountry,\n  checkIsGroupedByTrip,\n  checkIsGroupedByYear,\n} from '../utils';\nimport { GROUP_VISITS_BY } from '../consts';\nimport renderCountry from './renderCountry';\nimport renderLocation from './renderLocation';\nimport renderDepartureLocation from './renderDepartureLocation';\nimport renderArrivalLocation from './renderArrivalLocation';\nimport renderTrip from './renderTrip';\nimport renderYear from './renderYear';\n\nexport default function renderNodesInOrder({\n  prevVisit,\n  visit,\n  nextVisit,\n  groupBy,\n  ...forwardedProps\n}) {\n  const {\n    countryId: prevCountryId,\n    locationId: prevLocationId,\n    tripId: prevTripId,\n  } = prevVisit;\n  const { tripId: nextTripId } = nextVisit;\n  const { countryId, locationId, tripId } = visit;\n\n  const prevYear = resolveArrivalYear(prevVisit);\n  const year = resolveArrivalYear(visit);\n\n  const isGroupedByTrip = checkIsGroupedByTrip(groupBy);\n  const isGroupedByYear = checkIsGroupedByYear(groupBy);\n  const isGroupedByCountry = checkIsGroupedByCountry(groupBy);\n\n  const renderProps = {\n    visit,\n    groupBy,\n    year,\n    changes: {\n      isTripChanged: isGroupedByTrip && prevTripId !== tripId,\n      willTripChange: isGroupedByTrip && nextTripId !== tripId,\n      isYearChanged: isGroupedByYear && prevYear !== year,\n      isCountryChanged: isGroupedByCountry && prevCountryId !== countryId,\n      isLocationChanged: prevLocationId !== locationId,\n    },\n    ...forwardedProps,\n  };\n\n  switch (groupBy) {\n    case GROUP_VISITS_BY.TRIPS:\n      return [\n        renderTrip(renderProps),\n        renderDepartureLocation(renderProps),\n        renderLocation(renderProps),\n        renderArrivalLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.TRIPS_COUNTRIES:\n      return [\n        renderTrip(renderProps),\n        renderCountry(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.COUNTRIES:\n      return [renderCountry(renderProps), renderLocation(renderProps)];\n    case GROUP_VISITS_BY.YEARS:\n      return [renderYear(renderProps), renderLocation(renderProps)];\n    case GROUP_VISITS_BY.YEARS_COUNTRIES:\n      return [\n        renderYear(renderProps),\n        renderCountry(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.COUNTRIES_YEARS:\n      return [\n        renderCountry(renderProps),\n        renderYear(renderProps),\n        renderLocation(renderProps),\n      ];\n    case GROUP_VISITS_BY.LOCATIONS:\n    default:\n      // return {push:[locationNode], keep: [countryNode, yearNode]};\n      return [renderLocation(renderProps)];\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport MUILink from '@material-ui/core/Link';\nimport { checkIsGroupedByTrip } from '../utils';\nimport * as locators from '../locators';\n\nexport default function renderTitle({\n  createTripUrl,\n  locationsUrl,\n  locationsCount,\n  countriesCount,\n  groupBy,\n}) {\n  const linkToCreateTripNode = checkIsGroupedByTrip(groupBy) ? (\n    <div>\n      <MUILink\n        to={createTripUrl}\n        component={Link}\n        data-locator={locators.ADD_TRIP_BUTTON}\n      >\n        Добавить поездку\n      </MUILink>\n    </div>\n  ) : null;\n\n  return (\n    <Typography variant=\"h6\" paragraph={true}>\n      <span>Всего </span>\n      <MUILink to={locationsUrl} component={Link}>\n        {`${locationsCount} городов `}\n      </MUILink>\n      <span>из </span>\n      <span>{`${countriesCount} стран `}</span>\n      {linkToCreateTripNode}\n    </Typography>\n  );\n}\n\nrenderTitle.propTypes = {\n  locationsUrl: PropTypes.string.isRequired,\n  locationsCount: PropTypes.number.isRequired,\n  countriesCount: PropTypes.number.isRequired,\n};\n","export const ADD_TRIP_BUTTON = 'ADD_TRIP_BUTTON';\n","import React from 'react';\nimport { usePaths } from 'modules/packages';\nimport { useTripsStats } from 'travel/dataSource';\nimport { useQueryFilter } from 'core/context/QueryFilterContext';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { GROUP_VISITS_BY } from './consts';\nimport useVisitsPageStyles from './useVisitsPageStyles';\nimport useVisitsGroupingSidebar from './useVisitsGroupingSidebar';\nimport switchSortingFn from './switchSortingFn';\nimport renderNodesInOrder from './blocks/renderNodesInOrder';\nimport renderTitle from './blocks/renderTitle';\nimport calcCounters from './calcCounters';\n\nexport default function VisitsPage({\n  match: {\n    params: { userAlias, section },\n  },\n}) {\n  const { userAlias: authenticatedUserAlias } = useAuthContext();\n  const hasEditRights = userAlias === authenticatedUserAlias;\n\n  const classes = useVisitsPageStyles();\n  const { queryFilter, setQueryFilter } = useQueryFilter();\n  const { groupBy, sortBy } = useVisitsGroupingSidebar(\n    setQueryFilter,\n    queryFilter,\n    section,\n  );\n\n  const provision = useTripsStats({ userAlias });\n  const { isPending, isError } = provision;\n\n  const { travel: travelPaths } = usePaths();\n  const {\n    locations: locationsPath,\n    tripCreate: tripCreatePath,\n    visitEdit: visitEditPath,\n  } = travelPaths;\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  const { visitsIds, visitsDict } = provision;\n  const unsortedVisitsList = visitsIds\n    .map(visitId => visitsDict[visitId])\n    .filter(Boolean);\n\n  const { updatesCounter } = provision;\n  const counters = calcCounters(unsortedVisitsList, updatesCounter);\n\n  const titleNode = renderTitle({\n    locationsUrl: locationsPath.toUrl({ userAlias }),\n    createTripUrl: tripCreatePath.toUrl({ userAlias }),\n    locationsCount: Object.keys(counters?.locations || {}).length,\n    countriesCount: Object.keys(counters?.countries || {}).length,\n    groupBy,\n  });\n\n  const visitsList = unsortedVisitsList.sort(\n    switchSortingFn({ groupBy, sortBy }, provision, counters),\n  );\n  const nodes = visitsList.reduce(\n    (nodesAccumulator, visit, index) => {\n      const prevVisit = index > 0 ? visitsList[index - 1] : {};\n      const nextVisit =\n        index < visitsList.length - 1 ? visitsList[index + 1] : {};\n\n      renderNodesInOrder({\n        prevVisit,\n        visit,\n        nextVisit,\n        provision,\n        classes,\n        counters,\n        groupBy,\n        sortBy,\n        hasEditRights,\n        travelPaths,\n        userAlias,\n        visitEditUrl:\n          hasEditRights && groupBy === GROUP_VISITS_BY.TRIPS\n            ? visitEditPath.toUrl({ strVisitId: String(visit.visitId) })\n            : undefined,\n      })\n        .filter(Boolean)\n        .forEach(node => nodesAccumulator.push(node));\n\n      return nodesAccumulator;\n    },\n    [titleNode],\n  );\n\n  // without key there is strange bug with reconciling:\n  // when group_by changed from trips to something other, then trips nodes still\n  // rendering in three, but because of nodes keys collisions only\n  // originalLocations is remaining on top of the list\n  return <div key={`${groupBy}_${sortBy}`}>{nodes}</div>;\n}\n\n/*\n// byCities -> groupBy(visits, cities) '123': []\nЧелябинск, Россия, 3 визита в 2011 и 2012\n-> 20 августа 2011\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountries -> groupBy(visits, countries & cities) '1-123': []\n[Россия](/travel/:userAlias/countries/1)\n[Челябинск](/travel/:userAlias/cities/123), 3 визита в [2011](/travel/:userAlias/year/2011) и [2012](/travel/:userAlias/year/2012) [заметки](/travel/:userAlias/cities/123/story)\n-> 20 августа 2011 [заметки](/travel/:userAlias/visits/111/story)\n   до 5 фоток\n-> 20-21 июня 2012 [заметки](/travel/:userAlias/visits/222/story)\n   до 5 фоток\n-> 31 июля-1 августа 2012 [заметки](/travel/:userAlias/visits/333/story)\n   до 5 фоток\n\n// byYears -> groupBy(visits, years & cities) '2011-123': []\n2011\nЧелябинск, Россия\n-> 20 августа 2011\n\n2012\nЧелябинск, Россия, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byYearsAndCountries -> groupBy(visits, years & countries & cities)  '2011-1-123': []\n2011\nРоссия\nЧелябинск\n-> 20 августа 2011\n\n2012\nРоссия\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n// byCountriesAndYears -> groupBy(visits, countries & years & cities) 'c1-y2011-l123': []\nРоссия\n\n2011\nЧелябинск\n-> 20 августа 2011\n\n2012\nЧелябинск, 2 визита\n-> 20-21 июня 2012\n-> 31 июля-1 августа 2012\n\n*/\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport mapValues from 'lodash/mapValues';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias, tripsIds: requiredTripsIds }) {\n  const { tripsDict } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n  }));\n  const shouldRequireAllTrips = !requiredTripsIds;\n  const missingTripsIds =\n    !shouldRequireAllTrips &&\n    requiredTripsIds.filter(tripId => !tripsDict[tripId]);\n\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: {\n      userAlias,\n      navigation: { isDisabled: true },\n      filter: shouldRequireAllTrips\n        ? {}\n        : { id: { comparator: 'in', value: missingTripsIds } },\n    },\n  });\n}\n\nexport function useTripsStats({ userAlias, tripsIds: requiredTripsIds }) {\n  const tripsProvision = useTrips({ userAlias, tripsIds: requiredTripsIds });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = useMemo(\n    () =>\n      Array.from(\n        new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n      ),\n    [tripsIds, tripsDict],\n  );\n\n  const ridesIds = useMemo(\n    () =>\n      Array.from(\n        new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n      ),\n    [tripsIds, tripsDict],\n  );\n\n  const countriesIds = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || []),\n        ),\n      ),\n    [visitsIds, visitsDict],\n  );\n\n  const locationsIds = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n        ),\n      ),\n    [visitsIds, visitsDict],\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  const countriesRating = calcCountriesRating(\n    locationsIds,\n    locationsDict,\n    locationsRating,\n  );\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n    countriesRating,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n    invalidate: () => provisions.forEach(({ invalidate }) => invalidate()),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n\nfunction calcCountriesRating(locationsIds, locationsDict, locationsRating) {\n  const ratingsGroupedByCountries = locationsIds.reduce((memo, locationId) => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return memo;\n    }\n    const locationRating = locationsRating[locationId];\n    const { countryId } = location;\n    if (!memo[countryId]) {\n      memo[countryId] = [];\n    }\n    memo[countryId].push(locationRating);\n    return memo;\n  }, {});\n\n  return mapValues(ratingsGroupedByCountries, ratingsByCountry =>\n    averageRating(ratingsByCountry),\n  );\n}\n\nfunction averageRating(ratings) {\n  if (!ratings.length) {\n    return Infinity;\n  }\n  const avg =\n    ratings.length / ratings.map(rating => 1 / rating).reduce((a, b) => a + b);\n\n  const best = max(ratings);\n\n  const lengthRatio = Math.log(ratings.length);\n\n  return 1 / (1 / avg + lengthRatio / best);\n}\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  return useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n}\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport dateFormat from 'date-fns/format';\nimport ru from 'date-fns/locale/ru';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nfunction dateTimePeriodToString(periodStart, periodEnd) {\n  const periodEndString = dateFormat(periodEnd, DATE_FORMATS.FULL, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n      locale: ru,\n    });\n  } else if (isSameYear(periodStart, periodEnd)) {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_MONTH, {\n      locale: ru,\n    });\n  } else {\n    periodStartString = dateFormat(periodStart, DATE_FORMATS.FULL, {\n      locale: ru,\n    });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime);\n}\n\nexport function visitDateTimePeriodToString({\n  departureDateTime,\n  arrivalDateTime,\n}) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime);\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  return useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useVisit({ userAlias, visitId: requiredVisitId }) {\n  const { visitsDict } = useSelector(state => ({\n    visitsDict: selectDict(state, 'visits') || {},\n  }));\n  const visit = visitsDict[requiredVisitId];\n\n  return {\n    visit,\n    ...useProvision({\n      domain: `travel.visit${requiredVisitId}-${userAlias}`,\n      isProvision: true,\n      modelName: 'visits',\n      observe: requiredVisitId,\n      condition: !visit,\n      query: {\n        userAlias,\n        filter: { visit_id: { comparator: '=', value: requiredVisitId } },\n        navigation: { isDisabled: true },\n      },\n    }),\n  };\n}\n\nexport function useAddVisitPhotoRequest({ domain }) {\n  const [submitVisitPhoto, provision] = useRequest({\n    domain,\n    modelName: 'visits',\n    method: 'POST',\n    contentType: 'multipart/form-data',\n  });\n\n  return {\n    ...provision,\n    submitVisitPhoto,\n  };\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { RIDE_TYPES } from 'travel/models/rides/consts';\nimport RideIcon from 'travel/components/models/rides/RideIcon';\n\nconst useStyles = makeStyles({\n  icon: { color: 'gray', fontSize: 16, height: 16 },\n  absoluteIcon: {\n    // todo fast decision, need refactor\n    color: 'gray',\n    fontSize: 16,\n    height: 16,\n    position: 'absolute',\n  },\n  detail: { color: 'gray', fontSize: 12 },\n});\n\nexport default function RideInfo({\n  ride,\n  ride: { rideType } = {},\n  className,\n  isLong,\n}) {\n  const classes = useStyles();\n\n  if (!ride) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <RideIcon ride={ride} className={classes.icon} />\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.absoluteIcon} />\n      )}\n      {isLong && rideDateTimePeriodToString(ride)}\n    </div>\n  );\n}\n","import React from 'react';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { VEHICLE_TYPES } from 'travel/models/rides/consts';\n\nexport default function RideIcon({ ride: { vehicleType }, className }) {\n  const IconComponent = resolveRideIconComponent(vehicleType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(vehicleType) {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n      return CustomTransportIcon;\n    default:\n      return UnknownRideIcon;\n  }\n}\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import dateMin from 'date-fns/min';\nimport dateMax from 'date-fns/max';\nimport groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\n\nconst FALLBACK = 'Без названия';\nexport default function resolveTripCaption(\n  trip,\n  visitsDict,\n  countriesDict,\n  locationsDict,\n) {\n  const {\n    visits: visitsIds,\n    originLocationId,\n    tripName,\n    hasAutogeneratedTripName,\n  } = trip || {};\n\n  const originCountryId = locationsDict[originLocationId]?.countryId;\n\n  if (!hasAutogeneratedTripName) {\n    return tripName || FALLBACK;\n  }\n  if (!visitsIds.length) {\n    return FALLBACK;\n  }\n\n  const periodStr = visitDateTimePeriodToString({\n    arrivalDateTime: dateMin(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.arrivalDateTime),\n    ),\n    departureDateTime: dateMax(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.departureDateTime),\n    ),\n  });\n\n  const visitsByCountries = Object.keys(\n    groupBy(\n      visitsIds.filter(\n        visitId => visitsDict[visitId]?.visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n\n  if (visitsByCountries.length === 1) {\n    const locationsNames = uniqTrimAndJoin(\n      visitsIds.map(visitId => visitsDict[visitId]?.locationName),\n      { maxLength: 4 },\n    );\n    return `${locationsNames || FALLBACK}, ${periodStr}`;\n  }\n\n  const countriesNames = uniqTrimAndJoin(\n    visitsByCountries\n      .map(\n        countryId =>\n          Number(countryId) !== originCountryId &&\n          countriesDict[countryId] &&\n          countriesDict[countryId].countryName,\n      )\n      .filter(Boolean),\n    { maxLength: 4 },\n  );\n  return `${countriesNames || FALLBACK}, ${periodStr}`;\n}\n"],"sourceRoot":""}