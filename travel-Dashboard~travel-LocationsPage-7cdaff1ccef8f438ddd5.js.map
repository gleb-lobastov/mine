{"version":3,"sources":["webpack:///./src/packages/travel/components/common/LocationsMap/utils/adaptMarkerData.js","webpack:///./src/packages/travel/components/common/LocationsMap/utils/resolveLocationFirstAndLastVisitDateTime.js","webpack:///./src/packages/travel/components/common/LocationsMap/consts.js","webpack:///./src/packages/travel/components/common/LocationsMap/utils/makeScaleUtils.js","webpack:///./src/modules/utilities/dateTime/formatDate.js","webpack:///./src/packages/travel/components/common/LocationsMap/utils/renderTitle.js","webpack:///./src/packages/travel/components/common/LocationsMap/utils/resolveMarkerUrl.js","webpack:///./src/packages/travel/components/common/LocationsMap/useMarkers.js","webpack:///./src/packages/travel/components/common/LocationsMap/blocks/MarkersScaleSelect/MarkersScaleSelect.jsx","webpack:///./src/packages/travel/components/common/LocationsMap/blocks/MarkersRatingLevelSelect/MarkersRatingLevelSelect.jsx","webpack:///./src/packages/travel/components/common/LocationsMap/useMarkersScaleSidebar.js","webpack:///./src/packages/travel/components/common/LocationsMap/LocationsMap.jsx","webpack:///./src/packages/travel/components/common/LocationsMap/utils/filterMarkerData.js","webpack:///./src/packages/travel/dataSource/useTrips.js","webpack:///./src/packages/travel/dataSource/useCountries.js","webpack:///./src/modules/utilities/dateTime/isValidDate.js","webpack:///./src/packages/travel/dataSource/useUser.js","webpack:///./src/packages/travel/dataSource/useLocations.js","webpack:///./src/modules/utilities/dateTime/safeDateFormat.js"],"names":["adaptMarkerData","locationsIds","locationsDict","visitsDict","locationsRating","map","locationId","location","lon","lat","locationName","visitsIds","reduce","accumulator","visitId","visit","arrivalDateTime","departureDateTime","firstVisitDateTime","min","lastVisitDateTime","max","resolveLocationFirstAndLastVisitDateTime","locationRating","visitsCount","length","MARKERS_SCALES","BY_FIRST_VISIT","BY_LAST_VISIT","BY_VISITS_COUNT","BY_RATING","MARKERS_SCALE_DEFAULT","MARKERS_SCALE_BY_TIME_FILENAMES","MARKERS_SCALE_BY_SOURCES","MARKERS_RATING_LEVELS","ALL","WANT_COME_BACK","LOVE_THIS_PLACE","MARKERS_RATING_LEVEL_DEFAULT","stepByVisitsCount","stepByRating","LOCATION_RATING","PLACE_TO_LIVE","FEW_PER_YEAR","ONCE_PER_YEAR","ONCE_PER_TWO_YEARS","ONCE_PER_FIVE_YEARS","ONCE_PER_DECADE","TWICE_PER_LIVE","ONCE_PER_LIVE","NEVER","makeScaleByDateTimeUtils","field","resolveStep","step","minTime","diff","Math","floor","resolveOptions","markersDataList","times","markerData","getTime","filter","Boolean","formatDate","date","dateFormat","locale","ru","renderRating","resolveMarkerUrl","scaleBy","markerSources","subPath","MarkersScaleSelect","classes","onClose","onChange","List","ListItem","FormControl","className","formControl","InputLabel","shrink","id","Select","labelId","autoWidth","value","event","nextScaleBy","target","updates","undefined","MenuItem","key","MarkersRatingLevelSelect","ratingLevel","propTypes","PropTypes","shape","string","isRequired","oneOf","Object","values","func","useStyles","makeStyles","width","setQueryFilter","queryFilter","scaleByQuery","ratingLevelQuery","includes","resolveActualScaleBy","resolveActualRatingLevel","useSidebar","closeSidebar","googleMapContainer","margin","maxWidth","flexGrow","minHeight","position","googleMapPosition","top","left","right","bottom","LocationsMap","handleGoogleApiLoaded","markersData","useState","googleMapsApi","setGoogleMapsApi","isFirsRenderRef","useRef","useEffect","maps","bounds","LatLngBounds","markers","iconUrl","title","zIndex","marker","Marker","lng","icon","url","scaledSize","Size","scale","extend","current","setOptions","maxZoom","minZoom","fitBounds","forEach","setMap","setVisible","api","useMarkers","useMemo","actualMarkersData","adaptedMarkersData","filterMarkerData","makeScaleUtils","options","join","cls","bootstrapURLKeys","__GOOGLE_MAP_API_KEY__","center","zoom","onGoogleApiLoaded","objectOf","visitsPropTypes","locationPropTypes","arrayOf","number","defaultProps","useTripsStats","userAlias","tripsProvision","requiredTripsIds","tripsIds","tripsDict","useSelector","state","selectDict","shouldRequireAllTrips","missingTripsIds","tripId","useProvision","domain","isProvision","modelName","observe","query","navigation","isDisabled","comparator","useTrips","useUser","user","userProvision","selectResult","data","ridesDict","countriesDict","Array","from","Set","flatMap","tripsId","visits","ridesIds","rides","countriesIds","countryId","countriesProvision","useCountries","locationsProvision","useLocations","commonProvisionState","provisions","updatesCounter","sum","selectUpdatesCounter","isReady","every","selectIsReady","isPending","some","selectIsPending","isValid","selectIsValid","error","find","selectIsError","errors","selectError","invalidate","mergeProvisionsState","isError","countriesRating","ratingsGroupedByCountries","memo","push","mapValues","ratingsByCountry","ratings","Infinity","avg","rating","a","b","best","lengthRatio","log","averageRating","calcCountriesRating","ridesStats","calcRidesStats","earliestDeparture","Date","rideId","latestArrival","isValidDate","Number","isNaN","selectItem","applicableSchemaName","condition","requiredLocationIds","missingLocationsIds","useLocationRatingRequest","useRequest","method","submitLocationRating","safeDateFormat","args"],"mappings":"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","file":"travel-Dashboard~travel-LocationsPage-7cdaff1ccef8f438ddd5.js","sourcesContent":["import resolveLocationFirstAndLastVisitDateTime from './resolveLocationFirstAndLastVisitDateTime';\n\nexport default function adaptMarkerData({\n  locationsIds,\n  locationsDict,\n  visitsDict,\n  locationsRating,\n}) {\n  return locationsIds.map(locationId => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return null;\n    }\n    const { lon, lat, locationName, visitsIds } = location;\n    const {\n      firstVisitDateTime,\n      lastVisitDateTime,\n    } = resolveLocationFirstAndLastVisitDateTime(visitsIds, visitsDict);\n\n    return {\n      locationName,\n      lat,\n      lon,\n      firstVisitDateTime,\n      lastVisitDateTime,\n      locationRating: locationsRating[locationId],\n      visitsCount: location.visitsIds.length,\n    };\n  });\n}\n","import min from 'lodash/min';\nimport max from 'lodash/max';\n\nexport default function resolveLocationFirstAndLastVisitDateTime(\n  visitsIds,\n  visitsDict,\n) {\n  return visitsIds.reduce(\n    (accumulator, visitId) => {\n      const visit = visitsDict[visitId];\n      if (visit) {\n        const { arrivalDateTime, departureDateTime } = visit;\n        accumulator.firstVisitDateTime = min([\n          accumulator.firstVisitDateTime,\n          arrivalDateTime,\n        ]);\n        accumulator.lastVisitDateTime = max([\n          accumulator.lastVisitDateTime,\n          departureDateTime,\n        ]);\n      }\n      return accumulator;\n    },\n    { firstVisitDateTime: null, lastVisitDateTime: null },\n  );\n}\n","export const KEY_MARKERS_SCALE_BY = 'scale';\n\nexport const MARKERS_SCALES = {\n  BY_FIRST_VISIT: 'fv',\n  BY_LAST_VISIT: 'lv',\n  BY_VISITS_COUNT: 'vc',\n  BY_RATING: 'r',\n};\n\nexport const MARKERS_SCALE_DEFAULT = MARKERS_SCALES.BY_LAST_VISIT;\n\nexport const MARKERS_SCALE_IMAGES_BASE_PATH =\n  'https://res.cloudinary.com/dc2eke0gj/image/upload/markers/';\n\nexport const MARKERS_SCALE_BY_TIME_FILENAMES = [\n  'step_by_time_1_zjtrlw.png',\n  'step_by_time_2_tvotvg.png',\n  'step_by_time_3_ylj1vi.png',\n  'step_by_time_4_uovfrs.png',\n  'step_by_time_5_s4jq0u.png',\n  'step_by_time_6_lmihnf.png',\n];\n\nexport const MARKERS_SCALE_BY_RATING_FILENAMES = [\n  'step_by_rating_1_id2qgb.png',\n  'step_by_rating_2_iiqvik.png',\n  'step_by_rating_3_x2gzsd.png',\n  'step_by_rating_4_cbqdcn.png',\n  'step_by_rating_5_viyhls.png',\n  'step_by_rating_6_zzfgki.png',\n  'step_by_rating_7_pjjhhq.png',\n  'step_by_rating_8_vgetsd.png',\n  'step_by_rating_9_t6tenz.png',\n  'step_by_rating_10_yjywr0.png',\n];\n\nexport const MARKERS_SCALE_BY_VISITS_FILENAMES = [\n  'step_by_visits_1_zv3tba.png',\n  'step_by_visits_2_qthjqa.png',\n  'step_by_visits_3_xcjyla.png',\n  'step_by_visits_4_kwdwka.png',\n  'step_by_visits_5_xnnipa.png',\n];\n\nexport const MARKERS_SCALE_BY_SOURCES = {\n  [MARKERS_SCALES.BY_FIRST_VISIT]: MARKERS_SCALE_BY_TIME_FILENAMES,\n  [MARKERS_SCALES.BY_LAST_VISIT]: MARKERS_SCALE_BY_TIME_FILENAMES,\n  [MARKERS_SCALES.BY_VISITS_COUNT]: MARKERS_SCALE_BY_VISITS_FILENAMES,\n  [MARKERS_SCALES.BY_RATING]: MARKERS_SCALE_BY_RATING_FILENAMES,\n};\n\nexport const MARKERS_RATING_LEVELS = {\n  ALL: 'all',\n  WANT_COME_BACK: 'good',\n  LOVE_THIS_PLACE: 'best',\n};\n\nexport const KEY_MARKERS_RATING_LEVEL = 'rating';\n\nexport const MARKERS_RATING_LEVEL_DEFAULT = MARKERS_RATING_LEVELS.ALL;\n","import min from 'lodash/min';\nimport max from 'lodash/max';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\nimport { MARKERS_SCALES } from '../consts';\n\nexport default function makeScaleUtils(scaleBy) {\n  switch (scaleBy) {\n    case MARKERS_SCALES.BY_VISITS_COUNT:\n      return {\n        resolveStep: stepByVisitsCount,\n      };\n    case MARKERS_SCALES.BY_RATING:\n      return {\n        resolveStep: stepByRating,\n      };\n    case MARKERS_SCALES.BY_LAST_VISIT:\n      return makeScaleByDateTimeUtils('lastVisitDateTime');\n    case MARKERS_SCALES.BY_FIRST_VISIT:\n    default:\n      return makeScaleByDateTimeUtils('firstVisitDateTime');\n  }\n}\n\nfunction stepByVisitsCount({ visitsCount }) {\n  switch (true) {\n    case visitsCount > 10:\n      return 5;\n    case visitsCount > 5:\n      return 4;\n    case visitsCount > 2:\n      return 3;\n    case visitsCount > 1:\n      return 2;\n    default:\n      return 1;\n  }\n}\n\nfunction stepByRating({ locationRating }) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return 1;\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return 3;\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return 4;\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return 7;\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return 9;\n    case LOCATION_RATING.NEVER:\n      return 10;\n    default:\n      return 6;\n  }\n}\n\nconst stepsByDateTimeCount = 6;\nfunction makeScaleByDateTimeUtils(field) {\n  return {\n    resolveStep: function stepByDateTime(\n      { [field]: dateTime },\n      { minTime, diff },\n    ) {\n      const step = ((dateTime - minTime) / diff) * stepsByDateTimeCount;\n      return Math.min(Math.max(Math.floor(step), 0), stepsByDateTimeCount);\n    },\n    resolveOptions: function resolveOptionsForStepByDateTime(markersDataList) {\n      const times = markersDataList\n        .map(markerData => markerData[field] && markerData[field].getTime())\n        .filter(Boolean);\n\n      const minTime = min(times);\n      const maxTime = max(times) + 1;\n      const diff = maxTime - minTime;\n      return { minTime, diff };\n    },\n  };\n}\n","import ru from 'date-fns/locale/ru';\nimport dateFormat from './safeDateFormat';\n\nexport default function formatDate(date) {\n  return dateFormat(date, 'eeeeee, d MMMM yyyy', { locale: ru });\n}\n","import formatDate from 'modules/utilities/dateTime/formatDate';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\n\nexport default function renderTitle({\n  locationName,\n  locationRating,\n  visitsCount,\n  firstVisitDateTime,\n  lastVisitDateTime,\n}) {\n  return [\n    locationName,\n    `Посещено ${visitsCount} раз`,\n    `Впервые ${formatDate(firstVisitDateTime)}`,\n    visitsCount > 1 && `Прошлое посешение ${formatDate(lastVisitDateTime)}`,\n    `Рейтинг: ${renderRating(locationRating)}`,\n  ]\n    .filter(Boolean)\n    .join('\\n');\n}\n\nfunction renderRating(locationRating) {\n  switch (locationRating) {\n    case LOCATION_RATING.PLACE_TO_LIVE:\n      return 'Жил бы здесь';\n    case LOCATION_RATING.FEW_PER_YEAR:\n    case LOCATION_RATING.ONCE_PER_YEAR:\n      return 'Готов ездить сюда постоянно';\n    case LOCATION_RATING.ONCE_PER_TWO_YEARS:\n    case LOCATION_RATING.ONCE_PER_FIVE_YEARS:\n      return 'Приезжал бы иногда';\n    case LOCATION_RATING.ONCE_PER_DECADE:\n    case LOCATION_RATING.TWICE_PER_LIVE:\n      return 'Заглянул бы еще разок';\n    case LOCATION_RATING.ONCE_PER_LIVE:\n      return 'Одного посещения достаточно';\n    case LOCATION_RATING.NEVER:\n      return 'Тут нечего делать';\n    default:\n      return '?';\n  }\n}\n","import {\n  MARKERS_SCALE_BY_SOURCES,\n  MARKERS_SCALE_IMAGES_BASE_PATH,\n} from '../consts';\n\nexport default function resolveMarkerUrl(step, scaleBy) {\n  const markerSources = MARKERS_SCALE_BY_SOURCES[scaleBy];\n  const subPath = markerSources[step - 1] || markerSources[0];\n  return `${MARKERS_SCALE_IMAGES_BASE_PATH}${subPath}`;\n}\n","import { useState, useEffect, useRef } from 'react';\n\nexport default markersData => {\n  const [googleMapsApi, setGoogleMapsApi] = useState(null);\n\n  const isFirsRenderRef = useRef(true);\n\n  useEffect(\n    () => {\n      if (!googleMapsApi) {\n        return undefined;\n      }\n      const { map, maps } = googleMapsApi;\n      const bounds = new maps.LatLngBounds();\n      const markers = markersData.map(\n        ({ lat, lon, iconUrl, title, zIndex }) => {\n          const marker = new maps.Marker({\n            map,\n            position: { lat, lng: lon },\n            icon: {\n              url: iconUrl,\n              scaledSize: new maps.Size(24, 24),\n            },\n            scale: 0.5,\n            title,\n            zIndex,\n          });\n          bounds.extend(marker.position);\n          return marker;\n        },\n      );\n      if (isFirsRenderRef.current) {\n        map.setOptions({ maxZoom: 11, minZoom: 2 });\n        map.fitBounds(bounds);\n        map.setOptions({ maxZoom: null, minZoom: null });\n        isFirsRenderRef.current = false;\n      }\n      return () => {\n        markers.forEach(marker => {\n          marker.setMap(null);\n          marker.setVisible(false);\n        });\n        markers.length = 0;\n      };\n    },\n    [googleMapsApi, markersData],\n  );\n  return { handleGoogleApiLoaded: api => setGoogleMapsApi(api) };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n  MARKERS_SCALES,\n  KEY_MARKERS_SCALE_BY,\n  KEY_MARKERS_RATING_LEVEL,\n} from '../../consts';\n\nexport default function MarkersScaleSelect({\n  classes,\n  scaleBy,\n  onClose,\n  onChange,\n}) {\n  return (\n    <List>\n      <ListItem>\n        <FormControl className={classes.formControl}>\n          <InputLabel shrink={true} id=\"select-scaleBy-filter-label\">\n            Раскрасить маркеры\n          </InputLabel>\n          <Select\n            labelId=\"select-scaleBy-filter-label\"\n            autoWidth={true}\n            id=\"select-scaleBy-filter\"\n            value={scaleBy}\n            onChange={event => {\n              onClose();\n              const nextScaleBy = event.target.value;\n              const updates = { [KEY_MARKERS_SCALE_BY]: nextScaleBy };\n              if (nextScaleBy !== MARKERS_SCALES.BY_RATING) {\n                updates[KEY_MARKERS_RATING_LEVEL] = undefined;\n              }\n              onChange(updates);\n            }}\n          >\n            <MenuItem\n              key={MARKERS_SCALES.BY_FIRST_VISIT}\n              value={MARKERS_SCALES.BY_FIRST_VISIT}\n            >\n              По первому посещению\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_SCALES.BY_LAST_VISIT}\n              value={MARKERS_SCALES.BY_LAST_VISIT}\n            >\n              По последнему посещению\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_SCALES.BY_VISITS_COUNT}\n              value={MARKERS_SCALES.BY_VISITS_COUNT}\n            >\n              По числу посещений\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_SCALES.BY_RATING}\n              value={MARKERS_SCALES.BY_RATING}\n            >\n              По рейтингу\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </ListItem>\n    </List>\n  );\n}\n\nMarkersScaleSelect.propTypes = {\n  classes: PropTypes.shape({ formControl: PropTypes.string.isRequired })\n    .isRequired,\n  scaleBy: PropTypes.oneOf(Object.values(MARKERS_SCALES)).isRequired,\n  onClose: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MARKERS_RATING_LEVELS, KEY_MARKERS_RATING_LEVEL } from '../../consts';\n\nexport default function MarkersRatingLevelSelect({\n  classes,\n  ratingLevel,\n  onClose,\n  onChange,\n}) {\n  return (\n    <List>\n      <ListItem>\n        <FormControl className={classes.formControl}>\n          <InputLabel shrink={true} id=\"select-ratingLevel-filter-label\">\n            Фильтр по рейтингу\n          </InputLabel>\n          <Select\n            labelId=\"select-ratingLevel-filter-label\"\n            autoWidth={true}\n            id=\"select-ratingLevel-filter\"\n            value={ratingLevel}\n            onChange={event => {\n              onClose();\n              onChange({\n                [KEY_MARKERS_RATING_LEVEL]: event.target.value,\n              });\n            }}\n          >\n            <MenuItem\n              key={MARKERS_RATING_LEVELS.ALL}\n              value={MARKERS_RATING_LEVELS.ALL}\n            >\n              Все\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_RATING_LEVELS.WANT_COME_BACK}\n              value={MARKERS_RATING_LEVELS.WANT_COME_BACK}\n            >\n              Куда бы вернулся\n            </MenuItem>\n            <MenuItem\n              key={MARKERS_RATING_LEVELS.LOVE_THIS_PLACE}\n              value={MARKERS_RATING_LEVELS.LOVE_THIS_PLACE}\n            >\n              Лучшие места\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </ListItem>\n    </List>\n  );\n}\n\nMarkersRatingLevelSelect.propTypes = {\n  classes: PropTypes.shape({ formControl: PropTypes.string.isRequired })\n    .isRequired,\n  ratingLevel: PropTypes.oneOf(Object.values(MARKERS_RATING_LEVELS)).isRequired,\n  onClose: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSidebar } from 'core/context/SidebarContext';\nimport MarkersScaleSelect from './blocks/MarkersScaleSelect';\nimport MarkersRatingLevelSelect from './blocks/MarkersRatingLevelSelect';\nimport {\n  MARKERS_SCALES,\n  KEY_MARKERS_SCALE_BY,\n  MARKERS_SCALE_DEFAULT,\n  MARKERS_RATING_LEVELS,\n  KEY_MARKERS_RATING_LEVEL,\n  MARKERS_RATING_LEVEL_DEFAULT,\n} from './consts';\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%',\n  },\n});\n\nexport default function(setQueryFilter, queryFilter) {\n  const classes = useStyles();\n  const {\n    [KEY_MARKERS_SCALE_BY]: scaleByQuery,\n    [KEY_MARKERS_RATING_LEVEL]: ratingLevelQuery,\n  } = queryFilter || {};\n  const scaleBy = resolveActualScaleBy(scaleByQuery);\n  const ratingLevel = resolveActualRatingLevel(ratingLevelQuery);\n  useSidebar(\n    ({ closeSidebar }) => (\n      <>\n        <MarkersScaleSelect\n          classes={classes}\n          onClose={closeSidebar}\n          scaleBy={scaleBy}\n          onChange={setQueryFilter}\n        />\n        {scaleBy === MARKERS_SCALES.BY_RATING && (\n          <MarkersRatingLevelSelect\n            classes={classes}\n            onClose={closeSidebar}\n            ratingLevel={ratingLevel}\n            onChange={setQueryFilter}\n          />\n        )}\n      </>\n    ),\n    [scaleBy, ratingLevel],\n  );\n\n  return { scaleBy, ratingLevel };\n}\n\nfunction resolveActualScaleBy(scaleByQuery) {\n  return Object.values(MARKERS_SCALES).includes(scaleByQuery)\n    ? scaleByQuery\n    : MARKERS_SCALE_DEFAULT;\n}\nfunction resolveActualRatingLevel(ratingLevelQuery) {\n  return Object.values(MARKERS_RATING_LEVELS).includes(ratingLevelQuery)\n    ? ratingLevelQuery\n    : MARKERS_RATING_LEVEL_DEFAULT;\n}\n","/* globals __GOOGLE_MAP_API_KEY__ */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport cls from 'classnames';\nimport GoogleMapReact from 'google-map-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport locationPropTypes from 'travel/models/locations/propTypes';\nimport visitsPropTypes from 'travel/models/visits/propTypes';\nimport adaptMarkerData from './utils/adaptMarkerData';\nimport filterMarkerData from './utils/filterMarkerData';\nimport makeScaleUtils from './utils/makeScaleUtils';\nimport renderTitle from './utils/renderTitle';\nimport resolveMarkerUrl from './utils/resolveMarkerUrl';\nimport { MARKERS_SCALES, MARKERS_RATING_LEVELS } from './consts';\nimport useMarkers from './useMarkers';\n\nexport { MARKERS_SCALES, MARKERS_RATING_LEVELS };\nexport useMarkersScaleSidebar from './useMarkersScaleSidebar';\n\nconst useStyles = makeStyles({\n  googleMapContainer: {\n    margin: '12px 0',\n    maxWidth: '100%',\n    flexGrow: 1,\n    minHeight: ({ minHeight }) => minHeight,\n    position: 'relative',\n  },\n  googleMapPosition: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: '0',\n    bottom: '0',\n  },\n});\n\nexport default function LocationsMap({\n  className,\n  locationsDict,\n  visitsDict,\n  locationsRating,\n  locationsIds,\n  minHeight,\n  scaleBy,\n  ratingLevel,\n}) {\n  const classes = useStyles({ minHeight });\n  const markersData = useMemo(\n    () => {\n      const adaptedMarkersData = adaptMarkerData({\n        locationsDict,\n        visitsDict,\n        locationsRating,\n        locationsIds,\n      });\n      const actualMarkersData = filterMarkerData(adaptedMarkersData, {\n        ratingLevel,\n      });\n      const { resolveStep, resolveOptions } = makeScaleUtils(scaleBy);\n      const options = resolveOptions && resolveOptions(actualMarkersData);\n      return actualMarkersData.map(markerData => {\n        const step = resolveStep(markerData, options);\n        return {\n          ...markerData,\n          zIndex: [\n            MARKERS_SCALES.BY_RATING,\n            MARKERS_SCALES.BY_FIRST_VISIT,\n          ].includes(scaleBy)\n            ? 10 - step\n            : step,\n          iconUrl: resolveMarkerUrl(step, scaleBy),\n          title: renderTitle(markerData),\n        };\n      });\n    },\n    [\n      locationsDict,\n      visitsDict,\n      locationsRating,\n      locationsIds,\n      scaleBy,\n      ratingLevel,\n    ],\n  );\n  const { handleGoogleApiLoaded } = useMarkers(markersData);\n\n  return (\n    <div className={cls(className, classes.googleMapContainer)}>\n      <div className={classes.googleMapPosition}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: __GOOGLE_MAP_API_KEY__ }}\n          center={{ lat: 0, lng: 0 }}\n          zoom={11}\n          onGoogleApiLoaded={handleGoogleApiLoaded}\n        />\n      </div>\n    </div>\n  );\n}\n\nLocationsMap.propTypes = {\n  className: PropTypes.string,\n  visitsDict: PropTypes.objectOf(PropTypes.shape(visitsPropTypes)).isRequired,\n  locationsDict: PropTypes.objectOf(PropTypes.shape(locationPropTypes))\n    .isRequired,\n  locationsIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n  locationsRating: PropTypes.objectOf(PropTypes.number).isRequired,\n  minHeight: PropTypes.number,\n  scaleBy: PropTypes.oneOf(Object.values(MARKERS_SCALES)).isRequired,\n  ratingLevel: PropTypes.oneOf(Object.values(MARKERS_RATING_LEVELS)).isRequired,\n};\n\nLocationsMap.defaultProps = {\n  className: undefined,\n  minHeight: '400px',\n};\n","import { MARKERS_RATING_LEVELS } from '../consts';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\n\nexport default function filterMarkerData(adaptedMarkersData, { ratingLevel }) {\n  if (\n    !Object.values(MARKERS_RATING_LEVELS).includes(ratingLevel) ||\n    ratingLevel === MARKERS_RATING_LEVELS.ALL\n  ) {\n    return adaptedMarkersData;\n  }\n  return adaptedMarkersData.filter(({ locationRating, visitsCount }) => {\n    switch (ratingLevel) {\n      case MARKERS_RATING_LEVELS.WANT_COME_BACK:\n        if (visitsCount < 2) {\n          return locationRating <= LOCATION_RATING.TWICE_PER_LIVE;\n        }\n        return locationRating <= LOCATION_RATING.ONCE_PER_DECADE;\n      case MARKERS_RATING_LEVELS.LOVE_THIS_PLACE:\n        return locationRating <= LOCATION_RATING.ONCE_PER_YEAR;\n      default:\n        return true;\n    }\n  });\n}\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport mapValues from 'lodash/mapValues';\nimport { useProvision, selectDict } from 'core/connection';\nimport {\n  selectResult,\n  selectIsPending,\n  selectIsReady,\n  selectIsError,\n  selectError,\n  selectIsValid,\n  selectUpdatesCounter,\n} from 'core/connection/request/controllerRedux';\nimport useUser from './useUser';\nimport useCountries from './useCountries';\nimport useLocations from './useLocations';\n\nexport default function useTrips({ userAlias, tripsIds: requiredTripsIds }) {\n  const { tripsDict } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n  }));\n  const shouldRequireAllTrips = !requiredTripsIds;\n  const missingTripsIds =\n    !shouldRequireAllTrips &&\n    requiredTripsIds.filter(tripId => !tripsDict[tripId]);\n\n  return useProvision({\n    domain: `travel.trips-${userAlias}`,\n    isProvision: true,\n    modelName: 'trips',\n    observe: userAlias,\n    query: {\n      userAlias,\n      navigation: { isDisabled: true },\n      filter: shouldRequireAllTrips\n        ? {}\n        : { id: { comparator: 'in', value: missingTripsIds } },\n    },\n  });\n}\n\nexport function useTripsStats({ userAlias, tripsIds: requiredTripsIds }) {\n  const tripsProvision = useTrips({ userAlias, tripsIds: requiredTripsIds });\n  const { user: { locationsRating = {} } = {}, ...userProvision } = useUser({\n    domain: `travel.trips-${userAlias}.user`,\n    userAlias,\n  });\n\n  const { data: tripsIds = [] } = selectResult(tripsProvision) || {};\n\n  const {\n    tripsDict,\n    visitsDict,\n    ridesDict,\n    countriesDict,\n    locationsDict,\n  } = useSelector(state => ({\n    tripsDict: selectDict(state, 'trips') || {},\n    visitsDict: selectDict(state, 'visits') || {},\n    ridesDict: selectDict(state, 'rides') || {},\n    countriesDict: selectDict(state, 'countries') || {},\n    locationsDict: selectDict(state, 'locations') || {},\n  }));\n\n  const visitsIds = useMemo(\n    () =>\n      Array.from(\n        new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.visits || [])),\n      ),\n    [tripsIds, tripsDict],\n  );\n\n  const ridesIds = useMemo(\n    () =>\n      Array.from(\n        new Set(tripsIds.flatMap(tripsId => tripsDict[tripsId]?.rides || [])),\n      ),\n    [tripsIds, tripsDict],\n  );\n\n  const countriesIds = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          visitsIds.flatMap(visitId => visitsDict[visitId]?.countryId || []),\n        ),\n      ),\n    [visitsIds, visitsDict],\n  );\n\n  const locationsIds = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          visitsIds.flatMap(visitId => visitsDict[visitId]?.locationId || []),\n        ),\n      ),\n    [visitsIds, visitsDict],\n  );\n\n  const countriesProvision = useCountries();\n  const locationsProvision = useLocations({\n    domain: `travel.locations-${userAlias}`,\n    locationsIds,\n  });\n\n  const commonProvisionState = mergeProvisionsState(\n    tripsProvision,\n    userProvision,\n    countriesProvision,\n    locationsProvision,\n  );\n\n  const { isError, isValid, isReady, isPending } = commonProvisionState;\n\n  const countriesRating = calcCountriesRating(\n    locationsIds,\n    locationsDict,\n    locationsRating,\n  );\n\n  return {\n    tripsProvision,\n    countriesProvision,\n    locationsProvision,\n\n    isError,\n    isValid,\n    isReady,\n    isPending,\n\n    tripsIds,\n    tripsDict,\n    visitsIds,\n    visitsDict,\n    ridesIds,\n    ridesDict,\n    ridesStats: calcRidesStats(ridesIds, ridesDict),\n    locationsIds,\n    locationsDict,\n    locationsRating,\n    countriesIds,\n    countriesDict,\n    countriesRating,\n  };\n}\n\nfunction mergeProvisionsState(...provisions) {\n  return {\n    updatesCounter: sum(provisions.map(selectUpdatesCounter)),\n    isReady: provisions.every(selectIsReady),\n    isPending: provisions.some(selectIsPending),\n    isValid: provisions.every(selectIsValid),\n    error: provisions.find(selectIsError),\n    errors: provisions.map(selectError).filter(Boolean),\n    invalidate: () => provisions.forEach(({ invalidate }) => invalidate()),\n  };\n}\n\nfunction calcRidesStats(ridesIds, ridesDict) {\n  return {\n    earliestDeparture: new Date(\n      min(\n        ridesIds.map(rideId => ridesDict[rideId]?.departureDateTime.getTime()),\n      ),\n    ),\n    latestArrival: new Date(\n      max(ridesIds.map(rideId => ridesDict[rideId]?.arrivalDateTime.getTime())),\n    ),\n  };\n}\n\nfunction calcCountriesRating(locationsIds, locationsDict, locationsRating) {\n  const ratingsGroupedByCountries = locationsIds.reduce((memo, locationId) => {\n    const location = locationsDict[locationId];\n    if (!location) {\n      return memo;\n    }\n    const locationRating = locationsRating[locationId];\n    const { countryId } = location;\n    if (!memo[countryId]) {\n      memo[countryId] = [];\n    }\n    memo[countryId].push(locationRating);\n    return memo;\n  }, {});\n\n  return mapValues(ratingsGroupedByCountries, ratingsByCountry =>\n    averageRating(ratingsByCountry),\n  );\n}\n\nfunction averageRating(ratings) {\n  if (!ratings.length) {\n    return Infinity;\n  }\n  const avg =\n    ratings.length / ratings.map(rating => 1 / rating).reduce((a, b) => a + b);\n\n  const best = max(ratings);\n\n  const lengthRatio = Math.log(ratings.length);\n\n  return 1 / (1 / avg + lengthRatio / best);\n}\n","import { useProvision } from 'core/connection';\nimport {\n  selectResult,\n  selectIsReady,\n  selectIsPending,\n  selectIsError,\n} from 'core/connection/request/controllerRedux';\n\nexport default function useCountries() {\n  return useProvision({\n    domain: `travel.countries`,\n    isProvision: true,\n    modelName: 'countries',\n    query: { navigation: { isDisabled: true } },\n  });\n}\n","export default function isValidDate(date) {\n  return date instanceof Date && !Number.isNaN(date.getTime());\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, selectItem } from 'core/connection';\n\nexport default function useUser({ domain, userAlias }) {\n  const user = useSelector(state => selectItem(state, 'users', userAlias));\n  const provision = useProvision({\n    domain,\n    applicableSchemaName: 'item',\n    isProvision: true,\n    modelName: 'users',\n    observe: userAlias,\n    condition: Boolean(userAlias),\n    query: {\n      id: userAlias,\n    },\n  });\n  return { ...provision, user };\n}\n","import { useSelector } from 'react-redux';\nimport { useProvision, useRequest, selectDict } from 'core/connection';\n\nexport default function useLocations({\n  domain,\n  locationsIds: requiredLocationIds,\n}) {\n  const locationsDict = useSelector(\n    state => selectDict(state, 'locations') || {},\n  );\n\n  const missingLocationsIds = requiredLocationIds.filter(\n    locationId => !locationsDict[locationId],\n  );\n\n  return useProvision({\n    domain,\n    isProvision: true,\n    modelName: 'locations',\n    observe: requiredLocationIds,\n    condition: Boolean(missingLocationsIds.length),\n    query: {\n      filter: { id: { comparator: 'in', value: missingLocationsIds } },\n      navigation: { isDisabled: true },\n    },\n  });\n}\n\nexport function useLocationRatingRequest({ domain }) {\n  const [submitLocationRating, provision] = useRequest({\n    domain,\n    modelName: 'locations',\n    method: 'POST',\n  });\n\n  return {\n    ...provision,\n    submitLocationRating,\n  };\n}\n","import dateFormat from 'date-fns/format';\nimport isValidDate from './isValidDate';\n\nexport default function safeDateFormat(date, ...args) {\n  if (!isValidDate(date)) {\n    return '?';\n  }\n  return dateFormat(date, ...args);\n}\n"],"sourceRoot":""}