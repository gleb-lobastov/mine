{"version":3,"sources":["webpack:///./src/packages/travel/pages/LocationsPage/blocks/LocationRating.jsx","webpack:///./src/packages/travel/pages/LocationsPage/LocationsPage.jsx","webpack:///./src/packages/travel/pages/LocationsPage/useUserLocations.js"],"names":["RATING_LOCALIZATION","LOCATION_RATING","PLACE_TO_LIVE","FEW_PER_YEAR","ONCE_PER_YEAR","ONCE_PER_TWO_YEARS","ONCE_PER_FIVE_YEARS","ONCE_PER_DECADE","TWICE_PER_LIVE","ONCE_PER_LIVE","NEVER","useStyles","makeStyles","formControl","width","LocationRating","locationId","locationRating","isEditable","onSubmitLocationRating","classes","FormControl","className","InputLabel","shrink","id","Select","labelId","value","onChange","event","target","MenuItem","propTypes","PropTypes","number","isRequired","bool","func","defaultProps","container","fontSize","lineHeight","visitContainer","margin","location","fontWeight","googleMapContainer","maxWidth","height","maxHeight","LocationsPage","match","params","userAlias","strLocationId","useAuthContext","isAuthenticated","authenticatedUserAlias","domain","useTripsStats","isError","isPending","locationsDict","locationsIds","locationsRating","submitLocationRating","useLocationRatingRequest","useUserLocations","parseInt","actualLocationsIds","handleSubmitLocationRating","useCallback","locationIdToSubmit","query","rating","String","condition","Boolean","includes","LocationsMap","map","locationsIdToRender","locationName","Fragment","key","shape","string"],"mappings":"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","file":"travel-LocationsPage-a95ab6f5ce4f6b006a1b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { LOCATION_RATING } from 'travel/models/users/consts';\n\nconst RATING_LOCALIZATION = {\n  [LOCATION_RATING.PLACE_TO_LIVE]: 'Жил бы здесь',\n  [LOCATION_RATING.FEW_PER_YEAR]: 'Несколько раз в год',\n  [LOCATION_RATING.ONCE_PER_YEAR]: 'Раз в год',\n  [LOCATION_RATING.ONCE_PER_TWO_YEARS]: 'Раз в пару лет',\n  [LOCATION_RATING.ONCE_PER_FIVE_YEARS]: 'Раз в пять лет',\n  [LOCATION_RATING.ONCE_PER_DECADE]: 'Раз в десятилетие',\n  [LOCATION_RATING.TWICE_PER_LIVE]: 'Пару раз в жизни',\n  [LOCATION_RATING.ONCE_PER_LIVE]: 'Раз в жизни',\n  [LOCATION_RATING.NEVER]: 'Никогда',\n};\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%',\n  },\n});\n\nexport default function LocationRating({\n  locationId,\n  locationRating,\n  isEditable,\n  onSubmitLocationRating,\n}) {\n  const classes = useStyles();\n  if (!isEditable) {\n    return <div>{RATING_LOCALIZATION[locationRating]}</div>;\n  }\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink={true} id=\"select-location-rating-label\">\n        Я бы ездил сюда\n      </InputLabel>\n      <Select\n        labelId=\"select-location-rating-label\"\n        id=\"select-location-rating\"\n        value={locationRating}\n        onChange={event => {\n          onSubmitLocationRating(event, locationId, event.target.value);\n        }}\n      >\n        <MenuItem value={LOCATION_RATING.PLACE_TO_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.PLACE_TO_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.FEW_PER_YEAR}>\n          {RATING_LOCALIZATION[LOCATION_RATING.FEW_PER_YEAR]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_YEAR}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_YEAR]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_TWO_YEARS}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_TWO_YEARS]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_FIVE_YEARS}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_FIVE_YEARS]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_DECADE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_DECADE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.TWICE_PER_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.TWICE_PER_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.ONCE_PER_LIVE}>\n          {RATING_LOCALIZATION[LOCATION_RATING.ONCE_PER_LIVE]}\n        </MenuItem>\n        <MenuItem value={LOCATION_RATING.NEVER}>\n          {RATING_LOCALIZATION[LOCATION_RATING.NEVER]}\n        </MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n\nLocationRating.propTypes = {\n  locationRating: PropTypes.number,\n  locationId: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  onSubmitLocationRating: PropTypes.func.isRequired,\n};\n\nLocationRating.defaultProps = { locationRating: null };\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport LocationsMap from 'travel/components/common/LocationsMap';\nimport LocationRating from './blocks/LocationRating';\nimport useUserLocations from './useUserLocations';\n\nconst useStyles = makeStyles({\n  container: { fontSize: '16px', lineHeight: '1.5' },\n  visitContainer: { margin: '20px 0' },\n  location: { fontWeight: 'bold', fontSize: '21px' },\n  googleMapContainer: {\n    margin: '12px 0',\n    width: '800px',\n    maxWidth: '100%',\n    height: '400px',\n    maxHeight: '100%',\n  },\n});\n\nconst domain = 'travel.LocationsPage';\nexport default function LocationsPage({\n  match: {\n    params: { userAlias, strLocationId },\n  },\n}) {\n  const classes = useStyles();\n\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds,\n    locationsRating,\n    submitLocationRating,\n  } = useUserLocations({ domain, userAlias });\n\n  const locationId = parseInt(strLocationId, 10);\n  const actualLocationsIds = locationId ? [locationId] : locationsIds;\n\n  const handleSubmitLocationRating = useCallback(\n    (event, locationIdToSubmit, value) => {\n      submitLocationRating({\n        query: { rating: value, id: String(locationIdToSubmit) },\n        condition: Boolean(locationIdToSubmit),\n      });\n    },\n  );\n\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n  if (locationId && !locationsIds.includes(locationId)) {\n    return (\n      <div>{`Путешественик ${userAlias} еще не посетил данную локацию`}</div>\n    );\n  }\n\n  const isEditable = isAuthenticated && authenticatedUserAlias === userAlias;\n  return (\n    <div className={classes.container}>\n      <LocationsMap\n        locationsDict={locationsDict}\n        locationsIds={actualLocationsIds}\n      />\n      {actualLocationsIds.map(locationsIdToRender => {\n        const location = locationsDict[locationsIdToRender];\n        if (!location) {\n          return null;\n        }\n        const { locationName } = location;\n        return (\n          <React.Fragment key={locationsIdToRender}>\n            <h1 className={classes.location}>{locationName}</h1>\n            <LocationRating\n              locationId={locationsIdToRender}\n              locationRating={locationsRating[locationsIdToRender]}\n              isEditable={isEditable}\n              onSubmitLocationRating={handleSubmitLocationRating}\n            />\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\n\nLocationsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userAlias: PropTypes.string.isRequired,\n      strLocationId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n","import useUser from 'travel/dataSource/useUser';\nimport { useTripsStats } from 'travel/dataSource/useTrips';\nimport { useLocationRatingRequest } from 'travel/dataSource/useLocations';\n\nexport default function useUserLocations({ domain, userAlias }) {\n  const {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds = [],\n    locationsRating,\n  } = useTripsStats({\n    userAlias,\n  });\n  const { submitLocationRating } = useLocationRatingRequest({ domain });\n\n  return {\n    isError,\n    isPending,\n    locationsDict,\n    locationsIds,\n    locationsRating,\n    submitLocationRating,\n  };\n}\n"],"sourceRoot":""}