{"version":3,"file":"travel-TripEditPage-5ebd9c4bbae37a0a9339.js","mappings":"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","sources":["webpack://mine/./src/modules/components/muiExtended/ConnectedLink/ConnectedLink.jsx","webpack://mine/./src/modules/utilities/dateTime/dateTimePeriodToString.js","webpack://mine/./src/packages/travel/components/RideIcon/RideIcon.jsx","webpack://mine/./src/packages/travel/components/RideInfo/RideInfo.jsx","webpack://mine/./src/modules/utilities/text/uniqTrimAndJoin.js","webpack://mine/./src/packages/travel/models/trips/utils/resolveTripCaption.js","webpack://mine/./src/modules/components/muiExtended/OptionsSelect/OptionsSelect.jsx","webpack://mine/./src/modules/components/muiExtended/Select/blocks/Option.jsx","webpack://mine/./src/modules/components/muiExtended/Select/blocks/Overlay.jsx","webpack://mine/./src/modules/components/muiExtended/Select/blocks/Trigger.jsx","webpack://mine/./src/modules/components/muiExtended/Select/Select.jsx","webpack://mine/./src/modules/components/muiExtended/Suggest/useSuggest.js","webpack://mine/./src/modules/components/muiExtended/Suggest/Suggest.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/localization.js","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/TripEditFormSection.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/locators.js","webpack://mine/./src/packages/travel/utils/checkIsVisitsConnectedByRide.js","webpack://mine/./src/modules/utilities/dom/checkIsNodeNotSortable.js","webpack://mine/./src/modules/components/Sortable/Sortable.jsx","webpack://mine/./src/modules/components/DragHandler/DragHandler.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/useTripEditPageDialogs.js","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/VisitCreator.jsx","webpack://mine/./src/packages/travel/components/Actions/buttons/CreateButton.jsx","webpack://mine/./src/packages/travel/components/Actions/locators.js","webpack://mine/./src/packages/travel/components/Actions/buttons/EditButton.jsx","webpack://mine/./src/packages/travel/components/Actions/buttons/DeleteButton.jsx","webpack://mine/./src/packages/travel/components/Actions/Actions.jsx","webpack://mine/./src/packages/travel/components/VisitIcon/VisitIcon.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/Visit.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/Ride.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/blocks/VisitAndRidesFormSection.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/VisitsAndRidesFormSection/VisitsAndRidesFormSection.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/blocks/TripEditTitle.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditForm/TripEditForm.jsx","webpack://mine/./src/modules/components/Dialog/Dialog.jsx","webpack://mine/./src/modules/components/Dialog/locators.js","webpack://mine/./src/modules/components/FormDialog/FormDialog.jsx","webpack://mine/./src/packages/travel/components/VisitInfo/VisitInfo.jsx","webpack://mine/./src/packages/travel/components/RideEditFormSection/localization.js","webpack://mine/./src/packages/travel/components/RideEditFormSection/tieDateTimeFields.js","webpack://mine/./src/packages/travel/components/RideEditFormSection/RideEditFormSection.jsx","webpack://mine/./src/packages/travel/components/RideEditFormSection/locators.js","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/RideEditDialog/RideEditDialog.jsx","webpack://mine/./src/packages/travel/components/VisitEditFormSection/VisitEditFormSection.jsx","webpack://mine/./src/packages/travel/components/VisitEditFormSection/locators.js","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/VisitEditDialog/VisitEditDialog.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/blocks/VisitDeleteDialog/VisitDeleteDialog.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/blocks/TripEditAssociatedDialogs/TripEditAssociatedDialogs.jsx","webpack://mine/./src/packages/travel/pages/TripEditPage/useTripEditRequests.js","webpack://mine/./src/packages/travel/pages/TripEditPage/TripEditPage.jsx"],"sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MUILink from '@material-ui/core/Link';\nimport { Typography } from '@material-ui/core';\n\nexport default function ConnectedLink({\n  optional,\n  children,\n  ...forwardingProps\n}) {\n  const linkable = Boolean(\n    !optional ||\n      forwardingProps.href ||\n      forwardingProps.to ||\n      forwardingProps.onClick,\n  );\n\n  if (!linkable) {\n    return <Typography {...forwardingProps}>{children}</Typography>;\n  }\n\n  return (\n    <MUILink {...forwardingProps} component={RouterLink}>\n      {children}\n    </MUILink>\n  );\n}\n\nConnectedLink.defaultProps = {\n  optional: false,\n};\n","import isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameYear from 'date-fns/isSameYear';\nimport ru from 'date-fns/locale/ru';\nimport dateFormat from 'modules/utilities/dateTime/safeDateFormat';\n\nconst DATE_FORMATS = {\n  FULL: 'd MMMM yyyy',\n  MONTH_YEAR: 'LLLL yyyy',\n  MONTH_ONLY: 'LLLL',\n  DAY_MONTH: 'd MMMM',\n  DAY_ONLY: 'd',\n};\n\nexport function dateTimePeriodToString(periodStart, periodEnd, isObscure) {\n  const fullFormat = isObscure ? DATE_FORMATS.MONTH_YEAR : DATE_FORMATS.FULL;\n  const periodEndString = dateFormat(periodEnd, fullFormat, {\n    locale: ru,\n  });\n\n  if (isSameDay(periodStart, periodEnd)) {\n    return periodEndString;\n  }\n\n  let periodStartString = '';\n  if (isSameMonth(periodStart, periodEnd)) {\n    if (!isObscure) {\n      periodStartString = dateFormat(periodStart, DATE_FORMATS.DAY_ONLY, {\n        locale: ru,\n      });\n    }\n  } else if (isSameYear(periodStart, periodEnd)) {\n    const shortFormat = isObscure\n      ? DATE_FORMATS.MONTH_ONLY\n      : DATE_FORMATS.DAY_MONTH;\n    periodStartString = dateFormat(periodStart, shortFormat, { locale: ru });\n  } else {\n    periodStartString = dateFormat(periodStart, fullFormat, { locale: ru });\n  }\n\n  return `${periodStartString}—${periodEndString}`;\n}\n\nexport function rideDateTimePeriodToString(\n  { departureDateTime, arrivalDateTime },\n  isObscure,\n) {\n  return dateTimePeriodToString(departureDateTime, arrivalDateTime, isObscure);\n}\n\nexport function visitDateTimePeriodToString(\n  { departureDateTime, arrivalDateTime },\n  isObscure,\n) {\n  return dateTimePeriodToString(arrivalDateTime, departureDateTime, isObscure);\n}\n\nexport function dateTimeOpenPeriodToString({\n  periodStart,\n  periodEnd,\n  isObscure,\n  placeholder,\n}) {\n  if (!periodEnd) {\n    const format = isObscure ? DATE_FORMATS.MONTH_YEAR : DATE_FORMATS.FULL;\n    const startDateStr = dateFormat(periodStart, format, { locale: ru });\n    return `${startDateStr}—${placeholder}`;\n  }\n  return dateTimePeriodToString(periodStart, periodEnd, isObscure);\n}\n","import React from 'react';\nimport BikeIcon from '@material-ui/icons/DirectionsBike';\nimport BoatIcon from '@material-ui/icons/DirectionsBoat';\nimport BusIcon from '@material-ui/icons/DirectionsBus';\nimport CarIcon from '@material-ui/icons/DirectionsCar';\nimport CustomTransportIcon from '@material-ui/icons/Commute';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport TrainIcon from '@material-ui/icons/Train';\nimport TruckIcon from '@material-ui/icons/LocalShipping';\nimport VanIcon from '@material-ui/icons/AirportShuttle';\nimport WalkIcon from '@material-ui/icons/DirectionsWalk';\nimport TramIcon from '@material-ui/icons/Tram';\nimport LocalTaxiIcon from '@material-ui/icons/LocalTaxi';\nimport SubwayIcon from '@material-ui/icons/Subway';\nimport SeatIcon from '@material-ui/icons/AirlineSeatReclineNormal';\nimport UnknownRideIcon from '@material-ui/icons/NotListedLocation';\nimport { VEHICLE_TYPES } from 'travel/models/rides/consts';\n\nexport default function RideIcon({ ride: { vehicleType }, className }) {\n  const IconComponent = resolveRideIconComponent(vehicleType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(vehicleType) {\n  switch (vehicleType) {\n    case VEHICLE_TYPES.CAR:\n      return CarIcon;\n    case VEHICLE_TYPES.TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.AIRCRAFT:\n      return FlightIcon;\n    case VEHICLE_TYPES.BUS:\n    case VEHICLE_TYPES.TROLLEY:\n    case VEHICLE_TYPES.CITY_BUS:\n      return BusIcon;\n    case VEHICLE_TYPES.MOTORHOME:\n    case VEHICLE_TYPES.JITNEY:\n      return VanIcon;\n    case VEHICLE_TYPES.LOCAL_TRAIN:\n      return TrainIcon;\n    case VEHICLE_TYPES.FERRY:\n      return BoatIcon;\n    case VEHICLE_TYPES.BIKE:\n      return BikeIcon;\n    case VEHICLE_TYPES.BY_FEET:\n      return WalkIcon;\n    case VEHICLE_TYPES.MOTORBIKE:\n      return MotorcycleIcon;\n    case VEHICLE_TYPES.TRUCK:\n      return TruckIcon;\n    case VEHICLE_TYPES.ALL_TERRAIN_VEHICLE:\n      return TerrainIcon;\n    case VEHICLE_TYPES.TRAM:\n      return TramIcon;\n    case VEHICLE_TYPES.TAXI:\n      return LocalTaxiIcon;\n    case VEHICLE_TYPES.SUBWAY:\n      return SubwayIcon;\n    case VEHICLE_TYPES.PUBLIC_TRANSPORT:\n      return SeatIcon;\n    case VEHICLE_TYPES.ROPEWAY:\n    case VEHICLE_TYPES.FUNICULAR:\n      return CustomTransportIcon;\n    default:\n      return UnknownRideIcon;\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HichHikingIcon from '@material-ui/icons/ThumbUp';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport { RIDE_TYPES } from 'travel/models/rides/consts';\nimport RideIcon from 'travel/components/RideIcon';\n\nconst useStyles = makeStyles({\n  icon: { color: 'gray', fontSize: 16, height: 16 },\n  absoluteIcon: {\n    // todo fast decision, need refactor\n    color: 'gray',\n    fontSize: 16,\n    height: 16,\n    position: 'absolute',\n  },\n  detail: { color: 'gray', fontSize: 12 },\n});\n\nexport default function RideInfo({\n  ride,\n  ride: { rideType } = {},\n  className,\n  isLong,\n}) {\n  const classes = useStyles();\n\n  if (!ride) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <RideIcon ride={ride} className={classes.icon} />\n      {rideType === RIDE_TYPES.HITCH_HIKING && (\n        <HichHikingIcon className={classes.absoluteIcon} />\n      )}\n      {isLong && rideDateTimePeriodToString(ride)}\n    </div>\n  );\n}\n","import uniq from 'lodash/uniq';\n\nexport default (array, { maxLength, separator = ', ' }) => {\n  const uniqArray = uniq(array);\n  const result = uniqArray.slice(0, maxLength).join(separator);\n  if (uniqArray.length > maxLength) {\n    return `${result}...`;\n  }\n  return result;\n};\n","import dateMin from 'date-fns/min';\nimport dateMax from 'date-fns/max';\nimport groupBy from 'lodash/groupBy';\nimport uniqTrimAndJoin from 'modules/utilities/text/uniqTrimAndJoin';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\n\nconst FALLBACK = 'Без названия';\nexport default function resolveTripCaption(\n  trip,\n  visitsDict,\n  countriesDict,\n  locationsDict,\n) {\n  const {\n    visits: visitsIds,\n    originLocationId,\n    tripName,\n    hasAutogeneratedTripName,\n  } = trip || {};\n\n  const originCountryId = locationsDict[originLocationId]?.countryId;\n\n  if (!hasAutogeneratedTripName) {\n    return tripName || FALLBACK;\n  }\n  if (!visitsIds.length) {\n    return FALLBACK;\n  }\n\n  const periodStr = visitDateTimePeriodToString({\n    arrivalDateTime: dateMin(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.arrivalDateTime),\n    ),\n    departureDateTime: dateMax(\n      visitsIds.map(visitsId => visitsDict[visitsId]?.departureDateTime),\n    ),\n  });\n\n  const visitsByCountries = Object.keys(\n    groupBy(\n      visitsIds.filter(\n        visitId => visitsDict[visitId]?.visitType !== VISIT_TYPES.TRANSIT,\n      ),\n      'countryId',\n    ),\n  );\n\n  if (visitsByCountries.length === 1) {\n    const locationsNames = uniqTrimAndJoin(\n      visitsIds.map(visitId => visitsDict[visitId]?.locationName),\n      { maxLength: 4 },\n    );\n    return `${locationsNames || FALLBACK}, ${periodStr}`;\n  }\n\n  const countriesNames = uniqTrimAndJoin(\n    visitsByCountries\n      .map(\n        countryId =>\n          Number(countryId) !== originCountryId &&\n          countriesDict[countryId] &&\n          countriesDict[countryId].countryName,\n      )\n      .filter(Boolean),\n    { maxLength: 4 },\n  );\n  return `${countriesNames || FALLBACK}, ${periodStr}`;\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = {\n  container: {\n    display: 'block',\n  },\n  selectRoot: {\n    display: 'block',\n  },\n};\n\nconst OptionsSelect = ({\n  'data-locator': dataLocator,\n  caption,\n  classes,\n  hasNullOption,\n  inputId,\n  name,\n  onChange: handleChange,\n  optionRender,\n  options,\n  value,\n}) => (\n  <div data-locator={dataLocator} className={classes.container}>\n    <InputLabel component=\"label\" shrink={true} htmlFor={inputId}>\n      {caption}\n    </InputLabel>\n    <Select\n      name={name}\n      value={value}\n      displayEmpty={true}\n      onChange={handleChange}\n      input={<Input id={inputId} />}\n      className={classes.selectRoot}\n      MenuProps={{ 'data-locator': `options-${inputId}` }}\n    >\n      {hasNullOption && (\n        <MenuItem data-locator=\"option-null\" key={null} value={null}>\n          {optionRender({ option: null, index: -1, options })}\n        </MenuItem>\n      )}\n      {options.map((option, index) => (\n        <MenuItem data-locator={`option-${option}`} key={option} value={option}>\n          {optionRender({ option, index, options })}\n        </MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\nOptionsSelect.defaultProps = {\n  name: undefined,\n  hasNullOption: true,\n  optionRender: ({ option }) => option || '',\n  options: [],\n  value: undefined,\n};\n\nexport default withStyles(styles)(OptionsSelect);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport default function Option({\n  isHighlighted,\n  isSelected,\n  option,\n  ...forwardedProps\n}) {\n  return (\n    <MenuItem\n      component=\"div\"\n      selected={isHighlighted}\n      style={{ fontWeight: isSelected ? 500 : 400 }}\n      {...forwardedProps}\n    >\n      <ListItemText primary={option.label} secondary={option.details} />\n    </MenuItem>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Option from './Option';\n\nexport default function Overlay({\n  isOpen,\n  options,\n  classes,\n  getMenuProps,\n  getItemProps,\n  selectedItem,\n  highlightedIndex,\n}) {\n  return (\n    <div {...getMenuProps()}>\n      {isOpen && (\n        <Paper className={classes.paper} square={true}>\n          {options.map((option, index) => (\n            <Option\n              key={option.label}\n              {...getItemProps({ item: option })}\n              isHighlighted={highlightedIndex === index}\n              isSelected={\n                Boolean(selectedItem) && selectedItem.label === option.label\n              }\n              option={option}\n            />\n          ))}\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport omit from 'lodash/omit';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Trigger({ classes, triggerProps, triggerInputProps }) {\n  return (\n    <TextField\n      InputProps={{\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        },\n        ...triggerInputProps,\n      }}\n      fullWidth={true}\n      classes={omit(classes, 'inputRoot', 'inputInput')}\n      {...triggerProps}\n    />\n  );\n}\n","import React from 'react';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Overlay from './blocks/Overlay';\nimport Trigger from './blocks/Trigger';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  container: {},\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  inputRoot: {},\n  inputInput: {},\n}));\n\nconst defaultItemToString = item => {\n  const { label } = item || {};\n  return label;\n};\n\n// export default ({ inputProps, classes, ref, ...other }) => {};\nexport default function Select({\n  'data-locator': dataLocator,\n  classes: customClasses,\n  options,\n  inputProps,\n  triggerProps,\n  ...downshiftProps\n}) {\n  const classes = { ...useStyles(), ...customClasses };\n  return (\n    <div data-locator={dataLocator} className={classes.root}>\n      <Downshift itemToString={defaultItemToString} {...downshiftProps}>\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            <Trigger\n              classes={classes}\n              inputValue={inputValue}\n              triggerProps={triggerProps}\n              triggerInputProps={getInputProps(inputProps)}\n            />\n            <Overlay\n              isOpen={isOpen}\n              options={options}\n              classes={classes}\n              getMenuProps={getMenuProps}\n              getItemProps={getItemProps}\n              selectedItem={selectedItem}\n              highlightedIndex={highlightedIndex}\n            />\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectResult } from 'core/connection/request/controllerRedux';\nimport { useProvision, selectDict } from 'core/connection';\n\nexport const QUERY_FORMATS = {\n  FILTER: 'FILTER',\n  SEARCH: 'SEARCH',\n};\nconst DEFAULT_SUGGEST_DEBOUNCE_TIME_MS = 400;\n\nexport default function useSuggest({\n  domain,\n  modelName,\n  inputValue,\n  queryFormat,\n  filterField,\n  customQuery,\n  numberOfItemsToRequest,\n  debounceRequestDelayMs = DEFAULT_SUGGEST_DEBOUNCE_TIME_MS,\n}) {\n  const provision = useProvision({\n    debounceRequest: debounceRequestDelayMs,\n    domain,\n    isProvision: true,\n    modelName,\n    observe: inputValue,\n    query: resolveQueryByFormat({\n      queryFormat,\n      filterField,\n      inputValue,\n      numberOfItemsToRequest,\n      customQuery,\n    }),\n  });\n  const { data: entitiesIds = [] } = selectResult(provision) || {};\n  const entitiesDict = useSelector(state => selectDict(state, modelName) || {});\n\n  return {\n    provision,\n    suggestions: entitiesIds\n      .map(entityId => entitiesDict[entityId])\n      .filter(Boolean),\n  };\n}\n\nfunction resolveQueryByFormat({\n  queryFormat,\n  filterField,\n  inputValue: searchString,\n  numberOfItemsToRequest,\n  customQuery,\n}) {\n  const navigation = { pageSize: numberOfItemsToRequest };\n  switch (queryFormat) {\n    case QUERY_FORMATS.SEARCH:\n      return { ...customQuery, navigation, search: searchString };\n    case QUERY_FORMATS.FILTER:\n    default:\n      return {\n        ...customQuery,\n        navigation,\n        filter: {\n          [filterField]: { comparator: '~', value: `%${searchString}%` },\n        },\n      };\n  }\n}\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Select from '../Select';\nimport useSuggest, { QUERY_FORMATS } from './useSuggest';\n\nexport { QUERY_FORMATS };\nexport default function Suggest({\n  classes: customClasses,\n  inputProps,\n  triggerProps,\n  sourceProps,\n  transformSuggestionToOption = suggestion => suggestion,\n  ...forwardingProps\n}) {\n  const [inputValue, setInputValue] = useState('');\n  const { suggestions } = useSuggest({ ...sourceProps, inputValue });\n  const handleInputChange = useCallback(event => {\n    setInputValue(event.target?.value);\n  });\n  const actualInputProps = useMemo(\n    () => ({\n      ...inputProps,\n      onChange: handleInputChange,\n    }),\n    [inputProps, handleInputChange],\n  );\n\n  const options = useMemo(() => suggestions.map(transformSuggestionToOption), [\n    suggestions,\n  ]);\n\n  return (\n    <Select\n      classes={customClasses}\n      inputProps={actualInputProps}\n      triggerProps={triggerProps}\n      options={options}\n      {...forwardingProps}\n    />\n  );\n}\n","/* eslint-disable import/prefer-default-export */\n// todo use localization library\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\n\nexport const TRIP_TYPE_NAMES = {\n  [TRIP_TYPES.LEISURE]: 'Отдых',\n  [TRIP_TYPES.BUSINESS]: 'Работа',\n  [TRIP_TYPES.MIXED]: 'Смешанный',\n  [TRIP_TYPES.RELOCATION]: 'Переезд',\n  [TRIP_TYPES.OTHER]: 'Другой',\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport Suggest, { QUERY_FORMATS } from 'modules/components/muiExtended/Suggest';\nimport { TRIP_TYPES } from 'travel/models/trips/consts';\nimport { TRIP_TYPE_NAMES } from './localization';\nimport * as locators from '../../../locators';\n\nconst renderTripType = ({ option: tripType }) =>\n  tripType ? TRIP_TYPE_NAMES[tripType] : 'Не указан';\n\nexport const useTripState = ({\n  tripName: initialTripName,\n  tripType: initialTripType,\n  originLocationId: initialOriginLocationId,\n  originGeonameId: initialOriginGeonameId,\n}) => {\n  const [tripState, setTripState] = useState({\n    tripName: initialTripName,\n    tripType: initialTripType,\n    originLocationId: initialOriginLocationId,\n    originGeonameId: initialOriginGeonameId,\n  });\n\n  return {\n    tripState,\n    setTripState: tripStateUpdate =>\n      setTripState({ ...tripState, ...tripStateUpdate }),\n  };\n};\n\nconst useStyles = makeStyles({\n  optionGroup: {\n    display: 'flex',\n    minWidth: '400px',\n  },\n  suggest: {\n    flexGrow: 1,\n  },\n});\n\nexport default function TripEditFormSection({\n  provision: { locationsDict = {} } = {},\n  formikProps,\n}) {\n  const classes = useStyles();\n  const {\n    handleChange,\n    setFieldValue,\n    handleBlur,\n    errors,\n    touched,\n    values: { trip: tripFormValues = {} },\n  } = formikProps;\n\n  const originLocation = locationsDict[tripFormValues.originLocationId];\n  const { locationName } = originLocation || {};\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={6}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              data-locator={locators.AUTOGENERATED_NAME_CHECKBOX}\n              fullWidth={true}\n              helperText={\n                touched.trip?.hasAutogeneratedTripName &&\n                errors.trip?.hasAutogeneratedTripName\n              }\n              name=\"trip.hasAutogeneratedTripName\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              checked={tripFormValues.hasAutogeneratedTripName}\n            />\n          }\n          label=\"Автогенерируемое название\"\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        {!tripFormValues.hasAutogeneratedTripName && (\n          <TextField\n            data-locator={locators.TRIP_NAME_INPUT}\n            className={classes.textField}\n            fullWidth={true}\n            helperText={touched.trip?.tripName && errors.trip?.tripName}\n            label=\"Название поездки\"\n            margin=\"normal\"\n            name=\"trip.tripName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            value={tripFormValues.tripName}\n          />\n        )}\n      </Grid>\n      <Grid item={true} xs={6}>\n        <Suggest\n          data-locator={locators.ORIGIN_LOCATION_SUGGEST}\n          classes={{ root: classes.suggest }}\n          inputProps={{ placeholder: 'Пункт отправления...' }}\n          initialInputValue={locationName}\n          onChange={({ suggestion: { geonameId } }) =>\n            setFieldValue('trip.originGeonameId', geonameId)\n          }\n          onBlur={handleBlur}\n          sourceProps={{\n            domain: 'tripEditCard.geoname',\n            modelName: 'geonames',\n            filterField: 'locationName',\n            queryFormat: QUERY_FORMATS.SEARCH,\n            resolveDetails: ({ countryName, regionName }) =>\n              [countryName, regionName].filter(Boolean).join(', '),\n          }}\n          transformSuggestionToOption={transformSuggestionToOption}\n          triggerProps={{ label: 'Старт из' }}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.TRIP_TYPE_SELECT}\n          caption=\"Тип поездки\"\n          name=\"trip.tripType\"\n          inputId=\"TripEditCard-TripTypeOptions\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          optionRender={renderTripType}\n          options={Object.values(TRIP_TYPES)}\n          hasNullOption={true}\n          value={tripFormValues.tripType}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nTripEditFormSection.defaultProps = {};\n\nfunction transformSuggestionToOption(suggestion) {\n  const { locationName, countryName } = suggestion;\n  return {\n    label: locationName,\n    detail: countryName,\n    suggestion,\n  };\n}\n","export const TRIP_NAME_INPUT = 'TRIP_EDIT_PAGE.TRIP_NAME_INPUT';\nexport const TRIP_TYPE_SELECT = 'TRIP_EDIT_PAGE.TRIP_TYPE_SELECT';\nexport const ORIGIN_LOCATION_SUGGEST = 'TRIP_EDIT_PAGE.ORIGIN_LOCATION_SUGGEST';\nexport const ADD_VISIT_BUTTON = 'TRIP_EDIT_PAGE.ADD_VISIT_BUTTON';\nexport const RIDE_ACTIONS = 'TRIP_EDIT_PAGE.RIDE_ACTIONS';\nexport const SUBMIT_TRIP_BUTTON = 'TRIP_EDIT_PAGE.SUBMIT_TRIP_BUTTON';\nexport const AUTOGENERATED_NAME_CHECKBOX = 'TRIP_EDIT_PAGE.AUTOGENERATED_NAME_CHECKBOX';\nexport const VISIT_DIALOG = 'TRIP_EDIT_PAGE.VISIT_DIALOG';\nexport const VISIT_BLOCK = 'TRIP_EDIT_PAGE.VISIT_BLOCK';\nexport const RIDE_DIALOG = 'TRIP_EDIT_PAGE.RIDE_DIALOG';\nexport const RIDE_BLOCK = 'TRIP_EDIT_PAGE.RIDE_BLOCK';\n","export default (prevVisit, nextVisit) => {\n  if (!prevVisit || !nextVisit) {\n    return true;\n  }\n  const { departureRideId: prevVisitDepartureRideId } = prevVisit;\n  const { arrivalRideId: nextVisitArrivalRideId } = nextVisit;\n  return prevVisitDepartureRideId === nextVisitArrivalRideId;\n};\n","// helper for react-sortable-hoc\nexport default event => {\n  let element = event.target;\n  while (element) {\n    const { dataset } = element;\n\n    if (dataset) {\n      const { sortHandler } = dataset;\n      if (sortHandler === 'enabled') {\n        return false;\n      }\n      if (sortHandler === 'disabled') {\n        return true;\n      }\n    }\n\n    element = element.parentNode;\n  }\n  return true;\n};\n","import React from 'react';\nimport {\n  SortableContainer as SortableContainerHOC,\n  SortableElement as SortableElementHOC,\n} from 'react-sortable-hoc';\nimport checkIsNodeNotSortable from 'modules/utilities/dom/checkIsNodeNotSortable';\n\nconst SortableContainer = SortableContainerHOC(({ children, className }) => (\n  <div className={className}>{children}</div>\n));\nconst SortableElement = SortableElementHOC(({ node }) => node);\n\nexport default function Sortable({ children, ...forwardingProps }) {\n  return (\n    <SortableContainer\n      shouldCancelStart={checkIsNodeNotSortable}\n      lockAxis=\"y\"\n      lockToContainerEdges={true}\n      {...forwardingProps}\n    >\n      {React.Children.map(children, (node, index) => (\n        <SortableElement node={node} index={index} />\n      ))}\n    </SortableContainer>\n  );\n}\n","import React from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconDragHandle from '@material-ui/icons/DragHandle';\n\nconst useStyles = makeStyles({\n  dragHandler: {\n    cursor: 'grab',\n  },\n});\n\nexport default function DragHandler({ className }) {\n  const classes = useStyles();\n  return (\n    <IconDragHandle\n      className={cls(className, classes.dragHandler)}\n      data-sort-handler=\"enabled\"\n    />\n  );\n}\n\nDragHandler.defaultProps = { className: undefined };\n","import { useState } from 'react';\n\nexport const DIALOG_NAMES = {\n  RIDE_CREATE: 'RIDE_CREATE_DIALOG',\n  RIDE_EDIT: 'RIDE_EDIT_DIALOG',\n  RIDE_DELETE: 'RIDE_DELETE_DIALOG',\n  VISIT_CREATE: 'VISIT_CREATE_DIALOG',\n  VISIT_EDIT: 'VISIT_EDIT_DIALOG',\n  VISIT_DELETE: 'VISIT_DELETE_DIALOG',\n};\n\nexport default function useTripEditPageDialogs() {\n  const [dialogsState, setDialogsState] = useState({ name: null });\n  const showDialog = (dialogName, dialogParams) => {\n    setDialogsState({ dialogName, dialogParams });\n  };\n  const hideDialog = () => {\n    setDialogsState({ name: null });\n  };\n  return { showDialog, hideDialog, dialogsState };\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DragHandler from 'modules/components/DragHandler';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '12px 0',\n    cursor: 'grab',\n    background: '#fff',\n    padding: '12px',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(0, 0, 0, 0.2)',\n    position: 'relative',\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nexport default function VisitCreator({ showDialog }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.container} data-sort-handler=\"enabled\">\n      <Button\n        data-locator={locators.ADD_VISIT_BUTTON}\n        data-sort-handler=\"disabled\"\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => showDialog(DIALOG_NAMES.VISIT_CREATE)}\n      >\n        <span>Добавить посещение</span>\n      </Button>\n      <DragHandler className={classes.visibleOnlyOnHover} />\n    </div>\n  );\n}\n\nVisitCreator.defaultProps = {};\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport * as locators from '../locators';\n\nexport default function CreateButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.CREATE_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <AddCircleIcon />\n    </IconButton>\n  );\n}\n\nCreateButton.defaultProps = {};\n","export const CREATE_BUTTON = 'ACTIONS.CREATE_BUTTON';\nexport const EDIT_BUTTON = 'ACTIONS.EDIT_BUTTON';\nexport const DELETE_BUTTON = 'ACTIONS.DELETE_BUTTON';\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport * as locators from '../locators';\n\nexport default function EditButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.EDIT_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n}\n\nEditButton.defaultProps = {};\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as locators from '../locators';\n\nexport default function DeleteButton({ onClick, ...forwardingProps }) {\n  return (\n    <IconButton\n      data-locator={locators.DELETE_BUTTON}\n      size=\"small\"\n      variant=\"outlined\"\n      color=\"primary\"\n      component=\"button\"\n      onClick={onClick}\n      {...forwardingProps}\n    >\n      <DeleteIcon />\n    </IconButton>\n  );\n}\n\nDeleteButton.defaultProps = {};\n","import React from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateButton from './buttons/CreateButton';\nimport EditButton from './buttons/EditButton';\nimport DeleteButton from './buttons/DeleteButton';\n\nconst useStyles = makeStyles({\n  actions: {\n    display: 'inline-block',\n  },\n});\n\nexport default function Actions({\n  'data-locator': dataLocator,\n  className,\n  isEntityExist,\n  onEditClick,\n  onDeleteClick,\n  onCreateClick,\n}) {\n  const classes = useStyles();\n  const hasCreateAction = !isEntityExist && Boolean(onCreateClick);\n  const hasEditAction = isEntityExist && Boolean(onEditClick);\n  const hasDeleteAction = isEntityExist && Boolean(onDeleteClick);\n  return (\n    <div\n      data-locator={dataLocator}\n      data-sort-handler=\"disabled\"\n      className={cls(classes.actions, className)}\n    >\n      {hasCreateAction && <CreateButton onClick={onCreateClick} />}\n      {hasEditAction && <EditButton onClick={onEditClick} />}\n      {hasDeleteAction && <DeleteButton onClick={onDeleteClick} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\n\nexport default function VisitIcon({ visit: { visitType }, className }) {\n  const IconComponent = resolveRideIconComponent(visitType);\n  return <IconComponent className={className} />;\n}\n\nfunction resolveRideIconComponent(visitType) {\n  switch (visitType) {\n    case VISIT_TYPES.TRANSIT:\n      return TransferWithinAStationIcon;\n    case VISIT_TYPES.BASE_CAMP:\n      return DomainIcon;\n    case VISIT_TYPES.RELOCATION:\n      return LocalShippingIcon;\n    case VISIT_TYPES.REGULAR:\n    default:\n      return LocationCityIcon;\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Actions from 'travel/components/Actions';\nimport VisitIcon from 'travel/components/VisitIcon';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n    '&:hover $visibleOnHover': {\n      visibility: 'visible',\n    },\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  visibleOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst Visit = ({ visit, showDialog }) => {\n  const classes = useStyles();\n  if (!visit) {\n    return 'Не указано';\n  }\n\n  const { locationName } = visit;\n\n  return (\n    <div className={classes.container} data-locator={locators.VISIT_BLOCK}>\n      <VisitIcon visit={visit} className={classes.icon} />\n      {locationName}\n      <Actions\n        className={classes.visibleOnHover}\n        isEntityExist={true}\n        onEditClick={() => showDialog(DIALOG_NAMES.VISIT_EDIT, visit)}\n        onDeleteClick={() => showDialog(DIALOG_NAMES.VISIT_DELETE, visit)}\n      />\n    </div>\n  );\n};\n\nVisit.defaultProps = {\n  visit: {},\n};\n\nexport default Visit;\n","import React from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rideDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport RideIcon from 'travel/components/RideIcon';\nimport Actions from 'travel/components/Actions';\nimport { DIALOG_NAMES } from '../../../../../useTripEditPageDialogs';\nimport * as locators from '../../../../../locators';\n\nexport const useStyles = makeStyles({\n  container: {\n    '&:hover $visibleOnHover': {\n      visibility: 'visible',\n    },\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  details: {\n    marginRight: '4px',\n  },\n  visibleOnHover: {\n    visibility: 'hidden',\n  },\n});\n\nconst Ride = ({ className, ride, showDialog }) => {\n  const classes = useStyles();\n  const { rideId, arrivalDateTime, departureDateTime } = ride || {};\n  const isRideExists = Boolean(rideId);\n\n  return (\n    <div\n      className={cls(className, classes.container)}\n      data-locator={locators.RIDE_BLOCK}\n    >\n      {isRideExists && (\n        <>\n          <RideIcon ride={ride} className={classes.icon} />\n          <span className={classes.details}>\n            {rideDateTimePeriodToString({ departureDateTime, arrivalDateTime })}\n          </span>\n        </>\n      )}\n      <Actions\n        data-locator={locators.RIDE_ACTIONS}\n        className={cls({\n          [classes.visibleOnHover]: isRideExists,\n        })}\n        isEntityExist={isRideExists}\n        onCreateClick={() => showDialog(DIALOG_NAMES.RIDE_CREATE)}\n        onEditClick={() => showDialog(DIALOG_NAMES.RIDE_EDIT, ride)}\n      />\n    </div>\n  );\n};\n\nRide.defaultProps = {\n  className: undefined,\n  ride: {},\n};\n\nexport default Ride;\n","import React from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Visit from './Visit';\nimport Ride from './Ride';\n\nconst useStyles = makeStyles({\n  alwaysVisible: {},\n  container: {\n    margin: '12px 0',\n    cursor: 'grab',\n    background: '#fff',\n    padding: '12px',\n    border: '1px solid #ccc',\n    boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(0, 0, 0, 0.2)',\n    position: 'relative',\n    '&:hover $editDialogTrigger': {\n      visibility: 'visible',\n    },\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  editDialogTrigger: {\n    marginLeft: '4px',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'inline-block',\n    visibility: 'hidden',\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  ride: {\n    // display: 'none',\n  },\n  warning: {\n    color: 'red',\n  },\n});\n\nexport default function VisitAndRidesFormSection({\n  style,\n  className,\n  prevVisit,\n  visit,\n  nextVisit,\n  showDialog,\n  isArrivalRideMatch,\n  isDepartureRideMatch,\n  tripId,\n  provision,\n}) {\n  const classes = useStyles();\n\n  const { ridesDict } = provision;\n\n  const {\n    visitId,\n    arrivalRideId: formArrivalRideId,\n    departureRideId: formDepartureVisitId,\n  } = visit || {};\n\n  const { visitId: prevVisitId } = prevVisit || {};\n  const { visitId: nextVisitId } = nextVisit || {};\n\n  return (\n    <div\n      className={cls(classes.container, className)}\n      style={style}\n      data-sort-handler=\"enabled\"\n    >\n      <Ride\n        showDialog={(dialogName, dialogParams) =>\n          showDialog(dialogName, {\n            ...dialogParams,\n            departureVisitId: isArrivalRideMatch ? prevVisitId : undefined,\n            arrivalVisitId: visitId,\n          })\n        }\n        className={cls(classes.ride, {\n          [classes.warning]: !isArrivalRideMatch,\n        })}\n        ride={ridesDict[formArrivalRideId]}\n        provision={provision}\n      />\n      <Visit\n        showDialog={showDialog}\n        classes={{ editIcon: classes.visibleOnlyOnHover }}\n        visit={visit}\n        provision={provision}\n      />\n      <Ride\n        showDialog={(dialogName, dialogParams) =>\n          showDialog(dialogName, {\n            ...dialogParams,\n            departureVisitId: visitId,\n            arrivalVisitId: isDepartureRideMatch ? nextVisitId : undefined,\n          })\n        }\n        visitId={visitId}\n        className={cls(classes.ride, {\n          [classes.warning]: !isDepartureRideMatch,\n        })}\n        ride={ridesDict[formDepartureVisitId]}\n        provision={provision}\n      />\n    </div>\n  );\n}\n\nVisitAndRidesFormSection.defaultProps = {};\n","import React, { useState } from 'react';\nimport cls from 'classnames';\nimport { FieldArray } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport checkIsVisitsConnectedByRide from 'travel/utils/checkIsVisitsConnectedByRide';\nimport Sortable from 'modules/components/Sortable';\nimport VisitCreator from './blocks/VisitCreator';\nimport VisitAndRidesFormSection from './blocks/VisitAndRidesFormSection';\n\nconst useStyles = makeStyles({\n  creatorsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  compact: {\n    '&:not($ghost)': {\n      marginTop: '-52px',\n    },\n  },\n  ghost: {},\n  resetFlow: {\n    transform: 'translate(0, 0)',\n  },\n});\n\nfunction checkIsRidesMatch(\n  prevVisitFormValues,\n  visitFormValues,\n  nextVisitFormValues,\n) {\n  const isArrivalRideMatch = checkIsVisitsConnectedByRide(\n    prevVisitFormValues,\n    visitFormValues,\n  );\n  const isDepartureRideMatch = checkIsVisitsConnectedByRide(\n    visitFormValues,\n    nextVisitFormValues,\n  );\n  return { isDepartureRideMatch, isArrivalRideMatch };\n}\n\nexport default function VisitsAndRidesFormSection({\n  showDialog,\n  provision,\n  formikProps,\n}) {\n  const { values } = formikProps;\n  const {\n    trip: { visits: formVisitsIds },\n  } = values;\n\n  const { visitsDict } = provision;\n\n  const classes = useStyles();\n\n  const [creatorsNodeIndex, setCreatorsNodeIndex] = useState(\n    formVisitsIds.length,\n  );\n  const [sortingIndex, setSortingIndex] = useState(null);\n\n  const showCreationDialog = (dialogName, dialogParams) => {\n    const [prevVisit, visit] = neighbors(formVisitsIds, creatorsNodeIndex).map(\n      visitId => (visitId && visitsDict[visitId]) || null,\n    );\n    showDialog(dialogName, {\n      ...dialogParams,\n      orderInTrip: calculateOrderInTripBetweenTwoVisits(prevVisit, visit),\n    });\n  };\n\n  if (!formVisitsIds.length) {\n    return <VisitCreator key=\"visitCreator\" showDialog={showCreationDialog} />;\n  }\n\n  return (\n    <FieldArray\n      name=\"trip.visits\"\n      render={arrayHelpers => (\n        <Sortable\n          useWindowAsScrollContainer={true}\n          className={classes.resetFlow}\n          onSortStart={({ index }) => {\n            setSortingIndex(index);\n          }}\n          onSortEnd={data => {\n            setSortingIndex(null);\n            const { oldIndex, newIndex } = data;\n            const isVisitCreatorNodeMoved = oldIndex === creatorsNodeIndex;\n            if (isVisitCreatorNodeMoved) {\n              setCreatorsNodeIndex(newIndex);\n            } else {\n              arrayHelpers.move(oldIndex, newIndex);\n            }\n          }}\n        >\n          {formVisitsIds.flatMap((formVisitId, indexOfVisit) => {\n            const [prevVisit, visit, nextVisit] = neighbors(\n              formVisitsIds,\n              indexOfVisit,\n            ).map(visitId => (visitId && visitsDict[visitId]) || null);\n\n            const {\n              isArrivalRideMatch,\n              isDepartureRideMatch,\n            } = checkIsRidesMatch(prevVisit, visit, nextVisit);\n\n            const shouldCollapseRides =\n              indexOfVisit >= 1 &&\n              isArrivalRideMatch &&\n              creatorsNodeIndex !== indexOfVisit;\n\n            const visitAndRidesFormSectionNode = (\n              <VisitAndRidesFormSection\n                key={`v${formVisitId}`}\n                index={indexOfVisit /* for SortableNode */}\n                style={{ zIndex: formVisitsIds.length - indexOfVisit }}\n                className={cls({\n                  [classes.compact]: shouldCollapseRides,\n                  [classes.ghost]: sortingIndex === indexOfVisit,\n                })}\n                showDialog={showDialog}\n                isArrivalRideMatch={isArrivalRideMatch}\n                isDepartureRideMatch={isDepartureRideMatch}\n                prevVisit={prevVisit}\n                visit={visit}\n                nextVisit={nextVisit}\n                formikProps={formikProps}\n                provision={provision}\n              />\n            );\n\n            const shouldInsertCreatorsNodeBeforeFormSection =\n              creatorsNodeIndex === indexOfVisit;\n            const shouldInsertCreatorsNodeAfterFormSection =\n              creatorsNodeIndex === formVisitsIds.length &&\n              creatorsNodeIndex === indexOfVisit + 1;\n\n            if (\n              !shouldInsertCreatorsNodeBeforeFormSection &&\n              !shouldInsertCreatorsNodeAfterFormSection\n            ) {\n              return visitAndRidesFormSectionNode;\n            }\n\n            const visitCreatorNode = (\n              <div style={{ zIndex: formVisitsIds.length + 1 }}>\n                <VisitCreator\n                  key=\"visitCreator\"\n                  showDialog={showCreationDialog}\n                />\n              </div>\n            );\n\n            if (shouldInsertCreatorsNodeBeforeFormSection) {\n              return [visitCreatorNode, visitAndRidesFormSectionNode];\n            }\n            return [visitAndRidesFormSectionNode, visitCreatorNode];\n          })}\n        </Sortable>\n      )}\n    />\n  );\n}\n\nVisitsAndRidesFormSection.defaultProps = {};\n\nfunction calculateOrderInTripBetweenTwoVisits(prevVisit, nextVisit) {\n  const { orderInTrip: prevOrderInTrip } = prevVisit || {};\n  const { orderInTrip: nextOrderInTrip } = nextVisit || {};\n  if (!prevVisit) {\n    return nextOrderInTrip - 1;\n  }\n  if (!nextVisit) {\n    return prevOrderInTrip + 1;\n  }\n  const randomness =\n    ((Math.random() - 0.5) * (nextOrderInTrip - prevOrderInTrip)) / 2;\n  return (prevOrderInTrip + nextOrderInTrip) / 2 + randomness;\n}\n\nfunction neighbors(array, index) {\n  const prevValue = array[index - 1] || null;\n  const value = array[index] || null;\n  const nextValue = array[index + 1] || null;\n  return [prevValue, value, nextValue];\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { resolveTripCaption } from 'travel/models/trips/utils';\n\nexport default function TripEditTitle({\n  isCreation,\n  className,\n  provision,\n  formikProps: { values },\n}) {\n  const { trip: formTrip } = values;\n  const { visitsDict, countriesDict, locationsDict } = provision;\n\n  const modeCaption = isCreation\n    ? 'Создание поездки'\n    : 'Редактирование поездки';\n\n  const tripName = resolveTripCaption(\n    formTrip,\n    visitsDict,\n    countriesDict,\n    locationsDict,\n  );\n\n  const tripCaption = `${modeCaption}: \"${tripName}\"`;\n\n  return (\n    <Typography variant=\"h6\" className={className}>\n      {tripCaption}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport { Form } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TripEditFormSection from './blocks/TripEditFormSection';\nimport VisitsAndRidesFormSection from './blocks/VisitsAndRidesFormSection/VisitsAndRidesFormSection';\nimport TripEditTitle from './blocks/TripEditTitle';\nimport * as locators from '../../locators';\n\nconst useStyles = makeStyles({\n  container: {\n    '&:hover $visibleOnlyOnHover': {\n      visibility: 'visible',\n    },\n  },\n  visibleOnlyOnHover: {\n    visibility: 'hidden',\n  },\n  actionButton: {\n    marginTop: '24px',\n  },\n  hint: {\n    color: 'gray',\n    fontSize: 12,\n    paddingLeft: '8px'\n  },\n});\n\nconst TripEditForm = ({ isCreation, showDialog, provision, formikProps }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TripEditTitle\n        className={classes.container}\n        formikProps={formikProps}\n        isCreation={isCreation}\n        provision={provision}\n      />\n      <Form>\n        <TripEditFormSection formikProps={formikProps} provision={provision} />\n        {!isCreation && (\n          <VisitsAndRidesFormSection\n            classes={classes}\n            showDialog={showDialog}\n            formikProps={formikProps}\n            provision={provision}\n          />\n        )}\n        <Button\n          data-locator={locators.SUBMIT_TRIP_BUTTON}\n          className={classes.actionButton}\n          type=\"submit\"\n          color=\"primary\"\n        >\n          {isCreation ? 'Создать' : 'Сохранить'}\n        </Button>\n        {isCreation && (\n          <div className={classes.hint}>\n            После создания поездки в нее можно будет добавить места посещения и\n            маршрут\n          </div>\n        )}\n      </Form>\n    </>\n  );\n};\n\nTripEditForm.defaultProps = {};\n\nexport default TripEditForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as locators from './locators';\n\nconst TRANSITION_DURATION_MS = 500;\n\nexport default function({\n  'data-locator': dataLocator,\n  isOpen,\n  title,\n  description,\n  children,\n  primaryButtonCaption,\n  primaryButtonHandler,\n  secondaryButtonCaption,\n  secondaryButtonHandler,\n  onClose,\n}) {\n  return (\n    <Dialog\n      data-locator={dataLocator}\n      transitionDuration={TRANSITION_DURATION_MS}\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{description}</DialogContentText>\n        {children}\n      </DialogContent>\n      <DialogActions>\n        {secondaryButtonHandler && (\n          <Button\n            data-locator={locators.RESET_BUTTON}\n            onClick={secondaryButtonHandler}\n            color=\"secondary\"\n          >\n            {secondaryButtonCaption}\n          </Button>\n        )}\n        {primaryButtonHandler && (\n          <Button\n            data-locator={locators.SUBMIT_BUTTON}\n            onClick={primaryButtonHandler}\n            color=\"primary\"\n          >\n            {primaryButtonCaption}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","export const SUBMIT_BUTTON = 'DIALOG.SUBMIT_BUTTON';\nexport const RESET_BUTTON = 'DIALOG.RESET_BUTTON';\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Dialog from '../Dialog';\n\nexport default function({\n  'data-locator': dataLocator,\n  initialValues,\n  isOpen,\n  onSubmit,\n  onReset,\n  title,\n  description,\n  children,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      enableReinitialize={true}\n      onSubmit={onSubmit}\n    >\n      {formikProps => (\n        <Dialog\n          data-locator={dataLocator}\n          description={description}\n          onClose={onReset}\n          isOpen={isOpen}\n          primaryButtonCaption=\"Сохранить\"\n          primaryButtonHandler={formikProps.handleSubmit}\n          secondaryButtonCaption=\"Отмена\"\n          secondaryButtonHandler={onReset}\n          title={title}\n        >\n          {React.cloneElement(children, { formikProps })}\n        </Dialog>\n      )}\n    </Formik>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visitDateTimePeriodToString } from 'modules/utilities/dateTime/dateTimePeriodToString';\nimport ConnectedLink from 'modules/components/muiExtended/ConnectedLink';\nimport VisitIcon from '../VisitIcon';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  icon: {\n    marginRight: '4px',\n    display: 'inline-block',\n    verticalAlign: 'text-bottom',\n  },\n  period: {\n    display: 'inline',\n    color: 'gray',\n    fontSize: 12,\n  },\n});\n\nconst VisitInfo = ({ visit, isLong, locationUrl }) => {\n  const classes = useStyles();\n  if (!visit) {\n    return 'Не указано';\n  }\n  const { locationName } = visit;\n  return (\n    <div className={classes.container}>\n      <VisitIcon visit={visit} className={classes.icon} />\n      <ConnectedLink to={locationUrl} optional={true}>\n        {locationName}\n      </ConnectedLink>\n      {isLong ? ', ' : ''}\n      <div className={classes.period}>\n        {isLong && visitDateTimePeriodToString(visit)}\n      </div>\n    </div>\n  );\n};\n\nVisitInfo.defaultProps = {\n  visit: {},\n};\n\nexport default VisitInfo;\n","// todo use localization library\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\n\nexport const RIDE_CLASSES_NAMES = {\n  [RIDE_CLASSES.ECONOMY]: 'Эконом',\n  [RIDE_CLASSES.COMFORT]: 'Комфорт',\n  [RIDE_CLASSES.BUSINESS]: 'Бизнес',\n  [RIDE_CLASSES.FIRST]: 'Первый',\n  [RIDE_CLASSES.PRIVATE]: 'Частный',\n};\n\nexport const RIDE_OCCUPATION_NAMES = {\n  [RIDE_OCCUPATION.PASSENGER]: 'Пассажир',\n  [RIDE_OCCUPATION.STUFF]: 'Персонал', // todo кроме персонального транспорта\n  [RIDE_OCCUPATION.DRIVER]: 'Водитель', // todo только для персонального транспорта\n};\n\nexport const RIDE_TYPES_NAMES = {\n  [RIDE_TYPES.SELF_DRIVE]: 'Самостоятельная поездка',\n  [RIDE_TYPES.SCHEDULED]: 'Регулярный рейс',\n  [RIDE_TYPES.CHARTER]: 'Чартерный рейс', // todo only for aircrafts\n  [RIDE_TYPES.TOUR]: 'Тур', // todo except aircrafts\n  [RIDE_TYPES.CARPOOL]: 'Попутный автомобиль',\n  [RIDE_TYPES.HITCH_HIKING]: 'Автостоп',\n  [RIDE_TYPES.DROP_OFF]: 'Подбросили до места',\n};\n\nexport const VEHICLE_NAMES = {\n  [VEHICLE_TYPES.CAR]: 'Автомобиль',\n  [VEHICLE_TYPES.TRAIN]: 'Поезд',\n  [VEHICLE_TYPES.AIRCRAFT]: 'Самолет',\n  [VEHICLE_TYPES.BUS]: 'Автобус',\n  [VEHICLE_TYPES.MOTORHOME]: 'Дом на колесах',\n  [VEHICLE_TYPES.LOCAL_TRAIN]: 'Электричка',\n  [VEHICLE_TYPES.FERRY]: 'Паром',\n  [VEHICLE_TYPES.BIKE]: 'Велосипед',\n  [VEHICLE_TYPES.BY_FEET]: 'Пешком',\n  [VEHICLE_TYPES.ROPEWAY]: 'Канатная дорога',\n  [VEHICLE_TYPES.FUNICULAR]: 'Фуникулер',\n  [VEHICLE_TYPES.MOTORBIKE]: 'Мотоцикл',\n  [VEHICLE_TYPES.TRUCK]: 'Грузовик',\n  [VEHICLE_TYPES.ALL_TERRAIN_VEHICLE]: 'Вездеход',\n  [VEHICLE_TYPES.TRAM]: 'Трамвай',\n  [VEHICLE_TYPES.TROLLEY]: 'Троллейбус',\n  [VEHICLE_TYPES.TAXI]: 'Такси',\n  [VEHICLE_TYPES.CITY_BUS]: 'Муниципальный автобус',\n  [VEHICLE_TYPES.JITNEY]: 'Маршрутное такси',\n  [VEHICLE_TYPES.SUBWAY]: 'Метро',\n  [VEHICLE_TYPES.PUBLIC_TRANSPORT]: 'Общественный транспорт',\n};\n","import checkIsSameDay from 'date-fns/isSameDay';\nimport checkIsDatesEqual from 'date-fns/isEqual';\nimport addDays from 'date-fns/addDays';\nimport isValidDate from 'modules/utilities/dateTime/isValidDate';\n\nconst mixDateTime = ({ dateFrom, timeFrom }) => {\n  const isValidDateFrom = isValidDate(timeFrom);\n  const isValidTimeFrom = isValidDate(dateFrom);\n  if (isValidDateFrom && isValidTimeFrom) {\n    return new Date(\n      dateFrom.getFullYear(),\n      dateFrom.getMonth(),\n      dateFrom.getDate(),\n      timeFrom.getHours(),\n      timeFrom.getMinutes(),\n      timeFrom.getSeconds(),\n    );\n  }\n  return new Date(NaN);\n};\n\nfunction checkCanUpdate(nextDate, prevDate) {\n  return isValidDate(nextDate) && !checkIsDatesEqual(prevDate, nextDate);\n}\n\nexport default ({\n  arrivalDateTimeField: {\n    value: arrivalDateTimeValue,\n    onChange: onArrivalDateTimeChange,\n  },\n  departureDateTimeField: {\n    value: departureDateTimeValue,\n    onChange: onDepartureDateTimeChange,\n  },\n}) => {\n  const isSameDay = checkIsSameDay(\n    departureDateTimeValue,\n    arrivalDateTimeValue,\n  );\n\n  const updateFields = (\n    nextDepartureDateTimeValue,\n    nextArrivalDateTimeValue,\n  ) => {\n    if (checkCanUpdate(nextDepartureDateTimeValue, departureDateTimeValue)) {\n      onDepartureDateTimeChange(nextDepartureDateTimeValue);\n    }\n    if (checkCanUpdate(nextArrivalDateTimeValue, arrivalDateTimeValue)) {\n      onArrivalDateTimeChange(nextArrivalDateTimeValue);\n    }\n  };\n\n  const handleIsSameDayFlagChange = nextIsSameDay => {\n    if (Boolean(isSameDay) !== Boolean(nextIsSameDay)) {\n      updateFields(\n        departureDateTimeValue,\n        mixDateTime({\n          dateFrom: nextIsSameDay\n            ? departureDateTimeValue\n            : addDays(departureDateTimeValue, 1),\n          timeFrom: arrivalDateTimeValue,\n        }),\n      );\n    }\n  };\n\n  const handleRideDepartureChange = nextDepartureDateTimeValue => {\n    const nextArrivalDateTimeValue = isSameDay\n      ? mixDateTime({\n          timeFrom: arrivalDateTimeValue,\n          dateFrom: nextDepartureDateTimeValue,\n        })\n      : arrivalDateTimeValue;\n    updateFields(nextDepartureDateTimeValue, nextArrivalDateTimeValue);\n  };\n\n  const handleRideDepartureDateChange = nextDepartureDateTimeValue => {\n    handleRideDepartureChange(\n      mixDateTime({\n        dateFrom: nextDepartureDateTimeValue,\n        timeFrom: departureDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideDepartureTimeChange = nextDepartureDateTimeValue => {\n    handleRideDepartureChange(\n      mixDateTime({\n        dateFrom: departureDateTimeValue,\n        timeFrom: nextDepartureDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideArrivalChange = nextArrivalDateTimeValue => {\n    const nextDepartureDateTimeValue = isSameDay\n      ? mixDateTime({\n          timeFrom: departureDateTimeValue,\n          dateFrom: nextArrivalDateTimeValue,\n        })\n      : departureDateTimeValue;\n    updateFields(nextDepartureDateTimeValue, nextArrivalDateTimeValue);\n  };\n\n  const handleRideArrivalDateChange = nextArrivalDateTimeValue => {\n    handleRideArrivalChange(\n      mixDateTime({\n        dateFrom: nextArrivalDateTimeValue,\n        timeFrom: arrivalDateTimeValue,\n      }),\n    );\n  };\n\n  const handleRideArrivalTimeChange = nextArrivalDateTimeValue => {\n    handleRideArrivalChange(\n      mixDateTime({\n        dateFrom: arrivalDateTimeValue,\n        timeFrom: nextArrivalDateTimeValue,\n      }),\n    );\n  };\n\n  return {\n    isSameDateField: {\n      value: isSameDay,\n      onChange: handleIsSameDayFlagChange,\n    },\n    rideDepartureDateField: {\n      value: departureDateTimeValue,\n      onChange: handleRideDepartureDateChange,\n    },\n    rideArrivalDateField: {\n      value: arrivalDateTimeValue,\n      onChange: handleRideArrivalDateChange,\n    },\n    rideDepartureTimeField: {\n      value: departureDateTimeValue,\n      onChange: handleRideDepartureTimeChange,\n    },\n    rideArrivalTimeField: {\n      value: arrivalDateTimeValue,\n      onChange: handleRideArrivalTimeChange,\n    },\n  };\n};\n","import React  from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport VisitInfo from 'travel/components/VisitInfo';\nimport {\n  RIDE_CLASSES,\n  RIDE_OCCUPATION,\n  RIDE_TYPES,\n  VEHICLE_TYPES,\n} from 'travel/models/rides/consts';\nimport {\n  VEHICLE_NAMES,\n  RIDE_CLASSES_NAMES,\n  RIDE_TYPES_NAMES,\n  RIDE_OCCUPATION_NAMES,\n} from './localization';\nimport tieDateTimeFields from './tieDateTimeFields';\nimport * as locators from './locators';\n\n// if ride was started/ended in origin, then it has no corresponding\n// related visit. Relation is null. So this is not a magic, but real value\nconst ORIGIN_OF_TRIP = null;\n\nconst renderVisit = visitsDict => ({ option: visitId }) => {\n  if (visitId === ORIGIN_OF_TRIP) {\n    return 'Пункт отправления';\n  }\n  return <VisitInfo visit={visitsDict[visitId]} />;\n};\nconst renderVehicleType = ({ option: vehicleType }) =>\n  vehicleType ? VEHICLE_NAMES[vehicleType] : 'Не указан';\nconst renderRideType = ({ option: rideType }) =>\n  rideType ? RIDE_TYPES_NAMES[rideType] : 'Не указан';\nconst renderRideClass = ({ option: rideClass }) =>\n  rideClass ? RIDE_CLASSES_NAMES[rideClass] : 'Не указан';\nconst renderRideOccupation = ({ option: rideOccupation }) =>\n  rideOccupation ? RIDE_OCCUPATION_NAMES[rideOccupation] : 'Не указан';\n\nconst useStyles = makeStyles({\n  option: {\n    width: '100%',\n  },\n});\n\nconst RideEditFormSection = ({\n  tripVisitsIds,\n  visitsDict,\n  formikProps: {\n    values: {\n      vehicleType,\n      rideType,\n      rideComment,\n      rideClass,\n      rideOccupation,\n      departureVisitId,\n      departureDateTime,\n      arrivalVisitId,\n      arrivalDateTime,\n    },\n    handleChange,\n    setFieldValue,\n  },\n}) => {\n  const classes = useStyles();\n  const isTripHasVisits = tripVisitsIds && tripVisitsIds.length > 0;\n  const {\n    rideArrivalDateField,\n    rideArrivalTimeField,\n    rideDepartureDateField,\n    rideDepartureTimeField,\n    isSameDateField,\n  } = tieDateTimeFields({\n    arrivalDateTimeField: {\n      value: arrivalDateTime,\n      onChange: nextArrivalDateTime =>\n        setFieldValue('arrivalDateTime', nextArrivalDateTime),\n    },\n    departureDateTimeField: {\n      value: departureDateTime,\n      onChange: nextDepartureDateTime =>\n        setFieldValue('departureDateTime', nextDepartureDateTime),\n    },\n  });\n\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      {isTripHasVisits && (\n        <>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              data-locator={locators.DEPARTURE_VISIT_SELECT}\n              name=\"departureVisitId\"\n              caption=\"Отправление из\"\n              inputId=\"RideEditCard-departureVisitId\"\n              optionRender={renderVisit(visitsDict)}\n              hasNullOption={false}\n              options={[ORIGIN_OF_TRIP, ...tripVisitsIds]}\n              value={departureVisitId}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              data-locator={locators.ARRIVAL_VISIT_SELECT}\n              name=\"arrivalVisitId\"\n              caption=\"Прибытие в\"\n              inputId=\"RideEditCard-arrivalVisitId\"\n              hasNullOption={false}\n              optionRender={renderVisit(visitsDict)}\n              options={[...tripVisitsIds, ORIGIN_OF_TRIP]}\n              onChange={handleChange}\n              value={arrivalVisitId}\n            />\n          </Grid>\n        </>\n      )}\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.VEHICLE_TYPE_SELECT}\n          name=\"vehicleType\"\n          caption=\"Транспорт\"\n          inputId=\"RideEditCard-VehicleTypeOptions\"\n          optionRender={renderVehicleType}\n          options={Object.values(VEHICLE_TYPES)}\n          onChange={handleChange}\n          value={vehicleType}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_TYPE_SELECT}\n          name=\"rideType\"\n          caption=\"Тип поездки\"\n          inputId=\"RideEditCard-RideTypeOptions\"\n          optionRender={renderRideType}\n          options={Object.values(RIDE_TYPES)}\n          onChange={handleChange}\n          value={rideType}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_CLASS_SELECT}\n          name=\"rideClass\"\n          caption=\"Класс поездки\"\n          inputId=\"RideEditCard-RideClassOptions\"\n          optionRender={renderRideClass}\n          options={Object.values(RIDE_CLASSES)}\n          onChange={handleChange}\n          value={rideClass}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.RIDE_OCCUPATION_SELECT}\n          name=\"rideOccupation\"\n          caption=\"Роль\"\n          inputId=\"RideEditCard-RideOccupationOptions\"\n          optionRender={renderRideOccupation}\n          options={Object.values(RIDE_OCCUPATION)}\n          onChange={handleChange}\n          value={rideOccupation}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardDatePicker\n          data-locator={locators.DEPARTURE_DATE_PICKER}\n          name=\"departureDateTime\"\n          autoOk={true}\n          className={classes.option}\n          label=\"Дата отправления\"\n          value={rideDepartureDateField.value}\n          onChange={rideDepartureDateField.onChange}\n          format=\"dd/MM/yyyy\"\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        {isSameDateField.value ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSameDateField.value}\n                onChange={event =>\n                  isSameDateField.onChange(event.target.checked)\n                }\n              />\n            }\n            label=\"Прибытие в тот же день\"\n          />\n        ) : (\n          <KeyboardDatePicker\n            data-locator={locators.ARRIVAL_DATE_PICKER}\n            name=\"arrivalDateTime\"\n            autoOk={true}\n            className={classes.option}\n            label=\"Дата прибытия\"\n            value={rideArrivalDateField.value}\n            onChange={rideArrivalDateField.onChange}\n            format=\"dd/MM/yyyy\"\n          />\n        )}\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardTimePicker\n          name=\"departureDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время отправления\"\n          value={rideDepartureTimeField.value}\n          onChange={rideDepartureTimeField.onChange}\n        />\n      </Grid>\n      <Grid item={true} xs={6}>\n        <KeyboardTimePicker\n          name=\"arrivalDateTime\"\n          ampm={false}\n          autoOk={true}\n          className={classes.option}\n          label=\"Время прибытия\"\n          value={rideArrivalTimeField.value}\n          onChange={rideArrivalTimeField.onChange}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <TextField\n          name=\"rideComment\"\n          className={classes.option}\n          label=\"Комментарий\"\n          multiline={true}\n          onChange={handleChange}\n          rows={1}\n          rowsMax={12}\n          value={rideComment}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nRideEditFormSection.defaultProps = {};\n\nexport default RideEditFormSection;\n","export const DEPARTURE_VISIT_SELECT =\n  'RIDE_EDIT_FORM_SECTION.DEPARTURE_VISIT_SELECT';\nexport const ARRIVAL_VISIT_SELECT =\n  'RIDE_EDIT_FORM_SECTION.ARRIVAL_VISIT_SELECT';\nexport const VEHICLE_TYPE_SELECT = 'RIDE_EDIT_FORM_SECTION.VEHICLE_TYPE_SELECT';\nexport const RIDE_TYPE_SELECT = 'RIDE_EDIT_FORM_SECTION.RIDE_TYPE_SELECT';\nexport const RIDE_CLASS_SELECT = 'RIDE_EDIT_FORM_SECTION.RIDE_CLASS_SELECT';\nexport const RIDE_OCCUPATION_SELECT =\n  'RIDE_EDIT_FORM_SECTION.RIDE_OCCUPATION_SELECT';\nexport const DEPARTURE_DATE_PICKER =\n  'RIDE_EDIT_FORM_SECTION.DEPARTURE_DATE_PICKER';\nexport const ARRIVAL_DATE_PICKER = 'RIDE_EDIT_FORM_SECTION.ARRIVAL_DATE_PICKER';\n","import React from 'react';\nimport FormDialog from 'modules/components/FormDialog';\nimport RideEditFormSection from 'travel/components/RideEditFormSection';\nimport * as locators from '../../../../locators';\n\nexport default function RideEditDialog({\n  isCreation,\n  tripVisitsIds,\n  visitsDict,\n  ...forwardingProps\n}) {\n  return (\n    <FormDialog\n      data-locator={locators.RIDE_DIALOG}\n      title={isCreation ? 'Создание маршрута' : 'Редактирование маршрута'}\n      {...forwardingProps}\n    >\n      <RideEditFormSection\n        tripVisitsIds={tripVisitsIds}\n        visitsDict={visitsDict}\n        formikProps={null /* will be passed in FormDialog */}\n      />\n    </FormDialog>\n  );\n}\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OptionsSelect from 'modules/components/muiExtended/OptionsSelect';\nimport Suggest, { QUERY_FORMATS } from 'modules/components/muiExtended/Suggest';\nimport RideInfo from 'travel/components/RideInfo';\nimport { VISIT_TYPES } from 'travel/models/visits/consts';\nimport * as locators from './locators';\n\nexport const VISIT_TYPE_NAMES = {\n  [VISIT_TYPES.TRANSIT]: 'Транзит',\n  [VISIT_TYPES.REGULAR]: 'Посещение',\n  [VISIT_TYPES.BASE_CAMP]: 'Базовый лагерь',\n  [VISIT_TYPES.RELOCATION]: 'Переезд',\n};\n\nconst renderRide = ridesDict => ({ option: rideId }) => (\n  <RideInfo ride={ridesDict[rideId]} isLong={true} />\n);\nconst renderVisitType = ({ option: visitType }) =>\n  visitType ? VISIT_TYPE_NAMES[visitType] : 'Не указан';\n\nconst useStyles = makeStyles({\n  option: {\n    width: '100%',\n  },\n});\n\nexport default function VisitEditFormSection({\n  tripRidesIds,\n  ridesDict,\n  formikProps: {\n    values: {\n      locationName,\n      visitType,\n      visitComment,\n      arrivalRideId,\n      departureRideId,\n    },\n    handleChange,\n    handleBlur,\n    setFieldValue,\n  },\n}) {\n  const classes = useStyles();\n  const [onlySettlements, setOnlySettlements] = useState(true);\n  const isTripHasRides = tripRidesIds && tripRidesIds.length > 0;\n  return (\n    <Grid container={true} spacing={3} alignItems=\"center\">\n      <Grid item={true} xs={12}>\n        <Suggest\n          data-locator={locators.LOCATION_SUGGEST}\n          inputProps={{\n            placeholder: 'Место посещения...',\n          }}\n          initialInputValue={locationName}\n          onChange={({ suggestion: { geonameId } }) =>\n            setFieldValue('geonameId', geonameId)\n          }\n          onBlur={handleBlur}\n          sourceProps={{\n            domain: 'visitEditFormSection.geoname',\n            modelName: 'geonames',\n            filterField: 'locationName',\n            customQuery: onlySettlements ? { class: 'P' } : undefined,\n            queryFormat: QUERY_FORMATS.SEARCH,\n          }}\n          transformSuggestionToOption={suggestion =>\n            transformSuggestionToOption(suggestion, {\n              showFeatureClass: !onlySettlements,\n            })\n          }\n          triggerProps={{ label: 'Место посещения' }}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={onlySettlements}\n              onChange={event => setOnlySettlements(event.target.checked)}\n            />\n          }\n          label=\"Искать только населенные пункты\"\n        />\n      </Grid>\n      {isTripHasRides && (\n        <>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"arrivalRideId\"\n              caption=\"Прибытие\"\n              inputId=\"RideEditCard-arrivalVisitId\"\n              hasNullOption={false}\n              optionRender={renderRide(ridesDict)}\n              options={tripRidesIds}\n              onChange={handleChange}\n              value={arrivalRideId}\n            />\n          </Grid>\n          <Grid item={true} xs={6}>\n            <OptionsSelect\n              name=\"departureRideId\"\n              caption=\"Отправление\"\n              inputId=\"RideEditCard-departureVisitId\"\n              optionRender={renderRide(ridesDict)}\n              hasNullOption={false}\n              options={tripRidesIds}\n              value={departureRideId}\n              onChange={handleChange}\n            />\n          </Grid>\n        </>\n      )}\n      <Grid item={true} xs={6}>\n        <OptionsSelect\n          data-locator={locators.VISIT_TYPE_SELECT}\n          name=\"visitType\"\n          value={visitType}\n          onChange={handleChange}\n          caption=\"Тип посещения\"\n          inputId=\"VisitEditCard-VisitTypeOptions\"\n          optionRender={renderVisitType}\n          options={Object.values(VISIT_TYPES)}\n          hasNullOption={true}\n        />\n      </Grid>\n      <Grid item={true} xs={12}>\n        <TextField\n          className={classes.option}\n          name=\"visitComment\"\n          value={visitComment}\n          onChange={handleChange}\n          label=\"Комментарий\"\n          fullWidth={true}\n          multiline={true}\n          rows={1}\n          rowsMax={12}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nVisitEditFormSection.defaultProps = {};\n\nfunction transformSuggestionToOption(suggestion, { showFeatureClass } = {}) {\n  const {\n    locationName,\n    countryName,\n    regionName,\n    featureClassName,\n  } = suggestion;\n  return {\n    label: locationName,\n    details: [\n      countryName,\n      regionName,\n      showFeatureClass ? featureClassName : null,\n    ]\n      .filter(Boolean)\n      .join(', '),\n    suggestion,\n  };\n}\n","export const LOCATION_SUGGEST = 'VISIT_EDIT_FORM_SECTION.LOCATION_SUGGEST';\nexport const VISIT_TYPE_SELECT = 'VISIT_EDIT_FORM_SECTION.VISIT_TYPE_SELECT';\n","import React from 'react';\nimport FormDialog from 'modules/components/FormDialog';\nimport VisitEditFormSection from 'travel/components/VisitEditFormSection';\nimport * as locators from '../../../../locators';\n\nexport default function VisitEditDialog({\n  isCreation,\n  tripRidesIds,\n  ridesDict,\n  ...forwardingProps\n}) {\n  return (\n    <FormDialog\n      data-locator={locators.VISIT_DIALOG}\n      title={isCreation ? 'Создание посещения' : 'Редактирование посещения'}\n      {...forwardingProps}\n    >\n      <VisitEditFormSection\n        tripRidesIds={tripRidesIds}\n        ridesDict={ridesDict}\n        formikProps={null /* will be passed in FormDialog */}\n      />\n    </FormDialog>\n  );\n}\n","import React from 'react';\nimport Dialog from 'modules/components/Dialog';\nimport VisitInfo from 'travel/components/VisitInfo';\n\nexport default function VisitDeleteDialog({\n  visit,\n  onSubmit,\n  onReset,\n  ...forwardingProps\n}) {\n  return (\n    <Dialog\n      title=\"Удалить посещение\"\n      description=\"Вы действительно хотите удалить посещение\"\n      primaryButtonCaption=\"Да\"\n      primaryButtonHandler={event => onSubmit(event, visit)}\n      secondaryButtonCaption=\"Нет\"\n      secondaryButtonHandler={onReset}\n      {...forwardingProps}\n    >\n      <VisitInfo visit={visit} />\n    </Dialog>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { initializeRide } from 'travel/models/rides';\nimport { initializeVisit } from 'travel/models/visits';\nimport RideEditDialog from './blocks/RideEditDialog';\nimport VisitEditDialog from './blocks/VisitEditDialog';\nimport VisitDeleteDialog from './blocks/VisitDeleteDialog';\nimport { DIALOG_NAMES } from '../../useTripEditPageDialogs';\n\nexport default function TripEditAssociatedDialogs({\n  provision,\n  dialogsState,\n  hideDialog,\n  handleSubmitRide,\n  handleSubmitVisit,\n  handleDeleteVisit,\n  trip,\n}) {\n  const { ridesDict, visitsDict } = provision;\n  const { tripId, visits: tripVisitsIds, rides: tripRidesIds } = trip;\n  const { dialogName, dialogParams = {} } = dialogsState;\n\n  const initialRideValues = useMemo(\n    () => {\n      const { rideId } = dialogParams;\n      const initialValues = rideId ? ridesDict[rideId] : initializeRide();\n      return {\n        ...initialValues,\n        ...dialogParams,\n        tripId,\n      };\n    },\n    [ridesDict, tripId, dialogParams],\n  );\n\n  const initialVisitValues = useMemo(\n    () => {\n      const { visitId } = dialogParams;\n      const initialValues = visitId ? visitsDict[visitId] : initializeVisit();\n      return {\n        ...initialValues,\n        ...dialogParams,\n        tripId,\n      };\n    },\n    [visitsDict, tripId, dialogParams],\n  );\n\n  const isRideEditDialogShown = checkIsRideEditDialogShown(dialogName);\n  const isVisitEditDialogShown = checkIsVisitEditDialogShown(dialogName);\n  const isVisitDeleteDialogShown = dialogName === DIALOG_NAMES.VISIT_DELETE;\n  return (\n    <>\n      <RideEditDialog\n        initialValues={initialRideValues}\n        tripVisitsIds={tripVisitsIds}\n        isOpen={isRideEditDialogShown}\n        onSubmit={values => {\n          handleSubmitRide(values);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n        isCreation={dialogName === DIALOG_NAMES.RIDE_CREATE}\n        visitsDict={visitsDict}\n      />\n      <VisitEditDialog\n        initialValues={initialVisitValues}\n        tripRidesIds={tripRidesIds}\n        isOpen={isVisitEditDialogShown}\n        onSubmit={values => {\n          handleSubmitVisit(values);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n        isCreation={dialogName === DIALOG_NAMES.VISIT_CREATE}\n        ridesDict={ridesDict}\n      />\n      <VisitDeleteDialog\n        visit={visitsDict[dialogParams.visitId]}\n        isOpen={isVisitDeleteDialogShown}\n        onSubmit={(event, { visitId }) => {\n          handleDeleteVisit(visitId);\n          hideDialog();\n        }}\n        onReset={hideDialog}\n      />\n    </>\n  );\n}\n\nfunction checkIsRideEditDialogShown(dialogName) {\n  return (\n    dialogName === DIALOG_NAMES.RIDE_EDIT ||\n    dialogName === DIALOG_NAMES.RIDE_CREATE\n  );\n}\n\nfunction checkIsVisitEditDialogShown(dialogName) {\n  return (\n    dialogName === DIALOG_NAMES.VISIT_EDIT ||\n    dialogName === DIALOG_NAMES.VISIT_CREATE\n  );\n}\n","import { useCallback } from 'react';\nimport { useRequest } from 'core/connection';\nimport createOrderCalculator from 'modules/utilities/algorithms/createOrderCalculator';\n\nconst calcOrder = createOrderCalculator({\n  orderResolver: ({ orderInTrip }) => orderInTrip,\n});\n\nconst domain = 'travel.TripEditPage';\n\nexport default function useTripEditRequests(invalidate) {\n  const [submitRide] = useRequest({\n    domain: `${domain}.rides`,\n    modelName: 'rides',\n  });\n  const handleSubmitRide = useCallback(\n    ride =>\n      submitRide({\n        query: {\n          id: ride.rideId,\n          body: ride,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [submitTrip] = useRequest({\n    domain: `${domain}.trips`,\n    modelName: 'trips',\n  });\n  const handleSubmitTrip = useCallback(\n    trip =>\n      submitTrip({\n        query: {\n          id: trip.tripId,\n          body: trip,\n        },\n      }).finally(invalidate),\n    [],\n  );\n\n  const [submitVisit] = useRequest({\n    domain: `${domain}.visits`,\n    modelName: 'visits',\n  });\n\n  const handleSubmitVisit = useCallback(\n    visit =>\n      submitVisit({\n        query: {\n          id: visit.visitId,\n          body: visit,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  const [deleteVisit] = useRequest({\n    domain: `${domain}.visits`,\n    modelName: 'visits',\n  });\n\n  const handleDeleteVisit = useCallback(\n    visitId =>\n      deleteVisit({\n        method: 'DELETE',\n        query: {\n          id: visitId,\n        },\n      }).then(invalidate),\n    [],\n  );\n\n  return {\n    handleSubmitRide,\n    handleSubmitTrip,\n    handleSubmitVisit,\n    handleDeleteVisit,\n  };\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { usePaths } from 'modules/packages';\nimport { useAuthContext } from 'core/context/AuthContext';\nimport { useTripsStats } from 'travel/dataSource';\nimport { initializeTrip } from 'travel/models/trips';\nimport TripEditForm from './blocks/TripEditForm';\nimport TripEditAssociatedDialogs from './blocks/TripEditAssociatedDialogs';\nimport useTripEditRequests from './useTripEditRequests';\nimport useTripEditPageDialogs from './useTripEditPageDialogs';\n\nfunction TripEditPage({\n  match: {\n    params: { userAlias, strTripId, action },\n  },\n}) {\n  const {\n    travel: { tripEdit: tripEditPath },\n  } = usePaths();\n  const history = useHistory();\n  const isCreation = action === 'create';\n  const {\n    isAuthenticated,\n    userAlias: authenticatedUserAlias,\n  } = useAuthContext();\n\n  const tripId = strTripId && parseInt(strTripId, 10);\n  const provision = useTripsStats({\n    userAlias,\n    tripsIds: tripId ? [tripId] : [],\n  });\n  const { tripsDict, tripsProvision } = provision;\n  const trip = isCreation ? initializeTrip() : tripsDict[tripId];\n\n  const {\n    handleSubmitRide,\n    handleSubmitTrip,\n    handleSubmitVisit,\n    handleDeleteVisit,\n  } = useTripEditRequests(tripsProvision.invalidate);\n\n  const { showDialog, hideDialog, dialogsState } = useTripEditPageDialogs();\n\n  const { isError, isReady, isPending } = provision;\n  if ((!tripId || (isReady && !trip)) && !isCreation) {\n    return <div>Запрашиваемая вами страница не найдена</div>;\n  }\n  if (!isAuthenticated || authenticatedUserAlias !== userAlias) {\n    return <div>У вас не достаочно прав для просмотра данной страницы</div>;\n  }\n  if (isError) {\n    return <div>...Error</div>;\n  }\n  if (isPending) {\n    return <div>...Loading</div>;\n  }\n\n  if (!trip) {\n    return <div>...Error, no trip is provided</div>;\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={{ trip }}\n        onSubmit={values => {\n          return handleSubmitTrip(values.trip).then(newTripId => {\n            if (tripId || !newTripId) {\n              return;\n            }\n            const tripEditPageUrl = tripEditPath.toUrl({\n              userAlias,\n              strTripId: String(newTripId),\n            });\n            history.push(tripEditPageUrl);\n          });\n        }}\n      >\n        {formikProps => (\n          <TripEditForm\n            isCreation={isCreation}\n            showDialog={showDialog}\n            formikProps={formikProps}\n            provision={provision}\n          />\n        )}\n      </Formik>\n      <TripEditAssociatedDialogs\n        provision={provision}\n        dialogsState={dialogsState}\n        hideDialog={hideDialog}\n        handleSubmitRide={handleSubmitRide}\n        handleSubmitVisit={handleSubmitVisit}\n        handleDeleteVisit={handleDeleteVisit}\n        trip={trip}\n      />\n    </>\n  );\n}\n\nexport default TripEditPage;\n"],"names":["ConnectedLink","optional","children","forwardingProps","Boolean","href","to","onClick","component","RouterLink","defaultProps","DATE_FORMATS","dateTimePeriodToString","periodStart","periodEnd","isObscure","fullFormat","periodEndString","dateFormat","locale","ru","isSameDay","periodStartString","isSameMonth","isSameYear","shortFormat","rideDateTimePeriodToString","departureDateTime","arrivalDateTime","visitDateTimePeriodToString","dateTimeOpenPeriodToString","placeholder","format","startDateStr","RideIcon","vehicleType","ride","className","IconComponent","VEHICLE_TYPES","CarIcon","TrainIcon","FlightIcon","BusIcon","VanIcon","BoatIcon","BikeIcon","WalkIcon","MotorcycleIcon","TruckIcon","TerrainIcon","TramIcon","LocalTaxiIcon","SubwayIcon","SeatIcon","CustomTransportIcon","UnknownRideIcon","resolveRideIconComponent","useStyles","makeStyles","icon","color","fontSize","height","absoluteIcon","position","detail","RideInfo","rideType","isLong","classes","RIDE_TYPES","array","maxLength","separator","uniqArray","uniq","result","slice","join","length","FALLBACK","resolveTripCaption","trip","visitsDict","countriesDict","locationsDict","visitsIds","visits","originLocationId","tripName","hasAutogeneratedTripName","originCountryId","countryId","periodStr","dateMin","map","visitsId","dateMax","visitsByCountries","Object","keys","groupBy","filter","visitId","visitType","VISIT_TYPES","locationsNames","uniqTrimAndJoin","locationName","countriesNames","Number","countryName","OptionsSelect","dataLocator","caption","hasNullOption","inputId","name","handleChange","onChange","optionRender","options","value","container","InputLabel","shrink","htmlFor","Select","displayEmpty","input","Input","id","selectRoot","MenuProps","MenuItem","key","option","index","undefined","withStyles","display","Option","isHighlighted","isSelected","forwardedProps","selected","style","fontWeight","ListItemText","primary","label","secondary","details","Overlay","isOpen","getMenuProps","getItemProps","selectedItem","highlightedIndex","Paper","paper","square","item","Trigger","triggerProps","triggerInputProps","TextField","InputProps","root","inputRoot","inputInput","fullWidth","omit","theme","zIndex","marginTop","spacing","left","right","defaultItemToString","customClasses","inputProps","downshiftProps","itemToString","getInputProps","inputValue","QUERY_FORMATS","resolveQueryByFormat","queryFormat","filterField","searchString","navigation","pageSize","numberOfItemsToRequest","customQuery","search","comparator","Suggest","sourceProps","transformSuggestionToOption","suggestion","useState","setInputValue","domain","modelName","debounceRequestDelayMs","provision","useProvision","debounceRequest","isProvision","observe","query","selectResult","data","entitiesIds","entitiesDict","useSelector","state","selectDict","suggestions","entityId","useSuggest","handleInputChange","useCallback","event","target","actualInputProps","useMemo","TRIP_TYPE_NAMES","TRIP_TYPES","renderTripType","tripType","optionGroup","minWidth","suggest","flexGrow","TripEditFormSection","formikProps","setFieldValue","handleBlur","errors","touched","values","tripFormValues","Grid","alignItems","xs","FormControlLabel","control","Checkbox","helperText","onBlur","checked","textField","margin","initialInputValue","geonameId","resolveDetails","regionName","prevVisit","nextVisit","departureRideId","arrivalRideId","element","dataset","sortHandler","parentNode","SortableContainer","SortableContainerHOC","SortableElement","SortableElementHOC","node","Sortable","shouldCancelStart","checkIsNodeNotSortable","lockAxis","lockToContainerEdges","React","dragHandler","cursor","DragHandler","cls","DIALOG_NAMES","justifyContent","background","padding","border","boxShadow","visibility","visibleOnlyOnHover","VisitCreator","showDialog","Button","size","variant","CreateButton","IconButton","AddCircle","EditButton","Edit","DeleteButton","Delete","actions","Actions","isEntityExist","onEditClick","onDeleteClick","onCreateClick","hasCreateAction","hasEditAction","hasDeleteAction","VisitIcon","visit","TransferWithinAStationIcon","DomainIcon","LocalShippingIcon","LocationCityIcon","marginRight","verticalAlign","visibleOnHover","Visit","Ride","rideId","isRideExists","alwaysVisible","editDialogTrigger","marginLeft","top","transform","warning","VisitAndRidesFormSection","isArrivalRideMatch","isDepartureRideMatch","tripId","ridesDict","formArrivalRideId","formDepartureVisitId","prevVisitId","nextVisitId","dialogName","dialogParams","departureVisitId","arrivalVisitId","editIcon","creatorsContainer","compact","ghost","resetFlow","VisitsAndRidesFormSection","formVisitsIds","creatorsNodeIndex","setCreatorsNodeIndex","sortingIndex","setSortingIndex","showCreationDialog","neighbors","orderInTrip","calculateOrderInTripBetweenTwoVisits","render","arrayHelpers","useWindowAsScrollContainer","onSortStart","onSortEnd","oldIndex","newIndex","move","flatMap","formVisitId","indexOfVisit","prevVisitFormValues","visitFormValues","nextVisitFormValues","checkIsVisitsConnectedByRide","checkIsRidesMatch","shouldCollapseRides","visitAndRidesFormSectionNode","shouldInsertCreatorsNodeBeforeFormSection","shouldInsertCreatorsNodeAfterFormSection","visitCreatorNode","prevOrderInTrip","nextOrderInTrip","Math","random","TripEditTitle","isCreation","formTrip","modeCaption","tripCaption","Typography","actionButton","hint","paddingLeft","TripEditForm","type","title","description","primaryButtonCaption","primaryButtonHandler","secondaryButtonCaption","secondaryButtonHandler","onClose","Dialog","transitionDuration","open","DialogTitle","DialogContent","DialogContentText","DialogActions","initialValues","onSubmit","onReset","enableReinitialize","handleSubmit","period","VisitInfo","locationUrl","RIDE_CLASSES_NAMES","RIDE_CLASSES","RIDE_OCCUPATION_NAMES","RIDE_OCCUPATION","RIDE_TYPES_NAMES","VEHICLE_NAMES","mixDateTime","dateFrom","timeFrom","isValidDateFrom","isValidDate","isValidTimeFrom","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","NaN","checkCanUpdate","nextDate","prevDate","checkIsDatesEqual","ORIGIN_OF_TRIP","renderVisit","renderVehicleType","renderRideType","renderRideClass","rideClass","renderRideOccupation","rideOccupation","width","RideEditFormSection","arrivalDateTimeValue","onArrivalDateTimeChange","departureDateTimeValue","onDepartureDateTimeChange","updateFields","handleRideDepartureChange","handleRideArrivalChange","tripVisitsIds","rideComment","isTripHasVisits","arrivalDateTimeField","nextArrivalDateTime","departureDateTimeField","nextDepartureDateTime","checkIsSameDay","nextDepartureDateTimeValue","nextArrivalDateTimeValue","isSameDateField","nextIsSameDay","addDays","rideDepartureDateField","rideArrivalDateField","rideDepartureTimeField","rideArrivalTimeField","autoOk","ampm","multiline","rows","rowsMax","RideEditDialog","FormDialog","VISIT_TYPE_NAMES","renderRide","renderVisitType","VisitEditFormSection","tripRidesIds","visitComment","onlySettlements","setOnlySettlements","isTripHasRides","class","showFeatureClass","featureClassName","VisitEditDialog","VisitDeleteDialog","TripEditAssociatedDialogs","dialogsState","hideDialog","handleSubmitRide","handleSubmitVisit","handleDeleteVisit","rides","initialRideValues","initializeRide","initialVisitValues","initializeVisit","isRideEditDialogShown","checkIsRideEditDialogShown","isVisitEditDialogShown","checkIsVisitEditDialogShown","isVisitDeleteDialogShown","match","params","userAlias","strTripId","action","tripEditPath","usePaths","travel","tripEdit","history","useHistory","useAuthContext","isAuthenticated","authenticatedUserAlias","parseInt","useTripsStats","tripsIds","tripsDict","tripsProvision","initializeTrip","invalidate","submitRide","useRequest","body","then","submitTrip","handleSubmitTrip","submitVisit","deleteVisit","method","useTripEditRequests","setDialogsState","useTripEditPageDialogs","isError","isReady","isPending","newTripId","tripEditPageUrl","toUrl","String","push"],"sourceRoot":""}